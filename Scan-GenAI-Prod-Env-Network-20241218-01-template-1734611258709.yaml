---
Metadata:
  AWSToolsMetrics:
    IaC_Generator: "arn:aws:cloudformation:ap-southeast-1:343218203122:generatedTemplate/74499f4b-dec3-453c-89a5-fd0108a89138"
Resources:
  CloudFrontCachePolicy001c6db51aa33f469a8245dae26771f53000QcoTf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::CloudFront::CachePolicy"
    DeletionPolicy: "Retain"
    Properties:
      CachePolicyConfig:
        Comment: "Amplify cache policy for image optimization"
        MinTTL: 0
        MaxTTL: 3.1536E7
        ParametersInCacheKeyAndForwardedToOrigin:
          QueryStringsConfig:
            QueryStringBehavior: "all"
          EnableAcceptEncodingBrotli: true
          HeadersConfig:
            HeaderBehavior: "whitelist"
            Headers:
            - "Authorization"
            - "Accept"
            - "Host"
          CookiesConfig:
            CookieBehavior: "none"
          EnableAcceptEncodingGzip: true
        DefaultTTL: 0
        Name: "Managed-Amplify-ImageOptimization"
  IAMManagedPolicy00policyPublishLogtoCloudWatch00kuvjV:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "Publish-Log-to-CloudWatch"
      Path: "/"
      Description: "Allows logs to be published to CloudWatch"
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "*"
          Action:
          - "logs:CreateLogGroup"
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          - "logs:DescribeLogGroups"
          - "logs:DescribeLogStreams"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00VPCFlowLogtoCloudWatch00IJMym"
      Users: []
  ConfigConfigRule00securityhubelasticacheautominorversionupgradechecke909abae00WkcS1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control evaluates whether auto minor version upgrades are\
        \ enabled for ElastiCache for Redis cache clusters."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-elasticache-auto-minor-version-upgrade-check-e909abae"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "ELASTICACHE_AUTO_MINOR_VERSION_UPGRADE_CHECK"
        Owner: "AWS"
      InputParameters: {}
  KMSKey00e0af6c3f73fc497e863a6754f0dce6b1005JjxP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::KMS::Key"
    DeletionPolicy: "Retain"
    Properties:
      Origin: "AWS_KMS"
      MultiRegion: false
      Description: "Default key that protects my EBS volumes when no other key is\
        \ defined"
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
        - Condition:
            StringEquals:
              kms:CallerAccount: "343218203122"
              kms:ViaService: "ec2.ap-southeast-1.amazonaws.com"
          Resource: "*"
          Action:
          - "kms:Encrypt"
          - "kms:Decrypt"
          - "kms:ReEncrypt*"
          - "kms:GenerateDataKey*"
          - "kms:CreateGrant"
          - "kms:DescribeKey"
          Effect: "Allow"
          Principal:
            AWS: "*"
          Sid: "Allow access through EBS for all principals in the account that are\
            \ authorized to use EBS"
        - Resource: "*"
          Action:
          - "kms:Describe*"
          - "kms:Get*"
          - "kms:List*"
          - "kms:RevokeGrant"
          Effect: "Allow"
          Principal:
            AWS: "arn:aws:iam::343218203122:root"
          Sid: "Allow direct access to key metadata to the account"
        Id: "auto-ebs-2"
      KeySpec: "SYMMETRIC_DEFAULT"
      Enabled: true
      EnableKeyRotation: true
      KeyUsage: "ENCRYPT_DECRYPT"
      Tags: []
  ConfigConfigRule00securityhubvpcendpointenabledssmcontacts6fc56c49006RdQu:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if each service specified in the parameter has an Amazon\
        \ VPC endpoint. The rule is NON_COMPLIANT if Amazon VPC does not have a VPC\
        \ endpoint created for each specified service. Optionally, you can specify\
        \ certain VPCs for the rule to check."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::VPC"
        - "AWS::EC2::VPCEndpoint"
      Compliance: {}
      ConfigRuleName: "securityhub-vpc-endpoint-enabled-ssm-contacts-6fc56c49"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "VPC_ENDPOINT_ENABLED"
        Owner: "AWS"
      InputParameters:
        serviceNames: "ssm-contacts"
  ConfigConfigRule00securityhubdmsneptuneiamauthorizationenablede765319700hYYPe:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if an AWS Database Migration Service (AWS DMS) endpoint\
        \ for Amazon Neptune databases is configured with IAM authorization. The rule\
        \ is NON_COMPLIANT if an AWS DMS endpoint where Neptune is the target has\
        \ IamAuthEnabled set to false."
      Scope:
        ComplianceResourceTypes:
        - "AWS::DMS::Endpoint"
      Compliance: {}
      ConfigRuleName: "securityhub-dms-neptune-iam-authorization-enabled-e7653197"
      Source:
        SourceIdentifier: "DMS_NEPTUNE_IAM_AUTHORIZATION_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubservicecatalogsharedwithinorganizatione5bfab7e00BLhq6:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if AWS Service Catalog shares portfolios with an AWS organization\
        \ when integration is enabled with AWS Organizations."
      Scope:
        ComplianceResourceTypes:
        - "AWS::ServiceCatalog::Portfolio"
      Compliance: {}
      ConfigRuleName: "securityhub-service-catalog-shared-within-organization-e5bfab7e"
      Source:
        SourceIdentifier: "SERVICE_CATALOG_SHARED_WITHIN_ORGANIZATION"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubvpcendpointenableds35f41ee4600tcPyL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if each service specified in the parameter has an Amazon\
        \ VPC endpoint. The rule is NON_COMPLIANT if Amazon VPC does not have a VPC\
        \ endpoint created for each specified service. Optionally, you can specify\
        \ certain VPCs for the rule to check."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::VPC"
        - "AWS::EC2::VPCEndpoint"
      Compliance: {}
      ConfigRuleName: "securityhub-vpc-endpoint-enabled-s3-5f41ee46"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "VPC_ENDPOINT_ENABLED"
        Owner: "AWS"
      InputParameters:
        serviceNames: "s3"
  ConfigConfigRule00securityhubredshiftdefaultadmincheckfc11b5b00050bOB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether a Redshift cluster has changed the\
        \ Admin username from its default value. This control will fail if the admin\
        \ username for a Redshift cluster is set to 'awsuser', or if the username\
        \ does not match the provided parameter(s)."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-redshift-default-admin-check-fc11b5b0"
      Source:
        SourceIdentifier: "REDSHIFT_DEFAULT_ADMIN_CHECK"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubvpcendpointenabledlogsd91eb4ca00Da2x4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if each service specified in the parameter has an Amazon\
        \ VPC endpoint. The rule is NON_COMPLIANT if Amazon VPC does not have a VPC\
        \ endpoint created for each specified service. Optionally, you can specify\
        \ certain VPCs for the rule to check."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::VPC"
        - "AWS::EC2::VPCEndpoint"
      Compliance: {}
      ConfigRuleName: "securityhub-vpc-endpoint-enabled-logs-d91eb4ca"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "VPC_ENDPOINT_ENABLED"
        Owner: "AWS"
      InputParameters:
        serviceNames: "logs"
  ConfigConfigRule00securityhubencryptedvolumes64d01fdb00i4Zon:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether the EBS volumes that are in an attached state are\
        \ encrypted. If you specify the ID of a KMS key for encryption using the kmsId\
        \ parameter, the rule checks if the EBS volumes in an attached state are encrypted\
        \ with that KMS key."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::Volume"
      Compliance: {}
      ConfigRuleName: "securityhub-encrypted-volumes-64d01fdb"
      Source:
        SourceIdentifier: "ENCRYPTED_VOLUMES"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubworkspacesrootvolumeencryptionenabled888bbe0f00vDB2o:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if WorkSpaces Workspace is encrypted at rest. The rule\
        \ is NON_COMPLIANT if WorkSpaces Workspace is not encrypted at rest."
      Scope:
        ComplianceResourceTypes:
        - "AWS::WorkSpaces::Workspace"
      Compliance: {}
      ConfigRuleName: "securityhub-workspaces-root-volume-encryption-enabled-888bbe0f"
      Source:
        SourceIdentifier: "WORKSPACES_ROOT_VOLUME_ENCRYPTION_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubvpcsgportrestrictioncheck6d5a582900pPQ4g:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if security groups restrict incoming TCP or UDP traffic\
        \ from IPv4 (0.0.0.0/0) or IPv6 (::/0) to specified ports. The rule is NON_COMPLIANT\
        \ if security groups allow incoming traffic over the full IP range from specified\
        \ protocols to specified ports."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::SecurityGroup"
      Compliance: {}
      ConfigRuleName: "securityhub-vpc-sg-port-restriction-check-6d5a5829"
      Source:
        SourceIdentifier: "VPC_SG_PORT_RESTRICTION_CHECK"
        Owner: "AWS"
      InputParameters:
        restrictPorts: "22, 3389"
        ipType: "IPv4"
  ConfigConfigRule00securityhubrdsmultiazsupport972569ba00CIg0D:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether high availability is enabled for your RDS DB instances."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-rds-multi-az-support-972569ba"
      Source:
        SourceIdentifier: "RDS_MULTI_AZ_SUPPORT"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubredshiftenhancedvpcroutingenabled163dba8f009CD3m:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether a Redshift cluster has EnhancedVpcRouting\
        \ enabled."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-redshift-enhanced-vpc-routing-enabled-163dba8f"
      Source:
        SourceIdentifier: "REDSHIFT_ENHANCED_VPC_ROUTING_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubs3bucketloggingenabledce18293000GT4EE:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks if an Amazon S3 Bucket has server access logging\
        \ enabled to a chosen target bucket."
      Scope:
        ComplianceResourceTypes:
        - "AWS::S3::Bucket"
      Compliance: {}
      ConfigRuleName: "securityhub-s3-bucket-logging-enabled-ce182930"
      Source:
        SourceIdentifier: "S3_BUCKET_LOGGING_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubecrprivatelifecyclepolicyconfiguredddfd81d300w7PC7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether a ECR repository has at least one\
        \ lifecycle policy configured. This control fails if a ECR repository does\
        \ not have any lifecycle policies configured."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-ecr-private-lifecycle-policy-configured-ddfd81d3"
      Source:
        SourceIdentifier: "ECR_PRIVATE_LIFECYCLE_POLICY_CONFIGURED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubiampasswordpolicyminimumlengthcheck1a9ae268008u1dt:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether the account password policy for IAM users requires\
        \ minimum password length."
      Scope:
        ComplianceResourceTypes:
        - "AWS::IAM::User"
      Compliance: {}
      ConfigRuleName: "securityhub-iam-password-policy-minimum-length-check-1a9ae268"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "IAM_PASSWORD_POLICY"
        Owner: "AWS"
      InputParameters:
        MinimumPasswordLength: "14"
  ConfigConfigRule00securityhubinspectorlambdastandardscanenabled5f0ee5ab00JnMUZ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if Amazon Inspector V2 Lambda standard scanning is activated\
        \ for your single or multi-account environment to detect potential software\
        \ vulnerabilities. The rule is NON_COMPLIANT if Lambda standard scanning is\
        \ not activated."
      Scope:
        ComplianceResourceTypes:
        - "AWS::::Account"
      Compliance: {}
      ConfigRuleName: "securityhub-inspector-lambda-standard-scan-enabled-5f0ee5ab"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "INSPECTOR_LAMBDA_STANDARD_SCAN_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubelasticsearchdatanodefaulttolerance9b486ba900GyZAR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether Elasticsearch domains are configured\
        \ with at least three data nodes and zoneAwarenessEnabled is true."
      Scope:
        ComplianceResourceTypes:
        - "AWS::Elasticsearch::Domain"
      Compliance: {}
      ConfigRuleName: "securityhub-elasticsearch-data-node-fault-tolerance-9b486ba9"
      Source:
        SourceIdentifier: "arn:aws:lambda:ap-southeast-1:338458120468:function:SecurityHubConfigRule"
        SourceDetails:
        - EventSource: "aws.config"
          MessageType: "ConfigurationItemChangeNotification"
        Owner: "CUSTOM_LAMBDA"
      InputParameters: {}
  ConfigConfigRule00securityhubs3bucketpublicreadprohibitedb3ef66bd00XGV72:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks to see if S3 buckets are publicly readable."
      Scope:
        ComplianceResourceTypes:
        - "AWS::S3::Bucket"
      Compliance: {}
      ConfigRuleName: "securityhub-s3-bucket-public-read-prohibited-b3ef66bd"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "S3_BUCKET_PUBLIC_READ_PROHIBITED"
        Owner: "AWS"
      InputParameters: {}
  EC2Subnet00subnet060714d7ed3b1128b00Pr6SK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Subnet"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00AYnOQ"
      MapPublicIpOnLaunch: false
      EnableDns64: false
      AvailabilityZoneId: "apse1-az3"
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      CidrBlock: "10.25.71.64/28"
      Ipv6Native: false
      Tags:
      - Value: "GenAI-Dev-ECSAppLB-Private-1c"
        Key: "Name"
  ConfigConfigRule00securityhubapigwv2authorizationtypeconfigured1614a3cb00efmNX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if Amazon API Gatewayv2 API routes have an authorization\
        \ type set. This rule is NON_COMPLIANT if the authorization type is NONE."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-api-gwv2-authorization-type-configured-1614a3cb"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "API_GWV2_AUTHORIZATION_TYPE_CONFIGURED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubelbloggingenabledd7a09c1700Oknqa:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether the Application Load Balancer and the Classic Load\
        \ Balancer have logging enabled. The rule is NON_COMPLIANT if the access_logs.s3.enabled\
        \ is false or access_logs.S3.bucket is not equal to the s3BucketName that\
        \ you provided."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-elb-logging-enabled-d7a09c17"
      Source:
        SourceIdentifier: "ELB_LOGGING_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubguarddutyeksprotectionauditenableda6f6ce3000MI1HK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if Audit Log Monitoring for Amazon Elastic Kubernetes Service\
        \ (Amazon EKS) is enabled for an Amazon GuardDuty detector in your account.\
        \ The rule is NON_COMPLIANT if the EKS Audit Log Monitoring feature is not\
        \ enabled for your account."
      Scope:
        ComplianceResourceTypes:
        - "AWS::GuardDuty::Detector"
      Compliance: {}
      ConfigRuleName: "securityhub-guardduty-eks-protection-audit-enabled-a6f6ce30"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "GUARDDUTY_EKS_PROTECTION_AUDIT_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubmfaenabledforiamconsoleaccess77b2521b00LUq3m:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether AWS Multi-Factor Authentication (MFA) is enabled\
        \ for all AWS Identity and Access Management (IAM) users that use a console\
        \ password."
      Scope:
        ComplianceResourceTypes:
        - "AWS::IAM::User"
      Compliance: {}
      ConfigRuleName: "securityhub-mfa-enabled-for-iam-console-access-77b2521b"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "MFA_ENABLED_FOR_IAM_CONSOLE_ACCESS"
        Owner: "AWS"
      InputParameters: {}
  ApiGatewayUsagePlan00q2go3i00DpTxT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::UsagePlan"
    DeletionPolicy: "Retain"
    Properties:
      ApiStages:
      - Stage:
          Ref: "ApiGatewayStage00prodmvp100tl9xp"
        ApiId:
          Ref: "ApiGatewayRestApi005nwb46kira00y5IhC"
        Throttle: {}
      UsagePlanName: "webapp-api"
  ConfigConfigRule00securityhubbeanstalkenhancedhealthreportingenabled0e18119a00FuRtl:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks for Elastic Beanstalk environment is configured for 'enhanced'\
        \ health reporting and NON_COMPLIANT if configured for 'basic' health reporting."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-beanstalk-enhanced-health-reporting-enabled-0e18119a"
      Source:
        SourceIdentifier: "BEANSTALK_ENHANCED_HEALTH_REPORTING_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubvpcendpointenabledec2messagesa6de9a81004VkZr:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if each service specified in the parameter has an Amazon\
        \ VPC endpoint. The rule is NON_COMPLIANT if Amazon VPC does not have a VPC\
        \ endpoint created for each specified service. Optionally, you can specify\
        \ certain VPCs for the rule to check."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::VPC"
        - "AWS::EC2::VPCEndpoint"
      Compliance: {}
      ConfigRuleName: "securityhub-vpc-endpoint-enabled-ec2messages-a6de9a81"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "VPC_ENDPOINT_ENABLED"
        Owner: "AWS"
      InputParameters:
        serviceNames: "ec2messages"
  ConfigConfigRule00securityhubalbhttpdropinvalidheaderenabled603813dc00ckArY:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if rule evaluates Application Load Balancers (ALBs) to\
        \ ensure they are configured to drop http headers. The rule is NON_COMPLIANT\
        \ if the value of routing.http.drop_invalid_header_fields.enabled is set to\
        \ false."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-alb-http-drop-invalid-header-enabled-603813dc"
      Source:
        SourceIdentifier: "ALB_HTTP_DROP_INVALID_HEADER_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubefsencryptedcheck007b192100erb9Q:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Elastic File System should be configured to encrypt file data\
        \ at-rest using AWS KMS."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EFS::FileSystem"
      Compliance: {}
      ConfigRuleName: "securityhub-efs-encrypted-check-007b1921"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "EFS_ENCRYPTED_CHECK"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubec2clientvpnconnectionlogenabled1516f6a80014Bbf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if AWS Client VPN endpoint has client connection logging\
        \ enabled. The rule is NON_COMPLIANT if 'Configuration.ConnectionLogOptions.Enabled'\
        \ is set to false."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::ClientVpnEndpoint"
      Compliance: {}
      ConfigRuleName: "securityhub-ec2-client-vpn-connection-log-enabled-1516f6a8"
      Source:
        SourceIdentifier: "EC2_CLIENT_VPN_CONNECTION_LOG_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubdynamodbtabledeletionprotectionenablede4a0649700QhxUs:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if an Amazon DynamoDB table have deletion protection set\
        \ to enabled. The rule is NON_COMPLIANT if the table have deletion protection\
        \ set to disabled."
      Scope:
        ComplianceResourceTypes:
        - "AWS::DynamoDB::Table"
      Compliance: {}
      ConfigRuleName: "securityhub-dynamodb-table-deletion-protection-enabled-e4a06497"
      Source:
        SourceIdentifier: "DYNAMODB_TABLE_DELETION_PROTECTION_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubneptuneclusterdeletionprotectionenabledb7a853a4006epMZ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if an Amazon Neptune DB cluster has deletion protection\
        \ enabled. The rule is NON_COMPLIANT if an Amazon Neptune DB cluster has the\
        \ 'deletionProtection' field set to false."
      Scope:
        ComplianceResourceTypes:
        - "AWS::RDS::DBCluster"
      Compliance: {}
      ConfigRuleName: "securityhub-neptune-cluster-deletion-protection-enabled-b7a853a4"
      Source:
        SourceIdentifier: "NEPTUNE_CLUSTER_DELETION_PROTECTION_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubdynamodbpitrenabledd7d2778f00nuNzV:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks that point in time recovery (PITR) is enabled for Amazon\
        \ DynamoDB tables. The rule is NON_COMPLIANT if point in time recovery is\
        \ not enabled for Amazon DynamoDB tables"
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-dynamodb-pitr-enabled-d7d2778f"
      Source:
        SourceIdentifier: "DYNAMODB_PITR_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubathenaworkgrouploggingenabled135ef350008Kz1j:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if Athena WorkGroup has logging enabled. The rule is NON_COMPLIANT\
        \ if Athena WorkGroup does not have logging enabled"
      Scope:
        ComplianceResourceTypes:
        - "AWS::Athena::WorkGroup"
      Compliance: {}
      ConfigRuleName: "securityhub-athena-workgroup-logging-enabled-135ef350"
      Source:
        SourceIdentifier: "ATHENA_WORKGROUP_LOGGING_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubdmsmongodbauthenticationenabled9987669b00Guuj7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if AWS Database Migration Service (AWS DMS) endpoints for\
        \ MongoDb data stores are enabled for password-based authentication and access\
        \ control. The rule is NON_COMPLIANT if password-based authentication and\
        \ access control is not enabled."
      Scope:
        ComplianceResourceTypes:
        - "AWS::DMS::Endpoint"
      Compliance: {}
      ConfigRuleName: "securityhub-dms-mongo-db-authentication-enabled-9987669b"
      Source:
        SourceIdentifier: "DMS_MONGO_DB_AUTHENTICATION_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  EC2Instance00i0630337e785e424b300M7eKH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Instance"
    DeletionPolicy: "Retain"
    Properties:
      Tenancy: "default"
      SecurityGroups:
      - "GenAI-Pilot-Private-Tmicro-to-App"
      - "WebsocketServerSecurityGroup"
      - "GenAI-Pilot-Private-Cvpn-to-App"
      PrivateIpAddress: "10.25.71.180"
      BlockDeviceMappings:
      - Ebs:
          SnapshotId: "snap-01b44a4dc94c94fda"
          VolumeType: "gp3"
          KmsKeyId:
            Fn::GetAtt:
            - "KMSKey00e0af6c3f73fc497e863a6754f0dce6b1005JjxP"
            - "Arn"
          Encrypted: true
          Iops: 3000
          VolumeSize: 20
          DeleteOnTermination: false
        DeviceName: "/dev/xvda"
      IamInstanceProfile:
        Ref: "IAMInstanceProfile00ec2adminaccess008Kbu6"
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00InZQf"
      EbsOptimized: false
      Volumes:
      - VolumeId: "vol-045cae6da6d093ba7"
        Device: "/dev/xvda"
      NetworkInterfaces:
      - PrivateIpAddresses:
        - PrivateIpAddress: "10.25.71.180"
          Primary: true
        SecondaryPrivateIpAddressCount: 0
        DeviceIndex: "0"
        GroupSet:
        - Ref: "EC2SecurityGroup00sg07fd500f946aad8a200D738s"
        - Ref: "EC2SecurityGroup00sg07401c0c33946a24100sFB7U"
        - Ref: "EC2SecurityGroup00sg0158898f4b43a0ae900SoA7y"
        Ipv6Addresses: []
        SubnetId:
          Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00InZQf"
        AssociatePublicIpAddress: false
        NetworkInterfaceId:
          Ref: "EC2NetworkInterface00eni0403053f58cf2839a00VYT0c"
        DeleteOnTermination: true
      ImageId: "ami-0d07675d294f17973"
      InstanceType: "t2.medium"
      Monitoring: false
      Tags:
      - Value: "ec2-jumpserver-shengkwan"
        Key: "Name"
      InstanceInitiatedShutdownBehavior: "stop"
      CpuOptions:
        ThreadsPerCore: 1
        CoreCount: 2
      AvailabilityZone: "ap-southeast-1b"
      PrivateDnsNameOptions:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      SecurityGroupIds:
      - "sg-07fd500f946aad8a2"
      - "sg-07401c0c33946a241"
      - "sg-0158898f4b43a0ae9"
      DisableApiTermination: false
      KeyName: "pilot-ssh-test-shengkwan-key-pair"
      SourceDestCheck: true
      PlacementGroupName: ""
      VpcId: "vpc-02790342fee4ebf9f"
      State:
        Code: "80"
        Name: "stopped"
      CreditSpecification:
        CPUCredits: "standard"
  ConfigConfigRule00securityhubvpcendpointenabledlambda9448efe0002AHBp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if each service specified in the parameter has an Amazon\
        \ VPC endpoint. The rule is NON_COMPLIANT if Amazon VPC does not have a VPC\
        \ endpoint created for each specified service. Optionally, you can specify\
        \ certain VPCs for the rule to check."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::VPC"
        - "AWS::EC2::VPCEndpoint"
      Compliance: {}
      ConfigRuleName: "securityhub-vpc-endpoint-enabled-lambda-9448efe0"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "VPC_ENDPOINT_ENABLED"
        Owner: "AWS"
      InputParameters:
        serviceNames: "lambda"
  ConfigConfigRule00securityhubec2launchtemplateimdsv2check4bc2add600OwwaR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if the currently set default version of an Amazon EC2 Launch\
        \ Template requires new launched instances to use V2 of the Amazon EC2 Instance\
        \ Metadata Service (IMDSv2). The rule is NON_COMPLIANT if 'Metadata version'\
        \ is not specified as V2 (IMDSv2)."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::LaunchTemplate"
      Compliance: {}
      ConfigRuleName: "securityhub-ec2-launch-template-imdsv2-check-4bc2add6"
      Source:
        SourceIdentifier: "EC2_LAUNCH_TEMPLATE_IMDSV2_CHECK"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubnetfwdeletionprotectionenabled951ad55c00piHJy:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if AWS Network Firewall has deletion protection enabled.\
        \ The rule is NON_COMPLIANT if Network Firewall does not have deletion protection\
        \ enabled."
      Scope:
        ComplianceResourceTypes:
        - "AWS::NetworkFirewall::Firewall"
      Compliance: {}
      ConfigRuleName: "securityhub-netfw-deletion-protection-enabled-951ad55c"
      Source:
        SourceIdentifier: "NETFW_DELETION_PROTECTION_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubec2launchtemplatepublicipdisablededecdda900rSDOJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if Amazon EC2 Launch Templates are set to assign public\
        \ IP addresses to Network Interfaces. The rule is NON_COMPLIANT if the default\
        \ version of an EC2 Launch Template has at least 1 Network Interface with\
        \  'AssociatePublicIpAddress' set to 'true'."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-ec2-launch-template-public-ip-disabled-edecdda9"
      Source:
        SourceIdentifier: "EC2_LAUNCH_TEMPLATE_PUBLIC_IP_DISABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubvpcendpointenabledssmmessages4267445e0045R7C:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if each service specified in the parameter has an Amazon\
        \ VPC endpoint. The rule is NON_COMPLIANT if Amazon VPC does not have a VPC\
        \ endpoint created for each specified service. Optionally, you can specify\
        \ certain VPCs for the rule to check."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::VPC"
        - "AWS::EC2::VPCEndpoint"
      Compliance: {}
      ConfigRuleName: "securityhub-vpc-endpoint-enabled-ssmmessages-4267445e"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "VPC_ENDPOINT_ENABLED"
        Owner: "AWS"
      InputParameters:
        serviceNames: "ssmmessages"
  ApiGatewayDocumentationVersion001040045udd:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::DocumentationVersion"
    DeletionPolicy: "Retain"
    Properties:
      RestApiId:
        Ref: "ApiGatewayRestApi005nwb46kira00y5IhC"
      DocumentationVersion: "1.0.4"
  ConfigConfigRule00securityhubelbv2multipleazb7eb15f300Ar9rE:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks if an Elastic Load Balancer V2 has registered\
        \ instances from multiple Availability Zones (AZ's). This control fails if\
        \ an Elastic Load Balancer V2 has instances registered in less than 2 AZ's."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-elbv2-multiple-az-b7eb15f3"
      Source:
        SourceIdentifier: "ELBV2_MULTIPLE_AZ"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubappsyncloggingenabled3aa7baeb00mlSIN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if an AWS AppSync API has logging enabled. The rule is\
        \ NON_COMPLIANT if logging is not enabled, or 'fieldLogLevel' is neither ERROR\
        \ nor ALL."
      Scope:
        ComplianceResourceTypes:
        - "AWS::AppSync::GraphQLApi"
      Compliance: {}
      ConfigRuleName: "securityhub-appsync-logging-enabled-3aa7baeb"
      Source:
        SourceIdentifier: "APPSYNC_LOGGING_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubapigwcacheencrypted9be53acc00fVKzM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether all methods in Amazon API Gateway\
        \ REST API stages that have cache enabled are encrypted. The control fails\
        \ if any method in API Gateway REST API stage is configured to cache and the\
        \ cache is not encrypted."
      Scope:
        ComplianceResourceTypes:
        - "AWS::ApiGateway::Stage"
      Compliance: {}
      ConfigRuleName: "securityhub-api-gw-cache-encrypted-9be53acc"
      Source:
        SourceIdentifier: "arn:aws:lambda:ap-southeast-1:338458120468:function:SecurityHubConfigRule"
        SourceDetails:
        - EventSource: "aws.config"
          MessageType: "ConfigurationItemChangeNotification"
        Owner: "CUSTOM_LAMBDA"
      InputParameters:
        version: "1.1"
  ConfigConfigRule00securityhubelasticbeanstalklogstocloudwatch369948b100qCIWj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if AWS Elastic Beanstalk environments are configured to\
        \ send logs to Amazon CloudWatch Logs. The rule is NON_COMPLIANT if the value\
        \ of `StreamLogs` is false."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-elastic-beanstalk-logs-to-cloudwatch-369948b1"
      Source:
        SourceIdentifier: "ELASTIC_BEANSTALK_LOGS_TO_CLOUDWATCH"
        Owner: "AWS"
      InputParameters: {}
  EC2SecurityGroup00sg075615342aa3e28b900BtPxM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "default VPC security group"
      GroupName: "default"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00AYnOQ"
      SecurityGroupIngress:
      - CidrIp: "10.25.71.0/32"
        IpProtocol: "-1"
        Description: "allow inbound local"
        FromPort: -1
        ToPort: -1
      - IpProtocol: "-1"
        FromPort: -1
        SourceSecurityGroupId:
          Fn::GetAtt:
          - "EC2VPC00vpc02790342fee4ebf9f00AYnOQ"
          - "DefaultSecurityGroup"
        ToPort: -1
        SourceSecurityGroupOwnerId: "343218203122"
      SecurityGroupEgress:
      - CidrIp: "10.25.71.0/32"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
  CloudFrontCachePolicy00658327eaf89d4faba63d7e88639e58f600COc7C:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::CloudFront::CachePolicy"
    DeletionPolicy: "Retain"
    Properties:
      CachePolicyConfig:
        Comment: "Policy with caching enabled. Supports Gzip and Brotli compression."
        MinTTL: 1
        MaxTTL: 3.1536E7
        ParametersInCacheKeyAndForwardedToOrigin:
          QueryStringsConfig:
            QueryStringBehavior: "none"
          EnableAcceptEncodingBrotli: true
          HeadersConfig:
            HeaderBehavior: "none"
          CookiesConfig:
            CookieBehavior: "none"
          EnableAcceptEncodingGzip: true
        DefaultTTL: 86400
        Name: "Managed-CachingOptimized"
  ConfigConfigRule00securityhubelbtlshttpslistenersonlyf9091dec00tKV4k:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Check whether your Classic Load Balancer listeners are configured\
        \ with HTTPS or SSL protocol for front-end (client to load balancer)."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-elb-tls-https-listeners-only-f9091dec"
      Source:
        SourceIdentifier: "ELB_TLS_HTTPS_LISTENERS_ONLY"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubneptuneclusterencrypted5876862b000FiSr:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if storage encryption is enabled for your Amazon Neptune\
        \ DB clusters. The rule is NON_COMPLIANT if storage encryption is not enabled."
      Scope:
        ComplianceResourceTypes:
        - "AWS::RDS::DBCluster"
      Compliance: {}
      ConfigRuleName: "securityhub-neptune-cluster-encrypted-5876862b"
      Source:
        SourceIdentifier: "NEPTUNE_CLUSTER_ENCRYPTED"
        Owner: "AWS"
      InputParameters: {}
  ApiGatewayDeployment00jb3ou200gGXor:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::Deployment"
    DeletionPolicy: "Retain"
    Properties:
      RestApiId:
        Ref: "ApiGatewayRestApi005nwb46kira00y5IhC"
  ConfigConfigRule00securityhubiamuserunusedcredentialscheck4543cb21ad00TfBdp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether your IAM users have passwords or active\
        \ access keys that were not used within the previous 45 days."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-iam-user-unused-credentials-check-45-43cb21ad"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "IAM_USER_UNUSED_CREDENTIALS_CHECK"
        Owner: "AWS"
      InputParameters:
        maxCredentialUsageAge: "45"
  ConfigConfigRule00securityhubdmsautominorversionupgradecheckd86e3f4c00imghD:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if an AWS Database Migration Service (AWS DMS) replication\
        \ instance has automatic minor version upgrades enabled. The rule is NON_COMPLIANT\
        \ if an AWS DMS replication instance is not configured with automatic minor\
        \ version upgrades."
      Scope:
        ComplianceResourceTypes:
        - "AWS::DMS::ReplicationInstance"
      Compliance: {}
      ConfigRuleName: "securityhub-dms-auto-minor-version-upgrade-check-d86e3f4c"
      Source:
        SourceIdentifier: "DMS_AUTO_MINOR_VERSION_UPGRADE_CHECK"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubelasticsearchauditloggingenabled8107d1d200wbEdj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether Elasticsearch domains have audit logging\
        \ enabled. This control fails if an Elasticsearch domain does not have audit\
        \ logging enabled."
      Scope:
        ComplianceResourceTypes:
        - "AWS::Elasticsearch::Domain"
      Compliance: {}
      ConfigRuleName: "securityhub-elasticsearch-audit-logging-enabled-8107d1d2"
      Source:
        SourceIdentifier: "arn:aws:lambda:ap-southeast-1:338458120468:function:SecurityHubConfigRule"
        SourceDetails:
        - EventSource: "aws.config"
          MessageType: "ConfigurationItemChangeNotification"
        Owner: "CUSTOM_LAMBDA"
      InputParameters: {}
  ApiGatewayDeployment00bf4idp00zcQNF:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::Deployment"
    DeletionPolicy: "Retain"
    Properties:
      RestApiId:
        Ref: "ApiGatewayRestApi005nwb46kira00y5IhC"
  ConfigConfigRule00securityhubec2paravirtualinstancechecke7019715005higE:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks if the virtualization type of an EC2 instance\
        \ is paravirtual. This control fails if for an EC2 instance if 'virtualizationType'\
        \ is set to 'paravirtual'."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-ec2-paravirtual-instance-check-e7019715"
      Source:
        SourceIdentifier: "EC2_PARAVIRTUAL_INSTANCE_CHECK"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubvpcendpointenabledawssagemakerregionstdb5e8176200kiPkb:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if each service specified in the parameter has an Amazon\
        \ VPC endpoint. The rule is NON_COMPLIANT if Amazon VPC does not have a VPC\
        \ endpoint created for each specified service. Optionally, you can specify\
        \ certain VPCs for the rule to check."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::VPC"
        - "AWS::EC2::VPCEndpoint"
      Compliance: {}
      ConfigRuleName: "securityhub-vpc-endpoint-enabled-aws-sagemaker-region-std-b5e81762"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "VPC_ENDPOINT_ENABLED"
        Owner: "AWS"
      InputParameters:
        serviceNames: "aws.sagemaker.region.studio"
  ConfigConfigRule00securityhubcodebuildprojectloggingenabled64a9ffd700BVqow:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether a CodeBuild project environment has\
        \ at least one log option enabled. This control fails if s3 or CloudWatch\
        \ logs aren't present or in DISABLED status. The control passes if the status\
        \ of either logs is ENABLED."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-codebuild-project-logging-enabled-64a9ffd7"
      Source:
        SourceIdentifier: "CODEBUILD_PROJECT_LOGGING_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubsqsqueueencrypted8c19158e00j1Z1b:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether Amazon SQS queues are encrypted at\
        \ rest."
      Scope:
        ComplianceResourceTypes:
        - "AWS::SQS::Queue"
      Compliance: {}
      ConfigRuleName: "securityhub-sqs-queue-encrypted-8c19158e"
      Source:
        SourceIdentifier: "arn:aws:lambda:ap-southeast-1:338458120468:function:SecurityHubConfigRule"
        SourceDetails:
        - EventSource: "aws.config"
          MessageType: "ConfigurationItemChangeNotification"
        Owner: "CUSTOM_LAMBDA"
      InputParameters:
        version: "1.1"
  ConfigConfigRule00securityhubs3accountlevelpublicaccessblocksperiodic644db9da00Xv2JK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if the required public access block settings are configured\
        \ from account level."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-s3-account-level-public-access-blocks-periodic-644db9da"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "S3_ACCOUNT_LEVEL_PUBLIC_ACCESS_BLOCKS_PERIODIC"
        Owner: "AWS"
      InputParameters:
        RestrictPublicBuckets: "True"
        IgnorePublicAcls: "True"
        BlockPublicPolicy: "True"
        BlockPublicAcls: "True"
  EC2KeyPair00rebekahprivateec200yAzAh:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::KeyPair"
    DeletionPolicy: "Retain"
    Properties:
      KeyName: "rebekah-private-ec2"
      KeyType: "rsa"
      PublicKeyMaterial: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQD6phij1DwBVYnG9AX2yVctHQxLkb4iVE3RE6k+pVFQEeCE0eZ576KEQoy21heA5UG6BcpmrxMsDTRxWoQ9tjqPAJyoyePP1sgU0qClhOxePrOCDVz8YmlLtZmuHpiwWWqSBuNhWSxgUQZuMQz8f63/a2aLqF47fCnsw6f9DL2rcksxOtr6Ws8Rd2k2Tvn4dDiNx+3khUG1VBYi9SLqBI4LwD5z3YgNHu1s+be2xhI/QDTF2KQsbgMbULeYGyCI1VSKV20HNGuRdeXBEZES2jZJetJoAN909PIY1LgzrcsLCMaU/Xgzny94whEjy35RLGNshl9rKoAeSGlqQK3w7aI3\
        \ rebekah-private-ec2\n"
      Tags: []
  ConfigConfigRule00securityhubelasticsearchinvpconlyfced6cdb00kkx8C:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether Elasticsearch domains are in Amazon Virtual Private\
        \ Cloud (Amazon VPC)."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-elasticsearch-in-vpc-only-fced6cdb"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "ELASTICSEARCH_IN_VPC_ONLY"
        Owner: "AWS"
      InputParameters: {}
  EC2Volume00vol0057ef600adf6805f00m3dyk:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Volume"
    DeletionPolicy: "Retain"
    Properties:
      MultiAttachEnabled: false
      SnapshotId: "snap-0d0d9f5db331ffa4b"
      VolumeType: "gp3"
      KmsKeyId: "arn:aws:kms:ap-southeast-1:343218203122:key/e0af6c3f-73fc-497e-863a-6754f0dce6b1"
      Encrypted: true
      Size: 8
      AutoEnableIO: false
      AvailabilityZone: "ap-southeast-1b"
      Throughput: 125
      Iops: 3000
      Tags:
      - Value: "tapo-test-1 [encrypted]"
        Key: "name"
  ConfigConfigRule00securityhubdmsreplicationtasksourcedblogging3dcd576000RpA0v:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if logging is enabled with a valid severity level for AWS\
        \ DMS replication tasks of a source database. The rule is NON_COMPLIANT if\
        \ logging is not enabled or logs for DMS replication tasks of a source database\
        \ have a severity level that invalid."
      Scope:
        ComplianceResourceTypes:
        - "AWS::DMS::ReplicationTask"
      Compliance: {}
      ConfigRuleName: "securityhub-dms-replication-task-sourcedb-logging-3dcd5760"
      Source:
        SourceIdentifier: "DMS_REPLICATION_TASK_SOURCEDB_LOGGING"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubrdsclustereventnotificationsconfigured548b636200RuU4z:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether an Amazon RDS Event subscription for\
        \ RDS clusters is configured to notify on event categories of both \"maintenance\"\
        \ and \"failure\"."
      Scope:
        ComplianceResourceTypes:
        - "AWS::RDS::EventSubscription"
      Compliance: {}
      ConfigRuleName: "securityhub-rds-cluster-event-notifications-configured-548b6362"
      Source:
        SourceIdentifier: "arn:aws:lambda:ap-southeast-1:338458120468:function:SecurityHubConfigRule"
        SourceDetails:
        - EventSource: "aws.config"
          MessageType: "ConfigurationItemChangeNotification"
        Owner: "CUSTOM_LAMBDA"
      InputParameters: {}
  ConfigConfigRule00securityhubvpcendpointenabledsagemakerruntime020ba4a100O6Ia3:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if each service specified in the parameter has an Amazon\
        \ VPC endpoint. The rule is NON_COMPLIANT if Amazon VPC does not have a VPC\
        \ endpoint created for each specified service. Optionally, you can specify\
        \ certain VPCs for the rule to check."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::VPC"
        - "AWS::EC2::VPCEndpoint"
      Compliance: {}
      ConfigRuleName: "securityhub-vpc-endpoint-enabled-sagemaker-runtime-020ba4a1"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "VPC_ENDPOINT_ENABLED"
        Owner: "AWS"
      InputParameters:
        serviceNames: "sagemaker.runtime"
  EC2SecurityGroup00sg0fd865e5bd1a64a0700vk84A:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "for akash ec2 server"
      GroupName: "akash-ec2-sg"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00AYnOQ"
      SecurityGroupIngress:
      - IpProtocol: "-1"
        Description: "cVPN to Public"
        FromPort: -1
        SourceSecurityGroupId: "sg-0a6c63d92a738a24c"
        ToPort: -1
        SourceSecurityGroupOwnerId: "343218203122"
      SecurityGroupEgress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
  ConfigConfigRule00securityhubvpcendpointenabledssmincidentsa6dba92000rpshm:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if each service specified in the parameter has an Amazon\
        \ VPC endpoint. The rule is NON_COMPLIANT if Amazon VPC does not have a VPC\
        \ endpoint created for each specified service. Optionally, you can specify\
        \ certain VPCs for the rule to check."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::VPC"
        - "AWS::EC2::VPCEndpoint"
      Compliance: {}
      ConfigRuleName: "securityhub-vpc-endpoint-enabled-ssm-incidents-a6dba920"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "VPC_ENDPOINT_ENABLED"
        Owner: "AWS"
      InputParameters:
        serviceNames: "ssm-incidents"
  ConfigConfigRule00securityhubrdsclusterencryptedatrest3a4ab9ca00ubMVq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if an Amazon Relational Database Service (Amazon RDS) cluster\
        \ is encrypted at rest. The rule is NON_COMPLIANT if an Amazon RDS cluster\
        \ is not encrypted at rest."
      Scope:
        ComplianceResourceTypes:
        - "AWS::RDS::DBCluster"
      Compliance: {}
      ConfigRuleName: "securityhub-rds-cluster-encrypted-at-rest-3a4ab9ca"
      Source:
        SourceIdentifier: "RDS_CLUSTER_ENCRYPTED_AT_REST"
        Owner: "AWS"
      InputParameters: {}
  EC2SecurityGroup00sg018c8a78c89c0d40400ulagG:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "harith"
      GroupName: "harith-ec2-sg"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00AYnOQ"
      SecurityGroupIngress:
      - IpProtocol: "-1"
        FromPort: -1
        SourceSecurityGroupId: "sg-0a6c63d92a738a24c"
        ToPort: -1
        SourceSecurityGroupOwnerId: "343218203122"
      - IpProtocol: "tcp"
        FromPort: 27017
        SourceSecurityGroupId: "sg-075615342aa3e28b9"
        ToPort: 27017
        SourceSecurityGroupOwnerId: "343218203122"
  ConfigConfigRule00securityhubapigwv2accesslogsenabled5609e23f007DKnO:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if Amazon API Gateway V2 stages have access logging enabled.The\
        \ rule is NON_COMPLIANT if 'accessLogSettings' is not present in Stage configuration."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-api-gwv2-access-logs-enabled-5609e23f"
      Source:
        SourceIdentifier: "API_GWV2_ACCESS_LOGS_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubec2ebsencryptionbydefault91341b7000OMxbx:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks that Amazon Elastic Block Store (EBS) encryption is enabled\
        \ by default. The rule is NON_COMPLIANT if the encryption is not enabled."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-ec2-ebs-encryption-by-default-91341b70"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "EC2_EBS_ENCRYPTION_BY_DEFAULT"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubrdsclusterdeletionprotectionenabledcf4d3f53009bK6S:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if an Amazon Relational Database Service (Amazon RDS) cluster\
        \ has deletion protection enabled. This rule is NON_COMPLIANT if an RDS cluster\
        \ does not have deletion protection enabled."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-rds-cluster-deletion-protection-enabled-cf4d3f53"
      Source:
        SourceIdentifier: "RDS_CLUSTER_DELETION_PROTECTION_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubrdsinstancecopytagstosnapshotsenableda8ab73bb0052dTh:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether RDS DB instances are configured to\
        \ copy all tags to snapshots when the snapshots are created."
      Scope:
        ComplianceResourceTypes:
        - "AWS::RDS::DBInstance"
      Compliance: {}
      ConfigRuleName: "securityhub-rds-instance-copy-tags-to-snapshots-enabled-a8ab73bb"
      Source:
        SourceIdentifier: "arn:aws:lambda:ap-southeast-1:338458120468:function:SecurityHubConfigRule"
        SourceDetails:
        - EventSource: "aws.config"
          MessageType: "ConfigurationItemChangeNotification"
        Owner: "CUSTOM_LAMBDA"
      InputParameters: {}
  EC2Volume00vol086aefbd878266b9500uV1jl:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Volume"
    DeletionPolicy: "Retain"
    Properties:
      MultiAttachEnabled: false
      SnapshotId: "snap-0cda8ec628a037291"
      VolumeType: "gp3"
      KmsKeyId: "arn:aws:kms:ap-southeast-1:343218203122:key/e0af6c3f-73fc-497e-863a-6754f0dce6b1"
      Encrypted: true
      Size: 20
      AutoEnableIO: false
      AvailabilityZone: "ap-southeast-1b"
      Throughput: 125
      Iops: 3000
      Tags: []
  ApiGatewayDeployment00hkcnlw00of21R:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::Deployment"
    DeletionPolicy: "Retain"
    Properties:
      RestApiId:
        Ref: "ApiGatewayRestApi005nwb46kira00y5IhC"
  ConfigConfigRule00securityhubcodebuildprojectenvvarawscredcheck2a7d692e00UQk0f:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether the project contains environment variables AWS_ACCESS_KEY_ID\
        \ and AWS_SECRET_ACCESS_KEY."
      Scope:
        ComplianceResourceTypes:
        - "AWS::CodeBuild::Project"
      Compliance: {}
      ConfigRuleName: "securityhub-codebuild-project-envvar-awscred-check-2a7d692e"
      Source:
        SourceIdentifier: "CODEBUILD_PROJECT_ENVVAR_AWSCRED_CHECK"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubautoscalingmultipleinstancetypesf9f161ba008a7I7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether an Amazon EC2 AutoScaling group uses\
        \ multiple instance types. This control fails if the Amazon EC2 AutoScaling\
        \ group has only one instance type defined."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-autoscaling-multiple-instance-types-f9f161ba"
      Source:
        SourceIdentifier: "AUTOSCALING_MULTIPLE_INSTANCE_TYPES"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubelasticsearchlogstocloudwatche4eb926b00CxvFx:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether Elasticsearch domains are configured\
        \ to send error logs to CloudWatch Logs."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-elasticsearch-logs-to-cloudwatch-e4eb926b"
      Source:
        SourceIdentifier: "ELASTICSEARCH_LOGS_TO_CLOUDWATCH"
        Owner: "AWS"
      InputParameters:
        logTypes: "error"
  ConfigConfigRule00securityhubmskinclusternoderequiretls94a1cbd800v3CIY:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if an Amazon MSK cluster enforces encryption in transit\
        \ using HTTPS (TLS) with the broker nodes of the cluster. The rule is NON_COMPLIANT\
        \ if plain text communication is enabled for in-cluster broker node connections."
      Scope:
        ComplianceResourceTypes:
        - "AWS::MSK::Cluster"
      Compliance: {}
      ConfigRuleName: "securityhub-msk-in-cluster-node-require-tls-94a1cbd8"
      Source:
        SourceIdentifier: "MSK_IN_CLUSTER_NODE_REQUIRE_TLS"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubec2managedinstancepatchcompliance9ee3803100F2rXX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether the compliance status of the Amazon EC2 Systems\
        \ Manager patch compliance is COMPLIANT or NON_COMPLIANT after the patch installation\
        \ on the instance."
      Scope:
        ComplianceResourceTypes:
        - "AWS::SSM::PatchCompliance"
      Compliance: {}
      ConfigRuleName: "securityhub-ec2-managedinstance-patch-compliance-9ee38031"
      Source:
        SourceIdentifier: "EC2_MANAGEDINSTANCE_PATCH_COMPLIANCE_STATUS_CHECK"
        Owner: "AWS"
      InputParameters: {}
  EC2KeyPair00jiahueickey00bpNh2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::KeyPair"
    DeletionPolicy: "Retain"
    Properties:
      KeyName: "jiahueic-key"
      KeyType: "rsa"
      PublicKeyMaterial: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDQHdEsr3ibsqiA5jiJrZdWeJ7BUX3sfcc9GJLIJl0ok0iJxhdQY4sF+ZSbhgCD9RDdWVjSZw+q5BL8pw3xHVPEHIYUVX7TmjImkk9uV8kADmIVSGTdeEAB1OplptPY4qZB6UERPliKEV/qwfr+MZCGIPxsUEppmvdZmOYaPsRrBnKJXHv+QGzmq0pNwfoBLREeIrd3S1SOKzMmO98S3IPoRYS/4pawXIH3/ng02QSs9XbFvial6nr7h8TioDkpLVKnuFtqpCq56BPUWiacXnDlv0NOEcpcKfZwxJIRtcb/QBNTe72avEgYjImI++63CA3JAM/ydVH0ioAiMK5cnRi/\
        \ jiahueic-key\n"
      Tags: []
  EC2NetworkInterface00eni0403053f58cf2839a00VYT0c:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: ""
      PrivateIpAddress: "10.25.71.180"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.180"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-07fd500f946aad8a2"
      - "sg-07401c0c33946a241"
      - "sg-0158898f4b43a0ae9"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00InZQf"
      SourceDestCheck: true
      InterfaceType: "interface"
      Tags: []
  ConfigConfigRule00securityhubrdssnapshotspublicprohibited6fc63d8a00mpmiL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if Amazon Relational Database Service (Amazon RDS) snapshots\
        \ are public."
      Scope:
        ComplianceResourceTypes:
        - "AWS::RDS::DBSnapshot"
        - "AWS::RDS::DBClusterSnapshot"
      Compliance: {}
      ConfigRuleName: "securityhub-rds-snapshots-public-prohibited-6fc63d8a"
      Source:
        SourceIdentifier: "RDS_SNAPSHOTS_PUBLIC_PROHIBITED"
        Owner: "AWS"
      InputParameters: {}
  EC2Instance00i020d34aa93d2d7e6f006Mde2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Instance"
    DeletionPolicy: "Retain"
    Properties:
      Tenancy: "default"
      SecurityGroups:
      - "GenAI-Pilot-Private-Tmicro-to-App"
      - "akash-ec2-sg"
      PrivateIpAddress: "10.25.71.175"
      BlockDeviceMappings:
      - Ebs:
          SnapshotId: "snap-0cda8ec628a037291"
          VolumeType: "gp3"
          KmsKeyId:
            Fn::GetAtt:
            - "KMSKey00e0af6c3f73fc497e863a6754f0dce6b1005JjxP"
            - "Arn"
          Encrypted: true
          Iops: 3000
          VolumeSize: 20
          DeleteOnTermination: false
        DeviceName: "/dev/sda1"
      IamInstanceProfile:
        Ref: "IAMInstanceProfile00ec2adminaccess008Kbu6"
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00InZQf"
      EbsOptimized: true
      Volumes:
      - VolumeId: "vol-086aefbd878266b95"
        Device: "/dev/sda1"
      NetworkInterfaces:
      - PrivateIpAddresses:
        - PrivateIpAddress: "10.25.71.175"
          Primary: true
        SecondaryPrivateIpAddressCount: 0
        DeviceIndex: "0"
        GroupSet:
        - Ref: "EC2SecurityGroup00sg07fd500f946aad8a200D738s"
        - Ref: "EC2SecurityGroup00sg0fd865e5bd1a64a0700vk84A"
        Ipv6Addresses: []
        SubnetId:
          Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00InZQf"
        AssociatePublicIpAddress: false
        NetworkInterfaceId:
          Ref: "EC2NetworkInterface00eni0c66dedac91dbb82800SKZWV"
        DeleteOnTermination: true
      ImageId: "ami-0b748249d064044e8"
      InstanceType: "t3.large"
      Monitoring: false
      Tags:
      - Value: "ec2-jumpserver-akash"
        Key: "Name"
      InstanceInitiatedShutdownBehavior: "stop"
      CpuOptions:
        ThreadsPerCore: 2
        CoreCount: 1
      AvailabilityZone: "ap-southeast-1b"
      PrivateDnsNameOptions:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      SecurityGroupIds:
      - "sg-07fd500f946aad8a2"
      - "sg-0fd865e5bd1a64a07"
      DisableApiTermination: false
      KeyName: "akash-redhat-ec2-key"
      SourceDestCheck: true
      PlacementGroupName: ""
      VpcId: "vpc-02790342fee4ebf9f"
      State:
        Code: "80"
        Name: "stopped"
      CreditSpecification:
        CPUCredits: "unlimited"
  ConfigConfigRule00securityhubmqcloudwatchauditlogenabled0aeb1a5b00zrJTu:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if an Amazon MQ broker has CloudWatch audit logging enabled.\
        \ The rule is NON_COMPLIANT if the broker does not have audit logging enabled."
      Scope:
        ComplianceResourceTypes:
        - "AWS::AmazonMQ::Broker"
      Compliance: {}
      ConfigRuleName: "securityhub-mq-cloudwatch-audit-log-enabled-0aeb1a5b"
      Source:
        SourceIdentifier: "MQ_CLOUDWATCH_AUDIT_LOG_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ApiGatewayDeployment00euidyg00B7T3U:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::Deployment"
    DeletionPolicy: "Retain"
    Properties:
      RestApiId:
        Ref: "ApiGatewayRestApi005nwb46kira00y5IhC"
      Description: "Created by AWS Lambda"
  CloudFrontOriginRequestPolicy00216adef65c7f47e4b9895492eafa07d300yfFaF:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::CloudFront::OriginRequestPolicy"
    DeletionPolicy: "Retain"
    Properties:
      OriginRequestPolicyConfig:
        QueryStringsConfig:
          QueryStringBehavior: "all"
        Comment: "Policy to forward all parameters in viewer requests"
        HeadersConfig:
          HeaderBehavior: "allViewer"
        CookiesConfig:
          CookieBehavior: "all"
        Name: "Managed-AllViewer"
  EC2SecurityGroup00sg0a6c63d92a738a24c00vYP82:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "CLI access to dev team"
      GroupName: "GenAI-Pilot-cvpn-SG"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00AYnOQ"
      SecurityGroupIngress:
      - CidrIp:
          Fn::GetAtt:
          - "EC2VPC00vpc02790342fee4ebf9f00AYnOQ"
          - "CidrBlock"
        IpProtocol: "tcp"
        FromPort: 22
        ToPort: 22
      - CidrIp:
          Fn::GetAtt:
          - "EC2VPC00vpc02790342fee4ebf9f00AYnOQ"
          - "CidrBlock"
        IpProtocol: "tcp"
        FromPort: 443
        ToPort: 443
      - CidrIp:
          Fn::GetAtt:
          - "EC2VPC00vpc02790342fee4ebf9f00AYnOQ"
          - "CidrBlock"
        IpProtocol: "icmp"
        FromPort: -1
        ToPort: -1
      SecurityGroupEgress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
      Tags:
      - Value: "GenAI-Pilot-cvpn-SG"
        Key: "Name"
  ApiGatewayDeployment00vejsee0041pLg:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::Deployment"
    DeletionPolicy: "Retain"
    Properties:
      RestApiId:
        Ref: "ApiGatewayRestApi005nwb46kira00y5IhC"
      Description: "production stage for mvp 1"
  ConfigConfigRule00securityhubec2instancemanagedbyssm027fcd2400Ua3ur:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether the Amazon EC2 instances in your account are managed\
        \ by AWS Systems Manager."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::Instance"
        - "AWS::SSM::ManagedInstanceInventory"
      Compliance: {}
      ConfigRuleName: "securityhub-ec2-instance-managed-by-ssm-027fcd24"
      Source:
        SourceIdentifier: "EC2_INSTANCE_MANAGED_BY_SSM"
        Owner: "AWS"
      InputParameters: {}
  EC2SecurityGroup00sg09b2b11bee0d39e7a00OSMbJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "launch-wizard-9 created 2024-10-29T02:58:26.769Z"
      GroupName: "launch-wizard-9"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00AYnOQ"
      SecurityGroupIngress:
      - CidrIp: "161.142.154.86/32"
        IpProtocol: "tcp"
        FromPort: 22
        ToPort: 22
      - CidrIp:
          Fn::GetAtt:
          - "EC2VPC00vpc02790342fee4ebf9f00AYnOQ"
          - "CidrBlock"
        IpProtocol: "tcp"
        FromPort: 22
        ToPort: 22
      - CidrIp: "113.23.196.18/32"
        IpProtocol: "tcp"
        FromPort: 22
        ToPort: 22
      SecurityGroupEgress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
  ConfigConfigRule00securityhubs3bucketaclprohibited80901dcb009mOpV:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks to ensure that your Amazon S3 buckets does\
        \ not allow user permissions via access control lists. This control fails\
        \ if ACLs are configured for user access on S3 Bucket."
      Scope:
        ComplianceResourceTypes:
        - "AWS::S3::Bucket"
      Compliance: {}
      ConfigRuleName: "securityhub-s3-bucket-acl-prohibited-80901dcb"
      Source:
        SourceIdentifier: "S3_BUCKET_ACL_PROHIBITED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubelasticsearchencryptedatrest9b84d9bf00jNFJU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether Elasticsearch domains have encryption at rest configuration\
        \ enabled."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-elasticsearch-encrypted-at-rest-9b84d9bf"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "ELASTICSEARCH_ENCRYPTED_AT_REST"
        Owner: "AWS"
      InputParameters: {}
  ApiGatewayDeployment00byenf700v3Ccv:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::Deployment"
    DeletionPolicy: "Retain"
    Properties:
      RestApiId:
        Ref: "ApiGatewayRestApi005nwb46kira00y5IhC"
  EC2NetworkInterface00eni0e26b9298bc1d4f2100krjsr:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: ""
      PrivateIpAddress: "10.25.71.172"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.172"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-07fd500f946aad8a2"
      - "sg-0158898f4b43a0ae9"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00InZQf"
      SourceDestCheck: true
      InterfaceType: "interface"
      Tags: []
  ConfigConfigRule00securityhubefsinbackupplan319a0946007UeHU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether Amazon Elastic File System (Amazon EFS) file systems\
        \ are added in the backup plans of AWS Backup. The rule is NON_COMPLIANT if\
        \ EFS file systems are not included in the backup plans."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-efs-in-backup-plan-319a0946"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "EFS_IN_BACKUP_PLAN"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubalbdesyncmodecheck6a28823c00H1OLb:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether the Application Load Balancer is configured\
        \ defensive or strictest de-sync mitigation mode. This control fails if the\
        \ Application Load Balancer is not configured with defensive or strictest\
        \ desync mitigation mode."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-alb-desync-mode-check-6a28823c"
      Source:
        SourceIdentifier: "ALB_DESYNC_MODE_CHECK"
        Owner: "AWS"
      InputParameters:
        desyncMode: "defensive,strictest"
  ConfigConfigRule00securityhubopensearchencryptedatrestdb7ae92f00L9fDu:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether Amazon OpenSearch domains have encryption-at-rest\
        \ configuration enabled. The check fails if encryption at rest is not enabled."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-opensearch-encrypted-at-rest-db7ae92f"
      Source:
        SourceIdentifier: "OPENSEARCH_ENCRYPTED_AT_REST"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubecstaskdefinitionuserforhostmodecheck38e79fcb00niAdy:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks if an Amazon ECS Task Definition with host\
        \ networking mode has \"privileged\" or \"user\" container definitions. The\
        \ control fails with host network mode and container definitions are privileged=false\
        \ or empty and user=root or empty."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-ecs-task-definition-user-for-host-mode-check-38e79fcb"
      Source:
        SourceIdentifier: "ECS_TASK_DEFINITION_USER_FOR_HOST_MODE_CHECK"
        Owner: "AWS"
      InputParameters:
        SkipInactiveTaskDefinitions: "true"
  ConfigConfigRule00securityhubredshiftclusterkmsenabledad98b01f00zUZ4U:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if Amazon Redshift clusters are using a specified AWS Key\
        \ Management Service (AWS KMS) key for encryption."
      Scope:
        ComplianceResourceTypes:
        - "AWS::Redshift::Cluster"
      Compliance: {}
      ConfigRuleName: "securityhub-redshift-cluster-kms-enabled-ad98b01f"
      Source:
        SourceIdentifier: "REDSHIFT_CLUSTER_KMS_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubs3bucketlevelpublicaccessprohibited11abb84a00g7uRX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks if Amazon S3 buckets have bucket level public\
        \ access blocks applied. This control fails if any of the bucket level settings\
        \ are set to \"false\" public: ignorePublicAcls, blockPublicPolicy, blockPublicAcls,\
        \ restrictPublicBuckets."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-s3-bucket-level-public-access-prohibited-11abb84a"
      Source:
        SourceIdentifier: "S3_BUCKET_LEVEL_PUBLIC_ACCESS_PROHIBITED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubredshiftclusterauditloggingenableddf6b67270098Ni0:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether the Amazon Redshift cluster has audit\
        \ logging enabled."
      Scope:
        ComplianceResourceTypes:
        - "AWS::Redshift::Cluster"
      Compliance: {}
      ConfigRuleName: "securityhub-redshift-cluster-audit-logging-enabled-df6b6727"
      Source:
        SourceIdentifier: "arn:aws:lambda:ap-southeast-1:338458120468:function:SecurityHubConfigRule"
        SourceDetails:
        - EventSource: "aws.config"
          MessageType: "ConfigurationItemChangeNotification"
        Owner: "CUSTOM_LAMBDA"
      InputParameters:
        loggingEnabled: "true"
  ConfigConfigRule00securityhubkmscmknotscheduledfordeletion2a9418ef900xDMIr:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether AWS Key Management Service (KMS) customer\
        \ managed keys (CMK) are scheduled for deletion. The control fails if a KMS\
        \ CMK is scheduled for deletion."
      Scope:
        ComplianceResourceTypes:
        - "AWS::KMS::Key"
      Compliance: {}
      ConfigRuleName: "securityhub-kms-cmk-not-scheduled-for-deletion-2-a9418ef9"
      Source:
        SourceIdentifier: "arn:aws:lambda:ap-southeast-1:338458120468:function:SecurityHubConfigRule"
        SourceDetails:
        - EventSource: "aws.config"
          MessageType: "ConfigurationItemChangeNotification"
        Owner: "CUSTOM_LAMBDA"
      InputParameters: {}
  EC2NetworkInterface00eni03fe0ac31fc735c3100Wqrdb:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: ""
      PrivateIpAddress: "10.25.71.183"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.183"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-07fd500f946aad8a2"
      - "sg-0158898f4b43a0ae9"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00InZQf"
      SourceDestCheck: true
      InterfaceType: "interface"
      Tags: []
  CloudFrontOriginRequestPolicy0088a5eaf42fd44709b370b4c650ea3fcf00Ph1aa:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::CloudFront::OriginRequestPolicy"
    DeletionPolicy: "Retain"
    Properties:
      OriginRequestPolicyConfig:
        QueryStringsConfig:
          QueryStringBehavior: "none"
        Comment: "Policy for S3 origin with CORS"
        HeadersConfig:
          HeaderBehavior: "whitelist"
          Headers:
          - "origin"
          - "access-control-request-headers"
          - "access-control-request-method"
        CookiesConfig:
          CookieBehavior: "none"
        Name: "Managed-CORS-S3Origin"
  EC2Instance00i0e38931234673f67800yTOLG:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Instance"
    DeletionPolicy: "Retain"
    Properties:
      Tenancy: "default"
      SecurityGroups:
      - "GenAI-Pilot-cvpn-SG"
      - "GenAI-Pilot-Private-Tmicro-to-App"
      - "GenAI-Pilot-Private-Cvpn-to-App"
      PrivateIpAddress: "10.25.71.170"
      BlockDeviceMappings:
      - Ebs:
          SnapshotId: "snap-083334dfef8e3d924"
          VolumeType: "gp3"
          KmsKeyId:
            Fn::GetAtt:
            - "KMSKey00e0af6c3f73fc497e863a6754f0dce6b1005JjxP"
            - "Arn"
          Encrypted: true
          Iops: 3000
          VolumeSize: 100
          DeleteOnTermination: false
        DeviceName: "/dev/xvda"
      IamInstanceProfile:
        Ref: "IAMInstanceProfile00ec2adminaccess008Kbu6"
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00InZQf"
      EbsOptimized: true
      Volumes:
      - VolumeId: "vol-0107ba962d2a3a965"
        Device: "/dev/xvda"
      NetworkInterfaces:
      - PrivateIpAddresses:
        - PrivateIpAddress: "10.25.71.170"
          Primary: true
        SecondaryPrivateIpAddressCount: 0
        DeviceIndex: "0"
        GroupSet:
        - Ref: "EC2SecurityGroup00sg0a6c63d92a738a24c00vYP82"
        - Ref: "EC2SecurityGroup00sg07fd500f946aad8a200D738s"
        - Ref: "EC2SecurityGroup00sg0158898f4b43a0ae900SoA7y"
        Ipv6Addresses: []
        SubnetId:
          Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00InZQf"
        AssociatePublicIpAddress: false
        NetworkInterfaceId: "eni-03ebb21c83a16a055"
        DeleteOnTermination: true
      ImageId: "ami-08f49baa317796afd"
      InstanceType: "t3.xlarge"
      Monitoring: false
      Tags:
      - Value: "ec2-jumpserver-yenmay"
        Key: "Name"
      InstanceInitiatedShutdownBehavior: "stop"
      CpuOptions:
        ThreadsPerCore: 2
        CoreCount: 2
      AvailabilityZone: "ap-southeast-1b"
      PrivateDnsNameOptions:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      SecurityGroupIds:
      - "sg-0a6c63d92a738a24c"
      - "sg-07fd500f946aad8a2"
      - "sg-0158898f4b43a0ae9"
      DisableApiTermination: false
      KeyName: "yenmay-key"
      SourceDestCheck: true
      PlacementGroupName: ""
      VpcId: "vpc-02790342fee4ebf9f"
      State:
        Code: "80"
        Name: "stopped"
      CreditSpecification:
        CPUCredits: "standard"
  ConfigConfigRule00securityhubdmsendpointsslconfigured7874f9d7002zVZH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if AWS Database Migration Service (AWS DMS) endpoints are\
        \ configured with an SSL connection. The rule is NON_COMPLIANT if AWS DMS\
        \ does not have an SSL connection configured."
      Scope:
        ComplianceResourceTypes:
        - "AWS::DMS::Endpoint"
      Compliance: {}
      ConfigRuleName: "securityhub-dms-endpoint-ssl-configured-7874f9d7"
      Source:
        SourceIdentifier: "DMS_ENDPOINT_SSL_CONFIGURED"
        Owner: "AWS"
      InputParameters: {}
  CloudFrontCachePolicy00b2884449e4de46a7ac3670bc7f1ddd6d00AgjNB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::CloudFront::CachePolicy"
    DeletionPolicy: "Retain"
    Properties:
      CachePolicyConfig:
        Comment: "Default policy when compression is disabled"
        MinTTL: 1
        MaxTTL: 3.1536E7
        ParametersInCacheKeyAndForwardedToOrigin:
          QueryStringsConfig:
            QueryStringBehavior: "none"
          EnableAcceptEncodingBrotli: false
          HeadersConfig:
            HeaderBehavior: "none"
          CookiesConfig:
            CookieBehavior: "none"
          EnableAcceptEncodingGzip: false
        DefaultTTL: 86400
        Name: "Managed-CachingOptimizedForUncompressedObjects"
  ConfigConfigRule00securityhubdmsredistlsenabled06c65ffe00nLduX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if AWS Database Migration Service (AWS DMS) endpoints for\
        \ Redis data stores are enabled for TLS/SSL encryption of data communicated\
        \ with other endpoints. The rule is NON_COMPLIANT if TLS/SSL encryption is\
        \ not enabled."
      Scope:
        ComplianceResourceTypes:
        - "AWS::DMS::Endpoint"
      Compliance: {}
      ConfigRuleName: "securityhub-dms-redis-tls-enabled-06c65ffe"
      Source:
        SourceIdentifier: "DMS_REDIS_TLS_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ApiGatewayDeployment00riv7u700Djanr:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::Deployment"
    DeletionPolicy: "Retain"
    Properties:
      RestApiId:
        Ref: "ApiGatewayRestApi005nwb46kira00y5IhC"
  EC2NetworkInterface00eni0c66dedac91dbb82800SKZWV:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: ""
      PrivateIpAddress: "10.25.71.175"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.175"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-07fd500f946aad8a2"
      - "sg-0fd865e5bd1a64a07"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00InZQf"
      SourceDestCheck: true
      InterfaceType: "interface"
      Tags: []
  ConfigConfigRule00securityhubnetfwloggingenabled99150e94003QT9W:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if AWS Network Firewall firewalls have logging enabled.\
        \ The rule is NON_COMPLIANT if a logging type is not configured. You can specify\
        \ which logging type you want the rule to check."
      Scope:
        ComplianceResourceTypes:
        - "AWS::NetworkFirewall::LoggingConfiguration"
      Compliance: {}
      ConfigRuleName: "securityhub-netfw-logging-enabled-99150e94"
      Source:
        SourceIdentifier: "NETFW_LOGGING_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubautoscalinglaunchconfigrequiresimdsv26508c87100QUHDT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether only IMDSv2 is enabled. This control\
        \ fails if the Metadata version is not included in the launch configuration\
        \ or if both Metadata V1 and V2 are enabled."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-autoscaling-launchconfig-requires-imdsv2-6508c871"
      Source:
        SourceIdentifier: "AUTOSCALING_LAUNCHCONFIG_REQUIRES_IMDSV2"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubinspectorec2scanenabled29870c8100tTrz6:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if Amazon Inspector V2 EC2 scanning is activated for your\
        \ single or multi-account environment to detect potential vulnerabilities\
        \ and network reachability issues on your EC2 instances. The rule is NON_COMPLIANT\
        \ if EC2 scanning is not activated."
      Scope:
        ComplianceResourceTypes:
        - "AWS::::Account"
      Compliance: {}
      ConfigRuleName: "securityhub-inspector-ec2-scan-enabled-29870c81"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "INSPECTOR_EC2_SCAN_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubautoscalinglaunchconfigpublicipdisabled63fa136c00xaLDy:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether Amazon EC2 Auto Scaling groups have\
        \ public IP addresses enabled using launch configurations."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-autoscaling-launch-config-public-ip-disabled-63fa136c"
      Source:
        SourceIdentifier: "AUTOSCALING_LAUNCH_CONFIG_PUBLIC_IP_DISABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubvpcendpointenabledexecuteapi7f7dc5e500RsuP0:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if each service specified in the parameter has an Amazon\
        \ VPC endpoint. The rule is NON_COMPLIANT if Amazon VPC does not have a VPC\
        \ endpoint created for each specified service. Optionally, you can specify\
        \ certain VPCs for the rule to check."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::VPC"
        - "AWS::EC2::VPCEndpoint"
      Compliance: {}
      ConfigRuleName: "securityhub-vpc-endpoint-enabled-execute-api-7f7dc5e5"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "VPC_ENDPOINT_ENABLED"
        Owner: "AWS"
      InputParameters:
        serviceNames: "execute-api"
  EC2NetworkInterface00eni037d41ab5199db37e00CciTT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: ""
      PrivateIpAddress: "10.25.71.29"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.29"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-07fd500f946aad8a2"
      - "sg-09b2b11bee0d39e7a"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet0e7c29cffbb72373f0067i5u"
      SourceDestCheck: true
      InterfaceType: "interface"
      Tags: []
  CloudFrontCachePolicy000862726205a94f769dedb50ca2e3a84f00Qz7tg:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::CloudFront::CachePolicy"
    DeletionPolicy: "Retain"
    Properties:
      CachePolicyConfig:
        Comment: "Policy for Elemental MediaPackage Origin"
        MinTTL: 0
        MaxTTL: 3.1536E7
        ParametersInCacheKeyAndForwardedToOrigin:
          QueryStringsConfig:
            QueryStrings:
            - "aws.manifestfilter"
            - "start"
            - "end"
            - "m"
            QueryStringBehavior: "whitelist"
          EnableAcceptEncodingBrotli: false
          HeadersConfig:
            HeaderBehavior: "whitelist"
            Headers:
            - "origin"
          CookiesConfig:
            CookieBehavior: "none"
          EnableAcceptEncodingGzip: true
        DefaultTTL: 86400
        Name: "Managed-Elemental-MediaPackage"
  ConfigConfigRule00securityhubrdsauroramysqlauditloggingenabledc200fdfb00iiJ0X:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if Amazon Aurora MySQL-Compatible Edition clusters are\
        \ configured to publish audit logs to Amazon CloudWatch Logs. The rule is\
        \ NON_COMPLIANT if Aurora MySQL-Compatible Edition clusters do not have audit\
        \ log publishing configured."
      Scope:
        ComplianceResourceTypes:
        - "AWS::RDS::DBCluster"
      Compliance: {}
      ConfigRuleName: "securityhub-rds-aurora-mysql-audit-logging-enabled-c200fdfb"
      Source:
        SourceIdentifier: "RDS_AURORA_MYSQL_AUDIT_LOGGING_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  EC2Subnet00subnet026e7fd8d1e877dbb00InZQf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Subnet"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00AYnOQ"
      MapPublicIpOnLaunch: false
      EnableDns64: false
      AvailabilityZoneId: "apse1-az2"
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      CidrBlock: "10.25.71.160/27"
      Ipv6Native: false
      Tags:
      - Value: "GenAI-Dev-Application-Private-1b"
        Key: "Name"
  ConfigConfigRule00securityhubrdsaurorapostgresqllogstocloudwatcheab9323900RTg56:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if an Amazon Aurora PostgreSQL DB cluster is configured\
        \ to publish PostgreSQL logs to Amazon CloudWatch Logs. This rule is NON_COMPLIANT\
        \ if the DB cluster is not configured to publish PostgreSQL logs to Amazon\
        \ CloudWatch Logs."
      Scope:
        ComplianceResourceTypes:
        - "AWS::RDS::DBCluster"
      Compliance: {}
      ConfigRuleName: "securityhub-rds-aurora-postgresql-logs-to-cloudwatch-eab93239"
      Source:
        SourceIdentifier: "RDS_AURORA_POSTGRESQL_LOGS_TO_CLOUDWATCH"
        Owner: "AWS"
      InputParameters: {}
  CloudFrontCachePolicy002e54312d136d493c8eb9b001f22f67d200CU3SV:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::CloudFront::CachePolicy"
    DeletionPolicy: "Retain"
    Properties:
      CachePolicyConfig:
        Comment: "Policy for Amplify Origin"
        MinTTL: 2
        MaxTTL: 600
        ParametersInCacheKeyAndForwardedToOrigin:
          QueryStringsConfig:
            QueryStringBehavior: "all"
          EnableAcceptEncodingBrotli: true
          HeadersConfig:
            HeaderBehavior: "whitelist"
            Headers:
            - "Authorization"
            - "CloudFront-Viewer-Country"
            - "Host"
          CookiesConfig:
            CookieBehavior: "all"
          EnableAcceptEncodingGzip: true
        DefaultTTL: 2
        Name: "Managed-Amplify"
  EC2Instance00i0332276dc3494333e00eGMQN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Instance"
    DeletionPolicy: "Retain"
    Properties:
      Tenancy: "default"
      SecurityGroups:
      - "GenAI-Pilot-Private-Tmicro-to-App"
      - "launch-wizard-9"
      PrivateIpAddress: "10.25.71.29"
      UserData: "IyEvYmluL2Jhc2gKY2QgL3RtcApzdWRvIHl1bSBpbnN0YWxsIC15IGh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9lYzItZG93bmxvYWRzLXdpbmRvd3MvU1NNQWdlbnQvbGF0ZXN0L2xpbnV4X2FtZDY0L2FtYXpvbi1zc20tYWdlbnQucnBtCnN1ZG8gc3lzdGVtY3RsIGVuYWJsZSBhbWF6b24tc3NtLWFnZW50CnN1ZG8gc3lzdGVtY3RsIHN0YXJ0IGFtYXpvbi1zc20tYWdlbnQ="
      BlockDeviceMappings:
      - Ebs:
          SnapshotId: "snap-0d0d9f5db331ffa4b"
          VolumeType: "gp3"
          KmsKeyId:
            Fn::GetAtt:
            - "KMSKey00e0af6c3f73fc497e863a6754f0dce6b1005JjxP"
            - "Arn"
          Encrypted: true
          Iops: 3000
          VolumeSize: 8
          DeleteOnTermination: false
        DeviceName: "/dev/xvda"
      IamInstanceProfile:
        Ref: "IAMInstanceProfile00ec2adminaccess008Kbu6"
      SubnetId:
        Ref: "EC2Subnet00subnet0e7c29cffbb72373f0067i5u"
      EbsOptimized: false
      Volumes:
      - VolumeId: "vol-0057ef600adf6805f"
        Device: "/dev/xvda"
      NetworkInterfaces:
      - PrivateIpAddresses:
        - PrivateIpAddress: "10.25.71.29"
          Primary: true
        SecondaryPrivateIpAddressCount: 0
        DeviceIndex: "0"
        GroupSet:
        - Ref: "EC2SecurityGroup00sg07fd500f946aad8a200D738s"
        - Ref: "EC2SecurityGroup00sg09b2b11bee0d39e7a00OSMbJ"
        Ipv6Addresses: []
        SubnetId:
          Ref: "EC2Subnet00subnet0e7c29cffbb72373f0067i5u"
        AssociatePublicIpAddress: false
        NetworkInterfaceId:
          Ref: "EC2NetworkInterface00eni037d41ab5199db37e00CciTT"
        DeleteOnTermination: true
      ImageId: "ami-0ef1a6822965893ba"
      InstanceType: "t2.micro"
      Monitoring: false
      Tags:
      - Value: "test-tapo-1"
        Key: "Name"
      InstanceInitiatedShutdownBehavior: "stop"
      CpuOptions:
        ThreadsPerCore: 1
        CoreCount: 1
      AvailabilityZone: "ap-southeast-1b"
      PrivateDnsNameOptions:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      SecurityGroupIds:
      - "sg-07fd500f946aad8a2"
      - "sg-09b2b11bee0d39e7a"
      DisableApiTermination: false
      KeyName: "test-tapo-1"
      SourceDestCheck: true
      PlacementGroupName: ""
      VpcId: "vpc-02790342fee4ebf9f"
      State:
        Code: "80"
        Name: "stopped"
      CreditSpecification:
        CPUCredits: "standard"
  ConfigConfigRule00securityhubwafregionalrulenotemptyc11adfa700lot63:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks if WAF regional rule contains conditions.\
        \ This control fails if the regional rule does not contain atleast one condition."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-waf-regional-rule-not-empty-c11adfa7"
      Source:
        SourceIdentifier: "WAF_REGIONAL_RULE_NOT_EMPTY"
        Owner: "AWS"
      InputParameters: {}
  EC2KeyPair00pilotharithec200L8MB2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::KeyPair"
    DeletionPolicy: "Retain"
    Properties:
      KeyName: "pilot-harith-ec2"
      KeyType: "rsa"
      PublicKeyMaterial: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCW/lxBZ8tlpmZeBmtys9m/IvzvMJSPlQUrpJL9ptgLRawVrzxPM7fMPSYccYGd8ZzjZwwD/Cqu3OsJnhaoh0RmaV+c6QCciU8ge1okJVPE9j484RsI7oWSzMBJeCAY6geUBLdGaeAFWQpK8ihV252XOXAXErmYU8t3UEq1J+nTtQRCCpsrXSehZfjGmHAUwtKPGTTMn7EGGLsOJgF/BcxetZbMs88G8bOOELDSTYT6Pe5sTEA5VR6exBrBNHIfLRkIuKm18HM9xkDO5a6vgQM0iE3rrS0g3tM83Md+M7s3Iw+h7tUa21TJjTN3mjJNyrMBC6cPmCKpcVSp7cd6YF9n\
        \ pilot-harith-ec2\n"
      Tags: []
  ConfigConfigRule00securityhubiamuserunusedcredentialscheckf9bcf658002Qpzq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether your IAM users have passwords or active\
        \ access keys that were not used within the previous 90 days."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-iam-user-unused-credentials-check-f9bcf658"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "IAM_USER_UNUSED_CREDENTIALS_CHECK"
        Owner: "AWS"
      InputParameters:
        maxCredentialUsageAge: "90"
  ConfigConfigRule00securityhubdocdbclusterencrypteda857566700oCIpA:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if storage encryption is enabled for your Amazon DocumentDB\
        \ DB clusters. The rule is NON_COMPLIANT if storage encryption is not enabled."
      Scope:
        ComplianceResourceTypes:
        - "AWS::RDS::DBCluster"
      Compliance: {}
      ConfigRuleName: "securityhub-docdb-cluster-encrypted-a8575667"
      Source:
        SourceIdentifier: "DOCDB_CLUSTER_ENCRYPTED"
        Owner: "AWS"
      InputParameters: {}
  ApiGatewayDeployment00ebdz6k00HzZS4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::Deployment"
    DeletionPolicy: "Retain"
    Properties:
      RestApiId:
        Ref: "ApiGatewayRestApi005nwb46kira00y5IhC"
  ApiGatewayDeployment00zrnnho00FjV1e:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::Deployment"
    DeletionPolicy: "Retain"
    Properties:
      RestApiId:
        Ref: "ApiGatewayRestApi005nwb46kira00y5IhC"
  EC2NetworkAcl00acl0035712838ecf942d00iFvOh:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkAcl"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00AYnOQ"
      Tags:
      - Value: "GenAI-Pilot-ECS-acl"
        Key: "Name"
  EC2SecurityGroup00sg0158898f4b43a0ae900SoA7y:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "For developer cli access to servers"
      GroupName: "GenAI-Pilot-Private-Cvpn-to-App"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00AYnOQ"
      SecurityGroupIngress:
      - IpProtocol: "tcp"
        FromPort: 22
        SourceSecurityGroupId: "sg-0a6c63d92a738a24c"
        ToPort: 22
        SourceSecurityGroupOwnerId: "343218203122"
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "icmp"
        FromPort: -1
        ToPort: -1
      - IpProtocol: "icmp"
        FromPort: -1
        SourceSecurityGroupId: "sg-0a6c63d92a738a24c"
        ToPort: -1
        SourceSecurityGroupOwnerId: "343218203122"
      SecurityGroupEgress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
      Tags:
      - Value: "GenAI-Pilot-Private-Cvpn-to-App"
        Key: "Name"
  ConfigConfigRule00securityhubwafregionalwebaclnotemptyfb9a0d6200HIwuP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether WAF regional Web ACL contains any\
        \ WAF rules or rule groups. This control fails if if there are no WAF rules\
        \ or rule groups present within a Web ACL."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-waf-regional-webacl-not-empty-fb9a0d62"
      Source:
        SourceIdentifier: "WAF_REGIONAL_WEBACL_NOT_EMPTY"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubdocdbclusterbackupretentioncheck109bd87a004JD8L:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if an Amazon Document DB cluster retention period is set\
        \ to a specific number of days. The rule is NON_COMPLIANT if the retention\
        \ period is less than the value specified by the parameter."
      Scope:
        ComplianceResourceTypes:
        - "AWS::RDS::DBCluster"
      Compliance: {}
      ConfigRuleName: "securityhub-docdb-cluster-backup-retention-check-109bd87a"
      Source:
        SourceIdentifier: "DOCDB_CLUSTER_BACKUP_RETENTION_CHECK"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubautoscalinglaunchtemplate0c638fd200mS8al:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether an Amazon EC2 Auto Scaling group is\
        \ created from an EC2 launch template."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-autoscaling-launch-template-0c638fd2"
      Source:
        SourceIdentifier: "AUTOSCALING_LAUNCH_TEMPLATE"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubelbdeletionprotectionenabled65b1ff8b00kootX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether Elastic Load Balancing has deletion protection\
        \ enabled. The rule is NON_COMPLIANT if deletion_protection.enabled is false."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-elb-deletion-protection-enabled-65b1ff8b"
      Source:
        SourceIdentifier: "ELB_DELETION_PROTECTION_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  EC2SecurityGroup00sg07fd500f946aad8a200D738s:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "For Deep Security scan by CSD-STU"
      GroupName: "GenAI-Pilot-Private-Tmicro-to-App"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00AYnOQ"
      SecurityGroupIngress:
      - CidrIp: "192.168.228.101/32"
        IpProtocol: "tcp"
        FromPort: 4122
        ToPort: 4122
      - CidrIp: "192.168.128.101/32"
        IpProtocol: "tcp"
        FromPort: 4122
        ToPort: 4122
      - CidrIp: "192.168.228.101/32"
        IpProtocol: "tcp"
        FromPort: 4120
        ToPort: 4120
      - CidrIp: "192.168.128.101/32"
        IpProtocol: "tcp"
        FromPort: 4120
        ToPort: 4120
      - CidrIp: "192.168.128.101/32"
        IpProtocol: "tcp"
        FromPort: 4118
        ToPort: 4118
      - CidrIp: "192.168.128.102/32"
        IpProtocol: "tcp"
        FromPort: 4118
        ToPort: 4118
      - CidrIp: "192.168.228.101/32"
        IpProtocol: "tcp"
        FromPort: 4118
        ToPort: 4118
      - CidrIp: "192.168.228.101/32"
        IpProtocol: "tcp"
        FromPort: 443
        ToPort: 443
      - CidrIp: "192.168.128.101/32"
        IpProtocol: "tcp"
        FromPort: 443
        ToPort: 443
      SecurityGroupEgress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
  EC2Instance00i056aa8a8a3a7d744000bdkQM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Instance"
    DeletionPolicy: "Retain"
    Properties:
      Tenancy: "default"
      SecurityGroups:
      - "GenAI-Pilot-Private-Tmicro-to-App"
      - "GenAI-Pilot-Private-Cvpn-to-App"
      PrivateIpAddress: "10.25.71.183"
      BlockDeviceMappings:
      - Ebs:
          SnapshotId: "snap-06269d3b382c49703"
          VolumeType: "gp3"
          KmsKeyId:
            Fn::GetAtt:
            - "KMSKey00e0af6c3f73fc497e863a6754f0dce6b1005JjxP"
            - "Arn"
          Encrypted: true
          Iops: 3000
          VolumeSize: 10
          DeleteOnTermination: true
        DeviceName: "/dev/sda1"
      IamInstanceProfile:
        Ref: "IAMInstanceProfile00ec2adminaccess008Kbu6"
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00InZQf"
      EbsOptimized: true
      Volumes:
      - VolumeId: "vol-025bc069a9af78b0f"
        Device: "/dev/sda1"
      NetworkInterfaces:
      - PrivateIpAddresses:
        - PrivateIpAddress: "10.25.71.183"
          Primary: true
        SecondaryPrivateIpAddressCount: 0
        DeviceIndex: "0"
        GroupSet:
        - Ref: "EC2SecurityGroup00sg07fd500f946aad8a200D738s"
        - Ref: "EC2SecurityGroup00sg0158898f4b43a0ae900SoA7y"
        Ipv6Addresses: []
        SubnetId:
          Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00InZQf"
        AssociatePublicIpAddress: false
        NetworkInterfaceId:
          Ref: "EC2NetworkInterface00eni03fe0ac31fc735c3100Wqrdb"
        DeleteOnTermination: true
      ImageId: "ami-04b8810eb11008260"
      InstanceType: "t3.xlarge"
      Monitoring: false
      Tags:
      - Value: "ec2-jumpserver-jiahueic"
        Key: "Name"
      InstanceInitiatedShutdownBehavior: "stop"
      CpuOptions:
        ThreadsPerCore: 2
        CoreCount: 2
      AvailabilityZone: "ap-southeast-1b"
      PrivateDnsNameOptions:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      SecurityGroupIds:
      - "sg-07fd500f946aad8a2"
      - "sg-0158898f4b43a0ae9"
      DisableApiTermination: false
      KeyName: "jiahueic-key"
      SourceDestCheck: true
      PlacementGroupName: ""
      VpcId: "vpc-02790342fee4ebf9f"
      State:
        Code: "80"
        Name: "stopped"
      CreditSpecification:
        CPUCredits: "unlimited"
  ConfigConfigRule00securityhubredshiftrequiretlsssl5149d02800M3ALf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether Amazon Redshift clusters require TLS/SSL encryption\
        \ to connect to SQL clients. The rule is NON_COMPLIANT if any Amazon Redshift\
        \ cluster has parameter require_SSL not set to true."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-redshift-require-tls-ssl-5149d028"
      Source:
        SourceIdentifier: "REDSHIFT_REQUIRE_TLS_SSL"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubopensearchlogstocloudwatchc57a08a900qg0P5:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether Amazon OpenSearch domains are configured\
        \ to send error logs to CloudWatch Logs. This control fails if error logging\
        \ to CloudWatch is not enabled for a domain."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-opensearch-logs-to-cloudwatch-c57a08a9"
      Source:
        SourceIdentifier: "OPENSEARCH_LOGS_TO_CLOUDWATCH"
        Owner: "AWS"
      InputParameters:
        logTypes: "error"
  ConfigConfigRule00securityhubrdsinstancepublicaccesscheck2f9b59fa00ucetW:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Check whether the Amazon Relational Database Service instances\
        \ are not publicly accessible."
      Scope:
        ComplianceResourceTypes:
        - "AWS::RDS::DBInstance"
      Compliance: {}
      ConfigRuleName: "securityhub-rds-instance-public-access-check-2f9b59fa"
      Source:
        SourceIdentifier: "RDS_INSTANCE_PUBLIC_ACCESS_CHECK"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubopensearchinvpconly9af6842a00qEbso:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks Amazon OpenSearch Service domains are in an\
        \ Amazon Virtual Private Cloud (VPC)."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-opensearch-in-vpc-only-9af6842a"
      Source:
        SourceIdentifier: "OPENSEARCH_IN_VPC_ONLY"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubvpcendpointenabledssmdccd0aec009jXfA:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if each service specified in the parameter has an Amazon\
        \ VPC endpoint. The rule is NON_COMPLIANT if Amazon VPC does not have a VPC\
        \ endpoint created for each specified service. Optionally, you can specify\
        \ certain VPCs for the rule to check."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::VPC"
        - "AWS::EC2::VPCEndpoint"
      Compliance: {}
      ConfigRuleName: "securityhub-vpc-endpoint-enabled-ssm-dccd0aec"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "VPC_ENDPOINT_ENABLED"
        Owner: "AWS"
      InputParameters:
        serviceNames: "ssm"
  ConfigConfigRule00securityhubstepfunctionsstatemachineloggingenabled2fd059e300f7FTD:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if AWS Step Functions machine has logging enabled. The\
        \ rule is NON_COMPLIANT if a state machine does not have logging enabled or\
        \ the logging configuration is not at the minimum level provided."
      Scope:
        ComplianceResourceTypes:
        - "AWS::StepFunctions::StateMachine"
      Compliance: {}
      ConfigRuleName: "securityhub-step-functions-state-machine-logging-enabled-2fd059e3"
      Source:
        SourceIdentifier: "STEP_FUNCTIONS_STATE_MACHINE_LOGGING_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubnaclnounrestrictedsshrdp4544c24300n6G6g:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks if default ports for SSH/RDP ingress traffic\
        \ for network access control lists (NACLs) is unrestricted. The rule fails\
        \ if a NACL inbound entry allows a source CIDR block of '0.0.0.0/0' or '::/0'\
        \ for ports 22 or 3389"
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-nacl-no-unrestricted-ssh-rdp-4544c243"
      Source:
        SourceIdentifier: "NACL_NO_UNRESTRICTED_SSH_RDP"
        Owner: "AWS"
      InputParameters: {}
  EC2KeyPair00rebekahpublicec200qpyGM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::KeyPair"
    DeletionPolicy: "Retain"
    Properties:
      KeyName: "rebekah-public-ec2"
      KeyType: "rsa"
      PublicKeyMaterial: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC2u/Yi07JcusNHwgf5gmNCvz/Xa2U5jvUDKNp7Wq3ghyhn2yF/kPl4+Gy1qxriaxi0zevCGfEdw9ppsT+7HRB1rpwIpiFXXenLjy46+tmUcA1vva3iS37Xvzm334VwsHEz1/i1xdv+HCbZNkKPVCAe3X3xjRtRjcJH7k4r9GwgS+VHlA4bsCrT56FtGxC2aAcGXFUFwRbpGCgzCb02lz7OBTc4BiN0F0oWK998HRnxmFzQn+I/stynRi9QBSlfLcRZA2inbTaqipJi2C7ebvodJkHXHUSFnvsUuVLX+1Bkt7OobE2Qa5vlt2M2M9tjIsoyk701LND5HDTpL6MoZU93\
        \ rebekah-public-ec2\n"
      Tags: []
  ConfigConfigRule00securityhubrdspgeventnotificationsconfigured1d5ddeef006QjuE:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether an Amazon RDS Event subscription for\
        \ RDS parameter groups is configured to notify on event category of \"configuration\
        \ change\"."
      Scope:
        ComplianceResourceTypes:
        - "AWS::RDS::EventSubscription"
      Compliance: {}
      ConfigRuleName: "securityhub-rds-pg-event-notifications-configured-1d5ddeef"
      Source:
        SourceIdentifier: "arn:aws:lambda:ap-southeast-1:338458120468:function:SecurityHubConfigRule"
        SourceDetails:
        - EventSource: "aws.config"
          MessageType: "ConfigurationItemChangeNotification"
        Owner: "CUSTOM_LAMBDA"
      InputParameters: {}
  ConfigConfigRule00securityhubopensearchauditloggingenabled2f6571cd00i3pei:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether Amazon OpenSearch Service domains\
        \ have audit logging enabled."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-opensearch-audit-logging-enabled-2f6571cd"
      Source:
        SourceIdentifier: "OPENSEARCH_AUDIT_LOGGING_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubredshiftbackupenabledc8da98ed00dCHz2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks that Amazon Redshift automated snapshots are enabled for\
        \ clusters. The rule is NON_COMPLIANT if the value for automatedSnapshotRetentionPeriod\
        \ is greater than MaxRetentionPeriod or less than MinRetentionPeriod or the\
        \ value is 0."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-redshift-backup-enabled-c8da98ed"
      Source:
        SourceIdentifier: "REDSHIFT_BACKUP_ENABLED"
        Owner: "AWS"
      InputParameters:
        MinRetentionPeriod: "7"
  ConfigConfigRule00securityhubrdsclustercopytagstosnapshotsenabled952573b500BiFFN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether RDS DB clusters are configured to\
        \ copy all tags to snapshots when the snapshots are created."
      Scope:
        ComplianceResourceTypes:
        - "AWS::RDS::DBCluster"
      Compliance: {}
      ConfigRuleName: "securityhub-rds-cluster-copy-tags-to-snapshots-enabled-952573b5"
      Source:
        SourceIdentifier: "arn:aws:lambda:ap-southeast-1:338458120468:function:SecurityHubConfigRule"
        SourceDetails:
        - EventSource: "aws.config"
          MessageType: "ConfigurationItemChangeNotification"
        Owner: "CUSTOM_LAMBDA"
      InputParameters:
        version: "1.1"
  ConfigConfigRule00securityhubmacieautosensitivedatadiscoverycheckc3ee40b500zY4Aw:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if automated sensitive data discovery is enabled for Amazon\
        \ Macie. The rule is NON_COMPLIANT if automated sensitive data discovery is\
        \ disabled. The rule is APPLICABLE for administrator accounts and NOT_APPLICABLE\
        \ for member accounts."
      Scope:
        ComplianceResourceTypes:
        - "AWS::::Account"
      Compliance: {}
      ConfigRuleName: "securityhub-macie-auto-sensitive-data-discovery-check-c3ee40b5"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "MACIE_AUTO_SENSITIVE_DATA_DISCOVERY_CHECK"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubrdsloggingenabledff6ab5b400eH51G:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks that respective logs of Amazon Relational Database Service\
        \ (Amazon RDS) are enabled. The rule is NON_COMPLIANT if any log types are\
        \ not enabled."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-rds-logging-enabled-ff6ab5b4"
      Source:
        SourceIdentifier: "RDS_LOGGING_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubecrprivateimagescanningenabled4d41750f00Tu6sg:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether a private ECR repository has image\
        \ scanning enabled. This control fails if a private ECR repository has image\
        \ scanning disabled."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-ecr-private-image-scanning-enabled-4d41750f"
      Source:
        SourceIdentifier: "ECR_PRIVATE_IMAGE_SCANNING_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubvpcdefaultsecuritygroupclosed15fceadb00RQtw3:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether the default security group for VPC is closed."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::SecurityGroup"
      Compliance: {}
      ConfigRuleName: "securityhub-vpc-default-security-group-closed-15fceadb"
      Source:
        SourceIdentifier: "VPC_DEFAULT_SECURITY_GROUP_CLOSED"
        Owner: "AWS"
      InputParameters: {}
  EC2SecurityGroup00sg07401c0c33946a24100sFB7U:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "Allows access to websocket server hosted in EC2 through port\
        \ 8000"
      GroupName: "WebsocketServerSecurityGroup"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00AYnOQ"
      SecurityGroupIngress:
      - CidrIp: "211.25.63.2/32"
        IpProtocol: "tcp"
        FromPort: 8000
        ToPort: 8000
      - CidrIp: "10.25.71.180/32"
        IpProtocol: "tcp"
        FromPort: 8000
        ToPort: 8000
      SecurityGroupEgress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
  ConfigConfigRule00securityhubs3lifecyclepolicycheckf2fc5e5b00yA1Fl:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks if a lifecycle policy is configured for an\
        \ Amazon S3 bucket. This control fails if the lifecycle policy is not configured\
        \ for an Amazon S3 bucket."
      Scope:
        ComplianceResourceTypes:
        - "AWS::S3::Bucket"
      Compliance: {}
      ConfigRuleName: "securityhub-s3-lifecycle-policy-check-f2fc5e5b"
      Source:
        SourceIdentifier: "S3_LIFECYCLE_POLICY_CHECK"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubopensearchhttpsrequired4e74312800VtQfK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether connections to OpenSearch domains are using HTTPS.\
        \ The rule is NON_COMPLIANT if the Amazon OpenSearch domain 'EnforceHTTPS'\
        \ is not 'true' or is 'true' and 'TLSSecurityPolicy' is not in 'tlsPolicies'."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-opensearch-https-required-4e743128"
      Source:
        SourceIdentifier: "OPENSEARCH_HTTPS_REQUIRED"
        Owner: "AWS"
      InputParameters:
        tlsPolicies: "Policy-Min-TLS-1-2-PFS-2023-10"
  ConfigConfigRule00securityhubiamusernopoliciescheck6f8d284500kPhrM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks that none of your IAM users have policies attached. IAM\
        \ users must inherit permissions from IAM groups or roles."
      Scope:
        ComplianceResourceTypes:
        - "AWS::IAM::User"
      Compliance: {}
      ConfigRuleName: "securityhub-iam-user-no-policies-check-6f8d2845"
      Source:
        SourceIdentifier: "IAM_USER_NO_POLICIES_CHECK"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubelbconnectiondrainingenabled8289bc7f00KfIQi:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether AWS Classic Load Balancers have connection\
        \ draining enabled."
      Scope:
        ComplianceResourceTypes:
        - "AWS::ElasticLoadBalancing::LoadBalancer"
      Compliance: {}
      ConfigRuleName: "securityhub-elb-connection-draining-enabled-8289bc7f"
      Source:
        SourceIdentifier: "arn:aws:lambda:ap-southeast-1:338458120468:function:SecurityHubConfigRule"
        SourceDetails:
        - EventSource: "aws.config"
          MessageType: "ConfigurationItemChangeNotification"
        Owner: "CUSTOM_LAMBDA"
      InputParameters: {}
  ConfigConfigRule00securityhubssmdocumentnotpublic57c7c45f00lJzZs:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether AWS Systems Manager documents that\
        \ the account owns are public. This control fails if SSM documents that have\
        \ \"Self\" as the owner are public."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-ssm-document-not-public-57c7c45f"
      Source:
        SourceIdentifier: "SSM_DOCUMENT_NOT_PUBLIC"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubrdsinstancedefaultadmincheckde174a18003hAvp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether an Amazon RDS database instance has\
        \ changed the admin username from its default value. This rule will only run\
        \ on RDS database instances. The rule will fail if the admin username is set\
        \ to the default value."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-rds-instance-default-admin-check-de174a18"
      Source:
        SourceIdentifier: "RDS_INSTANCE_DEFAULT_ADMIN_CHECK"
        Owner: "AWS"
      InputParameters: {}
  ApiGatewayDeployment00i0s0jj00eoR9L:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::Deployment"
    DeletionPolicy: "Retain"
    Properties:
      RestApiId:
        Ref: "ApiGatewayRestApi005nwb46kira00y5IhC"
  ConfigConfigRule00securityhubbackuprecoverypointencrypted9e81a15800puyCq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if a recovery point is encrypted. The rule is NON_COMPLIANT\
        \ if the recovery point is not encrypted."
      Scope:
        ComplianceResourceTypes:
        - "AWS::Backup::RecoveryPoint"
      Compliance: {}
      ConfigRuleName: "securityhub-backup-recovery-point-encrypted-9e81a158"
      Source:
        SourceIdentifier: "BACKUP_RECOVERY_POINT_ENCRYPTED"
        Owner: "AWS"
      InputParameters: {}
  LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00r9ZEO:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/vpc/GenAI-Pilot-VPC-Flow-Log"
      DataProtectionPolicy: {}
  ConfigConfigRule00securityhubsecretsmanagerscheduledrotationsuccesscheck4364bbc400G7PkX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks and verifies whether AWS Secrets Manager secret rotation\
        \ has rotated successfully as per the rotation schedule. The rule is NON_COMPLIANT\
        \ if RotationOccurringAsScheduled is false."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-secretsmanager-scheduled-rotation-success-check-4364bbc4"
      Source:
        SourceIdentifier: "SECRETSMANAGER_SCHEDULED_ROTATION_SUCCESS_CHECK"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubelasticsearchnodetonodeencryptionchecka30262d0006CAo0:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Check that Elasticsearch nodes are encrypted end to end. The rule\
        \ is NON_COMPLIANT if the node-to-node encryption is disabled on the domain."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-elasticsearch-node-to-node-encryption-check-a30262d0"
      Source:
        SourceIdentifier: "ELASTICSEARCH_NODE_TO_NODE_ENCRYPTION_CHECK"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubecrprivatetagimmutabilityenabledfbce559a00LDfVr:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether a private ECR repository has tag immutability\
        \ enabled. This control fails if a private ECR repository has tag immutability\
        \ disabled."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-ecr-private-tag-immutability-enabled-fbce559a"
      Source:
        SourceIdentifier: "ECR_PRIVATE_TAG_IMMUTABILITY_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ApiGatewayRestApi005nwb46kira00y5IhC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::RestApi"
    DeletionPolicy: "Retain"
    Properties:
      Policy: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"\
        Principal\":\"*\",\"Action\":\"execute-api:Invoke\",\"Resource\":\"arn:aws:execute-api:ap-southeast-1:343218203122:5nwb46kira/*\"\
        }]}"
      ApiKeySourceType: "HEADER"
      EndpointConfiguration:
        Types:
        - "PRIVATE"
        VpcEndpointIds:
        - Ref: "EC2VPCEndpoint00vpce08984f3f8624c01e100zt677"
      DisableExecuteApiEndpoint: false
      Name: "GenAI-Pilot-APIGateway-Private"
  ConfigConfigRule00securityhubneptuneclustersnapshotpublicprohibited8d1c077900m2sVX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if an Amazon Neptune manual DB cluster snapshot is public.\
        \ The rule is NON_COMPLIANT if any existing or new Neptune cluster snapshot\
        \ is public."
      Scope:
        ComplianceResourceTypes:
        - "AWS::RDS::DBClusterSnapshot"
      Compliance: {}
      ConfigRuleName: "securityhub-neptune-cluster-snapshot-public-prohibited-8d1c0779"
      Source:
        SourceIdentifier: "NEPTUNE_CLUSTER_SNAPSHOT_PUBLIC_PROHIBITED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubauroramysqlbacktrackingenableddcb7cf0100oawSx:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks if Amazon Aurora clusters have backtracking\
        \ enabled."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-aurora-mysql-backtracking-enabled-dcb7cf01"
      Source:
        SourceIdentifier: "AURORA_MYSQL_BACKTRACKING_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubvpcsgrestrictedcommonportsa9534bf600WbsDA:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether the security groups in use do not allow unrestricted\
        \ incoming TCP traffic to the specified ports. The rule is NON_COMPLIANT if\
        \ a security group allows inbound traffic from 0.0.0.0/0 or ::/0 to the specified\
        \ ports."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::SecurityGroup"
      Compliance: {}
      ConfigRuleName: "securityhub-vpc-sg-restricted-common-ports-a9534bf6"
      Source:
        SourceIdentifier: "RESTRICTED_INCOMING_TRAFFIC"
        Owner: "AWS"
      InputParameters:
        blockedPorts: "20,21,22,23,25,110,135,143,445,1433,1434,3000,3306,3389,4333,5000,5432,5500,5601,8080,8088,8888,9200,9300"
  ConfigConfigRule00securityhubsagemakernotebookinstanceinsidevpc073edbd900BlD6t:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if an Amazon SageMaker notebook instance is launched within\
        \ a VPC or within a list of approved subnets. The rule is NON_COMPLIANT if\
        \ a notebook instance is not launched within a VPC or if its subnet ID is\
        \ not included in the parameter list."
      Scope:
        ComplianceResourceTypes:
        - "AWS::SageMaker::NotebookInstance"
      Compliance: {}
      ConfigRuleName: "securityhub-sagemaker-notebook-instance-inside-vpc-073edbd9"
      Source:
        SourceIdentifier: "SAGEMAKER_NOTEBOOK_INSTANCE_INSIDE_VPC"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubnetfwpolicyrulegroupassociated24b2344d00nJALR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether there are any stateful or stateless\
        \ rule groups associated with a given firewall policy. The control fails if\
        \ no stateful or stateless rule groups are assigned."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-netfw-policy-rule-group-associated-24b2344d"
      Source:
        SourceIdentifier: "NETFW_POLICY_RULE_GROUP_ASSOCIATED"
        Owner: "AWS"
      InputParameters: {}
  EC2Volume00vol045cae6da6d093ba700RsA6i:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Volume"
    DeletionPolicy: "Retain"
    Properties:
      MultiAttachEnabled: false
      SnapshotId: "snap-01b44a4dc94c94fda"
      VolumeType: "gp3"
      KmsKeyId: "arn:aws:kms:ap-southeast-1:343218203122:key/e0af6c3f-73fc-497e-863a-6754f0dce6b1"
      Encrypted: true
      Size: 20
      AutoEnableIO: true
      AvailabilityZone: "ap-southeast-1b"
      Throughput: 125
      Iops: 3000
      Tags:
      - Value: "shengkwan-jumpserver-EBS"
        Key: "Name"
  EC2KeyPair00skec2private00adipO:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::KeyPair"
    DeletionPolicy: "Retain"
    Properties:
      KeyName: "sk-ec2-private"
      KeyType: "rsa"
      PublicKeyMaterial: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCFiptuazFHzTQIz7b7rG7IxRtSD6ZyaDB99hyg3Me1p8mKn4EE/vpcjEydy90DN4U+DoBZRqKKGl5AjofzcLjQnhA/JODX4wazALUXVHPuSIKoVXbCLt/B5Ig3WGoQPTJa25GvrPRrKH4a/kucZ+mOFgYNMMlEVJbMgR17i0WpriQx9h2IACL4lIcxRpBGl4XVGVmX/uCgwt0NB5XH8HRaFy9Ib58N+98NKcABi2Dxrkk2+styToovgiyfNbl0xkyjwRi6nK6KCiBKtwnCrwiZ3IQC0YHQ3Gz0dG8oSEQgLu3PdFPOiCmZIMRIZ0qnbc+MuoKvjqDfx2icnnbm4USz\
        \ sk-ec2-private\n"
      Tags: []
  ConfigConfigRule00securityhubsubnetautoassignpublicipdisabled46577d8000YXnZK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if Amazon Virtual Private Cloud (Amazon VPC) subnets are\
        \ assigned a public IP address. This rule is NON_COMPLIANT if Amazon VPC has\
        \ subnets that are assigned a public IP address."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-subnet-auto-assign-public-ip-disabled-46577d80"
      Source:
        SourceIdentifier: "SUBNET_AUTO_ASSIGN_PUBLIC_IP_DISABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubneptuneclusteriamdatabaseauthenticationb9913ce000Jnwki:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if an Amazon Neptune DB cluster has AWS Identity and Access\
        \ Management (IAM) database authentication enabled. The rule is NON_COMPLIANT\
        \ if an Amazon Neptune DB cluster does not have IAM database authentication\
        \ enabled."
      Scope:
        ComplianceResourceTypes:
        - "AWS::RDS::DBCluster"
      Compliance: {}
      ConfigRuleName: "securityhub-neptune-cluster-iam-database-authentication-b9913ce0"
      Source:
        SourceIdentifier: "NEPTUNE_CLUSTER_IAM_DATABASE_AUTHENTICATION"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubmaciestatuschecka8517ee700dk7xA:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if Amazon Macie is enabled in your account per region.\
        \ The rule is NON_COMPLIANT if the 'status' attribute is not set to 'ENABLED'."
      Scope:
        ComplianceResourceTypes:
        - "AWS::::Account"
      Compliance: {}
      ConfigRuleName: "securityhub-macie-status-check-a8517ee7"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "MACIE_STATUS_CHECK"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubvpcendpointenabledecs15ee2eda00oI3q1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if each service specified in the parameter has an Amazon\
        \ VPC endpoint. The rule is NON_COMPLIANT if Amazon VPC does not have a VPC\
        \ endpoint created for each specified service. Optionally, you can specify\
        \ certain VPCs for the rule to check."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::VPC"
        - "AWS::EC2::VPCEndpoint"
      Compliance: {}
      ConfigRuleName: "securityhub-vpc-endpoint-enabled-ecs-15ee2eda"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "VPC_ENDPOINT_ENABLED"
        Owner: "AWS"
      InputParameters:
        serviceNames: "ecs"
  ConfigConfigRule00securityhubecstasksetassignpublicipdisabledc9e9555300yBGXh:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if ECS Taskset does not allow inbound connection to the\
        \ resource. The rule is NON_COMPLIANT if ECS Taskset allows inbound connection\
        \ to the resource."
      Scope:
        ComplianceResourceTypes:
        - "AWS::ECS::TaskSet"
      Compliance: {}
      ConfigRuleName: "securityhub-ecs-taskset-assign-public-ip-disabled-c9e95553"
      Source:
        SourceIdentifier: "arn:aws:lambda:ap-southeast-1:338458120468:function:SecurityHubConfigRule"
        SourceDetails:
        - EventSource: "aws.config"
          MessageType: "ConfigurationItemChangeNotification"
        Owner: "CUSTOM_LAMBDA"
      InputParameters: {}
  ConfigConfigRule00securityhubredshiftclustermaintenancesettingscheck4a3b718a00kts4s:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether Amazon Redshift clusters have the specified maintenance\
        \ settings."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-redshift-cluster-maintenancesettings-check-4a3b718a"
      Source:
        SourceIdentifier: "REDSHIFT_CLUSTER_MAINTENANCESETTINGS_CHECK"
        Owner: "AWS"
      InputParameters:
        allowVersionUpgrade: "true"
  EC2Volume00vol025bc069a9af78b0f00DrBUT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Volume"
    DeletionPolicy: "Retain"
    Properties:
      MultiAttachEnabled: false
      SnapshotId: "snap-06269d3b382c49703"
      VolumeType: "gp3"
      KmsKeyId: "arn:aws:kms:ap-southeast-1:343218203122:key/e0af6c3f-73fc-497e-863a-6754f0dce6b1"
      Encrypted: true
      Size: 10
      AutoEnableIO: true
      AvailabilityZone: "ap-southeast-1b"
      Throughput: 125
      Iops: 3000
      Tags: []
  EC2DHCPOptions00dopt04b52e307ae8973a200HWJGf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::DHCPOptions"
    DeletionPolicy: "Retain"
    Properties:
      DomainName: "ap-southeast-1.compute.internal"
      DomainNameServers:
      - "AmazonProvidedDNS"
      Tags: []
  ConfigConfigRule00securityhubmultiregioncloudtrailenabledca70c18500Jw8lz:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether AWS CloudTrail is enabled in your AWS account.\
        \ Optionally, you can specify which S3 bucket, SNS topic, and Amazon CloudWatch\
        \ Logs ARN to use."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-multi-region-cloud-trail-enabled-ca70c185"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "MULTI_REGION_CLOUD_TRAIL_ENABLED"
        Owner: "AWS"
      InputParameters:
        readWriteType: "ALL"
        includeManagementEvents: "true"
  EC2NetworkInterface00eni01f1da401b50eb80e00enqJG:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: ""
      PrivateIpAddress: "10.25.71.173"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.173"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-07fd500f946aad8a2"
      - "sg-018c8a78c89c0d404"
      - "sg-02a57c92533299fd5"
      - "sg-0158898f4b43a0ae9"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00InZQf"
      SourceDestCheck: true
      InterfaceType: "interface"
      Tags: []
  ConfigConfigRule00securityhubeksendpointnopublicaccess341445a600nKASL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether Amazon Elastic Kubernetes Service (Amazon EKS)\
        \ endpoint is not publicly accessible."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EKS::Cluster"
      Compliance: {}
      ConfigRuleName: "securityhub-eks-endpoint-no-public-access-341445a6"
      Source:
        SourceIdentifier: "EKS_ENDPOINT_NO_PUBLIC_ACCESS"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubvpcvpn2tunnelsupc1a1c08600haKsH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks that both VPN tunnels provided by AWS Site-to-Site\
        \ VPN are in UP status. The control fails if one or both tunnels are in DOWN\
        \ status."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-vpc-vpn-2-tunnels-up-c1a1c086"
      Source:
        SourceIdentifier: "VPC_VPN_2_TUNNELS_UP"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubeksclustersecretsencrypted09d78bdc00c8G1E:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if Amazon EKS clusters are configured to have Kubernetes\
        \ secrets encrypted using AWS KMS. The rule is NON_COMPLIANT if an EKS cluster\
        \ does not have an encryptionConfig resource or if encryptionConfig does not\
        \ name secrets as a resource."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EKS::Cluster"
      Compliance: {}
      ConfigRuleName: "securityhub-eks-cluster-secrets-encrypted-09d78bdc"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "EKS_CLUSTER_SECRETS_ENCRYPTED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubecsnoenvironmentsecretsa6917ab200iIZas:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks if the key value of any variables in the 'environment'\
        \ parameter of container definitions includes AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY,\
        \ or ECS_ENGINE_AUTH_DATA."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-ecs-no-environment-secrets-a6917ab2"
      Source:
        SourceIdentifier: "ECS_NO_ENVIRONMENT_SECRETS"
        Owner: "AWS"
      InputParameters:
        secretKeys: "AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY,ECS_ENGINE_AUTH_DATA"
  ConfigConfigRule00securityhubguarddutylambdaprotectionenabledf51ff55800djfXe:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if Lambda Protection is enabled for an Amazon GuardDuty\
        \ detector in your account. The rule is NON_COMPLIANT if the Lambda Protection\
        \ feature in Amazon GuardDuty is not enabled for your account."
      Scope:
        ComplianceResourceTypes:
        - "AWS::GuardDuty::Detector"
      Compliance: {}
      ConfigRuleName: "securityhub-guardduty-lambda-protection-enabled-f51ff558"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "GUARDDUTY_LAMBDA_PROTECTION_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubopensearchnodetonodeencryptioncheck67dc030e003dH5g:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether Amazon OpenSearch domains have node-to-node\
        \ encryption enabled. This control fails if node-to-node encryption is disabled\
        \ on the domain."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-opensearch-node-to-node-encryption-check-67dc030e"
      Source:
        SourceIdentifier: "OPENSEARCH_NODE_TO_NODE_ENCRYPTION_CHECK"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubefsaccesspointenforcerootdirectory186d89d200YTcTc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks if Amazon Elastic File System (Amazon EFS)\
        \ access points are configured to enforce a root directory. This control fails\
        \ if the value of 'Path' is set to '/' (default root directory of the file\
        \ system)."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-efs-access-point-enforce-root-directory-186d89d2"
      Source:
        SourceIdentifier: "EFS_ACCESS_POINT_ENFORCE_ROOT_DIRECTORY"
        Owner: "AWS"
      InputParameters: {}
  ApiGatewayDeployment00aexrqo00QBzR6:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::Deployment"
    DeletionPolicy: "Retain"
    Properties:
      RestApiId:
        Ref: "ApiGatewayRestApi005nwb46kira00y5IhC"
  ConfigConfigRule00securityhubvpcendpointenabledssmquicksetupc76e7cb400pEEKG:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if each service specified in the parameter has an Amazon\
        \ VPC endpoint. The rule is NON_COMPLIANT if Amazon VPC does not have a VPC\
        \ endpoint created for each specified service. Optionally, you can specify\
        \ certain VPCs for the rule to check."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::VPC"
        - "AWS::EC2::VPCEndpoint"
      Compliance: {}
      ConfigRuleName: "securityhub-vpc-endpoint-enabled-ssm-quicksetup-c76e7cb4"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "VPC_ENDPOINT_ENABLED"
        Owner: "AWS"
      InputParameters:
        serviceNames: "ssm-quicksetup"
  ConfigConfigRule00securityhublambdavpcmultiazcheck27b4901500esL2g:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks if Lambda has more than one Availability Zone\
        \ (AZ) associated. The rule fails if only one AZ is associated with the Lambda\
        \ or the number of availability zones associated is less than number specified\
        \ in the optional parameter."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-lambda-vpc-multi-az-check-27b49015"
      Source:
        SourceIdentifier: "LAMBDA_VPC_MULTI_AZ_CHECK"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubnetfwstatelessrulegroupnotemptye79923f900WDALh:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks if a Stateless Network Firewall Rule Group\
        \ contains rules. The rule will fail if there are no rules in a Stateless\
        \ Network Firewall Rule Group."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-netfw-stateless-rule-group-not-empty-e79923f9"
      Source:
        SourceIdentifier: "NETFW_STATELESS_RULE_GROUP_NOT_EMPTY"
        Owner: "AWS"
      InputParameters: {}
  ApiGatewayDocumentationVersion0010200OfyH9:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::DocumentationVersion"
    DeletionPolicy: "Retain"
    Properties:
      RestApiId:
        Ref: "ApiGatewayRestApi005nwb46kira00y5IhC"
      Description: "Test"
      DocumentationVersion: "1.0.2"
  EC2SubnetNetworkAclAssociation00aclassoc03db0b71fa136254000emHgy:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    DeletionPolicy: "Retain"
    Properties:
      NetworkAclId:
        Ref: "EC2NetworkAcl00acl0035712838ecf942d00iFvOh"
      SubnetId:
        Ref: "EC2Subnet00subnet040ea0b30fd89092a00K2zb1"
  ConfigConfigRule00securityhubvpcendpointenabledcloudformationb6bd5d2e00QHbTJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if each service specified in the parameter has an Amazon\
        \ VPC endpoint. The rule is NON_COMPLIANT if Amazon VPC does not have a VPC\
        \ endpoint created for each specified service. Optionally, you can specify\
        \ certain VPCs for the rule to check."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::VPC"
        - "AWS::EC2::VPCEndpoint"
      Compliance: {}
      ConfigRuleName: "securityhub-vpc-endpoint-enabled-cloudformation-b6bd5d2e"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "VPC_ENDPOINT_ENABLED"
        Owner: "AWS"
      InputParameters:
        serviceNames: "cloudformation"
  ApiGatewayDeployment00mgj99500eQHgk:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::Deployment"
    DeletionPolicy: "Retain"
    Properties:
      RestApiId:
        Ref: "ApiGatewayRestApi005nwb46kira00y5IhC"
  ApiGatewayDeployment0038bu0u00VztG9:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::Deployment"
    DeletionPolicy: "Retain"
    Properties:
      RestApiId:
        Ref: "ApiGatewayRestApi005nwb46kira00y5IhC"
  ApiGatewayDocumentationVersion00200i0fnO:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::DocumentationVersion"
    DeletionPolicy: "Retain"
    Properties:
      RestApiId:
        Ref: "ApiGatewayRestApi005nwb46kira00y5IhC"
      DocumentationVersion: "2"
  ConfigConfigRule00securityhubvpcendpointenabledelasticloadbalancing29af66b300ziBDn:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if each service specified in the parameter has an Amazon\
        \ VPC endpoint. The rule is NON_COMPLIANT if Amazon VPC does not have a VPC\
        \ endpoint created for each specified service. Optionally, you can specify\
        \ certain VPCs for the rule to check."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::VPC"
        - "AWS::EC2::VPCEndpoint"
      Compliance: {}
      ConfigRuleName: "securityhub-vpc-endpoint-enabled-elasticloadbalancing-29af66b3"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "VPC_ENDPOINT_ENABLED"
        Owner: "AWS"
      InputParameters:
        serviceNames: "elasticloadbalancing"
  ConfigConfigRule00securityhubcloudtrailallreads3dataeventcheck2ead007800UBl7i:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if an AWS CloudTrail multi-Region trail is enabled and\
        \ logs all read S3 data events for your buckets. The rule is NON_COMPLIANT\
        \ if no multi-Region trail logs all read S3 data event types for all current\
        \ and future S3 buckets."
      Scope:
        ComplianceResourceTypes:
        - "AWS::::Account"
      Compliance: {}
      ConfigRuleName: "securityhub-cloudtrail-all-read-s3-data-event-check-2ead0078"
      Source:
        SourceIdentifier: "CLOUDTRAIL_ALL_READ_S3_DATA_EVENT_CHECK"
        Owner: "AWS"
      InputParameters: {}
  ApiGatewayDocumentationVersion0010100ASHw3:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::DocumentationVersion"
    DeletionPolicy: "Retain"
    Properties:
      RestApiId:
        Ref: "ApiGatewayRestApi005nwb46kira00y5IhC"
      Description: "Test"
      DocumentationVersion: "1.0.1"
  ConfigConfigRule00securityhubs3accesspointpublicaccessblocksc9542c6c005dVEa:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if Amazon S3 access points have block public access settings\
        \ enabled. The rule is NON_COMPLIANT if block public access settings are not\
        \ enabled for S3 access points."
      Scope:
        ComplianceResourceTypes:
        - "AWS::S3::AccessPoint"
      Compliance: {}
      ConfigRuleName: "securityhub-s3-access-point-public-access-blocks-c9542c6c"
      Source:
        SourceIdentifier: "S3_ACCESS_POINT_PUBLIC_ACCESS_BLOCKS"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubvpcendpointenabledevents814b8fc000gBm4P:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if each service specified in the parameter has an Amazon\
        \ VPC endpoint. The rule is NON_COMPLIANT if Amazon VPC does not have a VPC\
        \ endpoint created for each specified service. Optionally, you can specify\
        \ certain VPCs for the rule to check."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::VPC"
        - "AWS::EC2::VPCEndpoint"
      Compliance: {}
      ConfigRuleName: "securityhub-vpc-endpoint-enabled-events-814b8fc0"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "VPC_ENDPOINT_ENABLED"
        Owner: "AWS"
      InputParameters:
        serviceNames: "events"
  ConfigConfigRule00securityhubdocdbclusterauditloggingenabled4b8c9c5000kCUYv:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if an Amazon DocumentDB (with MongoDB compatibility) instance\
        \ cluster has CloudWatch log export enabled for audit logs. The rule is NON_COMPLIANT\
        \ if an Amazon DocumentDB instance cluster does not have CloudWatch log export\
        \ enabled for audit logs."
      Scope:
        ComplianceResourceTypes:
        - "AWS::RDS::DBCluster"
      Compliance: {}
      ConfigRuleName: "securityhub-docdb-cluster-audit-logging-enabled-4b8c9c50"
      Source:
        SourceIdentifier: "DOCDB_CLUSTER_AUDIT_LOGGING_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubrdssgeventnotificationsconfiguredb14d2d76007yjfn:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether an Amazon RDS Event subscription for\
        \ RDS security groups is configured to notify on event categories of both\
        \ \"configuration change\" and \"failure\"."
      Scope:
        ComplianceResourceTypes:
        - "AWS::RDS::EventSubscription"
      Compliance: {}
      ConfigRuleName: "securityhub-rds-sg-event-notifications-configured-b14d2d76"
      Source:
        SourceIdentifier: "arn:aws:lambda:ap-southeast-1:338458120468:function:SecurityHubConfigRule"
        SourceDetails:
        - EventSource: "aws.config"
          MessageType: "ConfigurationItemChangeNotification"
        Owner: "CUSTOM_LAMBDA"
      InputParameters: {}
  ConfigConfigRule00securityhubiamrootaccesskeycheck05dd997b004QaXT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether the root user access key is available."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-iam-root-access-key-check-05dd997b"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "IAM_ROOT_ACCESS_KEY_CHECK"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubneptuneclusterbackupretentioncheckc0e5123a0027jjD:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if an Amazon Neptune DB cluster retention period is set\
        \ to a specific number of days. The rule is NON_COMPLIANT if the retention\
        \ period is less than the value specified by the parameter."
      Scope:
        ComplianceResourceTypes:
        - "AWS::RDS::DBCluster"
      Compliance: {}
      ConfigRuleName: "securityhub-neptune-cluster-backup-retention-check-c0e5123a"
      Source:
        SourceIdentifier: "NEPTUNE_CLUSTER_BACKUP_RETENTION_CHECK"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubacmcertificatersachecke81a05e000Dnwrc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if RSA certificates managed by AWS Certificate Manager\
        \ (ACM) have a key length of at least '2048' bits. The rule is NON_COMPLIANT\
        \ if the minimum key length is less than 2048 bits."
      Scope:
        ComplianceResourceTypes:
        - "AWS::ACM::Certificate"
      Compliance: {}
      ConfigRuleName: "securityhub-acm-certificate-rsa-check-e81a05e0"
      Source:
        SourceIdentifier: "ACM_CERTIFICATE_RSA_CHECK"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubworkspacesuservolumeencryptionenabled69d1b96600UvuHW:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if WorkSpaces Workspace is encrypted at rest. The rule\
        \ is NON_COMPLIANT if WorkSpaces Workspace is not encrypted at rest."
      Scope:
        ComplianceResourceTypes:
        - "AWS::WorkSpaces::Workspace"
      Compliance: {}
      ConfigRuleName: "securityhub-workspaces-user-volume-encryption-enabled-69d1b966"
      Source:
        SourceIdentifier: "WORKSPACES_USER_VOLUME_ENCRYPTION_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubapigwassociatedwithwafb8ec12a400Pd5Ml:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks to see if an API Gateway stage is using an\
        \ AWS WAF Web ACL. This control fails if an AWS WAF Web ACL is not attached\
        \ to a REST API Gateway stage."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-api-gw-associated-with-waf-b8ec12a4"
      Source:
        SourceIdentifier: "API_GW_ASSOCIATED_WITH_WAF"
        Owner: "AWS"
      InputParameters: {}
  CloudFrontOriginRequestPolicy00acba4595bd2849b8b9fe13317c0390fa00pdKv6:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::CloudFront::OriginRequestPolicy"
    DeletionPolicy: "Retain"
    Properties:
      OriginRequestPolicyConfig:
        QueryStringsConfig:
          QueryStringBehavior: "none"
        Comment: "Policy to forward user-agent and referer headers to origin"
        HeadersConfig:
          HeaderBehavior: "whitelist"
          Headers:
          - "referer"
          - "user-agent"
        CookiesConfig:
          CookieBehavior: "none"
        Name: "Managed-UserAgentRefererHeaders"
  ConfigConfigRule00securityhubaccesskeysrotated0126792100u2jVg:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether the active access keys are rotated within the number\
        \ of days specified in maxAccessKeyAge"
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-access-keys-rotated-01267921"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "ACCESS_KEYS_ROTATED"
        Owner: "AWS"
      InputParameters:
        maxAccessKeyAge: "90"
  ConfigConfigRule00securityhubapigwexecutionloggingenabled8d481a9000U4I1v:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks that all stages in Amazon API Gateway REST and WebSocket\
        \ APIs have logging enabled. The rule is NON_COMPLIANT if logging is not enabled.\
        \ The rule is NON_COMPLIANT if loggingLevel is neither ERROR nor INFO."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-api-gw-execution-logging-enabled-8d481a90"
      Source:
        SourceIdentifier: "API_GW_EXECUTION_LOGGING_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubecscontainersnonprivilegedd08297ff00JsKdt:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks if the Privileged parameter in the container\
        \ definition of Amazon ECS Task Definitions is set to 'true'. This control\
        \ fails if the Privileged parameter is 'true'."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-ecs-containers-nonprivileged-d08297ff"
      Source:
        SourceIdentifier: "ECS_CONTAINERS_NONPRIVILEGED"
        Owner: "AWS"
      InputParameters: {}
  IAMRole00ec2adminaccess001ZBqo:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AmazonSageMaker-ExecutionPolicy-20240813T111543"
      - "arn:aws:iam::aws:policy/AmazonAPIGatewayInvokeFullAccess"
      - "arn:aws:iam::aws:policy/AdministratorAccess"
      MaxSessionDuration: 3600
      RoleName: "ec2-admin-access"
      Description: "Allows EC2 instances to call AWS services on your behalf."
      Policies:
      - PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Resource: "*"
            Action:
            - "ssm:DescribeAssociation"
            - "ssm:GetDeployablePatchSnapshotForInstance"
            - "ssm:GetDocument"
            - "ssm:DescribeDocument"
            - "ssm:GetManifest"
            - "ssm:GetParameter"
            - "ssm:GetParameters"
            - "ssm:ListAssociations"
            - "ssm:ListInstanceAssociations"
            - "ssm:PutInventory"
            - "ssm:PutComplianceItems"
            - "ssm:PutConfigurePackageResult"
            - "ssm:UpdateAssociationStatus"
            - "ssm:UpdateInstanceAssociationStatus"
            - "ssm:UpdateInstanceInformation"
            Effect: "Allow"
          - Resource: "*"
            Action:
            - "ssmmessages:CreateControlChannel"
            - "ssmmessages:CreateDataChannel"
            - "ssmmessages:OpenControlChannel"
            - "ssmmessages:OpenDataChannel"
            Effect: "Allow"
          - Resource: "*"
            Action:
            - "ec2messages:AcknowledgeMessage"
            - "ec2messages:DeleteMessage"
            - "ec2messages:FailMessage"
            - "ec2messages:GetEndpoint"
            - "ec2messages:GetMessages"
            - "ec2messages:SendReply"
            Effect: "Allow"
        PolicyName: "SSMAgent"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "ec2.amazonaws.com"
  ConfigConfigRule00securityhubiampasswordpolicypreventreusechecka759484300sQgrJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether the account password policy for IAM users prevents\
        \ password reuse."
      Scope:
        ComplianceResourceTypes:
        - "AWS::IAM::User"
      Compliance: {}
      ConfigRuleName: "securityhub-iam-password-policy-prevent-reuse-check-a7594843"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "IAM_PASSWORD_POLICY"
        Owner: "AWS"
      InputParameters:
        PasswordReusePrevention: "24"
  ConfigConfigRule00securityhubcloudtrailencryptionenabled814601f400KqLtF:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Ensure CloudTrail logs are encrypted at rest using KMS CMKs"
      Scope:
        ComplianceResourceTypes:
        - "AWS::CloudTrail::Trail"
      Compliance: {}
      ConfigRuleName: "securityhub-cloud-trail-encryption-enabled-814601f4"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "CLOUD_TRAIL_ENCRYPTION_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ApiGatewayDeployment00cd0uz1000AU7X:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::Deployment"
    DeletionPolicy: "Retain"
    Properties:
      RestApiId:
        Ref: "ApiGatewayRestApi005nwb46kira00y5IhC"
  ConfigConfigRule00securityhubvpcendpointenabledecrdkrb1872a63009ycea:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if each service specified in the parameter has an Amazon\
        \ VPC endpoint. The rule is NON_COMPLIANT if Amazon VPC does not have a VPC\
        \ endpoint created for each specified service. Optionally, you can specify\
        \ certain VPCs for the rule to check."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::VPC"
        - "AWS::EC2::VPCEndpoint"
      Compliance: {}
      ConfigRuleName: "securityhub-vpc-endpoint-enabled-ecr-dkr-b1872a63"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "VPC_ENDPOINT_ENABLED"
        Owner: "AWS"
      InputParameters:
        serviceNames: "ecr.dkr"
  ConfigConfigRule00securityhubsecretsmanagersecretunuseddc42a3b600rJ4su:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether your secrets have been accessed within\
        \ a specified number of days. The default value is 90 days. Secrets that have\
        \ not been accessed even once within the number days you define, fail this\
        \ check."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-secretsmanager-secret-unused-dc42a3b6"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "SECRETSMANAGER_SECRET_UNUSED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubiamexternalaccessanalyzerenabledb36d485900czwKr:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if an IAM Access Analyzer for external access is activated\
        \ in your account per region. The rule is NON_COMPLIANT if there are no analyzers\
        \ for external access in the region or if the 'status' attribute is not set\
        \ to 'ACTIVE'."
      Scope:
        ComplianceResourceTypes:
        - "AWS::::Account"
      Compliance: {}
      ConfigRuleName: "securityhub-iam-external-access-analyzer-enabled-b36d4859"
      Source:
        SourceIdentifier: "IAM_EXTERNAL_ACCESS_ANALYZER_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubgluemltransformencryptedatrest52524d2100n28VH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if Glue MLTransform is encrypted at rest, The rule is NON_COMPLIANT\
        \ if Glue MLTransform is not encrypted at rest"
      Scope:
        ComplianceResourceTypes:
        - "AWS::Glue::MLTransform"
      Compliance: {}
      ConfigRuleName: "securityhub-glue-ml-transform-encrypted-at-rest-52524d21"
      Source:
        SourceIdentifier: "GLUE_ML_TRANSFORM_ENCRYPTED_AT_REST"
        Owner: "AWS"
      InputParameters: {}
  ApiGatewayDeployment00joatxi00NkTFu:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::Deployment"
    DeletionPolicy: "Retain"
    Properties:
      RestApiId:
        Ref: "ApiGatewayRestApi005nwb46kira00y5IhC"
  ConfigConfigRule00securityhubsecretsmanagersecretperiodicrotationda4d698a00PrILB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks if your secrets have rotated at least once\
        \ within 90 days. "
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-secretsmanager-secret-periodic-rotation-da4d698a"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "SECRETSMANAGER_SECRET_PERIODIC_ROTATION"
        Owner: "AWS"
      InputParameters: {}
  EC2Volume00vol03616c082cedd037400c9oTj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Volume"
    DeletionPolicy: "Retain"
    Properties:
      MultiAttachEnabled: false
      SnapshotId: "snap-0a00914b732a105a7"
      VolumeType: "gp3"
      KmsKeyId: "arn:aws:kms:ap-southeast-1:343218203122:key/e0af6c3f-73fc-497e-863a-6754f0dce6b1"
      Encrypted: true
      Size: 100
      AutoEnableIO: false
      AvailabilityZone: "ap-southeast-1b"
      Throughput: 125
      Iops: 3000
      Tags:
      - Value: "WeiYan"
        Key: "Name"
  ConfigConfigRule00securityhubecsserviceassignpublicipdisabled42d8477900gn6K0:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether ECS services are configured to automatically\
        \ assign public IP addresses. This control fails if AssignPublicIP is ENABLED."
      Scope:
        ComplianceResourceTypes:
        - "AWS::ECS::Service"
      Compliance: {}
      ConfigRuleName: "securityhub-ecs-service-assign-public-ip-disabled-42d84779"
      Source:
        SourceIdentifier: "arn:aws:lambda:ap-southeast-1:338458120468:function:SecurityHubConfigRule"
        SourceDetails:
        - EventSource: "aws.config"
          MessageType: "ConfigurationItemChangeNotification"
        Owner: "CUSTOM_LAMBDA"
      InputParameters:
        version: "1.1"
  CloudFrontCachePolicy004d1d2f1d3a7149ad9e087ea5d843a55600PODnQ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::CloudFront::CachePolicy"
    DeletionPolicy: "Retain"
    Properties:
      CachePolicyConfig:
        Comment: "Default Amplify cache policy"
        MinTTL: 0
        MaxTTL: 3.1536E7
        ParametersInCacheKeyAndForwardedToOrigin:
          QueryStringsConfig:
            QueryStringBehavior: "all"
          EnableAcceptEncodingBrotli: true
          HeadersConfig:
            HeaderBehavior: "whitelist"
            Headers:
            - "Authorization"
            - "Accept"
            - "CloudFront-Viewer-Country"
            - "Host"
          CookiesConfig:
            CookieBehavior: "all"
          EnableAcceptEncodingGzip: true
        DefaultTTL: 0
        Name: "Managed-Amplify-Default"
  EC2Volume00vol0c5c3a52ca610e45500Qzcda:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Volume"
    DeletionPolicy: "Retain"
    Properties:
      MultiAttachEnabled: false
      SnapshotId: "snap-091bcb51d6f04afa9"
      VolumeType: "gp3"
      KmsKeyId: "arn:aws:kms:ap-southeast-1:343218203122:key/e0af6c3f-73fc-497e-863a-6754f0dce6b1"
      Encrypted: true
      Size: 20
      AutoEnableIO: false
      AvailabilityZone: "ap-southeast-1b"
      Throughput: 125
      Iops: 3000
      Tags:
      - Value: "nabil-jumpserver-EBS"
        Key: "Name"
  ApiGatewayDocumentationVersion0010500WQvvU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::DocumentationVersion"
    DeletionPolicy: "Retain"
    Properties:
      RestApiId:
        Ref: "ApiGatewayRestApi005nwb46kira00y5IhC"
      DocumentationVersion: "1.0.5"
  ConfigConfigRule00securityhubautoscalinggroupelbhealthcheckrequiredc056251500pmOW2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether your Auto Scaling groups that are associated with\
        \ a Classic Load Balancer are using Elastic Load Balancing health checks."
      Scope:
        ComplianceResourceTypes:
        - "AWS::AutoScaling::AutoScalingGroup"
      Compliance: {}
      ConfigRuleName: "securityhub-autoscaling-group-elb-healthcheck-required-c0562515"
      Source:
        SourceIdentifier: "AUTOSCALING_GROUP_ELB_HEALTHCHECK_REQUIRED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubiamcustomerpolicyblockedkmsactions93c591d8009kNmJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks that the managed AWS Identity and Access Management (IAM)\
        \ policies that you create do not allow blocked actions on all AWS KMS keys.\
        \ The rule is NON_COMPLIANT if any blocked action is allowed on all AWS KMS\
        \ keys by the managed IAM policy."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-iam-customer-policy-blocked-kms-actions-93c591d8"
      Source:
        SourceIdentifier: "IAM_CUSTOMER_POLICY_BLOCKED_KMS_ACTIONS"
        Owner: "AWS"
      InputParameters:
        excludePermissionBoundaryPolicy: "True"
        blockedActionsPatterns: "kms:Decrypt,kms:ReEncryptFrom"
  ConfigConfigRule00securityhubvpcendpointenabledecrapi45fde55100qTn92:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if each service specified in the parameter has an Amazon\
        \ VPC endpoint. The rule is NON_COMPLIANT if Amazon VPC does not have a VPC\
        \ endpoint created for each specified service. Optionally, you can specify\
        \ certain VPCs for the rule to check."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::VPC"
        - "AWS::EC2::VPCEndpoint"
      Compliance: {}
      ConfigRuleName: "securityhub-vpc-endpoint-enabled-ecr-api-45fde551"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "VPC_ENDPOINT_ENABLED"
        Owner: "AWS"
      InputParameters:
        serviceNames: "ecr.api"
  ApiGatewayDeployment00we65cw0090nUt:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::Deployment"
    DeletionPolicy: "Retain"
    Properties:
      RestApiId:
        Ref: "ApiGatewayRestApi005nwb46kira00y5IhC"
  ConfigConfigRule00securityhubefsautomaticbackupsenabled058c046600L9lcX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if EFS FileSystem has backup enabled, The rule is NON_COMPLIANT\
        \ if EFS FileSystem does not have backup enabled"
      Scope:
        ComplianceResourceTypes:
        - "AWS::EFS::FileSystem"
      Compliance: {}
      ConfigRuleName: "securityhub-efs-automatic-backups-enabled-058c0466"
      Source:
        SourceIdentifier: "EFS_AUTOMATIC_BACKUPS_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  EC2Instance00i0b2e07dbc66acf6c2001JWMH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Instance"
    DeletionPolicy: "Retain"
    Properties:
      Tenancy: "default"
      SecurityGroups:
      - "GenAI-Pilot-Private-Tmicro-to-App"
      - "GenAI-Pilot-Private-Cvpn-to-App"
      PrivateIpAddress: "10.25.71.172"
      BlockDeviceMappings:
      - Ebs:
          SnapshotId: "snap-0a00914b732a105a7"
          VolumeType: "gp3"
          KmsKeyId:
            Fn::GetAtt:
            - "KMSKey00e0af6c3f73fc497e863a6754f0dce6b1005JjxP"
            - "Arn"
          Encrypted: true
          Iops: 3000
          VolumeSize: 100
          DeleteOnTermination: false
        DeviceName: "/dev/xvda"
      IamInstanceProfile:
        Ref: "IAMInstanceProfile00ec2adminaccess008Kbu6"
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00InZQf"
      EbsOptimized: false
      Volumes:
      - VolumeId: "vol-03616c082cedd0374"
        Device: "/dev/xvda"
      NetworkInterfaces:
      - PrivateIpAddresses:
        - PrivateIpAddress: "10.25.71.172"
          Primary: true
        SecondaryPrivateIpAddressCount: 0
        DeviceIndex: "0"
        GroupSet:
        - Ref: "EC2SecurityGroup00sg07fd500f946aad8a200D738s"
        - Ref: "EC2SecurityGroup00sg0158898f4b43a0ae900SoA7y"
        Ipv6Addresses: []
        SubnetId:
          Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00InZQf"
        AssociatePublicIpAddress: false
        NetworkInterfaceId:
          Ref: "EC2NetworkInterface00eni0e26b9298bc1d4f2100krjsr"
        DeleteOnTermination: true
      ImageId: "ami-0a065ed4926e5a2c4"
      InstanceType: "t2.xlarge"
      Monitoring: false
      Tags:
      - Value: "ec2-jumpserver-weiyan"
        Key: "Name"
      InstanceInitiatedShutdownBehavior: "stop"
      CpuOptions:
        ThreadsPerCore: 1
        CoreCount: 4
      AvailabilityZone: "ap-southeast-1b"
      PrivateDnsNameOptions:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      SecurityGroupIds:
      - "sg-07fd500f946aad8a2"
      - "sg-0158898f4b43a0ae9"
      DisableApiTermination: false
      KeyName: "build-img-keypair"
      SourceDestCheck: true
      PlacementGroupName: ""
      VpcId: "vpc-02790342fee4ebf9f"
      State:
        Code: "80"
        Name: "stopped"
      CreditSpecification:
        CPUCredits: "standard"
  ConfigConfigRule00securityhubkinesisstreambackupretentioncheck219b3fc7004R8XM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if an Amazon Kinesis Data Stream has its data record retention\
        \ period set to a specific number of hours. The rule is NON_COMPLIANT if the\
        \ property 'RetentionPeriodHours' is set to a value less than the value specified\
        \ by the parameter."
      Scope:
        ComplianceResourceTypes:
        - "AWS::Kinesis::Stream"
      Compliance: {}
      ConfigRuleName: "securityhub-kinesis-stream-backup-retention-check-219b3fc7"
      Source:
        SourceIdentifier: "KINESIS_STREAM_BACKUP_RETENTION_CHECK"
        Owner: "AWS"
      InputParameters:
        minimumBackupRetentionPeriod: "168"
  ApiGatewayDeployment002iljt600Nn494:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::Deployment"
    DeletionPolicy: "Retain"
    Properties:
      RestApiId:
        Ref: "ApiGatewayRestApi005nwb46kira00y5IhC"
  EC2Instance00i0af21fb2531ca410d00NqaSm:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Instance"
    DeletionPolicy: "Retain"
    Properties:
      Tenancy: "default"
      SecurityGroups:
      - "GenAI-Pilot-Private-Tmicro-to-App"
      - "harith-ec2-sg"
      - "websocketDocDB"
      - "GenAI-Pilot-Private-Cvpn-to-App"
      PrivateIpAddress: "10.25.71.173"
      BlockDeviceMappings:
      - Ebs:
          SnapshotId: "snap-091bcb51d6f04afa9"
          VolumeType: "gp3"
          KmsKeyId:
            Fn::GetAtt:
            - "KMSKey00e0af6c3f73fc497e863a6754f0dce6b1005JjxP"
            - "Arn"
          Encrypted: true
          Iops: 3000
          VolumeSize: 20
          DeleteOnTermination: false
        DeviceName: "/dev/sda1"
      IamInstanceProfile:
        Ref: "IAMInstanceProfile00ec2adminaccess008Kbu6"
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00InZQf"
      EbsOptimized: true
      Volumes:
      - VolumeId: "vol-0c5c3a52ca610e455"
        Device: "/dev/sda1"
      NetworkInterfaces:
      - PrivateIpAddresses:
        - PrivateIpAddress: "10.25.71.173"
          Primary: true
        SecondaryPrivateIpAddressCount: 0
        DeviceIndex: "0"
        GroupSet:
        - Ref: "EC2SecurityGroup00sg07fd500f946aad8a200D738s"
        - Ref: "EC2SecurityGroup00sg018c8a78c89c0d40400ulagG"
        - Ref: "EC2SecurityGroup00sg02a57c92533299fd5008wz8c"
        - Ref: "EC2SecurityGroup00sg0158898f4b43a0ae900SoA7y"
        Ipv6Addresses: []
        SubnetId:
          Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00InZQf"
        AssociatePublicIpAddress: false
        NetworkInterfaceId:
          Ref: "EC2NetworkInterface00eni01f1da401b50eb80e00enqJG"
        DeleteOnTermination: true
      ImageId: "ami-069abcf2c7dbce501"
      InstanceType: "t3.xlarge"
      Monitoring: false
      Tags:
      - Value: "ec2-jumpserver-nabil"
        Key: "Name"
      InstanceInitiatedShutdownBehavior: "stop"
      CpuOptions:
        ThreadsPerCore: 2
        CoreCount: 2
      AvailabilityZone: "ap-southeast-1b"
      PrivateDnsNameOptions:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      SecurityGroupIds:
      - "sg-07fd500f946aad8a2"
      - "sg-018c8a78c89c0d404"
      - "sg-02a57c92533299fd5"
      - "sg-0158898f4b43a0ae9"
      DisableApiTermination: false
      KeyName: "nabil-to-ec2pilot"
      SourceDestCheck: true
      PlacementGroupName: ""
      VpcId: "vpc-02790342fee4ebf9f"
      State:
        Code: "80"
        Name: "stopped"
      CreditSpecification:
        CPUCredits: "unlimited"
  ConfigConfigRule00securityhubiampolicynostatementswithfullaccess91549fa100SdJWc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether the IAM identity-based custom policies\
        \ have Allow statements that grant permissions for all actions on a service.\
        \ The control fails if any policy statement includes \"Effect\": \"Allow\"\
        \ with \"Action\": \"Service:*\"."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-iam-policy-no-statements-with-full-access-91549fa1"
      Source:
        SourceIdentifier: "IAM_POLICY_NO_STATEMENTS_WITH_FULL_ACCESS"
        Owner: "AWS"
      InputParameters:
        excludePermissionBoundaryPolicy: "True"
  ConfigConfigRule00securityhubs3bucketsslrequestsonly7f0af21300R34zz:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether S3 buckets have policies that require requests\
        \ to use Secure Socket Layer (SSL)."
      Scope:
        ComplianceResourceTypes:
        - "AWS::S3::Bucket"
      Compliance: {}
      ConfigRuleName: "securityhub-s3-bucket-ssl-requests-only-7f0af213"
      Source:
        SourceIdentifier: "S3_BUCKET_SSL_REQUESTS_ONLY"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubdbinstancebackupenabled8909feb000BfYn3:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether RDS DB instances have backups enabled. Optionally,\
        \ the rule checks the backup retention period and the backup window."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-db-instance-backup-enabled-8909feb0"
      Source:
        SourceIdentifier: "DB_INSTANCE_BACKUP_ENABLED"
        Owner: "AWS"
      InputParameters:
        backupRetentionMinimum: "7"
        checkReadReplicas: "False"
  ConfigConfigRule00securityhubvpcendpointenabledkmse665a19b00C78PT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if each service specified in the parameter has an Amazon\
        \ VPC endpoint. The rule is NON_COMPLIANT if Amazon VPC does not have a VPC\
        \ endpoint created for each specified service. Optionally, you can specify\
        \ certain VPCs for the rule to check."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::VPC"
        - "AWS::EC2::VPCEndpoint"
      Compliance: {}
      ConfigRuleName: "securityhub-vpc-endpoint-enabled-kms-e665a19b"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "VPC_ENDPOINT_ENABLED"
        Owner: "AWS"
      InputParameters:
        serviceNames: "kms"
  ConfigConfigRule00securityhubdocdbclusterdeletionprotectionenabled392b6fa400XjYHz:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if an Amazon DocumentDB (with MongoDB compatibility) cluster\
        \ has deletion protection enabled. The rule is NON_COMPLIANT if an Amazon\
        \ DocumentDB cluster has the deletionProtection field set to false."
      Scope:
        ComplianceResourceTypes:
        - "AWS::RDS::DBCluster"
      Compliance: {}
      ConfigRuleName: "securityhub-docdb-cluster-deletion-protection-enabled-392b6fa4"
      Source:
        SourceIdentifier: "DOCDB_CLUSTER_DELETION_PROTECTION_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ApiGatewayApiKey00r68fr8s4wd00alF7G:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::ApiKey"
    DeletionPolicy: "Retain"
    Properties:
      StageKeys: []
      Value: "hLCnzmXdPA1oVm3r5KZh4XoIpoO2gUk1ZhPN1LQb"
      Enabled: true
      Description: "Permission for the webapp to invoke the api"
      Name: "web-api-auth"
  ConfigConfigRule00securityhubclbmultipleaz9048b8ce00QRMlu:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether a Classic Load Balancer has been configured\
        \ to span multiple Availability Zones. The control fails if the Classic Load\
        \ Balancer does not span multiple availability zones."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-clb-multiple-az-9048b8ce"
      Source:
        SourceIdentifier: "CLB_MULTIPLE_AZ"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubrdsclusterautominorversionupgradeenable7dea89c300GiRYc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if automatic minor version upgrades are enabled for Amazon\
        \ RDS Multi-AZ cluster deployments. The rule is NON_COMPLIANT if autoMinorVersionUpgrade\
        \ is set to false."
      Scope:
        ComplianceResourceTypes:
        - "AWS::RDS::DBCluster"
      Compliance: {}
      ConfigRuleName: "securityhub-rds-cluster-auto-minor-version-upgrade-enable-7dea89c3"
      Source:
        SourceIdentifier: "RDS_CLUSTER_AUTO_MINOR_VERSION_UPGRADE_ENABLE"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubrdspostgresqllogstocloudwatch7a14ac5400VMNu1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if an Amazon PostgreSQL DB instance is configured to publish\
        \ logs to Amazon CloudWatch Logs. The rule is NON_COMPLIANT if the DB instance\
        \ is not configured to publish logs to Amazon CloudWatch Logs."
      Scope:
        ComplianceResourceTypes:
        - "AWS::RDS::DBInstance"
      Compliance: {}
      ConfigRuleName: "securityhub-rds-postgresql-logs-to-cloudwatch-7a14ac54"
      Source:
        SourceIdentifier: "RDS_POSTGRESQL_LOGS_TO_CLOUDWATCH"
        Owner: "AWS"
      InputParameters:
        logTypes: "postgresql"
  IAMRole00VPCFlowLogtoCloudWatch00IJMym:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/Publish-Log-to-CloudWatch"
      MaxSessionDuration: 3600
      RoleName: "VPC-Flow-Log-to-CloudWatch"
      Description: "Allows VPC Flow Logs to be written to Cloud Watch"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "vpc-flow-logs.amazonaws.com"
  ConfigConfigRule00securityhubmqautominorversionupgradeenabledf6300ea500aXyPs:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if automatic minor version upgrades are enabled for Amazon\
        \ MQ brokers. The rule is NON_COMPLIANT if the 'AutoMinorVersionUpgrade' field\
        \ is not enabled for an Amazon MQ broker."
      Scope:
        ComplianceResourceTypes:
        - "AWS::AmazonMQ::Broker"
      Compliance: {}
      ConfigRuleName: "securityhub-mq-auto-minor-version-upgrade-enabled-f6300ea5"
      Source:
        SourceIdentifier: "MQ_AUTO_MINOR_VERSION_UPGRADE_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  EC2VPCDHCPOptionsAssociation00vpc0182b4cdff5ae990b001FJ4G:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VPCDHCPOptionsAssociation"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc0182b4cdff5ae990b00dQnPk"
      DhcpOptionsId:
        Ref: "EC2DHCPOptions00dopt04b52e307ae8973a200HWJGf"
  ConfigConfigRule00securityhubopensearchaccesscontrolenabledc9373f8700WSc1f:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether Amazon OpenSearch Service domains\
        \ have fine-grained access control enabled. This control fails if AdvancedSecurityOptions\
        \ is not enabled for the OpenSearch Service domain."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-opensearch-access-control-enabled-c9373f87"
      Source:
        SourceIdentifier: "OPENSEARCH_ACCESS_CONTROL_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  LogsLogGroup00awsvpcflowdefaultvpc00yr0Mm:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "INFREQUENT_ACCESS"
      RetentionInDays: 7
      LogGroupName: "/aws/vpcflow/default-vpc"
      Tags:
      - Value: "GenAI-Prod-Default-VPC"
        Key: "Name"
      DataProtectionPolicy: {}
  ConfigConfigRule00securityhubappsyncauthorizationcheckd4cb201a00ieACz:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if an AWS AppSync API is using allowed authorization mechanisms.\
        \ The rule is NON_COMPLIANT if an unapproved authorization mechanism is being\
        \ used."
      Scope:
        ComplianceResourceTypes:
        - "AWS::AppSync::GraphQLApi"
      Compliance: {}
      ConfigRuleName: "securityhub-appsync-authorization-check-d4cb201a"
      Source:
        SourceIdentifier: "APPSYNC_AUTHORIZATION_CHECK"
        Owner: "AWS"
      InputParameters:
        AllowedAuthorizationTypes: "AWS_LAMBDA,AWS_IAM,OPENID_CONNECT,AMAZON_COGNITO_USER_POOLS"
  ConfigConfigRule00securityhubefsmounttargetpublicaccessible35393ae7004i3OP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if an Amazon Elastic File System (Amazon EFS) mount target\
        \ is not associated with a public subnet. The rule is NON-COMPLIANT if the\
        \ Amazon EFS mount target is associated with a public subnet."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EFS::FileSystem"
      Compliance: {}
      ConfigRuleName: "securityhub-efs-mount-target-public-accessible-35393ae7"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "EFS_MOUNT_TARGET_PUBLIC_ACCESSIBLE"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubdocdbclustersnapshotpublicprohibitedb31b117200WIzK4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if Amazon DocumentDB manual cluster snapshots are public.\
        \ The rule is NON_COMPLIANT if any Amazon DocumentDB manual cluster snapshots\
        \ are public."
      Scope:
        ComplianceResourceTypes:
        - "AWS::RDS::DBClusterSnapshot"
      Compliance: {}
      ConfigRuleName: "securityhub-docdb-cluster-snapshot-public-prohibited-b31b1172"
      Source:
        SourceIdentifier: "DOCDB_CLUSTER_SNAPSHOT_PUBLIC_PROHIBITED"
        Owner: "AWS"
      InputParameters: {}
  CloudFrontOriginRequestPolicy00b689b0a853d040abbaf268738e2966ac00P4n2v:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::CloudFront::OriginRequestPolicy"
    DeletionPolicy: "Retain"
    Properties:
      OriginRequestPolicyConfig:
        QueryStringsConfig:
          QueryStringBehavior: "all"
        Comment: "Policy to forward all parameters in viewer requests except for the\
          \ Host header"
        HeadersConfig:
          HeaderBehavior: "allExcept"
          Headers:
          - "host"
        CookiesConfig:
          CookieBehavior: "all"
        Name: "Managed-AllViewerExceptHostHeader"
  ConfigConfigRule00securityhubvpcendpointenabledawssagemakerrgnntbkef3a6be800uGzqZ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if each service specified in the parameter has an Amazon\
        \ VPC endpoint. The rule is NON_COMPLIANT if Amazon VPC does not have a VPC\
        \ endpoint created for each specified service. Optionally, you can specify\
        \ certain VPCs for the rule to check."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::VPC"
        - "AWS::EC2::VPCEndpoint"
      Compliance: {}
      ConfigRuleName: "securityhub-vpc-endpoint-enabled-aws-sagemaker-rgn-ntbk-ef3a6be8"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "VPC_ENDPOINT_ENABLED"
        Owner: "AWS"
      InputParameters:
        serviceNames: "aws.sagemaker.region.notebook"
  ApiGatewayDeployment00ucu04d00xt0um:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::Deployment"
    DeletionPolicy: "Retain"
    Properties:
      RestApiId:
        Ref: "ApiGatewayRestApi005nwb46kira00y5IhC"
  AccessAnalyzerAnalyzer00analyzerExternalAccessConsoleAnalyzer027e9a01d6a64b2e87f9d70c782ab7ae00PgwG5:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::AccessAnalyzer::Analyzer"
    DeletionPolicy: "Retain"
    Properties:
      ArchiveRules: []
      Type: "ACCOUNT"
      AnalyzerName: "ExternalAccess-ConsoleAnalyzer-027e9a01-d6a6-4b2e-87f9-d70c782ab7ae"
      Tags: []
  ConfigConfigRule00securityhubclbdesyncmodecheck53a16bc700MJbWG:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks if Classic Load Balancers (CLB) are configured\
        \ with a user defined Desync mitigation mode. This control fails if CLB Desync\
        \ mitigation mode does not match with user defined Desync mitigation mode."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-clb-desync-mode-check-53a16bc7"
      Source:
        SourceIdentifier: "CLB_DESYNC_MODE_CHECK"
        Owner: "AWS"
      InputParameters:
        desyncMode: "defensive,strictest"
  EC2Subnet00subnet0d1db15411089416b002HSPn:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Subnet"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00AYnOQ"
      MapPublicIpOnLaunch: false
      EnableDns64: false
      AvailabilityZoneId: "apse1-az3"
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      CidrBlock: "10.25.71.192/27"
      Ipv6Native: false
      Tags:
      - Value: "GenAI-Dev-Application-Private-1c"
        Key: "Name"
  ConfigConfigRule00securityhubcustomeventbuspolicyattached708a6d8100VbzOw:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if Amazon EventBridge custom event buses have a resource-based\
        \ policy attached. The rule is NON_COMPLIANT if a custom event bus policy\
        \ does not have an attached resource-based policy."
      Scope:
        ComplianceResourceTypes:
        - "AWS::Events::EventBus"
      Compliance: {}
      ConfigRuleName: "securityhub-custom-eventbus-policy-attached-708a6d81"
      Source:
        SourceIdentifier: "CUSTOM_EVENTBUS_POLICY_ATTACHED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubmskconnectconnectorencrypted918dbd8800nhWD0:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if an AWS MSK Connect Connector has encryption in transit\
        \ to the Apache Kafka cluster enabled. The rule is NON_COMPLIANT if AWS MSK\
        \ Connect Connector does not have encryption in transit to the Apache Kafka\
        \ cluster enabled"
      Scope:
        ComplianceResourceTypes:
        - "AWS::KafkaConnect::Connector"
      Compliance: {}
      ConfigRuleName: "securityhub-msk-connect-connector-encrypted-918dbd88"
      Source:
        SourceIdentifier: "arn:aws:lambda:ap-southeast-1:338458120468:function:SecurityHubConfigRule"
        SourceDetails:
        - EventSource: "aws.config"
          MessageType: "ConfigurationItemChangeNotification"
        Owner: "CUSTOM_LAMBDA"
      InputParameters: {}
  EC2FlowLog00fl095a87dfeb6e5ef0900P6CK4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::FlowLog"
    DeletionPolicy: "Retain"
    Properties:
      LogFormat: "${version} ${account-id} ${interface-id} ${srcaddr} ${dstaddr} ${srcport}\
        \ ${dstport} ${protocol} ${packets} ${bytes} ${start} ${end} ${action} ${log-status}"
      ResourceId:
        Ref: "EC2VPC00vpc0182b4cdff5ae990b00dQnPk"
      MaxAggregationInterval: 600
      ResourceType: "VPC"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcflowdefaultvpc00yr0Mm"
      DeliverLogsPermissionArn:
        Fn::GetAtt:
        - "IAMRole00VPCFlowLogtoCloudWatch00IJMym"
        - "Arn"
      LogDestinationType: "cloud-watch-logs"
      Tags:
      - Value: "vpcflow-logging-default-vpc"
        Key: "Name"
      TrafficType: "ALL"
  ApiGatewayDeployment00lvb7d900RAVyA:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::Deployment"
    DeletionPolicy: "Retain"
    Properties:
      RestApiId:
        Ref: "ApiGatewayRestApi005nwb46kira00y5IhC"
  ApiGatewayDeployment00w08vwb00qs2Wl:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::Deployment"
    DeletionPolicy: "Retain"
    Properties:
      RestApiId:
        Ref: "ApiGatewayRestApi005nwb46kira00y5IhC"
  ConfigConfigRule00securityhubec2vpnconnectionloggingenabled2f8391dd00c6gZ2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if AWS Site-to-Site VPN connections have Amazon CloudWatch\
        \ logging enabled for both tunnels. The rule is NON_COMPLIANT if a Site-to-Site\
        \ VPN connection does not have CloudWatch logging enabled for either or both\
        \ tunnels."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::VPNConnection"
      Compliance: {}
      ConfigRuleName: "securityhub-ec2-vpn-connection-logging-enabled-2f8391dd"
      Source:
        SourceIdentifier: "EC2_VPN_CONNECTION_LOGGING_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubecstaskdefinitionlogconfiguration9c0ffbe700DNS9i:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks if active Amazon ECS task definitions have\
        \ a logging configuration specified."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-ecs-task-definition-log-configuration-9c0ffbe7"
      Source:
        SourceIdentifier: "ECS_TASK_DEFINITION_LOG_CONFIGURATION"
        Owner: "AWS"
      InputParameters: {}
  EC2InternetGateway00igw0b271b841ab11150e00QB9qN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::InternetGateway"
    DeletionPolicy: "Retain"
    Properties:
      Tags:
      - Value: "GenAI-Pilot-IGW"
        Key: "Name"
  ConfigConfigRule00securityhubsagemakernotebooknodirectinternetaccess013a7d85001x7Gy:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether direct internet access is disabled for an Amazon\
        \ SageMaker notebook instance. The rule is NON_COMPLIANT if Amazon SageMaker\
        \ notebook instances are internet-enabled."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-sagemaker-notebook-no-direct-internet-access-013a7d85"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "SAGEMAKER_NOTEBOOK_NO_DIRECT_INTERNET_ACCESS"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubvpcendpointenabledsns30f8061d00s7vVm:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if each service specified in the parameter has an Amazon\
        \ VPC endpoint. The rule is NON_COMPLIANT if Amazon VPC does not have a VPC\
        \ endpoint created for each specified service. Optionally, you can specify\
        \ certain VPCs for the rule to check."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::VPC"
        - "AWS::EC2::VPCEndpoint"
      Compliance: {}
      ConfigRuleName: "securityhub-vpc-endpoint-enabled-sns-30f8061d"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "VPC_ENDPOINT_ENABLED"
        Owner: "AWS"
      InputParameters:
        serviceNames: "sns"
  ConfigConfigRule00securityhubrdsdeployedinvpcf60a95d700SiYfA:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks if an RDS instance is deployed in a VPC (EC2-VPC)."
      Scope:
        ComplianceResourceTypes:
        - "AWS::RDS::DBInstance"
      Compliance: {}
      ConfigRuleName: "securityhub-rds-deployed-in-vpc-f60a95d7"
      Source:
        SourceIdentifier: "arn:aws:lambda:ap-southeast-1:338458120468:function:SecurityHubConfigRule"
        SourceDetails:
        - EventSource: "aws.config"
          MessageType: "ConfigurationItemChangeNotification"
        Owner: "CUSTOM_LAMBDA"
      InputParameters: {}
  ConfigConfigRule00securityhubrdsinstancedeletionprotectionenabled244f8a3600za5NW:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if an Amazon Relational Database Service (Amazon RDS) instance\
        \ has deletion protection enabled."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-rds-instance-deletion-protection-enabled-244f8a36"
      Source:
        SourceIdentifier: "RDS_INSTANCE_DELETION_PROTECTION_ENABLED"
        Owner: "AWS"
      InputParameters:
        databaseEngines: "mariadb,mysql,custom-oracle-ee,oracle-ee-cdb,oracle-se2-cdb,oracle-ee,oracle-se2,oracle-se1,oracle-se,postgres,sqlserver-ee,sqlserver-se,sqlserver-ex,sqlserver-web"
  ConfigConfigRule00securityhubs3bucketpublicwriteprohibited254a5f7200SkKzn:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks to see if S3 buckets allow public write."
      Scope:
        ComplianceResourceTypes:
        - "AWS::S3::Bucket"
      Compliance: {}
      ConfigRuleName: "securityhub-s3-bucket-public-write-prohibited-254a5f72"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "S3_BUCKET_PUBLIC_WRITE_PROHIBITED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubkmskeypolicynopublicaccessd8148e1700QxP6n:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if the AWS KMS key policy allows public access. The rule\
        \ is NON_COMPLIANT if the KMS key policy allows public access to the KMS key."
      Scope:
        ComplianceResourceTypes:
        - "AWS::KMS::Key"
      Compliance: {}
      ConfigRuleName: "securityhub-kms-key-policy-no-public-access-d8148e17"
      Source:
        SourceIdentifier: "KMS_KEY_POLICY_NO_PUBLIC_ACCESS"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhublambdafunctionpublicaccessprohibited4f905e1a00yoBHj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether the AWS Lambda function policy attached to the\
        \ Lambda resource prohibits public access."
      Scope:
        ComplianceResourceTypes:
        - "AWS::Lambda::Function"
      Compliance: {}
      ConfigRuleName: "securityhub-lambda-function-public-access-prohibited-4f905e1a"
      Source:
        SourceIdentifier: "LAMBDA_FUNCTION_PUBLIC_ACCESS_PROHIBITED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubrootaccountmfaenabled06a1050d00rhBk4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether users of your AWS account require a multi-factor\
        \ authentication (MFA) device to sign in with root credentials."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-root-account-mfa-enabled-06a1050d"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "ROOT_ACCOUNT_MFA_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubkinesisstreamencrypted1b5ccbb800vVw1l:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks if Amazon Kinesis streams are encrypted at\
        \ rest with server-side encryption. This control fails for a Kinesis stream\
        \ if 'StreamEncryption' is not present."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-kinesis-stream-encrypted-1b5ccbb8"
      Source:
        SourceIdentifier: "KINESIS_STREAM_ENCRYPTED"
        Owner: "AWS"
      InputParameters: {}
  CloudFrontCachePolicy004cc15a8ad71548a482b8cc0b614638fe00s3YNg:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::CloudFront::CachePolicy"
    DeletionPolicy: "Retain"
    Properties:
      CachePolicyConfig:
        Comment: "Policy for origins that return Cache-Control headers and serve different\
          \ content based on values present in the query string."
        MinTTL: 0
        MaxTTL: 3.1536E7
        ParametersInCacheKeyAndForwardedToOrigin:
          QueryStringsConfig:
            QueryStringBehavior: "all"
          EnableAcceptEncodingBrotli: true
          HeadersConfig:
            HeaderBehavior: "whitelist"
            Headers:
            - "x-method-override"
            - "origin"
            - "host"
            - "x-http-method"
            - "x-http-method-override"
          CookiesConfig:
            CookieBehavior: "all"
          EnableAcceptEncodingGzip: true
        DefaultTTL: 0
        Name: "UseOriginCacheControlHeaders-QueryStrings"
  ConfigConfigRule00securityhubapigwsslenabled966550db00Rp1Sv:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if a REST API stage uses an Secure Sockets Layer (SSL)\
        \ certificate. This rule is NON_COMPLIANT if the REST API stage does not have\
        \ an associated SSL certificate."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-api-gw-ssl-enabled-966550db"
      Source:
        SourceIdentifier: "API_GW_SSL_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ApiGatewayUsagePlanKey00r68fr8s4wdq2go3i00Omx7E:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::UsagePlanKey"
    DeletionPolicy: "Retain"
    Properties:
      KeyType: "API_KEY"
      UsagePlanId:
        Ref: "ApiGatewayUsagePlan00q2go3i00DpTxT"
      KeyId:
        Ref: "ApiGatewayApiKey00r68fr8s4wd00alF7G"
  ConfigConfigRule00securityhubecstaskdefinitionpidmodechecke629ff1f003XnSq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks if Amazon ECS Task Definitions are configured\
        \ to share a host's process namespace with its containers. This control fails\
        \ if the pidMode parameter is set to 'host'."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-ecs-task-definition-pid-mode-check-e629ff1f"
      Source:
        SourceIdentifier: "ECS_TASK_DEFINITION_PID_MODE_CHECK"
        Owner: "AWS"
      InputParameters: {}
  EC2SecurityGroup00sg02a57c92533299fd5008wz8c:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "Allows access from EC2"
      GroupName: "websocketDocDB"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00AYnOQ"
      SecurityGroupIngress:
      - CidrIp:
          Fn::GetAtt:
          - "EC2VPC00vpc02790342fee4ebf9f00AYnOQ"
          - "CidrBlock"
        IpProtocol: "tcp"
        Description: "allow inbound from firewall"
        FromPort: 27017
        ToPort: 27017
      - IpProtocol: "tcp"
        FromPort: 27017
        SourceSecurityGroupId: "sg-075615342aa3e28b9"
        ToPort: 27017
        SourceSecurityGroupOwnerId: "343218203122"
      - IpProtocol: "tcp"
        FromPort: 27017
        SourceSecurityGroupId: "sg-0fd865e5bd1a64a07"
        ToPort: 27017
        SourceSecurityGroupOwnerId: "343218203122"
      - IpProtocol: "tcp"
        Description: "allow inbound from alb internal"
        FromPort: 27017
        SourceSecurityGroupId: "sg-0fbe083eaa2bbd46c"
        ToPort: 27017
        SourceSecurityGroupOwnerId: "343218203122"
      - IpProtocol: "tcp"
        Description: "allow inbound from ECS frontend"
        FromPort: 27017
        SourceSecurityGroupId: "sg-06010a299d4942ce2"
        ToPort: 27017
        SourceSecurityGroupOwnerId: "343218203122"
      - IpProtocol: "tcp"
        Description: "allow inbound from itself"
        FromPort: 27017
        SourceSecurityGroupId: "sg-02a57c92533299fd5"
        ToPort: 27017
        SourceSecurityGroupOwnerId: "343218203122"
      - IpProtocol: "tcp"
        Description: "allow inbound from lambda"
        FromPort: 27017
        SourceSecurityGroupId: "sg-03d66fb80efac83a5"
        ToPort: 27017
        SourceSecurityGroupOwnerId: "343218203122"
      - IpProtocol: "tcp"
        Description: "DocuDB SG"
        FromPort: 443
        SourceSecurityGroupId: "sg-02a57c92533299fd5"
        ToPort: 443
        SourceSecurityGroupOwnerId: "343218203122"
      - IpProtocol: "tcp"
        Description: "From ECS Frontend SG"
        FromPort: 443
        SourceSecurityGroupId: "sg-06010a299d4942ce2"
        ToPort: 443
        SourceSecurityGroupOwnerId: "343218203122"
      - IpProtocol: "tcp"
        Description: "VPC Endpoint SG"
        FromPort: 443
        SourceSecurityGroupId: "sg-0ef00776c538db142"
        ToPort: 443
        SourceSecurityGroupOwnerId: "343218203122"
      SecurityGroupEgress:
      - CidrIp:
          Fn::GetAtt:
          - "EC2VPC00vpc02790342fee4ebf9f00AYnOQ"
          - "CidrBlock"
        IpProtocol: "-1"
        Description: "Internal traffic only"
        FromPort: -1
        ToPort: -1
      - IpProtocol: "tcp"
        DestinationSecurityGroupId: "sg-02a57c92533299fd5"
        FromPort: 443
        ToPort: 443
  ConfigConfigRule00securityhubredshiftclusterpublicaccesscheck4c0daf7c00iwbnY:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether Amazon Redshift clusters are not publicly accessible."
      Scope:
        ComplianceResourceTypes:
        - "AWS::Redshift::Cluster"
      Compliance: {}
      ConfigRuleName: "securityhub-redshift-cluster-public-access-check-4c0daf7c"
      Source:
        SourceIdentifier: "REDSHIFT_CLUSTER_PUBLIC_ACCESS_CHECK"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubcodebuildprojects3logsencrypted79c30a5200Jkb6m:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if a AWS CodeBuild project configured with Amazon S3 Logs\
        \ has encryption enabled for its logs. The rule is NON_COMPLIANT if `encryptionDisabled`\
        \ is set to `true` in a S3LogsConfig of a CodeBuild project. "
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-codebuild-project-s3-logs-encrypted-79c30a52"
      Source:
        SourceIdentifier: "CODEBUILD_PROJECT_S3_LOGS_ENCRYPTED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubcmkbackingkeyrotationenabled8082d76800Ow2TN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks that key rotation is enabled for customer created customer\
        \ master key (CMK)"
      Scope:
        ComplianceResourceTypes:
        - "AWS::KMS::Key"
      Compliance: {}
      ConfigRuleName: "securityhub-cmk-backing-key-rotation-enabled-8082d768"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "CMK_BACKING_KEY_ROTATION_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubiampolicynostatementswithadminaccess13cd342300O7Ahc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether the default version of IAM policies have administrator\
        \ access"
      Scope:
        ComplianceResourceTypes:
        - "AWS::IAM::Policy"
      Compliance: {}
      ConfigRuleName: "securityhub-iam-policy-no-statements-with-admin-access-13cd3423"
      Source:
        SourceIdentifier: "IAM_POLICY_NO_STATEMENTS_WITH_ADMIN_ACCESS"
        Owner: "AWS"
      InputParameters:
        excludePermissionBoundaryPolicy: "true"
  ConfigConfigRule00securityhubsecurityaccountinformationprovidedf5283d1900ITPku:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if customer has provided security contact information within\
        \ the account contacts. This rule is NON_COMPLIANT if security contact information\
        \ within the account is not provided."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-security-account-information-provided-f5283d19"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "SECURITY_ACCOUNT_INFORMATION_PROVIDED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubecscontainersreadonlyaccess5e930ea400UuaJb:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks if ECS Containers are limited to read-only\
        \ access to its mounted root filesystems. This control fails if the readonlyRootFilesystem\
        \ parameter in the container definition of ECSTaskDefinitions is set to 'false'."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-ecs-containers-readonly-access-5e930ea4"
      Source:
        SourceIdentifier: "ECS_CONTAINERS_READONLY_ACCESS"
        Owner: "AWS"
      InputParameters: {}
  EC2VolumeAttachment00vol045cae6da6d093ba700TGAfR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VolumeAttachment"
    DeletionPolicy: "Retain"
    Properties:
      InstanceId: "i-0630337e785e424b3"
      VolumeId: "vol-045cae6da6d093ba7"
      Device: "/dev/xvda"
  EC2VolumeAttachment00vol025bc069a9af78b0f00mWTal:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VolumeAttachment"
    DeletionPolicy: "Retain"
    Properties:
      InstanceId: "i-056aa8a8a3a7d7440"
      VolumeId: "vol-025bc069a9af78b0f"
      Device: "/dev/sda1"
  ConfigConfigRule00securityhubdmsreplicationnotpublice21f364f00CwNly:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether AWS Database Migration Service replication instances\
        \ are public. The rule is NON_COMPLIANT if PubliclyAccessible field is true."
      Scope:
        ComplianceResourceTypes:
        - "AWS::DMS::ReplicationInstance"
      Compliance: {}
      ConfigRuleName: "securityhub-dms-replication-not-public-e21f364f"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "DMS_REPLICATION_NOT_PUBLIC"
        Owner: "AWS"
      InputParameters: {}
  EC2VPC00vpc02790342fee4ebf9f00AYnOQ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VPC"
    DeletionPolicy: "Retain"
    Properties:
      CidrBlock: "10.25.71.0/24"
      EnableDnsSupport: true
      InstanceTenancy: "default"
      EnableDnsHostnames: true
      Tags:
      - Value: "GenAI-Pilot-VPC"
        Key: "Name"
  ConfigConfigRule00securityhubvpcendpointenabledsagemakermetrics205f013a00jQgsL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if each service specified in the parameter has an Amazon\
        \ VPC endpoint. The rule is NON_COMPLIANT if Amazon VPC does not have a VPC\
        \ endpoint created for each specified service. Optionally, you can specify\
        \ certain VPCs for the rule to check."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::VPC"
        - "AWS::EC2::VPCEndpoint"
      Compliance: {}
      ConfigRuleName: "securityhub-vpc-endpoint-enabled-sagemaker-metrics-205f013a"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "VPC_ENDPOINT_ENABLED"
        Owner: "AWS"
      InputParameters:
        serviceNames: "sagemaker.metrics"
  ConfigConfigRule00securityhubrdsinstanceeventnotificationsconfigured1fcb18c900PK09U:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether an Amazon RDS Event subscription for\
        \ RDS instances is configured to notify on event categories of both \"maintenance\"\
        , \"configuration change\", and \"failure\"."
      Scope:
        ComplianceResourceTypes:
        - "AWS::RDS::EventSubscription"
      Compliance: {}
      ConfigRuleName: "securityhub-rds-instance-event-notifications-configured-1fcb18c9"
      Source:
        SourceIdentifier: "arn:aws:lambda:ap-southeast-1:338458120468:function:SecurityHubConfigRule"
        SourceDetails:
        - EventSource: "aws.config"
          MessageType: "ConfigurationItemChangeNotification"
        Owner: "CUSTOM_LAMBDA"
      InputParameters: {}
  EC2VolumeAttachment00vol086aefbd878266b9500jiIbI:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VolumeAttachment"
    DeletionPolicy: "Retain"
    Properties:
      InstanceId: "i-020d34aa93d2d7e6f"
      VolumeId: "vol-086aefbd878266b95"
      Device: "/dev/sda1"
  ConfigConfigRule00securityhubec2instancenopublicipe6e81b8200vUWIw:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether Amazon Elastic Compute Cloud (Amazon EC2) instances\
        \ have a public IP association. The rule is NON_COMPLIANT if the publicIp\
        \ field is present in the Amazon EC2 instance configuration item. This rule\
        \ applies only to IPv4."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-ec2-instance-no-public-ip-e6e81b82"
      Source:
        SourceIdentifier: "EC2_INSTANCE_NO_PUBLIC_IP"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubneptuneclustersnapshotencryptedc2e9f17400UBO0A:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if an Amazon Neptune DB cluster has snapshots encrypted.\
        \ The rule is NON_COMPLIANT if a Neptune cluster does not have snapshots encrypted."
      Scope:
        ComplianceResourceTypes:
        - "AWS::RDS::DBClusterSnapshot"
      Compliance: {}
      ConfigRuleName: "securityhub-neptune-cluster-snapshot-encrypted-c2e9f174"
      Source:
        SourceIdentifier: "NEPTUNE_CLUSTER_SNAPSHOT_ENCRYPTED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubvpcsgopenonlytoauthorizedportsbc3e78e300pwv5P:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether the security groups allow unrestricted\
        \ incoming traffic. The control fails if ports allow unrestricted traffic\
        \ on ports other than 80 and 443, which are default values for parameter authorizedTcpPorts."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-vpc-sg-open-only-to-authorized-ports-bc3e78e3"
      Source:
        SourceIdentifier: "VPC_SG_OPEN_ONLY_TO_AUTHORIZED_PORTS"
        Owner: "AWS"
      InputParameters:
        authorizedTcpPorts: "80,443"
  EC2KeyPair00buildimgkeypair0072YXX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::KeyPair"
    DeletionPolicy: "Retain"
    Properties:
      KeyName: "build-img-keypair"
      KeyType: "rsa"
      PublicKeyMaterial: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDEf5lzvXI2n/xJCLDwgCiwJpw100Lu4Y716IkonKVTvtznjGkPPJcjPEzMiNXbwfFdQLddsCLXqPJvr+cZaozD340IN9mrlD3ca1dwlM++YY5nKy43gnGFoH66IEWitRecedoZh9CO6cNou09i+QlJjL+gqH0VtTblw/dCpy4KTnA3+73YtpSKIi2hruVFeSjlYVZxBkKZ6akGSLcBZGMmO7vP/5KW39LyVRRwU/N2uzM6L59ft4m5nYGChjelDVVw925P5G+W9eKjA8o3qLPuLzyZDoEbvjXr14NTGAPHRYa69uycGSEhBrWftvvZcXzzhjdlhNv9vbx1oa0qBB21\
        \ build-img-keypair\n"
      Tags: []
  ConfigConfigRule00securityhubguarddutyrdsprotectionenablede1834bd000Z2Q53:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if Amazon Relational Database Service (Amazon RDS) protection\
        \ is enabled for an Amazon GuardDuty detector in your account. The rule is\
        \ NON_COMPLIANT if the Amazon RDS protection feature in Amazon GuardDuty is\
        \ not enabled for you account."
      Scope:
        ComplianceResourceTypes:
        - "AWS::GuardDuty::Detector"
      Compliance: {}
      ConfigRuleName: "securityhub-guardduty-rds-protection-enabled-e1834bd0"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "GUARDDUTY_RDS_PROTECTION_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  EC2VolumeAttachment00vol0057ef600adf6805f00LAB2y:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VolumeAttachment"
    DeletionPolicy: "Retain"
    Properties:
      InstanceId: "i-0332276dc3494333e"
      VolumeId: "vol-0057ef600adf6805f"
      Device: "/dev/xvda"
  ConfigConfigRule00securityhubecsfargatelatestplatformversionc64a962100Rk7XY:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks if ECS Fargate Services is running on the\
        \ latest Fargate platform version. This control fails if \"PlatformVersion\"\
        \ is not set to \"LATEST\" "
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-ecs-fargate-latest-platform-version-c64a9621"
      Source:
        SourceIdentifier: "ECS_FARGATE_LATEST_PLATFORM_VERSION"
        Owner: "AWS"
      InputParameters:
        latestLinuxVersion: "1.4.0"
        latestWindowsVersion: "1.0.0"
  ApiGatewayDeployment00jql5kv008nao2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::Deployment"
    DeletionPolicy: "Retain"
    Properties:
      RestApiId:
        Ref: "ApiGatewayRestApi005nwb46kira00y5IhC"
  ApiGatewayDeployment00fnmcje00RNWMa:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::Deployment"
    DeletionPolicy: "Retain"
    Properties:
      RestApiId:
        Ref: "ApiGatewayRestApi005nwb46kira00y5IhC"
  ConfigConfigRule00securityhubvpcendpointenabledsagemakerapi8d14dc5000gvb4B:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if each service specified in the parameter has an Amazon\
        \ VPC endpoint. The rule is NON_COMPLIANT if Amazon VPC does not have a VPC\
        \ endpoint created for each specified service. Optionally, you can specify\
        \ certain VPCs for the rule to check."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::VPC"
        - "AWS::EC2::VPCEndpoint"
      Compliance: {}
      ConfigRuleName: "securityhub-vpc-endpoint-enabled-sagemaker-api-8d14dc50"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "VPC_ENDPOINT_ENABLED"
        Owner: "AWS"
      InputParameters:
        serviceNames: "sagemaker.api"
  ApiGatewayDeployment00drbt1h00Wv6zP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::Deployment"
    DeletionPolicy: "Retain"
    Properties:
      RestApiId:
        Ref: "ApiGatewayRestApi005nwb46kira00y5IhC"
  EC2KeyPair00tapotest200vFdSc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::KeyPair"
    DeletionPolicy: "Retain"
    Properties:
      KeyName: "tapo-test-2"
      KeyType: "rsa"
      PublicKeyMaterial: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC8QoTpjmWePDGH2DbiLZ80RLMA24pJXgtFkQb/taBrxuRfE9W72QykGGqR/gp0R2hAFntqXhlu4O6gj9yi7yjx/lIvRKDYuAHMBEvN0+uKB92EdJxSKj3qBzUpfzJlH64LzHer5r3SvZwfwCCRs7d6bAHnBP875rqAiiwyX+rZQQAGNTQlPpDbdd2zBt60cLjjwSzvjt/NLPuTvZWtxlEYdYpVGGUM97L7E9T9q/r1Aqe3RQ2+knw2Fc0JhpDXhTxY4jW0G2EIlPAeea3tJRDF0C36BQ+sPYEDwznE45G2hmEUDKqIFOEtOcmJJxLCiKx3wfF0qKK2/n+llz6BpcwR\
        \ tapo-test-2\n"
      Tags: []
  EC2KeyPair00pilotsshtestshengkwankeypair00wkTXF:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::KeyPair"
    DeletionPolicy: "Retain"
    Properties:
      KeyName: "pilot-ssh-test-shengkwan-key-pair"
      KeyType: "rsa"
      PublicKeyMaterial: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC3wWpc3+kUmX5xjTJaI2Bm9q64vDXHMeMyiT6BwXuB7GABTEY+cgynwBkB1AlzkOVOJm27SV5EhrCQkvhZUTH7yYbXHY6ULAgik/pG1YgFGFVXnvWD7z64mUiWaTTBq6kISNisomXsgk1pH2hJB8TUQFzDRA9AUbl8AFjbrJ4hPJevZGmWY1sAHFd5TpCbKFF592l/L3lNPztCdqFGqb5c8rYjsd8B0pVDQzWVVlOCEoiHkFQtTPPyjqaGuZovtggbvFxpU54cypt0apIDreV1U3r1B7bEoFFEJBUFvNOlO/IwgTo6gml+MveEyX+ANFgplulWN5poeQqSRUqyj4xD\
        \ pilot-ssh-test-shengkwan-key-pair\n"
      Tags: []
  ConfigConfigRule00securityhubebssnapshotpublicrestorablecheck3372cb7900R9SJ9:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether Amazon Elastic Block Store snapshots are not publicly\
        \ restorable."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-ebs-snapshot-public-restorable-check-3372cb79"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "EBS_SNAPSHOT_PUBLIC_RESTORABLE_CHECK"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubsecretsmanagerrotationenabledchecke864011000e4Fvm:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether AWS Secrets Manager secret has rotation enabled."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-secretsmanager-rotation-enabled-check-e8640110"
      Source:
        SourceIdentifier: "SECRETSMANAGER_ROTATION_ENABLED_CHECK"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubiaminlinepolicyblockedkmsactions1ba83d9500uGPnd:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks that the inline policies attached to your IAM users, roles,\
        \ and groups do not allow blocked actions on all AWS Key Management Service\
        \ (KMS) keys. The rule is NON_COMPLIANT if any blocked action is allowed on\
        \ all KMS keys in an inline policy."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-iam-inline-policy-blocked-kms-actions-1ba83d95"
      Source:
        SourceIdentifier: "IAM_INLINE_POLICY_BLOCKED_KMS_ACTIONS"
        Owner: "AWS"
      InputParameters:
        blockedActionsPatterns: "kms:Decrypt,kms:ReEncryptFrom"
  ConfigConfigRule00securityhubwafv2webaclnotempty5a8616d200olNKp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if a WAFv2 Web ACL contains any WAF rules or WAF rule groups.\
        \ This rule is NON_COMPLIANT if a Web ACL does not contain any WAF rules or\
        \ WAF rule groups."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-wafv2-webacl-not-empty-5a8616d2"
      Source:
        SourceIdentifier: "WAFV2_WEBACL_NOT_EMPTY"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubecscontainerinsightsenabledfa1a8fb400WUQb4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks if ECS clusters have container insights enabled.\
        \ This control fails if container insights are disabled."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-ecs-container-insights-enabled-fa1a8fb4"
      Source:
        SourceIdentifier: "ECS_CONTAINER_INSIGHTS_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ApiGatewayDocumentationVersion0010000W8iSq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::DocumentationVersion"
    DeletionPolicy: "Retain"
    Properties:
      RestApiId:
        Ref: "ApiGatewayRestApi005nwb46kira00y5IhC"
      Description: "1st draft of API documentation"
      DocumentationVersion: "1.0.0"
  ConfigConfigRule00securityhubacmpcarootcadisabled5f4fe66a00r9s3A:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if AWS Private Certificate Authority (AWS Private CA) has\
        \ a root CA that is disabled. The rule is NON_COMPLIANT for root CAs with\
        \ status that is not DISABLED."
      Scope:
        ComplianceResourceTypes:
        - "AWS::ACMPCA::CertificateAuthority"
      Compliance: {}
      ConfigRuleName: "securityhub-acm-pca-root-ca-disabled-5f4fe66a"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "ACM_PCA_ROOT_CA_DISABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubguarddutys3protectionenableddefcfe96000BcSa:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if S3 Protection is enabled for an Amazon GuardDuty Detector\
        \ in your account. The rule is NON_COMPLIANT if the S3 Protection feature\
        \ in Amazon GuardDuty is not enabled for your account."
      Scope:
        ComplianceResourceTypes:
        - "AWS::GuardDuty::Detector"
      Compliance: {}
      ConfigRuleName: "securityhub-guardduty-s3-protection-enabled-defcfe96"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "GUARDDUTY_S3_PROTECTION_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubelbcrosszoneloadbalancingenableda6021ea300c4i6w:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether cross-zone load balancing is enabled\
        \ for Classic Load Balancers. This control fails if cross-zone load balancing\
        \ is not enabled for a Classic Load Balancer."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-elb-cross-zone-load-balancing-enabled-a6021ea3"
      Source:
        SourceIdentifier: "ELB_CROSS_ZONE_LOAD_BALANCING_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubec2stoppedinstance6d91189300MtzHq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether there are instances stopped for more than the allowed\
        \ number of days."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-ec2-stopped-instance-6d911893"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "EC2_STOPPED_INSTANCE"
        Owner: "AWS"
      InputParameters:
        AllowedDays: "30"
  ConfigConfigRule00securityhubrdsenhancedmonitoringenabled057859fa00LaMhj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether enhanced monitoring is enabled for Amazon Relational\
        \ Database Service (Amazon RDS) instances."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-rds-enhanced-monitoring-enabled-057859fa"
      Source:
        SourceIdentifier: "RDS_ENHANCED_MONITORING_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubrootaccounthardwaremfaenabledb7caeac200dlTgr:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether users of your AWS account require a hardware multi-factor\
        \ authentication (MFA) device to sign in with root credentials."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-root-account-hardware-mfa-enabled-b7caeac2"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "ROOT_ACCOUNT_HARDWARE_MFA_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubneptuneclustercopytagstosnapshotenabled6b10378a00OXPe2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if an Amazon Neptune cluster is configured to copy all\
        \ tags to snapshots when the snapshots are created. The rule is NON_COMPLIANT\
        \ if 'copyTagsToSnapshot' is set to false."
      Scope:
        ComplianceResourceTypes:
        - "AWS::RDS::DBCluster"
      Compliance: {}
      ConfigRuleName: "securityhub-neptune-cluster-copy-tags-to-snapshot-enabled-6b10378a"
      Source:
        SourceIdentifier: "NEPTUNE_CLUSTER_COPY_TAGS_TO_SNAPSHOT_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubdaxencryptionenabled764bc8a8006I6pe:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks that DynamoDB Accelerator (DAX) clusters are encrypted.\
        \ The rule is NON_COMPLIANT if a DAX cluster is not encrypted."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-dax-encryption-enabled-764bc8a8"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "DAX_ENCRYPTION_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  EC2Subnet00subnet0e7c29cffbb72373f0067i5u:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Subnet"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00AYnOQ"
      MapPublicIpOnLaunch: false
      EnableDns64: false
      AvailabilityZoneId: "apse1-az2"
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      CidrBlock: "10.25.71.16/28"
      Ipv6Native: false
      Tags:
      - Value: "GenAI-Dev-Public-1b (reserved)"
        Key: "Name"
  ConfigConfigRule00securityhubrdsautomaticminorversionupgradeenabled5497ce4c00pOWw7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks if automatic minor version upgrades are enabled\
        \ for the Amazon RDS database instance."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-rds-automatic-minor-version-upgrade-enabled-5497ce4c"
      Source:
        SourceIdentifier: "RDS_AUTOMATIC_MINOR_VERSION_UPGRADE_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubredshiftunrestrictedportaccess33ba5c8300z1gCl:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if security groups associated with an Amazon Redshift cluster\
        \ have inbound rules that allow unrestricted incoming traffic. The rule is\
        \ NON_COMPLIANT if there are inbound rules that allow unrestricted incoming\
        \ traffic to the Redshift cluster port."
      Scope:
        ComplianceResourceTypes:
        - "AWS::Redshift::Cluster"
      Compliance: {}
      ConfigRuleName: "securityhub-redshift-unrestricted-port-access-33ba5c83"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "REDSHIFT_UNRESTRICTED_PORT_ACCESS"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubelasticachereplgrpencryptedintransit841dcd4c00I75FI:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether ElastiCache replication groups have\
        \ encryption-in-transit enabled."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-elasticache-repl-grp-encrypted-in-transit-841dcd4c"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "ELASTICACHE_REPL_GRP_ENCRYPTED_IN_TRANSIT"
        Owner: "AWS"
      InputParameters: {}
  EC2KeyPair00nabiltoec2pilot00kvQLn:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::KeyPair"
    DeletionPolicy: "Retain"
    Properties:
      KeyName: "nabil-to-ec2pilot"
      KeyType: "rsa"
      PublicKeyMaterial: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCebU58c67AuhFAz+2YWUicjNm2BS5Wt2sWbj8Go8qx5sjwS4mkj5e7Ps/t3byb+U49hNWe7BW5c3SphhjkN5AX9ra+2F7lG22yqJwi2cvz7DwOArar2nDcYY61TfYGqZ/a+vUkt3RDCINY88Ino6BtYxpvQvcEKGizjENJdWUM8AgOPvws3F61TPPKVbsRYcquJ7vABocI4QRQyyByuY7RvdqP7XoMdLJ0b0sSDaVkdR3lMMIhrtWZQVZZBYrOaCZdDKgsJHV3BWUltMgjlullJc7iaJ4Rx2Efh+dyDO+j/dnN0dt1lyRykeuRv4LFuBqya0WvLaBqRr8uqIKEQ8TP\
        \ nabil-to-ec2pilot\n"
      Tags: []
  CloudFrontCachePolicy007e5fad67ee984ad0b05a394999eefc1a00xXv8p:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::CloudFront::CachePolicy"
    DeletionPolicy: "Retain"
    Properties:
      CachePolicyConfig:
        Comment: "Amplify cache policy for static content"
        MinTTL: 0
        MaxTTL: 3.1536E7
        ParametersInCacheKeyAndForwardedToOrigin:
          QueryStringsConfig:
            QueryStringBehavior: "none"
          EnableAcceptEncodingBrotli: true
          HeadersConfig:
            HeaderBehavior: "whitelist"
            Headers:
            - "Authorization"
            - "Host"
          CookiesConfig:
            CookieBehavior: "none"
          EnableAcceptEncodingGzip: true
        DefaultTTL: 0
        Name: "Managed-Amplify-StaticContent"
  EC2VPCDHCPOptionsAssociation00vpc02790342fee4ebf9f00XufNl:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VPCDHCPOptionsAssociation"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00AYnOQ"
      DhcpOptionsId:
        Ref: "EC2DHCPOptions00dopt04b52e307ae8973a200HWJGf"
  ApiGatewayDeployment0082dgn500eWpj1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::Deployment"
    DeletionPolicy: "Retain"
    Properties:
      RestApiId:
        Ref: "ApiGatewayRestApi005nwb46kira00y5IhC"
  ConfigConfigRule00securityhubvpcendpointenabledmonitoring2f50b06600sCTpW:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if each service specified in the parameter has an Amazon\
        \ VPC endpoint. The rule is NON_COMPLIANT if Amazon VPC does not have a VPC\
        \ endpoint created for each specified service. Optionally, you can specify\
        \ certain VPCs for the rule to check."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::VPC"
        - "AWS::EC2::VPCEndpoint"
      Compliance: {}
      ConfigRuleName: "securityhub-vpc-endpoint-enabled-monitoring-2f50b066"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "VPC_ENDPOINT_ENABLED"
        Owner: "AWS"
      InputParameters:
        serviceNames: "monitoring"
  ConfigConfigRule00securityhubvpcendpointenabledsagemakerftrstrrntm0e2db2ee00ezHlx:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if each service specified in the parameter has an Amazon\
        \ VPC endpoint. The rule is NON_COMPLIANT if Amazon VPC does not have a VPC\
        \ endpoint created for each specified service. Optionally, you can specify\
        \ certain VPCs for the rule to check."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::VPC"
        - "AWS::EC2::VPCEndpoint"
      Compliance: {}
      ConfigRuleName: "securityhub-vpc-endpoint-enabled-sagemaker-ftrstr-rntm-0e2db2ee"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "VPC_ENDPOINT_ENABLED"
        Owner: "AWS"
      InputParameters:
        serviceNames: "sagemaker.featurestore-runtime"
  ConfigConfigRule00securityhubservicevpcendpointenabled3fbbebe9001bl2U:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether Service Endpoint for the service provided in rule\
        \ parameter is created for each Amazon VPC. The rule returns NON_COMPLIANT\
        \ if an Amazon VPC doesn't have a VPC endpoint created for the service."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-service-vpc-endpoint-enabled-3fbbebe9"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "SERVICE_VPC_ENDPOINT_ENABLED"
        Owner: "AWS"
      InputParameters:
        serviceName: "ec2"
  ConfigConfigRule00securityhubec2transitgatewayautovpcattachdisabled2a20c21200LhRF1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks if EC2 Transit Gateways are automatically\
        \ accepting shared VPC attachments requests. This control will fail for a\
        \ Transit Gateway that automatically accept shared VPC attachment requests."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-ec2-transit-gateway-auto-vpc-attach-disabled-2a20c212"
      Source:
        SourceIdentifier: "EC2_TRANSIT_GATEWAY_AUTO_VPC_ATTACH_DISABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubelasticacheredisclusterautomaticbackupcheck145c608400Qoc11:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control evaluates if the Amazon ElastiCache for Redis clusters\
        \ have automatic backup enabled."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-elasticache-redis-cluster-automatic-backup-check-145c6084"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "ELASTICACHE_REDIS_CLUSTER_AUTOMATIC_BACKUP_CHECK"
        Owner: "AWS"
      InputParameters:
        snapshotRetentionPeriod: "1"
  ConfigConfigRule00securityhubkinesisfirehosedeliverystreamencrypted21a0b41a00r6evh:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if Amazon Kinesis Data Firehose delivery streams are encrypted\
        \ at rest with server-side encryption. The rule is NON_COMPLIANT if a Kinesis\
        \ Data Firehose delivery stream is not encrypted at rest with server-side\
        \ encryption."
      Scope:
        ComplianceResourceTypes:
        - "AWS::KinesisFirehose::DeliveryStream"
      Compliance: {}
      ConfigRuleName: "securityhub-kinesis-firehose-delivery-stream-encrypted-21a0b41a"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "KINESIS_FIREHOSE_DELIVERY_STREAM_ENCRYPTED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubvpcnetworkaclunusedcheckca10872c00IBFsb:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if there are unused Network Access Control Lists (NACLs).\
        \ The rule is NON_COMPLIANT if an NACL is not associated with a subnet."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-vpc-network-acl-unused-check-ca10872c"
      Source:
        SourceIdentifier: "VPC_NETWORK_ACL_UNUSED_CHECK"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubiampasswordpolicyrecommendeddefaults183f1f8100XLK7X:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether the account password policy for IAM users meets\
        \ the specified requirements."
      Scope:
        ComplianceResourceTypes:
        - "AWS::IAM::User"
      Compliance: {}
      ConfigRuleName: "securityhub-iam-password-policy-recommended-defaults-183f1f81"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "IAM_PASSWORD_POLICY"
        Owner: "AWS"
      InputParameters:
        MinimumPasswordLength: "8"
        RequireUppercaseCharacters: "true"
        RequireLowercaseCharacters: "true"
        RequireNumbers: "true"
        RequireSymbols: "true"
  ConfigConfigRule00securityhubrdssnapshotencrypted4503a60b00CyOp0:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether Amazon Relational Database Service (Amazon RDS)\
        \ DB snapshots are encrypted. The rule is NON_COMPLIANT, if Amazon RDS DB\
        \ snapshots are not encrypted."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-rds-snapshot-encrypted-4503a60b"
      Source:
        SourceIdentifier: "RDS_SNAPSHOT_ENCRYPTED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubelasticachesubnetgroupcheck571874a700Y30Sy:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks if ElastiCache clusters are configured with\
        \ a custom subnet group."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-elasticache-subnet-group-check-571874a7"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "ELASTICACHE_SUBNET_GROUP_CHECK"
        Owner: "AWS"
      InputParameters: {}
  CloudFrontOriginRequestPolicy00775133bc15f249f9abeaafb2e0bf67d200Ez21x:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::CloudFront::OriginRequestPolicy"
    DeletionPolicy: "Retain"
    Properties:
      OriginRequestPolicyConfig:
        QueryStringsConfig:
          QueryStringBehavior: "all"
        Comment: "Policy for Elemental MediaTailor Origin"
        HeadersConfig:
          HeaderBehavior: "whitelist"
          Headers:
          - "origin"
          - "access-control-request-headers"
          - "x-forwarded-for"
          - "access-control-request-method"
          - "user-agent"
        CookiesConfig:
          CookieBehavior: "none"
        Name: "Managed-Elemental-MediaTailor-PersonalizedManifests"
  AthenaWorkGroup00primary00hnHBq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Athena::WorkGroup"
    DeletionPolicy: "Retain"
    Properties:
      WorkGroupConfiguration:
        RequesterPaysEnabled: false
        EnforceWorkGroupConfiguration: false
        EngineVersion:
          SelectedEngineVersion: "AUTO"
        PublishCloudWatchMetricsEnabled: false
        ResultConfiguration: {}
      State: "ENABLED"
      Tags: []
      Name: "primary"
  ConfigConfigRule00securityhubrdsnodefaultportsa11914fa00s9UgK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether RDS instances use the default port\
        \ of that database engine."
      Scope:
        ComplianceResourceTypes:
        - "AWS::RDS::DBInstance"
      Compliance: {}
      ConfigRuleName: "securityhub-rds-no-default-ports-a11914fa"
      Source:
        SourceIdentifier: "arn:aws:lambda:ap-southeast-1:338458120468:function:SecurityHubConfigRule"
        SourceDetails:
        - EventSource: "aws.config"
          MessageType: "ConfigurationItemChangeNotification"
        Owner: "CUSTOM_LAMBDA"
      InputParameters: {}
  ConfigConfigRule00securityhubvpcsgportrestrictioncheck9258fc7900J4eRw:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if security groups restrict incoming TCP or UDP traffic\
        \ from IPv4 (0.0.0.0/0) or IPv6 (::/0) to specified ports. The rule is NON_COMPLIANT\
        \ if security groups allow incoming traffic over the full IP range from specified\
        \ protocols to specified ports."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::SecurityGroup"
      Compliance: {}
      ConfigRuleName: "securityhub-vpc-sg-port-restriction-check-9258fc79"
      Source:
        SourceIdentifier: "VPC_SG_PORT_RESTRICTION_CHECK"
        Owner: "AWS"
      InputParameters:
        restrictPorts: "22, 3389"
        ipType: "IPv6"
  ConfigConfigRule00securityhubemrmasternopublicip0de7d61f007Nigr:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether Amazon Elastic MapReduce (EMR) clusters' master\
        \ nodes have public IPs. The rule is NON_COMPLIANT if the master node has\
        \ a public IP."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-emr-master-no-public-ip-0de7d61f"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "EMR_MASTER_NO_PUBLIC_IP"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubinspectorecrscanenabled98cdb97c00gLgl2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if Amazon Inspector V2 ECR scanning is activated for your\
        \ single or multi-account environment to detect potential software vulnerabilities\
        \ in your container images. The rule is NON_COMPLIANT if ECR scanning is not\
        \ activated."
      Scope:
        ComplianceResourceTypes:
        - "AWS::::Account"
      Compliance: {}
      ConfigRuleName: "securityhub-inspector-ecr-scan-enabled-98cdb97c"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "INSPECTOR_ECR_SCAN_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubsagemakerendpointconfigprodinstancecount63503fdf00osM3Y:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if Amazon SageMaker endpoint configurations have production\
        \ variants `InitialInstanceCount` set to a value greater than 1. The rule\
        \ is NON_COMPLIANT if production variants `InitialInstanceCount` is equal\
        \ to 1."
      Scope:
        ComplianceResourceTypes:
        - "AWS::SageMaker::EndpointConfig"
      Compliance: {}
      ConfigRuleName: "securityhub-sagemaker-endpoint-config-prod-instance-count-63503fdf"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "SAGEMAKER_ENDPOINT_CONFIG_PROD_INSTANCE_COUNT"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubcodebuildreportgroupencryptedatrest9fc0945500yoFrI:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if CodeBuild ReportGroup is encrypted at rest, The rule\
        \ is NON_COMPLIANT if CodeBuild ReportGroup is not encrypted at rest"
      Scope:
        ComplianceResourceTypes:
        - "AWS::CodeBuild::ReportGroup"
      Compliance: {}
      ConfigRuleName: "securityhub-codebuild-report-group-encrypted-at-rest-9fc09455"
      Source:
        SourceIdentifier: "CODEBUILD_REPORT_GROUP_ENCRYPTED_AT_REST"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubsagemakernotebookinstancerootaccesscheckf3b1d26a00t5J8P:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if the Amazon SageMaker RootAccess setting is enabled for\
        \ Amazon SageMaker notebook instances. The rule is NON_COMPLIANT if the RootAccess\
        \ setting is set to `Enabled` for an Amazon SageMaker notebook instance."
      Scope:
        ComplianceResourceTypes:
        - "AWS::SageMaker::NotebookInstance"
      Compliance: {}
      ConfigRuleName: "securityhub-sagemaker-notebook-instance-root-access-check-f3b1d26a"
      Source:
        SourceIdentifier: "SAGEMAKER_NOTEBOOK_INSTANCE_ROOT_ACCESS_CHECK"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubacmcertificateexpirationcheck1a88bd7200OuVhj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Imported ACM certificates should be renewed within the number\
        \ of days specified."
      Scope:
        ComplianceResourceTypes:
        - "AWS::ACM::Certificate"
      Compliance: {}
      ConfigRuleName: "securityhub-acm-certificate-expiration-check-1a88bd72"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "ACM_CERTIFICATE_EXPIRATION_CHECK"
        Owner: "AWS"
      InputParameters:
        daysToExpiration: "30"
  ConfigConfigRule00securityhubeksclusterlogenabledb146109800jc7db:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if an Amazon Elastic Kubernetes Service (Amazon EKS) cluster\
        \ is configured with logging enabled. The rule is NON_COMPLIANT if logging\
        \ for Amazon EKS clusters is not enabled or if logging is not enabled with\
        \ the log type mentioned."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EKS::Cluster"
      Compliance: {}
      ConfigRuleName: "securityhub-eks-cluster-log-enabled-b1461098"
      Source:
        SourceIdentifier: "EKS_CLUSTER_LOG_ENABLED"
        Owner: "AWS"
      InputParameters:
        logTypes: "audit"
  ConfigConfigRule00securityhubdatasynctaskloggingenabledd97467b800XJNs9:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if DataSync Task has logging enabled. The rule is NON_COMPLIANT\
        \ if DataSync Task does not have logging enabled."
      Scope:
        ComplianceResourceTypes:
        - "AWS::DataSync::Task"
      Compliance: {}
      ConfigRuleName: "securityhub-datasync-task-logging-enabled-d97467b8"
      Source:
        SourceIdentifier: "DATASYNC_TASK_LOGGING_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubautoscalingmultipleazcb1220dd00hBl9P:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether an Auto Scaling group spans multiple\
        \ Availability Zones. The control fails if an Auto Scaling group does not\
        \ span multiple availability zones."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-autoscaling-multiple-az-cb1220dd"
      Source:
        SourceIdentifier: "AUTOSCALING_MULTIPLE_AZ"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubiamsupportpolicyinuse2009ac6600qT8An:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks that the 'AWSSupportAccess' managed policy is attached\
        \ to any IAM user, group, or role."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-iam-support-policy-in-use-2009ac66"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "IAM_POLICY_IN_USE"
        Owner: "AWS"
      InputParameters:
        policyARN: "arn:aws:iam::aws:policy/AWSSupportAccess"
        policyUsageType: "ANY"
  EC2KeyPair00akashredhatec2key00XDqM3:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::KeyPair"
    DeletionPolicy: "Retain"
    Properties:
      KeyName: "akash-redhat-ec2-key"
      KeyType: "rsa"
      PublicKeyMaterial: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCWDYc8crVgtBmYWbaZ5qDbyfdU8fxJ6LvHjuX/Oi/cEjrTluhTklfdeoWa1FogVYPKSsp7uUME07KznOiAp9UXFPBK5U80/WtChV0Q8TR0tqHrvySW3LLb9BxHapQS5pmo5fQsnSqo3xsVCDjx2sHdeypT7F3zilqC7AUKFiKcW9kARcKY/76E+gbWy05a3s1/ctUiqjfnH+GNDA5LUXahmm28krhpbOvgsh0+J5CStCihGQkAy21TZ8bpO+INp96lnyu18lT0LN05Z9rOqJMmPBVcuOahx2NUCYX2VIi3ELTHwnjBjpP5Y10KyS3y2gGeLNxTX8DCecbCoWIdEu3X\
        \ akash-redhat-ec2-key\n"
      Tags: []
  ConfigConfigRule00securityhubopensearchdatanodefaulttolerance25fd3f5500keiea:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether Amazon OpenSearch Service domains\
        \ are configured with at least three data nodes and \"zoneAwarenessEnabled\"\
        \ is true."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-opensearch-data-node-fault-tolerance-25fd3f55"
      Source:
        SourceIdentifier: "OPENSEARCH_DATA_NODE_FAULT_TOLERANCE"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubneptuneclustercloudwatchlogexportenabled241a999900BclMi:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if an Amazon Neptune cluster has CloudWatch Logs export\
        \ enabled for audit logs. The rule is NON_COMPLIANT if a Neptune cluster does\
        \ not have CloudWatch Logs export enabled for audit logs."
      Scope:
        ComplianceResourceTypes:
        - "AWS::RDS::DBCluster"
      Compliance: {}
      ConfigRuleName: "securityhub-neptune-cluster-cloudwatch-log-export-enabled-241a9999"
      Source:
        SourceIdentifier: "NEPTUNE_CLUSTER_CLOUDWATCH_LOG_EXPORT_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  EC2SecurityGroup00sg03faa669e447f1310008Q2mE:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "rebekah-public-ec2-sg"
      GroupName: "rebekah-public-ec2-sg"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00AYnOQ"
      SecurityGroupIngress:
      - IpProtocol: "-1"
        Description: "cVPN to Public"
        FromPort: -1
        SourceSecurityGroupId: "sg-0a6c63d92a738a24c"
        ToPort: -1
        SourceSecurityGroupOwnerId: "343218203122"
      SecurityGroupEgress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
  ConfigConfigRule00securityhubvpcendpointenabledsecretsmanager7008c9da00rUlfO:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if each service specified in the parameter has an Amazon\
        \ VPC endpoint. The rule is NON_COMPLIANT if Amazon VPC does not have a VPC\
        \ endpoint created for each specified service. Optionally, you can specify\
        \ certain VPCs for the rule to check."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::VPC"
        - "AWS::EC2::VPCEndpoint"
      Compliance: {}
      ConfigRuleName: "securityhub-vpc-endpoint-enabled-secretsmanager-7008c9da"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "VPC_ENDPOINT_ENABLED"
        Owner: "AWS"
      InputParameters:
        serviceNames: "secretsmanager"
  ConfigConfigRule00securityhubelbpredefinedsecuritypolicysslcheck73b6b73a00KaPi2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether your Classic Load Balancer SSL listeners\
        \ use the predefined policy ELBSecurityPolicy-TLS-1-2-2017-01."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-elb-predefined-security-policy-ssl-check-73b6b73a"
      Source:
        SourceIdentifier: "ELB_PREDEFINED_SECURITY_POLICY_SSL_CHECK"
        Owner: "AWS"
      InputParameters:
        predefinedPolicyName: "ELBSecurityPolicy-TLS-1-2-2017-01"
  ConfigConfigRule00securityhubefsfilesystemctencrypted93b099ad00fCCdk:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if Amazon Elastic File System (Amazon EFS) encrypts data\
        \ with AWS Key Management Service (AWS KMS). The rule is NON_COMPLIANT if\
        \ a file system is not encrypted. Optionally, you can check if a file system\
        \ is not encrypted with specified KMS keys"
      Scope:
        ComplianceResourceTypes:
        - "AWS::EFS::FileSystem"
      Compliance: {}
      ConfigRuleName: "securityhub-efs-filesystem-ct-encrypted-93b099ad"
      Source:
        SourceIdentifier: "EFS_FILESYSTEM_CT_ENCRYPTED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubwafv2rulegrouploggingenabled27d0e12200xNUL2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if Amazon CloudWatch security metrics collection on AWS\
        \ WAFv2 rule groups is enabled. The rule is NON_COMPLIANT if the 'VisibilityConfig.CloudWatchMetricsEnabled'\
        \ field is set to false."
      Scope:
        ComplianceResourceTypes:
        - "AWS::WAFv2::RuleGroup"
      Compliance: {}
      ConfigRuleName: "securityhub-wafv2-rulegroup-logging-enabled-27d0e122"
      Source:
        SourceIdentifier: "WAFV2_RULEGROUP_LOGGING_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubfsxlustrecopytagstobackupsae52e5fd00qRgcY:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if the Amazon FSx for Lustre file systems are configured\
        \ to copy tags to backups. The rule is NON_COMPLIANT if Lustre file systems\
        \ are not configured to copy tags to backups."
      Scope:
        ComplianceResourceTypes:
        - "AWS::FSx::FileSystem"
      Compliance: {}
      ConfigRuleName: "securityhub-fsx-lustre-copy-tags-to-backups-ae52e5fd"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "FSX_LUSTRE_COPY_TAGS_TO_BACKUPS"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubemrblockpublicaccess8caff32d00uEEjA:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if an account with Amazon EMR has block public access settings\
        \ enabled. The rule is NON_COMPLIANT if BlockPublicSecurityGroupRules is false,\
        \ or if true, ports other than Port 22 are listed in PermittedPublicSecurityGroupRuleRanges."
      Scope:
        ComplianceResourceTypes:
        - "AWS::::Account"
      Compliance: {}
      ConfigRuleName: "securityhub-emr-block-public-access-8caff32d"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "EMR_BLOCK_PUBLIC_ACCESS"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubvpcflowlogsenabled5b2e4f2d00ZbPvE:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether Amazon Virtual Private Cloud flow logs are found\
        \ and enabled for Amazon VPC."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-vpc-flow-logs-enabled-5b2e4f2d"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "VPC_FLOW_LOGS_ENABLED"
        Owner: "AWS"
      InputParameters:
        trafficType: "REJECT"
  EC2SubnetNetworkAclAssociation00aclassoc0dff8019b8b281bd900W0MmE:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    DeletionPolicy: "Retain"
    Properties:
      NetworkAclId:
        Ref: "EC2NetworkAcl00acl0035712838ecf942d00iFvOh"
      SubnetId:
        Ref: "EC2Subnet00subnet060714d7ed3b1128b00Pr6SK"
  ConfigConfigRule00securityhubelasticachereplgrpredisauthenabled11a7cd3000MF6Zg:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks if ElastiCache replication groups have Redis\
        \ AUTH enabled."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-elasticache-repl-grp-redis-auth-enabled-11a7cd30"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "ELASTICACHE_REPL_GRP_REDIS_AUTH_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  EC2VolumeAttachment00vol0c5c3a52ca610e45500wyw49:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VolumeAttachment"
    DeletionPolicy: "Retain"
    Properties:
      InstanceId: "i-0af21fb2531ca410d"
      VolumeId: "vol-0c5c3a52ca610e455"
      Device: "/dev/sda1"
  ConfigConfigRule00securityhubnetfwpolicydefaultactionfragmentpackets432d4e4100MyeJx:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether the default stateless action for fragmented\
        \ packets for a Network Firewall policy is DROP or FORWARD. The control fails\
        \ if PASS is selected."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-netfw-policy-default-action-fragment-packets-432d4e41"
      Source:
        SourceIdentifier: "NETFW_POLICY_DEFAULT_ACTION_FRAGMENT_PACKETS"
        Owner: "AWS"
      InputParameters:
        statelessFragmentDefaultActions: "aws:drop,aws:forward_to_sfe"
  ConfigConfigRule00securityhubvpcendpointenabledstsea0b5ae500otqMW:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if each service specified in the parameter has an Amazon\
        \ VPC endpoint. The rule is NON_COMPLIANT if Amazon VPC does not have a VPC\
        \ endpoint created for each specified service. Optionally, you can specify\
        \ certain VPCs for the rule to check."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::VPC"
        - "AWS::EC2::VPCEndpoint"
      Compliance: {}
      ConfigRuleName: "securityhub-vpc-endpoint-enabled-sts-ea0b5ae5"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "VPC_ENDPOINT_ENABLED"
        Owner: "AWS"
      InputParameters:
        serviceNames: "sts"
  CloudFrontOriginRequestPolicy0059781a5b390341f3afcbaf62929ccde100qzqvN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::CloudFront::OriginRequestPolicy"
    DeletionPolicy: "Retain"
    Properties:
      OriginRequestPolicyConfig:
        QueryStringsConfig:
          QueryStringBehavior: "none"
        Comment: "Policy for custom origin with CORS"
        HeadersConfig:
          HeaderBehavior: "whitelist"
          Headers:
          - "origin"
        CookiesConfig:
          CookieBehavior: "none"
        Name: "Managed-CORS-CustomOrigin"
  ConfigConfigRule00securityhubs3bucketmfadeleteenabled2ce37c59004kODK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if MFA Delete is enabled in the Amazon Simple Storage Service\
        \ (Amazon S3) bucket versioning configuration. The rule is NON_COMPLIANT if\
        \ MFA Delete is not enabled."
      Scope:
        ComplianceResourceTypes:
        - "AWS::S3::Bucket"
      Compliance: {}
      ConfigRuleName: "securityhub-s3-bucket-mfa-delete-enabled-2ce37c59"
      Source:
        SourceIdentifier: "S3_BUCKET_MFA_DELETE_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubopensearchupdatecheckfe4f10fa00dSDok:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if Amazon OpenSearch Service version updates are available\
        \ but not installed. The rule is NON_COMPLIANT for an OpenSearch domain if\
        \ the latest software updates are not installed."
      Scope:
        ComplianceResourceTypes:
        - "AWS::OpenSearch::Domain"
      Compliance: {}
      ConfigRuleName: "securityhub-opensearch-update-check-fe4f10fa"
      Source:
        SourceIdentifier: "OPENSEARCH_UPDATE_CHECK"
        Owner: "AWS"
      InputParameters: {}
  EC2SecurityGroup00sg0ef00776c538db14200ogvsJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "For connection to managed instances Private endpoints"
      GroupName: "GenAI-Pilot-Private-Internal-to-VPC"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00AYnOQ"
      SecurityGroupIngress:
      - CidrIp:
          Fn::GetAtt:
          - "EC2VPC00vpc02790342fee4ebf9f00AYnOQ"
          - "CidrBlock"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
      SecurityGroupEgress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
  ConfigConfigRule00securityhubcodebuildprojectsourcerepourlcheck6799beac009o3JI:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether the GitHub or Bitbucket source repository URL contains\
        \ either personal access tokens or user name and password."
      Scope:
        ComplianceResourceTypes:
        - "AWS::CodeBuild::Project"
      Compliance: {}
      ConfigRuleName: "securityhub-codebuild-project-source-repo-url-check-6799beac"
      Source:
        SourceIdentifier: "CODEBUILD_PROJECT_SOURCE_REPO_URL_CHECK"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubcloudtraillogfilevalidationenabledfcbfe6fc00FbbEQ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether AWS CloudTrail creates a signed digest file with\
        \ logs."
      Scope:
        ComplianceResourceTypes:
        - "AWS::CloudTrail::Trail"
      Compliance: {}
      ConfigRuleName: "securityhub-cloud-trail-log-file-validation-enabled-fcbfe6fc"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "CLOUD_TRAIL_LOG_FILE_VALIDATION_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubalbhttptohttpsredirectioncheck039f8bf500Sz1PB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether HTTP to HTTPS redirection is configured on all\
        \ HTTP listeners of Application Load Balancers. The rule is NON_COMPLIANT\
        \ if one or more HTTP listeners of Application Load Balancers do not have\
        \ HTTP to HTTPS redirection configured."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-alb-http-to-https-redirection-check-039f8bf5"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "ALB_HTTP_TO_HTTPS_REDIRECTION_CHECK"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubfsxopenzfscopytagsenabled01f7fd6c006ophM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if the Amazon FSx for OpenZFS file systems are configured\
        \ to copy tags to backups and volumes. The rule is NON_COMPLIANT if FSx for\
        \ OpenZFS file systems are not configured to copy tags to backups and volumes."
      Scope:
        ComplianceResourceTypes:
        - "AWS::FSx::FileSystem"
      Compliance: {}
      ConfigRuleName: "securityhub-fsx-openzfs-copy-tags-enabled-01f7fd6c"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "FSX_OPENZFS_COPY_TAGS_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubvpcendpointenabledsqs8972de6f00R4WW9:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if each service specified in the parameter has an Amazon\
        \ VPC endpoint. The rule is NON_COMPLIANT if Amazon VPC does not have a VPC\
        \ endpoint created for each specified service. Optionally, you can specify\
        \ certain VPCs for the rule to check."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::VPC"
        - "AWS::EC2::VPCEndpoint"
      Compliance: {}
      ConfigRuleName: "securityhub-vpc-endpoint-enabled-sqs-8972de6f"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "VPC_ENDPOINT_ENABLED"
        Owner: "AWS"
      InputParameters:
        serviceNames: "sqs"
  ConfigConfigRule00securityhubinspectorlambdacodescanenabled5e84704700eJ2cg:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if Amazon Inspector V2 Lambda code scanning is activated\
        \ for your single or multi-account environment to detect potential code vulnerabilities.\
        \ The rule is NON_COMPLIANT if Lambda code scanning is not activated."
      Scope:
        ComplianceResourceTypes:
        - "AWS::::Account"
      Compliance: {}
      ConfigRuleName: "securityhub-inspector-lambda-code-scan-enabled-5e847047"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "INSPECTOR_LAMBDA_CODE_SCAN_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubiampolicyblacklistedcheckcfd9915500owooy:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks in each AWS Identity and Access Management (IAM) resource,\
        \ if a policy Amazon Resource Name (ARN) in the input parameter is attached\
        \ to the IAM resource. The rule is NON_COMPLIANT if the policy ARN is attached\
        \ to the IAM resource."
      Scope:
        ComplianceResourceTypes:
        - "AWS::IAM::Role"
        - "AWS::IAM::User"
        - "AWS::IAM::Group"
      Compliance: {}
      ConfigRuleName: "securityhub-iam-policy-blacklisted-check-cfd99155"
      Source:
        SourceIdentifier: "IAM_POLICY_BLACKLISTED_CHECK"
        Owner: "AWS"
      InputParameters:
        policyArns: "arn:aws:iam::aws:policy/AWSCloudShellFullAccess, arn:aws-us-gov:iam::aws:policy/AWSCloudShellFullAccess"
  ConfigConfigRule00securityhubrdsclustermultiazenabled11fa2ab20066pT8:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks if RDS DB clusters are configured with multi-az."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-rds-cluster-multi-az-enabled-11fa2ab2"
      Source:
        SourceIdentifier: "RDS_CLUSTER_MULTI_AZ_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubapigwxrayenabled5a8e701500EJwbc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if AWS X-Ray tracing is enabled on Amazon API Gateway REST\
        \ APIs. The rule is COMPLIANT if X-Ray tracing is enabled and NON_COMPLIANT\
        \ otherwise."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-api-gw-xray-enabled-5a8e7015"
      Source:
        SourceIdentifier: "API_GW_XRAY_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  EC2KeyPair00pilotSGEssien00mmmJw:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::KeyPair"
    DeletionPolicy: "Retain"
    Properties:
      KeyName: "pilot-SG-Essien"
      KeyType: "rsa"
      PublicKeyMaterial: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCkWZCCTfYMHGOxxqV+HDYoKGf3OSNjp+tj3HoLSk2xCiuSIXXD/H88pziuzYyk5js9i8Sjpynybqi1P+jgmbtMdNw1kLL2V8he8kqqGlP2qqKmjfpp9Qz1ulVulMhHCB3AeMYtuK7zjfPkMvF+owQJXxl3C0kG0Vqkwha0eipm95IRRLbjvNtXJeyAOXf3nSxmEPKr1MNmNkCHOSVIc3aWGWsks9h1Cy51ptuc3qAmtxLCSV2x8MGG2cWMajvyH9TS6R1QK4GmGO2nE9I94NtYDXt6Tg3kB68LT0A/4gTFT9ViBW5efjMeUPDPCUUX0d9p9jYvrNlYhM2xB0CVSnC/\
        \ pilot-SG-Essien\n"
      Tags: []
  ConfigConfigRule00securityhubrdsclusterdefaultadmincheckaa858dd3003xPo2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether an RDS database cluster has changed\
        \ the admin username from its default value. This rule will fail if the admin\
        \ username is set to the default value."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-rds-cluster-default-admin-check-aa858dd3"
      Source:
        SourceIdentifier: "RDS_CLUSTER_DEFAULT_ADMIN_CHECK"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubefsaccesspointenforceuseridentitya65ab21400FWptg:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks if Amazon Elastic File System (Amazon EFS)\
        \ access points are configured to enforce a user identity. This control fails\
        \ if 'PosixUser' is not defined or if parameters are provided and there is\
        \ no match in the corresponding parameter."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-efs-access-point-enforce-user-identity-a65ab214"
      Source:
        SourceIdentifier: "EFS_ACCESS_POINT_ENFORCE_USER_IDENTITY"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubelbacmcertificaterequiredf08f538000ximCE:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether a Classic Load Balancer uses HTTPS/SSL\
        \ certificates provided by AWS Certificate Manager."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-elb-acm-certificate-required-f08f5380"
      Source:
        SourceIdentifier: "ELB_ACM_CERTIFICATE_REQUIRED"
        Owner: "AWS"
      InputParameters: {}
  EC2InternetGateway00igw06258a1d9641f4baa00Nqhne:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::InternetGateway"
    DeletionPolicy: "Retain"
    Properties:
      Tags: []
  EC2VPCEndpoint00vpce08984f3f8624c01e100zt677:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VPCEndpoint"
    DeletionPolicy: "Retain"
    Properties:
      PrivateDnsEnabled: true
      IpAddressType: "ipv4"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00AYnOQ"
      DnsOptions:
        PrivateDnsOnlyForInboundResolverEndpoint: "NotSpecified"
        DnsRecordIpType: "ipv4"
      RouteTableIds: []
      ServiceName: "com.amazonaws.ap-southeast-1.execute-api"
      PolicyDocument:
        Statement:
        - Resource: "*"
          Action: "*"
          Effect: "Allow"
          Principal: "*"
      VpcEndpointType: "Interface"
      ResourceConfigurationArn: ""
      SecurityGroupIds:
      - "sg-075615342aa3e28b9"
      - "sg-0a6c63d92a738a24c"
      - "sg-0158898f4b43a0ae9"
      SubnetIds:
      - Ref: "EC2Subnet00subnet060714d7ed3b1128b00Pr6SK"
      - Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00InZQf"
      ServiceNetworkArn: ""
  ConfigConfigRule00securityhubelasticachereplgrpautofailoverenabled8905598000YPpsR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks if replication groups for Amazon ElastiCache\
        \ for Redis have automatic failover enabled."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-elasticache-repl-grp-auto-failover-enabled-89055980"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "ELASTICACHE_REPL_GRP_AUTO_FAILOVER_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubelasticsearchhttpsrequired4963b04900GJAK5:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether connections to an Elasticsearch domain\
        \ are using the latest TLS security policy.  The check fails if the Elasticsearch\
        \ domain isn't using the latest supported policy or if HTTPs isn't enabled."
      Scope:
        ComplianceResourceTypes:
        - "AWS::Elasticsearch::Domain"
      Compliance: {}
      ConfigRuleName: "securityhub-elasticsearch-https-required-4963b049"
      Source:
        SourceIdentifier: "arn:aws:lambda:ap-southeast-1:338458120468:function:SecurityHubConfigRule"
        SourceDetails:
        - EventSource: "aws.config"
          MessageType: "ConfigurationItemChangeNotification"
        Owner: "CUSTOM_LAMBDA"
      InputParameters: {}
  ConfigConfigRule00securityhubelasticsearchprimarynodefaulttolerancecc37550300CyMLA:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether Elasticsearch domains are configured\
        \ with at least three dedicated master nodes. This control fails if dedicatedMasterEnabled\
        \ is not true."
      Scope:
        ComplianceResourceTypes:
        - "AWS::Elasticsearch::Domain"
      Compliance: {}
      ConfigRuleName: "securityhub-elasticsearch-primary-node-fault-tolerance-cc375503"
      Source:
        SourceIdentifier: "arn:aws:lambda:ap-southeast-1:338458120468:function:SecurityHubConfigRule"
        SourceDetails:
        - EventSource: "aws.config"
          MessageType: "ConfigurationItemChangeNotification"
        Owner: "CUSTOM_LAMBDA"
      InputParameters: {}
  ConfigConfigRule00securityhublambdafunctionsettingscheck3087535c00o0qbf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks that the AWS Lambda function settings for runtime, role,\
        \ timeout, and memory size match the expected values."
      Scope:
        ComplianceResourceTypes:
        - "AWS::Lambda::Function"
      Compliance: {}
      ConfigRuleName: "securityhub-lambda-function-settings-check-3087535c"
      Source:
        SourceIdentifier: "LAMBDA_FUNCTION_SETTINGS_CHECK"
        Owner: "AWS"
      InputParameters:
        runtime: "nodejs22.x,nodejs20.x,nodejs18.x,python3.13,python3.12,python3.11,python3.10,python3.9,python3.8,java21,java17,java11,java8.al2,dotnet8,dotnet6,ruby3.2,ruby3.3"
  ConfigConfigRule00securityhubnetfwpolicydefaultactionfullpacketsdc39c56800lDL2B:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether the default stateless action for full\
        \ packets for a Network Firewall policy is DROP or FORWARD. This control fails\
        \ if DROP or FORWARD is not selected."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-netfw-policy-default-action-full-packets-dc39c568"
      Source:
        SourceIdentifier: "NETFW_POLICY_DEFAULT_ACTION_FULL_PACKETS"
        Owner: "AWS"
      InputParameters:
        statelessDefaultActions: "aws:drop,aws:forward_to_sfe"
  ConfigConfigRule00securityhubcloudtrailcloudwatchlogsenabled63c7ae8f00ITbOQ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether AWS CloudTrail trails are configured to send logs\
        \ to Amazon CloudWatch logs."
      Scope:
        ComplianceResourceTypes:
        - "AWS::CloudTrail::Trail"
      Compliance: {}
      ConfigRuleName: "securityhub-cloud-trail-cloud-watch-logs-enabled-63c7ae8f"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "CLOUD_TRAIL_CLOUD_WATCH_LOGS_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  EC2KeyPair00pilotllmdev00lIOXJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::KeyPair"
    DeletionPolicy: "Retain"
    Properties:
      KeyName: "pilot-llm-dev"
      KeyType: "rsa"
      PublicKeyMaterial: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCKbb0CFx3cwt3YdgJIm5MrUaYvdXLEWDBm/W/inKqhIMHu2T0Q6QzGL/8HsI2OqBHHf4oxjN2uXTNbnk76GpxFEH8YpMWVjo6drldIVoRb3fnazI/cU+7pVsBb7AuYxYe1j91j66gdigOMhUvGckDk2nAmj4pnugfpCKS8p64tan6dKH5ZpNxKWnHhpprR4Wm6Ml72U0OnS+FcM1uilhQPQpkrVeUGRXZVXbLB+fFIGnSyGwZiLNiKFql4naPqXVgCNkdnBZ9Rek+aNgQEXz8ytZFqApfrsH5mO1DQJcPjurH0TQocEDJhRngfoDk6phap1ed27KB/ClRdPvMBiQ5t\
        \ pilot-llm-dev\n"
      Tags: []
  ApiGatewayDeployment00cobbcd00w8aty:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::Deployment"
    DeletionPolicy: "Retain"
    Properties:
      RestApiId:
        Ref: "ApiGatewayRestApi005nwb46kira00y5IhC"
  ConfigConfigRule00securityhubtransferfamilyservernoftp89f9988900xSkij:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if a server created with AWS Transfer Family uses FTP for\
        \ endpoint connection. The rule is NON_COMPLIANT if the server protocol for\
        \ endpoint connection is FTP-enabled."
      Scope:
        ComplianceResourceTypes:
        - "AWS::Transfer::Server"
      Compliance: {}
      ConfigRuleName: "securityhub-transfer-family-server-no-ftp-89f99889"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "TRANSFER_FAMILY_SERVER_NO_FTP"
        Owner: "AWS"
      InputParameters: {}
  EC2Subnet00subnet040ea0b30fd89092a00K2zb1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Subnet"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00AYnOQ"
      MapPublicIpOnLaunch: false
      EnableDns64: false
      AvailabilityZoneId: "apse1-az2"
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      CidrBlock: "10.25.71.48/28"
      Ipv6Native: false
      Tags:
      - Value: "GenAI-Dev-ECSAppLB-Private-1b"
        Key: "Name"
  ApiGatewayDeployment00xxg9om00Nk3kN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::Deployment"
    DeletionPolicy: "Retain"
    Properties:
      RestApiId:
        Ref: "ApiGatewayRestApi005nwb46kira00y5IhC"
      Description: "Created by AWS Lambda"
  EC2VolumeAttachment00vol03616c082cedd037400qyqXc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VolumeAttachment"
    DeletionPolicy: "Retain"
    Properties:
      InstanceId: "i-0b2e07dbc66acf6c2"
      VolumeId: "vol-03616c082cedd0374"
      Device: "/dev/xvda"
  ConfigConfigRule00securityhubs3bucketblacklistedactionsprohibited791d31c500U3cBU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks that the Amazon Simple Storage Service bucket policy does\
        \ not allow blacklisted bucket-level and object-level actions on resources\
        \ in the bucket for principals from other AWS accounts."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-s3-bucket-blacklisted-actions-prohibited-791d31c5"
      Source:
        SourceIdentifier: "S3_BUCKET_BLACKLISTED_ACTIONS_PROHIBITED"
        Owner: "AWS"
      InputParameters:
        blacklistedActionPattern: "s3:DeleteBucketPolicy,s3:PutBucketAcl,s3:PutBucketPolicy,s3:PutObjectAcl,s3:PutEncryptionConfiguration"
  ConfigConfigRule00securityhubec2managedinstanceassociationcompliancestatuscheck4b8364bf00rfrq1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether the compliance status of the Amazon EC2 Systems\
        \ Manager association compliance is COMPLIANT or NON_COMPLIANT after the association\
        \ execution on the instance. The rule is COMPLIANT if the field status is\
        \ COMPLIANT."
      Scope:
        ComplianceResourceTypes:
        - "AWS::SSM::AssociationCompliance"
      Compliance: {}
      ConfigRuleName: "securityhub-ec2-managedinstance-association-compliance-status-check-4b8364bf"
      Source:
        SourceIdentifier: "EC2_MANAGEDINSTANCE_ASSOCIATION_COMPLIANCE_STATUS_CHECK"
        Owner: "AWS"
      InputParameters: {}
  CloudFrontCachePolicy00a6bad94636c34c33aa98362c74a7fb1300jUZg3:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::CloudFront::CachePolicy"
    DeletionPolicy: "Retain"
    Properties:
      CachePolicyConfig:
        Comment: "Default Amplify cache policy without cookies"
        MinTTL: 0
        MaxTTL: 3.1536E7
        ParametersInCacheKeyAndForwardedToOrigin:
          QueryStringsConfig:
            QueryStringBehavior: "all"
          EnableAcceptEncodingBrotli: true
          HeadersConfig:
            HeaderBehavior: "whitelist"
            Headers:
            - "Authorization"
            - "Accept"
            - "CloudFront-Viewer-Country"
            - "Host"
          CookiesConfig:
            CookieBehavior: "none"
          EnableAcceptEncodingGzip: true
        DefaultTTL: 0
        Name: "Managed-Amplify-DefaultNoCookies"
  ConfigConfigRule00securityhubdynamodbautoscalingenablede66371dd00pjMQC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether Auto Scaling or On-Demand is enabled on your DynamoDB\
        \ tables and/or global secondary indexes. Optionally you can set the read\
        \ and write capacity units for the table or global secondary index."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-dynamodb-autoscaling-enabled-e66371dd"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "DYNAMODB_AUTOSCALING_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubredshiftdefaultdbnamecheckc86e3b6500qtthk:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks if a Redshift cluster has changed its database\
        \ name from the default value. This control fails if the database name for\
        \ a Redshift cluster is set to \"dev\", or if the optional parameter is provided\
        \ and the database name does not match."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-redshift-default-db-name-check-c86e3b65"
      Source:
        SourceIdentifier: "REDSHIFT_DEFAULT_DB_NAME_CHECK"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubguarddutymalwareprotectionenabled02255c5f00Ob97b:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if Malware Protection is enabled for an Amazon GuardDuty\
        \ detector in your account. The rule is NON_COMPLIANT if the Malware Protection\
        \ feature in Amazon GuardDuty is not enabled for your account."
      Scope:
        ComplianceResourceTypes:
        - "AWS::GuardDuty::Detector"
      Compliance: {}
      ConfigRuleName: "securityhub-guardduty-malware-protection-enabled-02255c5f"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "GUARDDUTY_MALWARE_PROTECTION_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubrdsclusteriamauthenticationenableddbcec54100f2Ja8:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if an Amazon RDS Cluster has AWS Identity and Access Management\
        \ (IAM) authentication enabled. The rule is NON_COMPLIANT if an RDS Cluster\
        \ does not have IAM authentication enabled."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-rds-cluster-iam-authentication-enabled-dbcec541"
      Source:
        SourceIdentifier: "RDS_CLUSTER_IAM_AUTHENTICATION_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubguarddutyeksprotectionruntimeenablede0b4471300LVPyS:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if Amazon EKS Runtime Monitoring with automated agent management\
        \ is enabled for an Amazon GuardDuty detector in your account. The rule is\
        \ NON_COMPLIANT if the EKS Runtime Monitoring with automated agent management\
        \ is not enabled for your account."
      Scope:
        ComplianceResourceTypes:
        - "AWS::GuardDuty::Detector"
      Compliance: {}
      ConfigRuleName: "securityhub-guardduty-eks-protection-runtime-enabled-e0b44713"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "GUARDDUTY_EKS_PROTECTION_RUNTIME_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubrdsinstanceiamauthenticationenabled3dd0b53e00tr6XF:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if an Amazon Relational Database Service (Amazon RDS) instance\
        \ has AWS Identity and Access Management (IAM) authentication enabled."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-rds-instance-iam-authentication-enabled-3dd0b53e"
      Source:
        SourceIdentifier: "RDS_INSTANCE_IAM_AUTHENTICATION_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  CloudFrontDistribution00EBGIPRQKYPBKB00mPUMc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::CloudFront::Distribution"
    DeletionPolicy: "Retain"
    Properties:
      DistributionConfig:
        Logging:
          IncludeCookies: false
          Bucket: ""
          Prefix: ""
        Comment: ""
        DefaultRootObject: ""
        Origins:
        - ConnectionTimeout: 10
          OriginAccessControlId: ""
          ConnectionAttempts: 3
          OriginCustomHeaders: []
          DomainName: "genai-pilot-external-alb-1249351589.ap-southeast-1.elb.amazonaws.com"
          OriginShield:
            Enabled: false
          OriginPath: ""
          Id: "genAIPilot"
          CustomOriginConfig:
            OriginKeepaliveTimeout: 5
            OriginReadTimeout: 30
            OriginSSLProtocols:
            - "SSLv3"
            - "TLSv1"
            - "TLSv1.1"
            - "TLSv1.2"
            HTTPSPort: 443
            HTTPPort: 80
            OriginProtocolPolicy: "http-only"
        ViewerCertificate:
          MinimumProtocolVersion: "TLSv1"
          SslSupportMethod: "vip"
          CloudFrontDefaultCertificate: true
        PriceClass: "PriceClass_200"
        DefaultCacheBehavior:
          Compress: true
          FunctionAssociations: []
          LambdaFunctionAssociations: []
          TargetOriginId: "genAIPilot"
          ViewerProtocolPolicy: "allow-all"
          GrpcConfig:
            Enabled: false
          TrustedSigners: []
          FieldLevelEncryptionId: ""
          TrustedKeyGroups: []
          AllowedMethods:
          - "HEAD"
          - "DELETE"
          - "POST"
          - "GET"
          - "OPTIONS"
          - "PUT"
          - "PATCH"
          CachedMethods:
          - "HEAD"
          - "GET"
          SmoothStreaming: false
          OriginRequestPolicyId:
            Ref: "CloudFrontOriginRequestPolicy00216adef65c7f47e4b9895492eafa07d300yfFaF"
          CachePolicyId:
            Ref: "CloudFrontCachePolicy0083da9c7e98b44e11a16804f0df8e2c6500I5yDG"
        Staging: false
        CustomErrorResponses: []
        ContinuousDeploymentPolicyId: ""
        OriginGroups:
          Quantity: 0
          Items: []
        Enabled: true
        Aliases: []
        IPV6Enabled: false
        WebACLId: "arn:aws:wafv2:us-east-1:343218203122:global/webacl/GenAIPilot/e19c3041-d9f9-4c39-8982-6526a358704e"
        HttpVersion: "http2"
        Restrictions:
          GeoRestriction:
            Locations:
            - "MY"
            - "SG"
            RestrictionType: "whitelist"
        CacheBehaviors:
        - Compress: false
          FunctionAssociations: []
          LambdaFunctionAssociations: []
          TargetOriginId: "genAIPilot"
          ViewerProtocolPolicy: "allow-all"
          GrpcConfig:
            Enabled: false
          TrustedSigners: []
          FieldLevelEncryptionId: ""
          TrustedKeyGroups: []
          AllowedMethods:
          - "HEAD"
          - "GET"
          PathPattern: "/*.js"
          CachedMethods:
          - "HEAD"
          - "GET"
          SmoothStreaming: false
          OriginRequestPolicyId:
            Ref: "CloudFrontOriginRequestPolicy00216adef65c7f47e4b9895492eafa07d300yfFaF"
          CachePolicyId:
            Ref: "CloudFrontCachePolicy00658327eaf89d4faba63d7e88639e58f600COc7C"
        - Compress: false
          FunctionAssociations: []
          LambdaFunctionAssociations: []
          TargetOriginId: "genAIPilot"
          ViewerProtocolPolicy: "allow-all"
          GrpcConfig:
            Enabled: false
          TrustedSigners: []
          FieldLevelEncryptionId: ""
          TrustedKeyGroups: []
          AllowedMethods:
          - "HEAD"
          - "GET"
          PathPattern: "/*.jpg"
          CachedMethods:
          - "HEAD"
          - "GET"
          SmoothStreaming: false
          OriginRequestPolicyId:
            Ref: "CloudFrontOriginRequestPolicy00216adef65c7f47e4b9895492eafa07d300yfFaF"
          CachePolicyId:
            Ref: "CloudFrontCachePolicy00658327eaf89d4faba63d7e88639e58f600COc7C"
        - Compress: false
          FunctionAssociations: []
          LambdaFunctionAssociations: []
          TargetOriginId: "genAIPilot"
          ViewerProtocolPolicy: "allow-all"
          GrpcConfig:
            Enabled: false
          TrustedSigners: []
          FieldLevelEncryptionId: ""
          TrustedKeyGroups: []
          AllowedMethods:
          - "HEAD"
          - "GET"
          PathPattern: "/*.jpeg"
          CachedMethods:
          - "HEAD"
          - "GET"
          SmoothStreaming: false
          OriginRequestPolicyId:
            Ref: "CloudFrontOriginRequestPolicy00216adef65c7f47e4b9895492eafa07d300yfFaF"
          CachePolicyId:
            Ref: "CloudFrontCachePolicy00658327eaf89d4faba63d7e88639e58f600COc7C"
        - Compress: false
          FunctionAssociations: []
          LambdaFunctionAssociations: []
          TargetOriginId: "genAIPilot"
          ViewerProtocolPolicy: "allow-all"
          GrpcConfig:
            Enabled: false
          TrustedSigners: []
          FieldLevelEncryptionId: ""
          TrustedKeyGroups: []
          AllowedMethods:
          - "HEAD"
          - "GET"
          PathPattern: "/*.gif"
          CachedMethods:
          - "HEAD"
          - "GET"
          SmoothStreaming: false
          OriginRequestPolicyId:
            Ref: "CloudFrontOriginRequestPolicy00216adef65c7f47e4b9895492eafa07d300yfFaF"
          CachePolicyId:
            Ref: "CloudFrontCachePolicy00658327eaf89d4faba63d7e88639e58f600COc7C"
        - Compress: false
          FunctionAssociations: []
          LambdaFunctionAssociations: []
          TargetOriginId: "genAIPilot"
          ViewerProtocolPolicy: "allow-all"
          GrpcConfig:
            Enabled: false
          TrustedSigners: []
          FieldLevelEncryptionId: ""
          TrustedKeyGroups: []
          AllowedMethods:
          - "HEAD"
          - "GET"
          PathPattern: "/*.css"
          CachedMethods:
          - "HEAD"
          - "GET"
          SmoothStreaming: false
          OriginRequestPolicyId:
            Ref: "CloudFrontOriginRequestPolicy00216adef65c7f47e4b9895492eafa07d300yfFaF"
          CachePolicyId:
            Ref: "CloudFrontCachePolicy00658327eaf89d4faba63d7e88639e58f600COc7C"
        - Compress: false
          FunctionAssociations: []
          LambdaFunctionAssociations: []
          TargetOriginId: "genAIPilot"
          ViewerProtocolPolicy: "allow-all"
          GrpcConfig:
            Enabled: false
          TrustedSigners: []
          FieldLevelEncryptionId: ""
          TrustedKeyGroups: []
          AllowedMethods:
          - "HEAD"
          - "GET"
          PathPattern: "/*.png"
          CachedMethods:
          - "HEAD"
          - "GET"
          SmoothStreaming: false
          OriginRequestPolicyId:
            Ref: "CloudFrontOriginRequestPolicy00216adef65c7f47e4b9895492eafa07d300yfFaF"
          CachePolicyId:
            Ref: "CloudFrontCachePolicy00658327eaf89d4faba63d7e88639e58f600COc7C"
  ConfigConfigRule00securityhubeksclustersupportedversionb7ccd7d100UAOTK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks if an Amazon Elastic Kubernetes Service (EKS)\
        \ cluster is running a supported Kubernetes version. This control fails if\
        \ an EKS cluster is running an unsupported version (less than the parameter\
        \ 'oldestVersionSupported')."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-eks-cluster-supported-version-b7ccd7d1"
      Source:
        SourceIdentifier: "EKS_CLUSTER_SUPPORTED_VERSION"
        Owner: "AWS"
      InputParameters:
        oldestVersionSupported: "1.29"
  EC2Instance00i0e19ff01674e306d500jlMib:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Instance"
    DeletionPolicy: "Retain"
    Properties:
      Tenancy: "default"
      SecurityGroups:
      - "GenAI-Pilot-Private-Internal-to-VPC"
      - "GenAI-Pilot-Private-Tmicro-to-App"
      - "default"
      - "GenAI-Pilot-Private-Cvpn-to-App"
      PrivateIpAddress: "10.25.71.222"
      BlockDeviceMappings:
      - Ebs:
          SnapshotId: "snap-0c8eab48745cf2897"
          VolumeType: "gp3"
          KmsKeyId:
            Fn::GetAtt:
            - "KMSKey00e0af6c3f73fc497e863a6754f0dce6b1005JjxP"
            - "Arn"
          Encrypted: true
          Iops: 3000
          VolumeSize: 50
          DeleteOnTermination: false
        DeviceName: "/dev/xvda"
      IamInstanceProfile:
        Ref: "IAMInstanceProfile00ec2adminaccess008Kbu6"
      SubnetId:
        Ref: "EC2Subnet00subnet0d1db15411089416b002HSPn"
      EbsOptimized: true
      Volumes:
      - VolumeId: "vol-01bd16c2e811bb9d7"
        Device: "/dev/xvda"
      NetworkInterfaces:
      - PrivateIpAddresses:
        - PrivateIpAddress: "10.25.71.222"
          Primary: true
        SecondaryPrivateIpAddressCount: 0
        DeviceIndex: "0"
        GroupSet:
        - Ref: "EC2SecurityGroup00sg0ef00776c538db14200ogvsJ"
        - Ref: "EC2SecurityGroup00sg07fd500f946aad8a200D738s"
        - Ref: "EC2SecurityGroup00sg075615342aa3e28b900BtPxM"
        - Ref: "EC2SecurityGroup00sg0158898f4b43a0ae900SoA7y"
        Ipv6Addresses: []
        SubnetId:
          Ref: "EC2Subnet00subnet0d1db15411089416b002HSPn"
        AssociatePublicIpAddress: false
        NetworkInterfaceId: "eni-0a79669b8bad1083a"
        DeleteOnTermination: true
      ImageId: "ami-04a5ce820a419d6da"
      InstanceType: "t3.medium"
      Monitoring: false
      Tags:
      - Value: "ec2-jumpserver-essien"
        Key: "Name"
      InstanceInitiatedShutdownBehavior: "stop"
      CpuOptions:
        ThreadsPerCore: 2
        CoreCount: 1
      AvailabilityZone: "ap-southeast-1c"
      PrivateDnsNameOptions:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      SecurityGroupIds:
      - "sg-0ef00776c538db142"
      - "sg-07fd500f946aad8a2"
      - "sg-075615342aa3e28b9"
      - "sg-0158898f4b43a0ae9"
      DisableApiTermination: false
      KeyName: "pilot-SG-Essien"
      SourceDestCheck: true
      PlacementGroupName: ""
      VpcId: "vpc-02790342fee4ebf9f"
      State:
        Code: "80"
        Name: "stopped"
      CreditSpecification:
        CPUCredits: "unlimited"
  ConfigConfigRule00securityhubec2instancemultipleenicheck91dc191900F37gl:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks to see if Amazon EC2 instance uses multiple\
        \ ENI/EFA. This control will pass if single network adapters is used."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-ec2-instance-multiple-eni-check-91dc1919"
      Source:
        SourceIdentifier: "EC2_INSTANCE_MULTIPLE_ENI_CHECK"
        Owner: "AWS"
      InputParameters: {}
  CloudFrontCachePolicy0083da9c7e98b44e11a16804f0df8e2c6500I5yDG:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::CloudFront::CachePolicy"
    DeletionPolicy: "Retain"
    Properties:
      CachePolicyConfig:
        Comment: "Policy for origins that return Cache-Control headers. Query strings\
          \ are not included in the cache key."
        MinTTL: 0
        MaxTTL: 3.1536E7
        ParametersInCacheKeyAndForwardedToOrigin:
          QueryStringsConfig:
            QueryStringBehavior: "none"
          EnableAcceptEncodingBrotli: true
          HeadersConfig:
            HeaderBehavior: "whitelist"
            Headers:
            - "x-method-override"
            - "origin"
            - "host"
            - "x-http-method"
            - "x-http-method-override"
          CookiesConfig:
            CookieBehavior: "all"
          EnableAcceptEncodingGzip: true
        DefaultTTL: 0
        Name: "UseOriginCacheControlHeaders"
  EC2KeyPair00testtapo100OGyI1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::KeyPair"
    DeletionPolicy: "Retain"
    Properties:
      KeyName: "test-tapo-1"
      KeyType: "rsa"
      PublicKeyMaterial: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDMPrwcFyYo/o7e/0BSYbukdEIoQxudRbe1vyWJ4Fi7HcIberAdXZA0JTqwRrqpyXw3xhzebfuRE5BM0kb+FqYfx8Grmg/71H6mNPALsjpbjmeG6HMmNSMRWMCCqfNBkigS5nk9vJ9hdloq3FDoBzrut53nnZv4mMichc0PbUhUhrykmSIC0dU2urG4zm5nGK9XOVDnH9SW6KgEcEwKxe5Ud5uW35+1SkukRZoxp4Tt2FCMvS8HD2116ZsTdl6gIBKv7rCfd9W2VyMIoBAl44gT9+gquQi6EzgSaQN/k4DV84TNO6jO1txKv89gg5PTAOd0a3pWdN5Ii5o34LDCFVzl\
        \ test-tapo-1\n"
      Tags: []
  ApiGatewayStage00prodmvp100tl9xp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::Stage"
    DeletionPolicy: "Retain"
    Properties:
      DeploymentId:
        Fn::GetAtt:
        - "ApiGatewayDeployment00byenf700v3Ccv"
        - "DeploymentId"
      DocumentationVersion: "2"
      StageName: "prod-mvp1"
      TracingEnabled: false
      RestApiId:
        Ref: "ApiGatewayRestApi005nwb46kira00y5IhC"
      MethodSettings:
      - CacheTtlInSeconds: 300
        LoggingLevel: "INFO"
        ResourcePath: "/*"
        CacheDataEncrypted: false
        DataTraceEnabled: false
        ThrottlingBurstLimit: 5000
        CachingEnabled: false
        MetricsEnabled: false
        HttpMethod: "*"
        ThrottlingRateLimit: 10000
      CacheClusterSize: "0.5"
      CacheClusterEnabled: false
  ConfigConfigRule00securityhubwafregionalrulegroupnotempty6cbb933c005QpmJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks if WAF Regional rule groups contain any rules.\
        \ This control fails if there are no rules present within a WAF Regional rule\
        \ group."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-waf-regional-rulegroup-not-empty-6cbb933c"
      Source:
        SourceIdentifier: "WAF_REGIONAL_RULEGROUP_NOT_EMPTY"
        Owner: "AWS"
      InputParameters: {}
  EC2FlowLog00fl0229965715cf91f7d00SUb8f:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::FlowLog"
    DeletionPolicy: "Retain"
    Properties:
      LogFormat: "${version} ${account-id} ${interface-id} ${srcaddr} ${dstaddr} ${srcport}\
        \ ${dstport} ${protocol} ${packets} ${bytes} ${start} ${end} ${action} ${log-status}"
      ResourceId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00AYnOQ"
      MaxAggregationInterval: 600
      ResourceType: "VPC"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00r9ZEO"
      DeliverLogsPermissionArn:
        Fn::GetAtt:
        - "IAMRole00VPCFlowLogtoCloudWatch00IJMym"
        - "Arn"
      LogDestinationType: "cloud-watch-logs"
      Tags:
      - Value: "GenAI-Pilot-VPC-Flow-Log"
        Key: "Name"
      TrafficType: "ALL"
  IAMInstanceProfile00ec2adminaccess008Kbu6:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::InstanceProfile"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/"
      Roles:
      - Ref: "IAMRole00ec2adminaccess001ZBqo"
      InstanceProfileName:
        Ref: "IAMRole00ec2adminaccess001ZBqo"
  ConfigConfigRule00securityhubdaxtlsendpointencryption83c6cda300CyKU2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if your Amazon DynamoDB Accelerator (DAX) cluster has ClusterEndpointEncryptionType\
        \ set to TLS. The rule is NON_COMPLIANT if a DAX cluster is not encrypted\
        \ by transport layer security (TLS)."
      Scope:
        ComplianceResourceTypes:
        - "AWS::DAX::Cluster"
      Compliance: {}
      ConfigRuleName: "securityhub-dax-tls-endpoint-encryption-83c6cda3"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "DAX_TLS_ENDPOINT_ENCRYPTION"
        Owner: "AWS"
      InputParameters: {}
  ApiGatewayDeployment00q1htpk00FfY5W:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::Deployment"
    DeletionPolicy: "Retain"
    Properties:
      RestApiId:
        Ref: "ApiGatewayRestApi005nwb46kira00y5IhC"
  ApiGatewayDeployment00ne64ej009aU6e:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::Deployment"
    DeletionPolicy: "Retain"
    Properties:
      RestApiId:
        Ref: "ApiGatewayRestApi005nwb46kira00y5IhC"
      Description: "Created by AWS Lambda"
  ConfigConfigRule00securityhubdmsreplicationtasktargetdblogging39ecddd3009pRck:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if logging is enabled with a valid severity level for AWS\
        \ DMS replication task events of a target database. The rule is NON_COMPLIANT\
        \ if logging is not enabled or replication task logging of a target database\
        \ has a severity level that is invalid."
      Scope:
        ComplianceResourceTypes:
        - "AWS::DMS::ReplicationTask"
      Compliance: {}
      ConfigRuleName: "securityhub-dms-replication-task-targetdb-logging-39ecddd3"
      Source:
        SourceIdentifier: "DMS_REPLICATION_TASK_TARGETDB_LOGGING"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubguarddutyenabledcentralized8561287c00GzW9v:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This AWS control checks whether Amazon GuardDuty is enabled in\
        \ your AWS account and region."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-guardduty-enabled-centralized-8561287c"
      MaximumExecutionFrequency: "Twelve_Hours"
      Source:
        SourceIdentifier: "GUARDDUTY_ENABLED_CENTRALIZED"
        Owner: "AWS"
      InputParameters: {}
  CloudFrontCachePolicy004135ea2d6df844a39df34b5a84be39ad00GpCGQ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::CloudFront::CachePolicy"
    DeletionPolicy: "Retain"
    Properties:
      CachePolicyConfig:
        Comment: "Policy with caching disabled"
        MinTTL: 0
        MaxTTL: 0
        ParametersInCacheKeyAndForwardedToOrigin:
          QueryStringsConfig:
            QueryStringBehavior: "none"
          EnableAcceptEncodingBrotli: false
          HeadersConfig:
            HeaderBehavior: "none"
          CookiesConfig:
            CookieBehavior: "none"
          EnableAcceptEncodingGzip: false
        DefaultTTL: 0
        Name: "Managed-CachingDisabled"
  ConfigConfigRule00securityhubec2imdsv2checkd065099b00HVo7Z:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether your Amazon Elastic Compute Cloud (Amazon EC2)\
        \ instance metadata version is configured with Instance Metadata Service Version\
        \ 2 (IMDSv2)."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-ec2-imdsv2-check-d065099b"
      Source:
        SourceIdentifier: "EC2_IMDSV2_CHECK"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubsnstopicnopublicaccess5068867a00i74vz:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if the SNS topic access policy allows public access. The\
        \ rule is NON_COMPLIANT if the SNS topic access policy allows public access."
      Scope:
        ComplianceResourceTypes:
        - "AWS::SNS::Topic"
      Compliance: {}
      ConfigRuleName: "securityhub-sns-topic-no-public-access-5068867a"
      Source:
        SourceIdentifier: "SNS_TOPIC_NO_PUBLIC_ACCESS"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubrdsstorageencrypted942be0f300G2zlb:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks whether storage encryption is enabled for your RDS DB instances."
      Scope:
        ComplianceResourceTypes:
        - "AWS::RDS::DBInstance"
      Compliance: {}
      ConfigRuleName: "securityhub-rds-storage-encrypted-942be0f3"
      Source:
        SourceIdentifier: "RDS_STORAGE_ENCRYPTED"
        Owner: "AWS"
      InputParameters: {}
  CloudFrontOriginRequestPolicy0033f36d7ef39646d990e052428a34d9dc00SmkUK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::CloudFront::OriginRequestPolicy"
    DeletionPolicy: "Retain"
    Properties:
      OriginRequestPolicyConfig:
        QueryStringsConfig:
          QueryStringBehavior: "all"
        Comment: "Policy to forward all parameters in viewer requests and all CloudFront\
          \ headers as of June 2022"
        HeadersConfig:
          HeaderBehavior: "allViewerAndWhitelistCloudFront"
          Headers:
          - "CloudFront-Viewer-Time-Zone"
          - "CloudFront-Viewer-Address"
          - "CloudFront-Viewer-Country"
          - "CloudFront-Is-IOS-Viewer"
          - "CloudFront-Is-Tablet-Viewer"
          - "CloudFront-Forwarded-Proto"
          - "CloudFront-Viewer-Country-Name"
          - "CloudFront-Is-Mobile-Viewer"
          - "CloudFront-Is-SmartTV-Viewer"
          - "CloudFront-Viewer-Country-Region"
          - "CloudFront-Is-Android-Viewer"
          - "CloudFront-Viewer-Country-Region-Name"
          - "CloudFront-Viewer-City"
          - "CloudFront-Viewer-Latitude"
          - "CloudFront-Viewer-Longitude"
          - "CloudFront-Viewer-Http-Version"
          - "CloudFront-Viewer-Postal-Code"
          - "CloudFront-Viewer-ASN"
          - "CloudFront-Is-Desktop-Viewer"
          - "CloudFront-Viewer-Metro-Code"
          - "CloudFront-Viewer-TLS"
        CookiesConfig:
          CookieBehavior: "all"
        Name: "Managed-AllViewerAndCloudFrontHeaders-2022-06"
  ConfigConfigRule00securityhubelasticachereplgrpencryptedatrest6ac4cfdd00mTCEB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "This control checks whether ElastiCache replication groups have\
        \ encryption-at-rest enabled."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-elasticache-repl-grp-encrypted-at-rest-6ac4cfdd"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "ELASTICACHE_REPL_GRP_ENCRYPTED_AT_REST"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubcloudtrailallwrites3dataeventcheckd0bfac5600DHmho:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if an AWS CloudTrail multi-Region trail is enabled and\
        \ logs all write S3 data events for your buckets. The rule is NON_COMPLIANT\
        \ if no multi-Region trail logs all write S3 data event types for all current\
        \ and future S3 buckets."
      Scope:
        ComplianceResourceTypes:
        - "AWS::::Account"
      Compliance: {}
      ConfigRuleName: "securityhub-cloudtrail-all-write-s3-data-event-check-d0bfac56"
      Source:
        SourceIdentifier: "CLOUDTRAIL_ALL_WRITE_S3_DATA_EVENT_CHECK"
        Owner: "AWS"
      InputParameters: {}
  ApiGatewayDocumentationVersion0010300nuJX1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ApiGateway::DocumentationVersion"
    DeletionPolicy: "Retain"
    Properties:
      RestApiId:
        Ref: "ApiGatewayRestApi005nwb46kira00y5IhC"
      DocumentationVersion: "1.0.3"
  ConfigConfigRule00securityhubvpcendpointenabledautoscalingd3c7f80c004gPME:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if each service specified in the parameter has an Amazon\
        \ VPC endpoint. The rule is NON_COMPLIANT if Amazon VPC does not have a VPC\
        \ endpoint created for each specified service. Optionally, you can specify\
        \ certain VPCs for the rule to check."
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::VPC"
        - "AWS::EC2::VPCEndpoint"
      Compliance: {}
      ConfigRuleName: "securityhub-vpc-endpoint-enabled-autoscaling-d3c7f80c"
      MaximumExecutionFrequency: "TwentyFour_Hours"
      Source:
        SourceIdentifier: "VPC_ENDPOINT_ENABLED"
        Owner: "AWS"
      InputParameters:
        serviceNames: "autoscaling"
  EC2VPC00vpc0182b4cdff5ae990b00dQnPk:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VPC"
    DeletionPolicy: "Retain"
    Properties:
      CidrBlock: "172.31.0.0/16"
      EnableDnsSupport: true
      InstanceTenancy: "default"
      EnableDnsHostnames: true
      Tags:
      - Value: "[DEFAULT]"
        Key: "Name"
  ConfigConfigRule00securityhubgluejobloggingenabledc174de5c00xWkxY:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if Glue Job has logging enabled. The rule is NON_COMPLIANT\
        \ if Glue Job does not have logging enabled"
      Scope:
        ComplianceResourceTypes:
        - "AWS::Glue::Job"
      Compliance: {}
      ConfigRuleName: "securityhub-glue-job-logging-enabled-c174de5c"
      Source:
        SourceIdentifier: "GLUE_JOB_LOGGING_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  ConfigConfigRule00securityhubelasticbeanstalkmanagedupdatesenabled984d658600svzok:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Config::ConfigRule"
    DeletionPolicy: "Retain"
    Properties:
      EvaluationModes:
      - Mode: "DETECTIVE"
      Description: "Checks if managed platform updates in an AWS Elastic Beanstalk\
        \ environment is enabled. The rule is NON_COMPLIANT if the value for `ManagedActionsEnabled`\
        \ is set to false or if a parameter is provided whose value does not match\
        \ the existing configurations."
      Scope: {}
      Compliance: {}
      ConfigRuleName: "securityhub-elastic-beanstalk-managed-updates-enabled-984d6586"
      Source:
        SourceIdentifier: "ELASTIC_BEANSTALK_MANAGED_UPDATES_ENABLED"
        Owner: "AWS"
      InputParameters: {}
  EC2KeyPair00yenmaykey00p0ccV:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::KeyPair"
    DeletionPolicy: "Retain"
    Properties:
      KeyName: "yenmay-key"
      KeyType: "rsa"
      PublicKeyMaterial: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDi9TFHLJVUIPhFxCVyp0MRNiOhQ1LeyqRGnjAvWffnIXB9xf7hKe2IRP2HDivqr2g0Akpn/n6AnnOsO083jMBAD/qEKl9U7msEzvl042PLJm/iy7Ci1bI6ZcFb32GEui4CnVrL4qOn+n5KtkBM9f/jxQScXuHbbX6kDOrYuJuKmh9+VvGobiAIkf1bZRJW1SGuh+1ltk/0l4obnBbEmVhgxVbeOErzSV+8oypBdZ0HfAqhS1vfHOPUYxZr350vGkGVBSw1pC0yE/V15FNNtA81U5pVSi3tWsupcybeahp+uoL6ieQPfcoL1cTz11XIsV5rFUt4pXAFyuIMtg4RagXj\
        \ yenmay-key\n"
      Tags: []
  LambdaFunction00sgprodgenaiembedding00kydR3CodeSourceKMSKeyArnw5C7q:
    NoEcho: "true"
    Type: "String"
    Description: "Value of write only property Code/SourceKMSKeyArn of resource LambdaFunction00sgprodgenaiembedding00kydR3."
  LambdaFunction00sgprodgenairagsummariser00BDrwVCodeS3ObjectVersion3gc5d:
    NoEcho: "true"
    Type: "String"
    Description: "For versioned objects, the version of the deployment package object\
      \ to use."
  LambdaFunction00TOBEDELETEDtestfunctionsqs00qijDhCodeZipFileSpmPV:
    NoEcho: "true"
    Type: "String"
    Description: "(Node.js and Python) The source code of your Lambda function. If\
      \ you include your function source inline with this parameter, CFN places it\
      \ in a file named ``index`` and zips it to create a [deployment package](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html).\
      \ This zip file cannot exceed 4MB. For the ``Handler`` property, the first part\
      \ of the handler identifier must be ``index``. For example, ``index.handler``.\n\
      \  For JSON, you must escape quotes and special characters such as newline (``\\\
      n``) with a backslash.\n If you specify a function that interacts with an AWS\
      \ CloudFormation custom resource, you don't have to write your own functions\
      \ to send responses to the custom resource that invoked the function. AWS CloudFormation\
      \ provides a response module ([cfn-response](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-lambda-function-code-cfnresponsemodule.html))\
      \ that simplifies sending responses. See [Using Lambda with CloudFormation](https://docs.aws.amazon.com/lambda/latest/dg/services-cloudformation.html)\
      \ for details."
  LambdaFunction00sgprodgenaiembedding00kydR3CodeS3KeyD0yi9:
    NoEcho: "true"
    Type: "String"
    Description: "The Amazon S3 key of the deployment package."
  LambdaFunction00sgprodgenairagsummariser00BDrwVCodeS3BucketNGWFk:
    NoEcho: "true"
    Type: "String"
    Description: "An Amazon S3 bucket in the same AWS-Region as your function. The\
      \ bucket can be in a different AWS-account."
  LambdaFunction00TOBEDELETEDtestfunctionsqs00qijDhCodeS3ObjectVersionKeWms:
    NoEcho: "true"
    Type: "String"
    Description: "For versioned objects, the version of the deployment package object\
      \ to use."
  LambdaFunction00sgprodgenaiembedding00kydR3CodeZipFileTzcbp:
    NoEcho: "true"
    Type: "String"
    Description: "(Node.js and Python) The source code of your Lambda function. If\
      \ you include your function source inline with this parameter, CFN places it\
      \ in a file named ``index`` and zips it to create a [deployment package](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html).\
      \ This zip file cannot exceed 4MB. For the ``Handler`` property, the first part\
      \ of the handler identifier must be ``index``. For example, ``index.handler``.\n\
      \  For JSON, you must escape quotes and special characters such as newline (``\\\
      n``) with a backslash.\n If you specify a function that interacts with an AWS\
      \ CloudFormation custom resource, you don't have to write your own functions\
      \ to send responses to the custom resource that invoked the function. AWS CloudFormation\
      \ provides a response module ([cfn-response](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-lambda-function-code-cfnresponsemodule.html))\
      \ that simplifies sending responses. See [Using Lambda with CloudFormation](https://docs.aws.amazon.com/lambda/latest/dg/services-cloudformation.html)\
      \ for details."
  LambdaFunction00TOBEDELETEDtestfunctionsqs00qijDhCodeS3BucketcmHcy:
    NoEcho: "true"
    Type: "String"
    Description: "An Amazon S3 bucket in the same AWS-Region as your function. The\
      \ bucket can be in a different AWS-account."
  LambdaFunction00sgprodgenairagsummariser00BDrwVCodeS3Key36bMp:
    NoEcho: "true"
    Type: "String"
    Description: "The Amazon S3 key of the deployment package."
  LambdaFunction00TOBEDELETEDtestfunctionsqs00qijDhCodeSourceKMSKeyArnel7EO:
    NoEcho: "true"
    Type: "String"
    Description: "Value of write only property Code/SourceKMSKeyArn of resource LambdaFunction00TOBEDELETEDtestfunctionsqs00qijDh."
  LambdaFunction00sgprodgenaiembedding00kydR3CodeS3Buckett4IeM:
    NoEcho: "true"
    Type: "String"
    Description: "An Amazon S3 bucket in the same AWS-Region as your function. The\
      \ bucket can be in a different AWS-account."
  LambdaFunction00sgprodgenairagsummariser00BDrwVCodeImageUriL27hj:
    NoEcho: "true"
    Type: "String"
    Description: "URI of a [container image](https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html)\
      \ in the Amazon ECR registry."
  LambdaFunction00sgprodgenairagsummariser00BDrwVCodeZipFile1MS4d:
    NoEcho: "true"
    Type: "String"
    Description: "(Node.js and Python) The source code of your Lambda function. If\
      \ you include your function source inline with this parameter, CFN places it\
      \ in a file named ``index`` and zips it to create a [deployment package](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html).\
      \ This zip file cannot exceed 4MB. For the ``Handler`` property, the first part\
      \ of the handler identifier must be ``index``. For example, ``index.handler``.\n\
      \  For JSON, you must escape quotes and special characters such as newline (``\\\
      n``) with a backslash.\n If you specify a function that interacts with an AWS\
      \ CloudFormation custom resource, you don't have to write your own functions\
      \ to send responses to the custom resource that invoked the function. AWS CloudFormation\
      \ provides a response module ([cfn-response](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-lambda-function-code-cfnresponsemodule.html))\
      \ that simplifies sending responses. See [Using Lambda with CloudFormation](https://docs.aws.amazon.com/lambda/latest/dg/services-cloudformation.html)\
      \ for details."
  LambdaFunction00sgprodgenairagsummariser00BDrwVCodeSourceKMSKeyArnTcgPW:
    NoEcho: "true"
    Type: "String"
    Description: "Value of write only property Code/SourceKMSKeyArn of resource LambdaFunction00sgprodgenairagsummariser00BDrwV."
  LambdaFunction00sgprodgenaiembedding00kydR3CodeS3ObjectVersionBGtXg:
    NoEcho: "true"
    Type: "String"
    Description: "For versioned objects, the version of the deployment package object\
      \ to use."
  LambdaFunction00TOBEDELETEDtestfunctionsqs00qijDhCodeImageUriLhvwz:
    NoEcho: "true"
    Type: "String"
    Description: "URI of a [container image](https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html)\
      \ in the Amazon ECR registry."
  LambdaFunction00sgprodgenaiembedding00kydR3CodeImageUri7YNu9:
    NoEcho: "true"
    Type: "String"
    Description: "URI of a [container image](https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html)\
      \ in the Amazon ECR registry."
  LambdaFunction00TOBEDELETEDtestfunctionsqs00qijDhCodeS3KeyUpDM4:
    NoEcho: "true"
    Type: "String"
    Description: "The Amazon S3 key of the deployment package."
  EC2NetworkInterface00eni00a48d3999ce1792900kG4C2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "VPC Endpoint Interface vpce-05f8f2706ff8cbb8a"
      PrivateIpAddress: "10.25.71.184"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.184"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-075615342aa3e28b9"
      - "sg-0bb8d1d9641e826f4"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      SourceDestCheck: true
      InterfaceType: "vpc_endpoint"
      Tags: []
  EC2NetworkInterface00eni0cf366ea0b3590ae800B9b5o:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "VPC Endpoint Interface vpce-0fc55ede1b592407c"
      PrivateIpAddress: "10.25.71.59"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.59"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-02d1755cab861734f"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet040ea0b30fd89092a00dTOsl"
      SourceDestCheck: true
      InterfaceType: "vpc_endpoint"
      Tags: []
  EC2VPCEndpoint00vpce0a90de6423482ae1000Lj8Jq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VPCEndpoint"
    DeletionPolicy: "Retain"
    Properties:
      PrivateDnsEnabled: false
      IpAddressType: "not-specified"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      DnsOptions:
        PrivateDnsOnlyForInboundResolverEndpoint: "NotSpecified"
        DnsRecordIpType: "not-specified"
      RouteTableIds:
      - Ref: "EC2RouteTable00rtb07a95c43e9fdd755c00a32xl"
      ServiceName: "com.amazonaws.ap-southeast-1.s3"
      PolicyDocument:
        Version: "2008-10-17"
        Statement:
        - Resource: "*"
          Action: "*"
          Effect: "Allow"
          Principal: "*"
      VpcEndpointType: "Gateway"
      ResourceConfigurationArn: ""
      SecurityGroupIds: []
      SubnetIds: []
      ServiceNetworkArn: ""
  EC2VolumeAttachment00vol0107ba962d2a3a965002e1WX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VolumeAttachment"
    DeletionPolicy: "Retain"
    Properties:
      InstanceId: "i-0e38931234673f678"
      VolumeId: "vol-0107ba962d2a3a965"
      Device: "/dev/xvda"
  EC2VPCEndpoint00vpce0bd7143d5af1bcbf8000WXoz:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VPCEndpoint"
    DeletionPolicy: "Retain"
    Properties:
      PrivateDnsEnabled: true
      IpAddressType: "ipv4"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      DnsOptions:
        PrivateDnsOnlyForInboundResolverEndpoint: "NotSpecified"
        DnsRecordIpType: "ipv4"
      RouteTableIds: []
      ServiceName: "com.amazonaws.ap-southeast-1.lambda"
      PolicyDocument:
        Statement:
        - Resource: "*"
          Action: "*"
          Effect: "Allow"
          Principal: "*"
      VpcEndpointType: "Interface"
      ResourceConfigurationArn: ""
      SecurityGroupIds:
      - "sg-03d66fb80efac83a5"
      - "sg-0ef00776c538db142"
      - "sg-02a57c92533299fd5"
      SubnetIds:
      - Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      - Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
      ServiceNetworkArn: ""
  EC2NetworkInterface00eni03b95c83cc0ca8b8a00qzQbl:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "VPC Endpoint Interface vpce-05918385aabf34a2e"
      PrivateIpAddress: "10.25.71.179"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.179"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-0ef00776c538db142"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      SourceDestCheck: true
      InterfaceType: "vpc_endpoint"
      Tags: []
  EC2NetworkInterfaceAttachment00elaattach01b6592697d78a6da00IcjO0:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0d4fc09fcf56f4daf"
      DeviceIndex: "1"
      DeleteOnTermination: false
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole58c202118f3849f084a51677bf626dcb00e9x3f:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-58c20211-8f38-49f0-84a5-1677bf626dcb"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-prod-genai-relevantdocs-v1:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgprodgenairelevantdocsv1rolekqa8fjxd00OcXbc"
      Users: []
  EC2NetworkAcl00acl0612aef300c98d4f400YxiZL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkAcl"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      Tags:
      - Value: "GenAI-Pilot-DB-acl"
        Key: "Name"
  EC2NetworkInterfaceAttachment00eniattach08cf0c9035df3bd29002iceZ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0a79669b8bad1083a"
      InstanceId: "i-0e19ff01674e306d5"
      DeviceIndex: "0"
      DeleteOnTermination: true
  KMSKey00e0af6c3f73fc497e863a6754f0dce6b1003YkeT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::KMS::Key"
    DeletionPolicy: "Retain"
    Properties:
      Origin: "AWS_KMS"
      MultiRegion: false
      Description: "Default key that protects my EBS volumes when no other key is\
        \ defined"
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
        - Condition:
            StringEquals:
              kms:ViaService: "ec2.ap-southeast-1.amazonaws.com"
              kms:CallerAccount: "343218203122"
          Resource: "*"
          Action:
          - "kms:Encrypt"
          - "kms:Decrypt"
          - "kms:ReEncrypt*"
          - "kms:GenerateDataKey*"
          - "kms:CreateGrant"
          - "kms:DescribeKey"
          Effect: "Allow"
          Principal:
            AWS: "*"
          Sid: "Allow access through EBS for all principals in the account that are\
            \ authorized to use EBS"
        - Resource: "*"
          Action:
          - "kms:Describe*"
          - "kms:Get*"
          - "kms:List*"
          - "kms:RevokeGrant"
          Effect: "Allow"
          Principal:
            AWS: "arn:aws:iam::343218203122:root"
          Sid: "Allow direct access to key metadata to the account"
        Id: "auto-ebs-2"
      KeySpec: "SYMMETRIC_DEFAULT"
      Enabled: true
      EnableKeyRotation: true
      KeyUsage: "ENCRYPT_DECRYPT"
      Tags: []
  ECSTaskDefinition00taskdefinitiongenaipilot3100KeE9r:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::TaskDefinition"
    DeletionPolicy: "Retain"
    Properties:
      TaskRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      InferenceAccelerators: []
      Memory: "3072"
      PlacementConstraints: []
      Cpu: "1024"
      RequiresCompatibilities:
      - "FARGATE"
      NetworkMode: "awsvpc"
      EnableFaultInjection: false
      ExecutionRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      RuntimePlatform:
        OperatingSystemFamily: "LINUX"
        CpuArchitecture: "X86_64"
      Volumes: []
      ContainerDefinitions:
      - Secrets: []
        Memory: 3072
        VolumesFrom: []
        Cpu: 1024
        EntryPoint: []
        DnsServers: []
        ReadonlyRootFilesystem: true
        Image: "343218203122.dkr.ecr.ap-southeast-1.amazonaws.com/genai-ecr:Prod-Frontend-Latest-V3"
        Essential: true
        LogConfiguration:
          SecretOptions: []
          Options:
            awslogs-group: "/ecs/genaipilot"
            awslogs-create-group: "true"
            awslogs-region: "ap-southeast-1"
            awslogs-stream-prefix: "ecs"
          LogDriver: "awslogs"
        ResourceRequirements: []
        EnvironmentFiles: []
        Name: "genaifrontend"
        DockerSecurityOptions: []
        SystemControls: []
        DnsSearchDomains: []
        CredentialSpecs: []
        Ulimits: []
        ExtraHosts: []
        MountPoints: []
        DependsOn: []
        DockerLabels: {}
        PortMappings:
        - ContainerPort: 8080
          AppProtocol: "http"
          Protocol: "tcp"
          HostPort: 8080
          Name: "genaifrontend-80-tcp"
        Command: []
        Environment: []
        Links: []
      Family: "genaipilot"
      Tags: []
  ElasticLoadBalancingV2LoadBalancer00loadbalancerappGenAIPilotInternalALBa1f8a8ad2aaa94bb00Up2ZY:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    DeletionPolicy: "Retain"
    Properties:
      IpAddressType: "ipv4"
      SecurityGroups:
      - "sg-0fbe083eaa2bbd46c"
      LoadBalancerAttributes:
      - Value: ""
        Key: "access_logs.s3.prefix"
      - Value: "append"
        Key: "routing.http.xff_header_processing.mode"
      - Value: "true"
        Key: "routing.http2.enabled"
      - Value:
          Ref: "S3Bucket00sggenaiaccesslog001Roh7"
        Key: "access_logs.s3.bucket"
      - Value: "true"
        Key: "routing.http.drop_invalid_header_fields.enabled"
      - Value: "false"
        Key: "waf.fail_open.enabled"
      - Value: ""
        Key: "connection_logs.s3.bucket"
      - Value: "false"
        Key: "zonal_shift.config.enabled"
      - Value: "defensive"
        Key: "routing.http.desync_mitigation_mode"
      - Value: ""
        Key: "connection_logs.s3.prefix"
      - Value: "true"
        Key: "deletion_protection.enabled"
      - Value: "false"
        Key: "routing.http.x_amzn_tls_version_and_cipher_suite.enabled"
      - Value: "true"
        Key: "access_logs.s3.enabled"
      - Value: "false"
        Key: "routing.http.preserve_host_header.enabled"
      - Value: "true"
        Key: "load_balancing.cross_zone.enabled"
      - Value: "false"
        Key: "routing.http.xff_client_port.enabled"
      - Value: "3600"
        Key: "client_keep_alive.seconds"
      - Value: "false"
        Key: "connection_logs.s3.enabled"
      - Value: "60"
        Key: "idle_timeout.timeout_seconds"
      Subnets:
      - Ref: "EC2Subnet00subnet060714d7ed3b1128b00T1t2O"
      - Ref: "EC2Subnet00subnet040ea0b30fd89092a00dTOsl"
      Type: "application"
      Scheme: "internal"
      EnablePrefixForIpv6SourceNat: "off"
      EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic: ""
      Tags: []
      Name: "GenAI-Pilot-Internal-ALB"
      SubnetMappings:
      - SubnetId:
          Ref: "EC2Subnet00subnet060714d7ed3b1128b00T1t2O"
      - SubnetId:
          Ref: "EC2Subnet00subnet040ea0b30fd89092a00dTOsl"
  EC2NetworkInterfaceAttachment00elaattach0d68f42768e3b752e007CWbZ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-085c57e54a6ad46d8"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2NetworkInterfaceAttachment00elaattach0bc331ea3d230d93f00I9iIQ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-01592f366fa5b378e"
      DeviceIndex: "1"
      DeleteOnTermination: false
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole9840a814e85a49f8b275d4045d75cd3100ud2z6:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-9840a814-e85a-49f8-b275-d4045d75cd31"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-test-genai-summariser-async:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - "sg-test-genai-summariser-async-role-8n68333u"
      Users: []
  EC2SecurityGroup00sg0fd865e5bd1a64a07007wDMi:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "for akash ec2 server"
      GroupName: "akash-ec2-sg"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      SecurityGroupIngress:
      - IpProtocol: "-1"
        Description: "cVPN to Public"
        FromPort: -1
        SourceSecurityGroupId: "sg-0a6c63d92a738a24c"
        ToPort: -1
        SourceSecurityGroupOwnerId: "343218203122"
      SecurityGroupEgress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
  EC2Volume00vol045cae6da6d093ba700renpv:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Volume"
    DeletionPolicy: "Retain"
    Properties:
      MultiAttachEnabled: false
      SnapshotId: "snap-01b44a4dc94c94fda"
      VolumeType: "gp3"
      KmsKeyId: "arn:aws:kms:ap-southeast-1:343218203122:key/e0af6c3f-73fc-497e-863a-6754f0dce6b1"
      Encrypted: true
      Size: 20
      AutoEnableIO: true
      AvailabilityZone: "ap-southeast-1b"
      Throughput: 125
      Iops: 3000
      Tags:
      - Value: "shengkwan-jumpserver-EBS"
        Key: "Name"
  ECSTaskDefinition00taskdefinitiongenaipilot1700ls9hJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::TaskDefinition"
    DeletionPolicy: "Retain"
    Properties:
      TaskRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      InferenceAccelerators: []
      Memory: "3072"
      PlacementConstraints: []
      Cpu: "1024"
      RequiresCompatibilities:
      - "FARGATE"
      NetworkMode: "awsvpc"
      EnableFaultInjection: false
      ExecutionRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      RuntimePlatform:
        OperatingSystemFamily: "LINUX"
        CpuArchitecture: "X86_64"
      Volumes: []
      ContainerDefinitions:
      - Secrets: []
        Memory: 3072
        VolumesFrom: []
        Cpu: 1024
        EntryPoint: []
        DnsServers: []
        Image: "343218203122.dkr.ecr.ap-southeast-1.amazonaws.com/genai-ecr:callback"
        Essential: true
        LogConfiguration:
          SecretOptions: []
          Options:
            awslogs-group: "/ecs/genaipilot"
            awslogs-create-group: "true"
            awslogs-region: "ap-southeast-1"
            awslogs-stream-prefix: "ecs"
          LogDriver: "awslogs"
        ResourceRequirements: []
        EnvironmentFiles: []
        Name: "genaifrontend"
        DockerSecurityOptions: []
        SystemControls: []
        DnsSearchDomains: []
        CredentialSpecs: []
        Ulimits: []
        ExtraHosts: []
        MountPoints: []
        DependsOn: []
        DockerLabels: {}
        PortMappings:
        - ContainerPort: 8080
          AppProtocol: "http"
          Protocol: "tcp"
          HostPort: 8080
          Name: "genaifrontend-80-tcp"
        Command: []
        Environment: []
        Links: []
      Family: "genaipilot"
      Tags: []
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole360172802f19496da206177a2efcca3e00guYA6:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-36017280-2f19-496d-a206-177a2efcca3e"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-prod-genai-deleteobject-s3:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgprodgenaideleteobjects3rolefrdptv4n00euKZY"
      Users: []
  EC2SecurityGroup00sg01235d7adc17401c200G65mr:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "faidhi local to ec2"
      GroupName: "faidhi-ssh-securitygroup"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      SecurityGroupIngress:
      - CidrIp: "161.69.119.58/32"
        IpProtocol: "tcp"
        FromPort: 22
        ToPort: 22
      SecurityGroupEgress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
  EC2NetworkInterface00eni099302c03e8e3f16a007UCWF:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "RDSNetworkInterface"
      PrivateIpAddress: "10.25.71.121"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.121"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-075615342aa3e28b9"
      - "sg-02a57c92533299fd5"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet0d68b865e8a7e3cc0002GF7k"
      SourceDestCheck: true
      InterfaceType: "interface"
      Tags: []
  EC2Subnet00subnet0d1db15411089416b00yV78w:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Subnet"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      MapPublicIpOnLaunch: false
      EnableDns64: false
      AvailabilityZoneId: "apse1-az3"
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      CidrBlock: "10.25.71.192/27"
      Ipv6Native: false
      Tags:
      - Value: "GenAI-Dev-Application-Private-1c"
        Key: "Name"
  EC2Subnet00subnet0d68b865e8a7e3cc0002GF7k:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Subnet"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      MapPublicIpOnLaunch: false
      EnableDns64: false
      AvailabilityZoneId: "apse1-az3"
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      CidrBlock: "10.25.71.112/28"
      Ipv6Native: false
      Tags:
      - Value: "GenAI-Dev-Database-Private-1c"
        Key: "Name"
  EC2Route00rtb0b5bcb0011b72f45600q39HO:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Route"
    DeletionPolicy: "Retain"
    Properties:
      RouteTableId:
        Ref: "EC2RouteTable00rtb0b5bcb0011b72f45600UhxSV"
      DestinationCidrBlock:
        Fn::GetAtt:
        - "EC2VPC00vpc02790342fee4ebf9f00YtCms"
        - "CidrBlock"
      GatewayId: "local"
      VpcEndpointId: "local"
  EC2NetworkInterface00eni08f51677db6b75a2d00fDDri:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "VPC Endpoint Interface vpce-0b989238df5acf8e1"
      PrivateIpAddress: "10.25.71.216"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.216"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-075615342aa3e28b9"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
      SourceDestCheck: true
      InterfaceType: "vpc_endpoint"
      Tags: []
  EC2NetworkInterfaceAttachment00elaattach0c7b3a544f6e8d95200KEzC4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-08f51677db6b75a2d"
      DeviceIndex: "1"
      DeleteOnTermination: false
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRolee3f8658b1e0a47f4af73ceba309f797e00qsQqf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-e3f8658b-1e0a-47f4-af73-ceba309f797e"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-wss-getCategories:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - "sg-wss-getCategories-role-ywzj7th7"
      Users: []
  EC2NetworkInterfaceAttachment00elaattach00f82e4c8da44415900668pu:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-009547dc462a0f3d1"
      DeviceIndex: "1"
      DeleteOnTermination: false
  IAMRole00sgprodgenaisummariserroleu702de5o00E2i94:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/AmazonSQSFullAccess"
      - "arn:aws:iam::aws:policy/AmazonSNSFullAccess"
      - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
      - "arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy"
      - "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess"
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-5c881dad-5b1a-44c0-8141-7df98c414d01"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-summariser-role-u702de5o"
      Policies:
      - PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Resource: "*"
            Action:
            - "bedrock:InvokeModel"
            - "bedrock:InvokeModelWithResponseStream"
            - "bedrock:ListFoundationModels"
            Effect: "Allow"
            Sid: "VisualEditor0"
        PolicyName: "BedrockModel"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  EC2VPCEndpoint00vpce062f00c0e54ceee4c003yb94:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VPCEndpoint"
    DeletionPolicy: "Retain"
    Properties:
      PrivateDnsEnabled: true
      IpAddressType: "ipv4"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      DnsOptions:
        PrivateDnsOnlyForInboundResolverEndpoint: "NotSpecified"
        DnsRecordIpType: "ipv4"
      RouteTableIds: []
      ServiceName: "com.amazonaws.ap-southeast-1.ssm"
      PolicyDocument:
        Statement:
        - Resource: "*"
          Action: "*"
          Effect: "Allow"
          Principal: "*"
      VpcEndpointType: "Interface"
      ResourceConfigurationArn: ""
      SecurityGroupIds:
      - "sg-0ef00776c538db142"
      SubnetIds:
      - Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      - Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
      ServiceNetworkArn: ""
  LambdaVersion00functionsgprodgenairagsummariser1600IVtKw:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Version"
    DeletionPolicy: "Retain"
    Properties:
      CodeSha256: "34d384ef09b7a7c53fded624539c40630a5820f06890bca7c8d6cca7c8a2dbd7"
      FunctionName:
        Ref: "LambdaFunction00sgprodgenairagsummariser00BDrwV"
      Description: ""
  EC2VPC00vpc02790342fee4ebf9f00YtCms:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VPC"
    DeletionPolicy: "Retain"
    Properties:
      CidrBlock: "10.25.71.0/24"
      EnableDnsSupport: true
      InstanceTenancy: "default"
      EnableDnsHostnames: true
      Tags:
      - Value: "GenAI-Pilot-VPC"
        Key: "Name"
  ECSTaskDefinition00taskdefinitiongenaipilot13003B2Sq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::TaskDefinition"
    DeletionPolicy: "Retain"
    Properties:
      TaskRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      InferenceAccelerators: []
      Memory: "3072"
      PlacementConstraints: []
      Cpu: "1024"
      RequiresCompatibilities:
      - "FARGATE"
      NetworkMode: "awsvpc"
      EnableFaultInjection: false
      ExecutionRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      RuntimePlatform:
        OperatingSystemFamily: "LINUX"
        CpuArchitecture: "X86_64"
      Volumes: []
      ContainerDefinitions:
      - Secrets: []
        Memory: 3072
        VolumesFrom: []
        Cpu: 1024
        EntryPoint: []
        DnsServers: []
        Image: "343218203122.dkr.ecr.ap-southeast-1.amazonaws.com/genai-ecr:DockerImage-Redhat-Webapp-NodeJS"
        Essential: true
        LogConfiguration:
          SecretOptions: []
          Options:
            awslogs-group: "/ecs/genaipilot"
            awslogs-create-group: "true"
            awslogs-region: "ap-southeast-1"
            awslogs-stream-prefix: "ecs"
          LogDriver: "awslogs"
        ResourceRequirements: []
        EnvironmentFiles: []
        Name: "genaifrontend"
        DockerSecurityOptions: []
        SystemControls: []
        DnsSearchDomains: []
        CredentialSpecs: []
        Ulimits: []
        ExtraHosts: []
        MountPoints: []
        DependsOn: []
        DockerLabels: {}
        PortMappings:
        - ContainerPort: 8080
          AppProtocol: "http"
          Protocol: "tcp"
          HostPort: 8080
          Name: "genaifrontend-80-tcp"
        Command: []
        Environment: []
        Links: []
      Family: "genaipilot"
      Tags: []
  EC2SubnetRouteTableAssociation00rtbassoc0b6ee698cdfa41a5d00n70RN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    DeletionPolicy: "Retain"
    Properties:
      RouteTableId:
        Ref: "EC2RouteTable00rtb07a95c43e9fdd755c00a32xl"
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
  EC2Volume00vol086aefbd878266b9500UHNy3:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Volume"
    DeletionPolicy: "Retain"
    Properties:
      MultiAttachEnabled: false
      SnapshotId: "snap-0cda8ec628a037291"
      VolumeType: "gp3"
      KmsKeyId: "arn:aws:kms:ap-southeast-1:343218203122:key/e0af6c3f-73fc-497e-863a-6754f0dce6b1"
      Encrypted: true
      Size: 20
      AutoEnableIO: false
      AvailabilityZone: "ap-southeast-1b"
      Throughput: 125
      Iops: 3000
      Tags: []
  EC2SubnetNetworkAclAssociation00aclassoc0c60da9e9ca712b0700tTm8X:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    DeletionPolicy: "Retain"
    Properties:
      NetworkAclId:
        Ref: "EC2NetworkAcl00acl02223366315f41b3800EucVg"
      SubnetId:
        Ref: "EC2Subnet00subnet03593bd789c587e3c00RCDbo"
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRoledce4cdf93fc6461db071afc3476e2d5700yeEEp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-dce4cdf9-3fc6-461d-b071-afc3476e2d57"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-prod-genai-relevantdocs:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
        - Resource:
          - "arn:aws:s3:::sg-prod-genai-casefinder"
          - "arn:aws:s3:::sg-prod-genai-casefinder/*"
          Action:
          - "s3:ListBucket"
          - "s3:GetObject"
          - "s3:PutObject"
          - "s3:DeleteObject"
          Effect: "Allow"
          Sid: "AllowS3Access"
      Roles:
      - "sg-prod-genai-relevantdocs-role-bnmvu3wq"
      Users: []
  ECSTaskDefinition00taskdefinitiongenaipilot3000rQbhs:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::TaskDefinition"
    DeletionPolicy: "Retain"
    Properties:
      TaskRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      InferenceAccelerators: []
      Memory: "3072"
      PlacementConstraints: []
      Cpu: "1024"
      RequiresCompatibilities:
      - "FARGATE"
      NetworkMode: "awsvpc"
      EnableFaultInjection: false
      ExecutionRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      RuntimePlatform:
        OperatingSystemFamily: "LINUX"
        CpuArchitecture: "X86_64"
      Volumes: []
      ContainerDefinitions:
      - Secrets: []
        Memory: 3072
        VolumesFrom: []
        Cpu: 1024
        EntryPoint: []
        DnsServers: []
        ReadonlyRootFilesystem: true
        Image: "343218203122.dkr.ecr.ap-southeast-1.amazonaws.com/genai-ecr:Prod-Frontend-Latest-V3"
        Essential: true
        LogConfiguration:
          SecretOptions: []
          Options:
            awslogs-group: "/ecs/genaipilot"
            awslogs-create-group: "true"
            awslogs-region: "ap-southeast-1"
            awslogs-stream-prefix: "ecs"
          LogDriver: "awslogs"
        ResourceRequirements: []
        EnvironmentFiles: []
        Name: "genaifrontend"
        DockerSecurityOptions: []
        SystemControls: []
        DnsSearchDomains: []
        CredentialSpecs: []
        Ulimits: []
        ExtraHosts: []
        MountPoints: []
        DependsOn: []
        DockerLabels: {}
        PortMappings:
        - ContainerPort: 80
          AppProtocol: "http"
          Protocol: "tcp"
          HostPort: 80
          Name: "genaifrontend-80-tcp"
        Command: []
        Environment: []
        Links: []
      Family: "genaipilot"
      Tags: []
  LambdaEventSourceMapping00090f9c1db21a44ac8abef9f59989c6f200oeEQC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::EventSourceMapping"
    DeletionPolicy: "Retain"
    Properties:
      BatchSize: 1
      FunctionName:
        Fn::GetAtt:
        - "LambdaFunction00TOBEDELETEDtestfunctionsqs00qijDh"
        - "Arn"
      ScalingConfig:
        MaximumConcurrency: 2
      Enabled: true
      EventSourceArn:
        Fn::GetAtt:
        - "SQSQueue00teststandardqueue00x2UX1"
        - "Arn"
      Tags: []
      FunctionResponseTypes:
      - "ReportBatchItemFailures"
      MaximumBatchingWindowInSeconds: 0
  ECRRepository00sgprodgenairagsummariserrepo00jCWOg:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECR::Repository"
    DeletionPolicy: "Retain"
    Properties:
      ImageScanningConfiguration:
        ScanOnPush: true
      RepositoryName: "sg-prod-genai-rag-summariser-repo"
      EncryptionConfiguration:
        EncryptionType: "AES256"
      RepositoryPolicyText:
        Version: "2008-10-17"
        Statement:
        - Condition:
            StringLike:
              aws:sourceArn: "arn:aws:lambda:ap-southeast-1:343218203122:function:*"
          Action:
          - "ecr:BatchGetImage"
          - "ecr:GetDownloadUrlForLayer"
          - "ecr:SetRepositoryPolicy"
          - "ecr:DeleteRepositoryPolicy"
          - "ecr:GetRepositoryPolicy"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
          Sid: "LambdaECRImageRetrievalPolicy"
      Tags: []
      ImageTagMutability: "IMMUTABLE"
  EC2NetworkInterface00eni0e26b9298bc1d4f2100vMskC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: ""
      PrivateIpAddress: "10.25.71.172"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.172"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-07fd500f946aad8a2"
      - "sg-0158898f4b43a0ae9"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      SourceDestCheck: true
      InterfaceType: "interface"
      Tags: []
  EC2Instance00i0af21fb2531ca410d007z0Gi:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Instance"
    DeletionPolicy: "Retain"
    Properties:
      Tenancy: "default"
      SecurityGroups:
      - "GenAI-Pilot-Private-Tmicro-to-App"
      - "harith-ec2-sg"
      - "websocketDocDB"
      - "GenAI-Pilot-Private-Cvpn-to-App"
      PrivateIpAddress: "10.25.71.173"
      BlockDeviceMappings:
      - Ebs:
          SnapshotId: "snap-091bcb51d6f04afa9"
          VolumeType: "gp3"
          KmsKeyId:
            Fn::GetAtt:
            - "KMSKey00e0af6c3f73fc497e863a6754f0dce6b1003YkeT"
            - "Arn"
          Encrypted: true
          Iops: 3000
          VolumeSize: 20
          DeleteOnTermination: false
        DeviceName: "/dev/sda1"
      IamInstanceProfile:
        Ref: "IAMInstanceProfile00ec2adminaccess00YQdI9"
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      EbsOptimized: true
      Volumes:
      - VolumeId: "vol-0c5c3a52ca610e455"
        Device: "/dev/sda1"
      NetworkInterfaces:
      - PrivateIpAddresses:
        - PrivateIpAddress: "10.25.71.173"
          Primary: true
        SecondaryPrivateIpAddressCount: 0
        DeviceIndex: "0"
        GroupSet:
        - Ref: "EC2SecurityGroup00sg07fd500f946aad8a200ZP1Hf"
        - Ref: "EC2SecurityGroup00sg018c8a78c89c0d40400oULTp"
        - Ref: "EC2SecurityGroup00sg02a57c92533299fd5009RYMP"
        - Ref: "EC2SecurityGroup00sg0158898f4b43a0ae900gUN5N"
        Ipv6Addresses: []
        SubnetId:
          Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
        AssociatePublicIpAddress: false
        NetworkInterfaceId:
          Ref: "EC2NetworkInterface00eni01f1da401b50eb80e00zeVWp"
        DeleteOnTermination: true
      ImageId: "ami-069abcf2c7dbce501"
      InstanceType: "t3.xlarge"
      Monitoring: false
      Tags:
      - Value: "ec2-jumpserver-nabil"
        Key: "Name"
      InstanceInitiatedShutdownBehavior: "stop"
      CpuOptions:
        ThreadsPerCore: 2
        CoreCount: 2
      AvailabilityZone: "ap-southeast-1b"
      PrivateDnsNameOptions:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      SecurityGroupIds:
      - "sg-07fd500f946aad8a2"
      - "sg-018c8a78c89c0d404"
      - "sg-02a57c92533299fd5"
      - "sg-0158898f4b43a0ae9"
      DisableApiTermination: false
      KeyName: "nabil-to-ec2pilot"
      SourceDestCheck: true
      PlacementGroupName: ""
      VpcId: "vpc-02790342fee4ebf9f"
      State:
        Code: "80"
        Name: "stopped"
      CreditSpecification:
        CPUCredits: "unlimited"
  LambdaEventSourceMapping00818f9f847e544875846c495d710514ea00dSvfP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::EventSourceMapping"
    DeletionPolicy: "Retain"
    Properties:
      BatchSize: 1
      FunctionName:
        Ref: "LambdaVersion00functionsgprodgenairagsummariser1600IVtKw"
      ScalingConfig:
        MaximumConcurrency: 2
      Enabled: false
      EventSourceArn:
        Fn::GetAtt:
        - "SQSQueue00summarisercontinuousconversationfifo00KeXfW"
        - "Arn"
      Tags: []
      FunctionResponseTypes:
      - "ReportBatchItemFailures"
      MaximumBatchingWindowInSeconds: 0
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRoledbb970325f9d466689b6df2f067143a100EKqmB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-dbb97032-5f9d-4666-89b6-df2f067143a1"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-test-genai-summariser-retrievetofrontend:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - "sg-test-genai-summariser-retrievetofrontend-role-wko3izur"
      Users: []
  ECSTaskDefinition00taskdefinitiongenaipilot2700yCDmO:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::TaskDefinition"
    DeletionPolicy: "Retain"
    Properties:
      TaskRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      InferenceAccelerators: []
      Memory: "3072"
      PlacementConstraints: []
      Cpu: "1024"
      RequiresCompatibilities:
      - "FARGATE"
      NetworkMode: "awsvpc"
      EnableFaultInjection: false
      ExecutionRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      RuntimePlatform:
        OperatingSystemFamily: "LINUX"
        CpuArchitecture: "X86_64"
      Volumes: []
      ContainerDefinitions:
      - Secrets: []
        Memory: 3072
        VolumesFrom: []
        Cpu: 1024
        EntryPoint: []
        DnsServers: []
        ReadonlyRootFilesystem: true
        Image: "343218203122.dkr.ecr.ap-southeast-1.amazonaws.com/genai-ecr:Prod-Frontend-Latest-V1"
        Essential: true
        LogConfiguration:
          SecretOptions: []
          Options:
            awslogs-group: "/ecs/genaipilot"
            awslogs-create-group: "true"
            awslogs-region: "ap-southeast-1"
            awslogs-stream-prefix: "ecs"
          LogDriver: "awslogs"
        ResourceRequirements: []
        EnvironmentFiles: []
        Name: "genaifrontend"
        DockerSecurityOptions: []
        SystemControls: []
        DnsSearchDomains: []
        CredentialSpecs: []
        Ulimits: []
        ExtraHosts: []
        MountPoints: []
        DependsOn: []
        DockerLabels: {}
        PortMappings:
        - ContainerPort: 8080
          AppProtocol: "http"
          Protocol: "tcp"
          HostPort: 8080
          Name: "genaifrontend-80-tcp"
        Command: []
        Environment: []
        Links: []
      Family: "genaipilot"
      Tags: []
  EC2NetworkInterface00eni00d8354b1cac7c80300EugTJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "VPC Endpoint Interface vpce-08984f3f8624c01e1"
      PrivateIpAddress: "10.25.71.72"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.72"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-0a6c63d92a738a24c"
      - "sg-075615342aa3e28b9"
      - "sg-0158898f4b43a0ae9"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet060714d7ed3b1128b00T1t2O"
      SourceDestCheck: true
      InterfaceType: "vpc_endpoint"
      Tags: []
  EC2NetworkAcl00acl02223366315f41b3800EucVg:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkAcl"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      Tags:
      - Value: "GenAI-Pilot-TGWA-acl"
        Key: "Name"
  EC2NetworkInterface00eni00ad0f5dea7abdd8500ttJG4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "VPC Endpoint Interface vpce-05f8f2706ff8cbb8a"
      PrivateIpAddress: "10.25.71.220"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.220"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-075615342aa3e28b9"
      - "sg-0bb8d1d9641e826f4"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
      SourceDestCheck: true
      InterfaceType: "vpc_endpoint"
      Tags: []
  EC2NetworkInterface00eni084073ecf36a04b8e00n5gcP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "SageMaker managed ENI for endpoint hf-sentencesimilarity-bge-m3-2024-09-17-08-16-29-979\
        \ instance i-0c345d63e44224cb6"
      PrivateIpAddress: "10.25.71.203"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.203"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-075615342aa3e28b9"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
      SourceDestCheck: true
      InterfaceType: "interface"
      Tags: []
  ECSTaskDefinition00taskdefinitiongenaipilot2900HmeIa:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::TaskDefinition"
    DeletionPolicy: "Retain"
    Properties:
      TaskRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      InferenceAccelerators: []
      Memory: "3072"
      PlacementConstraints: []
      Cpu: "1024"
      RequiresCompatibilities:
      - "FARGATE"
      NetworkMode: "awsvpc"
      EnableFaultInjection: false
      ExecutionRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      RuntimePlatform:
        OperatingSystemFamily: "LINUX"
        CpuArchitecture: "X86_64"
      Volumes: []
      ContainerDefinitions:
      - Secrets: []
        Memory: 3072
        VolumesFrom: []
        Cpu: 1024
        EntryPoint: []
        DnsServers: []
        ReadonlyRootFilesystem: true
        Image: "343218203122.dkr.ecr.ap-southeast-1.amazonaws.com/genai-ecr:Prod-Frontend-Latest-V2"
        Essential: true
        LogConfiguration:
          SecretOptions: []
          Options:
            awslogs-group: "/ecs/genaipilot"
            awslogs-create-group: "true"
            awslogs-region: "ap-southeast-1"
            awslogs-stream-prefix: "ecs"
          LogDriver: "awslogs"
        ResourceRequirements: []
        EnvironmentFiles: []
        Name: "genaifrontend"
        DockerSecurityOptions: []
        SystemControls: []
        DnsSearchDomains: []
        CredentialSpecs: []
        Ulimits: []
        ExtraHosts: []
        MountPoints: []
        DependsOn: []
        DockerLabels: {}
        PortMappings:
        - ContainerPort: 80
          AppProtocol: "http"
          Protocol: "tcp"
          HostPort: 80
          Name: "genaifrontend-80-tcp"
        Command: []
        Environment: []
        Links: []
      Family: "genaipilot"
      Tags: []
  EC2NetworkInterface00eni0a79669b8bad1083a00XvjA2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: ""
      PrivateIpAddress: "10.25.71.222"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.222"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-0ef00776c538db142"
      - "sg-07fd500f946aad8a2"
      - "sg-075615342aa3e28b9"
      - "sg-0158898f4b43a0ae9"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
      SourceDestCheck: true
      InterfaceType: "interface"
      Tags: []
  EC2NetworkInterfaceAttachment00elaattach07e6e9663fe87c51700KHI9y:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-09c67fb148e45c6f1"
      DeviceIndex: "1"
      DeleteOnTermination: false
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole79d9914b85684cad8fc1ceec6054e5cf00v7UiX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-79d9914b-8568-4cad-8fc1-ceec6054e5cf"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-prod-genai-embedding-sgmkr-v1:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - "sg-prod-genai-embedding-sgmkr-v1-role-fuho1lhl"
      Users: []
  EC2NetworkInterfaceAttachment00eniattach0f8979996db63b16400OSk7n:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0e26b9298bc1d4f21"
      InstanceId: "i-0b2e07dbc66acf6c2"
      DeviceIndex: "0"
      DeleteOnTermination: true
  EC2NetworkInterface00eni04ad4cad81ecb049b00Klgtd:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "VPC Endpoint Interface vpce-062f00c0e54ceee4c"
      PrivateIpAddress: "10.25.71.187"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.187"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-0ef00776c538db142"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      SourceDestCheck: true
      InterfaceType: "vpc_endpoint"
      Tags: []
  IAMRole00sgprodgenaideleteobjects3rolefrdptv4n00euKZY:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-36017280-2f19-496d-a206-177a2efcca3e"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-deleteobject-s3-role-frdptv4n"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  ECSTaskDefinition00taskdefinitiongenaipilot2006Qi74:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::TaskDefinition"
    DeletionPolicy: "Retain"
    Properties:
      TaskRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      InferenceAccelerators: []
      Memory: "3072"
      PlacementConstraints: []
      Cpu: "1024"
      RequiresCompatibilities:
      - "FARGATE"
      NetworkMode: "awsvpc"
      EnableFaultInjection: false
      ExecutionRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      RuntimePlatform:
        OperatingSystemFamily: "LINUX"
        CpuArchitecture: "X86_64"
      Volumes: []
      ContainerDefinitions:
      - Secrets: []
        Memory: 3072
        VolumesFrom: []
        Cpu: 1024
        EntryPoint: []
        DnsServers: []
        Image: "vpce-02d8a2532923f5a37-3xeixmjs.dkr.ecr.ap-southeast-1.vpce.amazonaws.com/genai-ecr:latest"
        Essential: true
        LogConfiguration:
          SecretOptions: []
          Options:
            awslogs-group: "/ecs/genaipilot"
            awslogs-create-group: "true"
            awslogs-region: "ap-southeast-1"
            awslogs-stream-prefix: "ecs"
          LogDriver: "awslogs"
        ResourceRequirements: []
        EnvironmentFiles: []
        Name: "genaifrontend"
        DockerSecurityOptions: []
        SystemControls: []
        DnsSearchDomains: []
        CredentialSpecs: []
        Ulimits: []
        ExtraHosts: []
        MountPoints: []
        DependsOn: []
        DockerLabels: {}
        PortMappings:
        - ContainerPort: 80
          AppProtocol: "http"
          Protocol: "tcp"
          HostPort: 80
          Name: "genaifrontend-80-tcp"
        Command: []
        Environment: []
        Links: []
      Family: "genaipilot"
      Tags: []
  EC2NetworkInterfaceAttachment00elaattach02db455c0cfa4b512002eLKB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0ff444c3a25c75674"
      DeviceIndex: "1"
      DeleteOnTermination: false
  ElasticLoadBalancingV2Listener00listenerappGenAIPilotInternalALBa1f8a8ad2aaa94bbd867f969d7c2f4de00OSLUs:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    DeletionPolicy: "Retain"
    Properties:
      MutualAuthentication:
        Mode: "off"
      ListenerAttributes:
      - Value: ""
        Key: "routing.http.request.x_amzn_tls_cipher_suite.header_name"
      - Value: ""
        Key: "routing.http.request.x_amzn_mtls_clientcert_serial_number.header_name"
      - Value: ""
        Key: "routing.http.response.access_control_allow_origin.header_value"
      - Value: ""
        Key: "routing.http.response.content_security_policy.header_value"
      - Value: ""
        Key: "routing.http.request.x_amzn_mtls_clientcert_leaf.header_name"
      - Value: ""
        Key: "routing.http.request.x_amzn_tls_version.header_name"
      - Value: "true"
        Key: "routing.http.response.server.enabled"
      - Value: ""
        Key: "routing.http.response.access_control_allow_headers.header_value"
      - Value: ""
        Key: "routing.http.response.x_frame_options.header_value"
      - Value: ""
        Key: "routing.http.response.access_control_allow_methods.header_value"
      - Value: ""
        Key: "routing.http.request.x_amzn_mtls_clientcert_issuer.header_name"
      - Value: ""
        Key: "routing.http.request.x_amzn_mtls_clientcert.header_name"
      - Value: ""
        Key: "routing.http.request.x_amzn_mtls_clientcert_validity.header_name"
      - Value: ""
        Key: "routing.http.response.access_control_allow_credentials.header_value"
      - Value: ""
        Key: "routing.http.request.x_amzn_mtls_clientcert_subject.header_name"
      - Value: ""
        Key: "routing.http.response.x_content_type_options.header_value"
      - Value: ""
        Key: "routing.http.response.access_control_expose_headers.header_value"
      - Value: ""
        Key: "routing.http.response.strict_transport_security.header_value"
      - Value: ""
        Key: "routing.http.response.access_control_max_age.header_value"
      SslPolicy: "ELBSecurityPolicy-TLS13-1-2-2021-06"
      LoadBalancerArn:
        Ref: "ElasticLoadBalancingV2LoadBalancer00loadbalancerappGenAIPilotInternalALBa1f8a8ad2aaa94bb00Up2ZY"
      DefaultActions:
      - Order: 1
        TargetGroupArn: "arn:aws:elasticloadbalancing:ap-southeast-1:343218203122:targetgroup/ecs-GenAI--GenAI-Pilot-Service-T/13a8c79dd187a1fa"
        Type: "forward"
        ForwardConfig:
          TargetGroupStickinessConfig:
            Enabled: false
            DurationSeconds: 3600
          TargetGroups:
          - TargetGroupArn: "arn:aws:elasticloadbalancing:ap-southeast-1:343218203122:targetgroup/ecs-GenAI--GenAI-Pilot-Service-T/13a8c79dd187a1fa"
            Weight: 1
      Port: 443
      Certificates:
      - CertificateArn: "arn:aws:acm:ap-southeast-1:343218203122:certificate/66784596-3d33-445a-80ac-58e718e53b05"
      Protocol: "HTTPS"
  LambdaEventSourceMapping00490e1e6a3d70429d8e6af8f9ed0c7ca800EgGLp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::EventSourceMapping"
    DeletionPolicy: "Retain"
    Properties:
      BatchSize: 1
      FunctionName:
        Fn::GetAtt:
        - "LambdaFunction00TOBEDELETEDtestfunctionsqs00qijDh"
        - "Arn"
      ScalingConfig:
        MaximumConcurrency: 2
      Enabled: true
      EventSourceArn:
        Fn::GetAtt:
        - "SQSQueue00PRIORITYfifo00Ugi93"
        - "Arn"
      Tags: []
      FunctionResponseTypes:
      - "ReportBatchItemFailures"
      MaximumBatchingWindowInSeconds: 0
  EC2Volume00vol051787da3d74b912500FoyB3:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Volume"
    DeletionPolicy: "Retain"
    Properties:
      MultiAttachEnabled: false
      SnapshotId: "snap-0ec140dc820a72dd3"
      VolumeType: "gp3"
      KmsKeyId: "arn:aws:kms:ap-southeast-1:343218203122:key/e0af6c3f-73fc-497e-863a-6754f0dce6b1"
      Encrypted: true
      Size: 100
      AutoEnableIO: false
      AvailabilityZone: "ap-southeast-1a"
      Throughput: 125
      Iops: 3000
      Tags: []
  EC2NetworkInterfaceAttachment00elaattach06a14843c446ce1c700R8N4l:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0cd92354a0adaf20d"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2SecurityGroup00sg0f3201c1695e4b6cd00rkC4e:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "Security group attached to instances to securely connect\
        \ to sg-prod-genai-courtcasesdb-216-v1. Modification could lead to connection\
        \ loss."
      GroupName: "ec2-docdb-sg-prod-genai-courtcasesdb-216-v1:i-03f8874d8826997dc"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      SecurityGroupEgress:
      - IpProtocol: "tcp"
        DestinationSecurityGroupId:
          Fn::GetAtt:
          - "EC2SecurityGroup00sg0015158c72d369b5100qzoxC"
          - "GroupId"
        FromPort: 27017
        ToPort: 27017
  EC2SecurityGroup00sg03faa669e447f131000rpkHG:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "rebekah-public-ec2-sg"
      GroupName: "rebekah-public-ec2-sg"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      SecurityGroupIngress:
      - IpProtocol: "-1"
        Description: "cVPN to Public"
        FromPort: -1
        SourceSecurityGroupId: "sg-0a6c63d92a738a24c"
        ToPort: -1
        SourceSecurityGroupOwnerId: "343218203122"
      SecurityGroupEgress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
  EC2InternetGateway00igw06258a1d9641f4baa00iJNEi:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::InternetGateway"
    DeletionPolicy: "Retain"
    Properties:
      Tags: []
  ElasticLoadBalancingV2TargetGroup00targetgroupECSGenAITestFalainaTGe1f504efa715773500nWt5i:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    DeletionPolicy: "Retain"
    Properties:
      IpAddressType: "ipv4"
      HealthCheckIntervalSeconds: 30
      Matcher:
        HttpCode: "200"
      HealthCheckPath: "/"
      Port: 80
      Targets: []
      HealthCheckEnabled: true
      ProtocolVersion: "HTTP1"
      UnhealthyThresholdCount: 2
      HealthCheckTimeoutSeconds: 5
      Name: "ECS-GenAI-Test-Falaina-TG"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      HealthyThresholdCount: 5
      HealthCheckProtocol: "HTTP"
      TargetGroupAttributes:
      - Value: "lb_cookie"
        Key: "stickiness.type"
      - Value: "86400"
        Key: "stickiness.app_cookie.duration_seconds"
      - Value: "1"
        Key: "target_group_health.dns_failover.minimum_healthy_targets.count"
      - Value: "use_load_balancer_configuration"
        Key: "load_balancing.cross_zone.enabled"
      - Value: "86400"
        Key: "stickiness.lb_cookie.duration_seconds"
      - Value: "off"
        Key: "target_group_health.dns_failover.minimum_healthy_targets.percentage"
      - Value: "false"
        Key: "stickiness.enabled"
      - Value: "off"
        Key: "target_group_health.unhealthy_state_routing.minimum_healthy_targets.percentage"
      - Value: "0"
        Key: "slow_start.duration_seconds"
      - Value: "300"
        Key: "deregistration_delay.timeout_seconds"
      - Value: "1"
        Key: "target_group_health.unhealthy_state_routing.minimum_healthy_targets.count"
      - Value: "off"
        Key: "load_balancing.algorithm.anomaly_mitigation"
      - Value: ""
        Key: "stickiness.app_cookie.cookie_name"
      - Value: "round_robin"
        Key: "load_balancing.algorithm.type"
      TargetType: "ip"
      HealthCheckPort: "traffic-port"
      Protocol: "HTTP"
      Tags: []
  EC2SubnetRouteTableAssociation00rtbassoc01bbf499f26d4061400ew3j4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    DeletionPolicy: "Retain"
    Properties:
      RouteTableId:
        Ref: "EC2RouteTable00rtb0a15cf959dd3116720074dZf"
      SubnetId:
        Ref: "EC2Subnet00subnet0e7c29cffbb72373f00bJwid"
  EC2NetworkAcl00acl0df56d18f4814922c00cT3MU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkAcl"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc0182b4cdff5ae990b00WzWIq"
      Tags: []
  EC2VolumeAttachment00vol045cae6da6d093ba700kd3FO:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VolumeAttachment"
    DeletionPolicy: "Retain"
    Properties:
      InstanceId: "i-0630337e785e424b3"
      VolumeId: "vol-045cae6da6d093ba7"
      Device: "/dev/xvda"
  EC2Route00rtb030713ec66e66a37700IqRqq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Route"
    DeletionPolicy: "Retain"
    Properties:
      RouteTableId:
        Ref: "EC2RouteTable00rtb030713ec66e66a37700hAtjG"
      DestinationCidrBlock:
        Fn::GetAtt:
        - "EC2VPC00vpc0182b4cdff5ae990b00WzWIq"
        - "CidrBlock"
      GatewayId: "local"
      VpcEndpointId: "local"
  EC2SecurityGroup00sg02c2f03d3e7cd125f00NTu99:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "Allows access to S3 for lambda"
      GroupName: "GenAI-Pilot-Lambda-S3"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      SecurityGroupIngress:
      - IpProtocol: "tcp"
        Description: "Allows inbound from S3 to lambda"
        FromPort: 443
        ToPort: 443
        SourcePrefixListId: "pl-6fa54006"
      SecurityGroupEgress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
  EC2SecurityGroup00sg06dc6dabaa393db2b00jQbNg:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "Security group attached to sg-prod-genai-courtcasesdb-216-v1\
        \ to allow EC2 instances with specific security groups attached to connect\
        \ to the database. Modification could lead to connection loss."
      GroupName: "docdb-ec2-sg-prod-genai-courtcasesdb-216-v1:i-06fa70419b272af92"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      SecurityGroupIngress:
      - IpProtocol: "tcp"
        FromPort: 27017
        SourceSecurityGroupId: "sg-0ce499337c440f4c5"
        ToPort: 27017
        SourceSecurityGroupOwnerId: "343218203122"
  EC2NetworkInterface00eni0fe3b3221166496f2009MhBE:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "VPC Endpoint Interface vpce-0279b53fbb66caba2"
      PrivateIpAddress: "10.25.71.76"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.76"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-075615342aa3e28b9"
      - "sg-02d1755cab861734f"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet060714d7ed3b1128b00T1t2O"
      SourceDestCheck: true
      InterfaceType: "vpc_endpoint"
      Tags: []
  IAMManagedPolicy00policyserviceroleAmazonEventBridgeSchedulerExecutionPolicy5993931dd2ea467aa09a34ec895ab53300tLAR9:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "Amazon-EventBridge-Scheduler-Execution-Policy-5993931d-d2ea-467a-a09a-34ec895ab533"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource:
          - "arn:aws:lambda:ap-southeast-1:343218203122:function:StopEC2Instances:*"
          - "arn:aws:lambda:ap-southeast-1:343218203122:function:StopEC2Instances"
          Action:
          - "lambda:InvokeFunction"
          Effect: "Allow"
      Roles:
      - "Amazon_EventBridge_Scheduler_LAMBDA_4f6da799a5"
      Users: []
  ECSTaskDefinition00taskdefinitiongenaipilot300NZTqR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::TaskDefinition"
    DeletionPolicy: "Retain"
    Properties:
      TaskRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      InferenceAccelerators: []
      Memory: "3072"
      PlacementConstraints: []
      Cpu: "1024"
      RequiresCompatibilities:
      - "FARGATE"
      NetworkMode: "awsvpc"
      EnableFaultInjection: false
      ExecutionRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      RuntimePlatform:
        OperatingSystemFamily: "LINUX"
        CpuArchitecture: "X86_64"
      Volumes: []
      ContainerDefinitions:
      - Secrets: []
        Memory: 3072
        VolumesFrom: []
        Cpu: 1024
        EntryPoint: []
        DnsServers: []
        Image: "343218203122.dkr.ecr.ap-southeast-1.amazonaws.com/genai-ecr"
        Essential: true
        LogConfiguration:
          SecretOptions: []
          Options:
            awslogs-group: "/ecs/genaipilot"
            awslogs-create-group: "true"
            awslogs-region: "ap-southeast-1"
            awslogs-stream-prefix: "ecs"
          LogDriver: "awslogs"
        ResourceRequirements: []
        EnvironmentFiles: []
        Name: "genaifrontend"
        DockerSecurityOptions: []
        SystemControls: []
        DnsSearchDomains: []
        CredentialSpecs: []
        Ulimits: []
        ExtraHosts: []
        MountPoints: []
        DependsOn: []
        DockerLabels: {}
        PortMappings:
        - ContainerPort: 80
          AppProtocol: "http"
          Protocol: "tcp"
          HostPort: 80
          Name: "genaifrontend-80-tcp"
        Command: []
        Environment: []
        Links: []
      Family: "genaipilot"
      Tags: []
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole7cc63468addc47ff82d92461a62eb15500tA1BQ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-7cc63468-addc-47ff-82d9-2461a62eb155"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-prod-genai-deleteobject-s3-220-v1:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - "sg-prod-genai-deleteobject-s3-220-v1-role-f2osbylu"
      Users: []
  EC2NetworkInterface00eni085c57e54a6ad46d800Jz5QU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "VPC Endpoint Interface vpce-0487064705b74cdcd"
      PrivateIpAddress: "10.25.71.218"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.218"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-075615342aa3e28b9"
      - "sg-0bb8d1d9641e826f4"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
      SourceDestCheck: true
      InterfaceType: "vpc_endpoint"
      Tags: []
  EC2VPCEndpoint00vpce02d8a2532923f5a3700LlEXW:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VPCEndpoint"
    DeletionPolicy: "Retain"
    Properties:
      PrivateDnsEnabled: true
      IpAddressType: "ipv4"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      DnsOptions:
        PrivateDnsOnlyForInboundResolverEndpoint: "NotSpecified"
        DnsRecordIpType: "ipv4"
      RouteTableIds: []
      ServiceName: "com.amazonaws.ap-southeast-1.ecr.dkr"
      PolicyDocument:
        Statement:
        - Resource: "*"
          Action: "*"
          Effect: "Allow"
          Principal: "*"
      VpcEndpointType: "Interface"
      ResourceConfigurationArn: ""
      SecurityGroupIds:
      - "sg-02d1755cab861734f"
      SubnetIds:
      - Ref: "EC2Subnet00subnet060714d7ed3b1128b00T1t2O"
      - Ref: "EC2Subnet00subnet040ea0b30fd89092a00dTOsl"
      ServiceNetworkArn: ""
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRoleed12a80c554d4b69ad06a641d3d55dd300N0LVe:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-ed12a80c-554d-4b69-ad06-a641d3d55dd3"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-prod-genai-embedding-216-v1:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - "sg-prod-genai-embedding-216-v1-role-snvor3l7"
      Users: []
  ECSTaskDefinition00taskdefinitiongenaipilot700RunGi:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::TaskDefinition"
    DeletionPolicy: "Retain"
    Properties:
      TaskRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      InferenceAccelerators: []
      Memory: "3072"
      PlacementConstraints: []
      Cpu: "1024"
      RequiresCompatibilities:
      - "FARGATE"
      NetworkMode: "awsvpc"
      EnableFaultInjection: false
      ExecutionRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      RuntimePlatform:
        OperatingSystemFamily: "LINUX"
        CpuArchitecture: "X86_64"
      Volumes: []
      ContainerDefinitions:
      - Secrets: []
        Memory: 3072
        VolumesFrom: []
        Cpu: 1024
        EntryPoint: []
        DnsServers: []
        Image: "343218203122.dkr.ecr.ap-southeast-1.amazonaws.com/genai-ecr:webapp-test"
        Essential: true
        LogConfiguration:
          SecretOptions: []
          Options:
            awslogs-group: "/ecs/genaipilot"
            awslogs-create-group: "true"
            awslogs-region: "ap-southeast-1"
            awslogs-stream-prefix: "ecs"
          LogDriver: "awslogs"
        ResourceRequirements: []
        EnvironmentFiles: []
        Name: "genaifrontend"
        DockerSecurityOptions: []
        SystemControls: []
        DnsSearchDomains: []
        CredentialSpecs: []
        Ulimits: []
        ExtraHosts: []
        MountPoints: []
        DependsOn: []
        DockerLabels: {}
        PortMappings:
        - ContainerPort: 8080
          AppProtocol: "http"
          Protocol: "tcp"
          HostPort: 8080
          Name: "genaifrontend-80-tcp"
        Command: []
        Environment: []
        Links: []
      Family: "genaipilot"
      Tags: []
  EC2NetworkInterface00eni03917fbeaf5a2f79a00fa9JR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "RDSNetworkInterface"
      PrivateIpAddress: "10.25.71.134"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.134"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-075615342aa3e28b9"
      - "sg-02a57c92533299fd5"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet048794c64c2e4427a00kAh5w"
      SourceDestCheck: true
      InterfaceType: "interface"
      Tags: []
  IAMInstanceProfile00AWSCloud9SSMInstanceProfile003aep1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::InstanceProfile"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/cloud9/"
      Roles:
      - Ref: "IAMRole00AWSCloud9SSMAccessRole00U5v1Q"
      InstanceProfileName: "AWSCloud9SSMInstanceProfile"
  EC2NetworkInterfaceAttachment00elaattach0a23e541df4360a1900BZSvV:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0651cf4ea695d7b66"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2SubnetRouteTableAssociation00rtbassoc099751d2574fbe8af00yez43:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    DeletionPolicy: "Retain"
    Properties:
      RouteTableId:
        Ref: "EC2RouteTable00rtb0b5bcb0011b72f45600UhxSV"
      SubnetId:
        Ref: "EC2Subnet00subnet0d68b865e8a7e3cc0002GF7k"
  EC2NetworkInterface00eni0c515d2b1f8f916ef00RYhIn:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "AWS Lambda VPC ENI-sg-prod-genai-categoriser-529f1e2b-ce16-4cbe-964f-a892a2b72f92"
      PrivateIpAddress: "10.25.71.206"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.206"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-075615342aa3e28b9"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
      SourceDestCheck: true
      InterfaceType: "lambda"
      Tags: []
  SQSQueue00PRIORITYfifo00Ugi93:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::SQS::Queue"
    DeletionPolicy: "Retain"
    Properties:
      ReceiveMessageWaitTimeSeconds: 0
      SqsManagedSseEnabled: true
      FifoThroughputLimit: "perQueue"
      DelaySeconds: 0
      FifoQueue: true
      MessageRetentionPeriod: 86400
      MaximumMessageSize: 262144
      DeduplicationScope: "queue"
      VisibilityTimeout: 20
      ContentBasedDeduplication: true
      QueueName: "PRIORITY.fifo"
  EC2SubnetNetworkAclAssociation00aclassoc0dff8019b8b281bd900jeH7L:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    DeletionPolicy: "Retain"
    Properties:
      NetworkAclId:
        Ref: "EC2NetworkAcl00acl0035712838ecf942d00mb5Sn"
      SubnetId:
        Ref: "EC2Subnet00subnet060714d7ed3b1128b00T1t2O"
  EC2NetworkInterface00eni06015366523e884bd00ZFecE:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "VPC Endpoint Interface vpce-062f00c0e54ceee4c"
      PrivateIpAddress: "10.25.71.209"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.209"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-0ef00776c538db142"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
      SourceDestCheck: true
      InterfaceType: "vpc_endpoint"
      Tags: []
  EC2NetworkInterfaceAttachment00eniattach0882d9f73e77359ef00nLJnm:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-00250e1c3f579834d"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2Subnet00subnet040ea0b30fd89092a00dTOsl:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Subnet"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      MapPublicIpOnLaunch: false
      EnableDns64: false
      AvailabilityZoneId: "apse1-az2"
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      CidrBlock: "10.25.71.48/28"
      Ipv6Native: false
      Tags:
      - Value: "GenAI-Dev-ECSAppLB-Private-1b"
        Key: "Name"
  EC2NetworkInterface00eni0a784c4b5215c97d700xnj6x:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "RDSNetworkInterface"
      PrivateIpAddress: "10.25.71.125"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.125"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-075615342aa3e28b9"
      - "sg-02a57c92533299fd5"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet0d68b865e8a7e3cc0002GF7k"
      SourceDestCheck: true
      InterfaceType: "interface"
      Tags: []
  EventsRule00ruleDONOTDELETEAmazonInspectorEc2ManagedRule00zaHZU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Events::Rule"
    DeletionPolicy: "Retain"
    Properties:
      EventBusName:
        Ref: "EventsEventBus00default002gd2v"
      EventPattern:
        detail-type:
        - "EC2 Instance State-change Notification"
        source:
        - "aws.ec2"
        detail:
          state:
          - "running"
          - "stopped"
          - "terminated"
      Description: "Managed rule used to route EC2 Events to Inspector"
      State: "ENABLED"
      Targets:
      - Arn: "arn:aws:inspector2:ap-southeast-1:::"
        Id: "InspectorTarget"
      Id: "DO-NOT-DELETE-AmazonInspectorEc2ManagedRule"
      Name: "DO-NOT-DELETE-AmazonInspectorEc2ManagedRule"
  EC2NetworkInterfaceAttachment00elaattach0e4651d148a829c9e003gijE:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-07f4d77c21904f2f7"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2NetworkInterface00eni057df96580f4c2b3300PHS0c:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "VPC Endpoint Interface vpce-0d8fc93334fc81a80"
      PrivateIpAddress: "10.25.71.164"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.164"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-0ef00776c538db142"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      SourceDestCheck: true
      InterfaceType: "vpc_endpoint"
      Tags: []
  EC2Instance00i0e38931234673f67800cWqQF:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Instance"
    DeletionPolicy: "Retain"
    Properties:
      Tenancy: "default"
      SecurityGroups:
      - "GenAI-Pilot-cvpn-SG"
      - "GenAI-Pilot-Private-Tmicro-to-App"
      - "GenAI-Pilot-Private-Cvpn-to-App"
      PrivateIpAddress: "10.25.71.170"
      BlockDeviceMappings:
      - Ebs:
          SnapshotId: "snap-083334dfef8e3d924"
          VolumeType: "gp3"
          KmsKeyId:
            Fn::GetAtt:
            - "KMSKey00e0af6c3f73fc497e863a6754f0dce6b1003YkeT"
            - "Arn"
          Encrypted: true
          Iops: 3000
          VolumeSize: 100
          DeleteOnTermination: false
        DeviceName: "/dev/xvda"
      IamInstanceProfile:
        Ref: "IAMInstanceProfile00ec2adminaccess00YQdI9"
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      EbsOptimized: true
      Volumes:
      - VolumeId: "vol-0107ba962d2a3a965"
        Device: "/dev/xvda"
      NetworkInterfaces:
      - PrivateIpAddresses:
        - PrivateIpAddress: "10.25.71.170"
          Primary: true
        SecondaryPrivateIpAddressCount: 0
        DeviceIndex: "0"
        GroupSet:
        - Ref: "EC2SecurityGroup00sg0a6c63d92a738a24c00HIVRk"
        - Ref: "EC2SecurityGroup00sg07fd500f946aad8a200ZP1Hf"
        - Ref: "EC2SecurityGroup00sg0158898f4b43a0ae900gUN5N"
        Ipv6Addresses: []
        SubnetId:
          Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
        AssociatePublicIpAddress: false
        NetworkInterfaceId:
          Ref: "EC2NetworkInterface00eni03ebb21c83a16a05500osKNC"
        DeleteOnTermination: true
      ImageId: "ami-08f49baa317796afd"
      InstanceType: "t3.xlarge"
      Monitoring: false
      Tags:
      - Value: "ec2-jumpserver-yenmay"
        Key: "Name"
      InstanceInitiatedShutdownBehavior: "stop"
      CpuOptions:
        ThreadsPerCore: 2
        CoreCount: 2
      AvailabilityZone: "ap-southeast-1b"
      PrivateDnsNameOptions:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      SecurityGroupIds:
      - "sg-0a6c63d92a738a24c"
      - "sg-07fd500f946aad8a2"
      - "sg-0158898f4b43a0ae9"
      DisableApiTermination: false
      KeyName: "yenmay-key"
      SourceDestCheck: true
      PlacementGroupName: ""
      VpcId: "vpc-02790342fee4ebf9f"
      State:
        Code: "80"
        Name: "stopped"
      CreditSpecification:
        CPUCredits: "standard"
  EC2SecurityGroup00sg06d6ec0faf701be6c00J46kT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "default VPC security group"
      GroupName: "default"
      VpcId:
        Ref: "EC2VPC00vpc0182b4cdff5ae990b00WzWIq"
  EC2Route00rtb0b5bcb0011b72f45600rvvtg:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Route"
    DeletionPolicy: "Retain"
    Properties:
      TransitGatewayId:
        Ref: "EC2TransitGateway00tgw052b76048cb5c20c000VNzWV"
      RouteTableId:
        Ref: "EC2RouteTable00rtb0b5bcb0011b72f45600UhxSV"
      DestinationCidrBlock: "0.0.0.0/0"
  EC2NetworkInterfaceAttachment00elaattach0e40a0386271fc11f008Smf4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-057df96580f4c2b33"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2NetworkInterfaceAttachment00eniattach03fb8b6557699d0d800XvGT6:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-084073ecf36a04b8e"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2NetworkInterfaceAttachment00elaattach0e6071d12c472f54200A0vLL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0b201d27c0387eee1"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2SubnetNetworkAclAssociation00aclassoc0c92e94928766b57b00QpYkk:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    DeletionPolicy: "Retain"
    Properties:
      NetworkAclId:
        Ref: "EC2NetworkAcl00acl0df56d18f4814922c00cT3MU"
      SubnetId:
        Ref: "EC2Subnet00subnet0ff6c65f492e7220000wureK"
  EventsRule00ruleDONOTDELETEAmazonInspectorEc2TagManagedRule00VMVdP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Events::Rule"
    DeletionPolicy: "Retain"
    Properties:
      EventBusName:
        Ref: "EventsEventBus00default002gd2v"
      EventPattern:
        detail-type:
        - "Tag Change on Resource"
        source:
        - "aws.tag"
        detail:
          service:
          - "ec2"
          resource-type:
          - "instance"
      Description: "Managed rule used to route EC2 Tag Change Events to Inspector"
      State: "ENABLED"
      Targets:
      - Arn: "arn:aws:inspector2:ap-southeast-1:::"
        Id: "InspectorTarget"
      Id: "DO-NOT-DELETE-AmazonInspectorEc2TagManagedRule"
      Name: "DO-NOT-DELETE-AmazonInspectorEc2TagManagedRule"
  EC2NetworkInterfaceAttachment00elaattach00b7d711365812a5a00W0Ngj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0c515d2b1f8f916ef"
      DeviceIndex: "1"
      DeleteOnTermination: false
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRoleff460d2553834b3b846c86b27b72f7b100MH9pm:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-ff460d25-5383-4b3b-846c-86b27b72f7b1"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-prod-genai-embedding-sgmkr-216-v1:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - "sg-prod-genai-embedding-sgmkr-216-v1-role-e8nktx3n"
      Users: []
  ECSClusterCapacityProviderAssociations00GenAIPilotFargate003hVpO:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::ClusterCapacityProviderAssociations"
    DeletionPolicy: "Retain"
    Properties:
      CapacityProviders:
      - "FARGATE"
      - "FARGATE_SPOT"
      Cluster: "GenAI-Pilot-Fargate"
      DefaultCapacityProviderStrategy: []
  EC2VPCEndpoint00vpce0ae2c7083956f432e00GOixD:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VPCEndpoint"
    DeletionPolicy: "Retain"
    Properties:
      PrivateDnsEnabled: true
      IpAddressType: "ipv4"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      DnsOptions:
        PrivateDnsOnlyForInboundResolverEndpoint: "NotSpecified"
        DnsRecordIpType: "ipv4"
      RouteTableIds: []
      ServiceName: "com.amazonaws.ap-southeast-1.sqs"
      PolicyDocument:
        Statement:
        - Resource: "*"
          Action: "*"
          Effect: "Allow"
          Principal: "*"
      VpcEndpointType: "Interface"
      ResourceConfigurationArn: ""
      SecurityGroupIds:
      - "sg-075615342aa3e28b9"
      SubnetIds:
      - Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      - Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
      ServiceNetworkArn: ""
  EC2VPCEndpoint00vpce0081c8ebf3c1f7fd5004SaTC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VPCEndpoint"
    DeletionPolicy: "Retain"
    Properties:
      PrivateDnsEnabled: true
      IpAddressType: "ipv4"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      DnsOptions:
        PrivateDnsOnlyForInboundResolverEndpoint: "NotSpecified"
        DnsRecordIpType: "ipv4"
      RouteTableIds: []
      ServiceName: "com.amazonaws.ap-southeast-1.secretsmanager"
      PolicyDocument:
        Statement:
        - Resource: "*"
          Action: "*"
          Effect: "Allow"
          Principal: "*"
      VpcEndpointType: "Interface"
      ResourceConfigurationArn: ""
      SecurityGroupIds:
      - "sg-075615342aa3e28b9"
      - "sg-0ef00776c538db142"
      - "sg-02a57c92533299fd5"
      - "sg-0158898f4b43a0ae9"
      SubnetIds:
      - Ref: "EC2Subnet00subnet048794c64c2e4427a00kAh5w"
      - Ref: "EC2Subnet00subnet0d68b865e8a7e3cc0002GF7k"
      ServiceNetworkArn: ""
  EC2NetworkInterfaceAttachment00elaattach06510d1cc239b6b6600KZiAg:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-00228eb4db19aba33"
      DeviceIndex: "1"
      DeleteOnTermination: false
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRoleb95b6d76b5a04fca852eab68617cd45500FHZun:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-b95b6d76-b5a0-4fca-852e-ab68617cd455"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-prod-genai-retrievedocs-sgmkr-v1:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - "sg-prod-genai-retrievedocs-sgmkr-v1-role-m6o1pbmb"
      Users: []
  EC2TransitGatewayAttachment00tgwattach0bd627e94343f3fb300HsGi3:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::TransitGatewayAttachment"
    DeletionPolicy: "Retain"
    Properties:
      Options:
        ApplianceModeSupport: "enable"
        SecurityGroupReferencingSupport: "enable"
        DnsSupport: "enable"
        Ipv6Support: "disable"
      TransitGatewayId:
        Ref: "EC2TransitGateway00tgw052b76048cb5c20c000VNzWV"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      SubnetIds:
      - Ref: "EC2Subnet00subnet03593bd789c587e3c00RCDbo"
      - Ref: "EC2Subnet00subnet02b8e59fe96020ae100KicDu"
      Tags:
      - Value: "GenAI-Prod-tgwa-001"
        Key: "Name"
  EC2Instance00i0630337e785e424b300ZF5ne:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Instance"
    DeletionPolicy: "Retain"
    Properties:
      Tenancy: "default"
      SecurityGroups:
      - "GenAI-Pilot-Private-Tmicro-to-App"
      - "WebsocketServerSecurityGroup"
      - "GenAI-Pilot-Private-Cvpn-to-App"
      PrivateIpAddress: "10.25.71.180"
      BlockDeviceMappings:
      - Ebs:
          SnapshotId: "snap-01b44a4dc94c94fda"
          VolumeType: "gp3"
          KmsKeyId:
            Fn::GetAtt:
            - "KMSKey00e0af6c3f73fc497e863a6754f0dce6b1003YkeT"
            - "Arn"
          Encrypted: true
          Iops: 3000
          VolumeSize: 20
          DeleteOnTermination: false
        DeviceName: "/dev/xvda"
      IamInstanceProfile:
        Ref: "IAMInstanceProfile00ec2adminaccess00YQdI9"
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      EbsOptimized: false
      Volumes:
      - VolumeId: "vol-045cae6da6d093ba7"
        Device: "/dev/xvda"
      NetworkInterfaces:
      - PrivateIpAddresses:
        - PrivateIpAddress: "10.25.71.180"
          Primary: true
        SecondaryPrivateIpAddressCount: 0
        DeviceIndex: "0"
        GroupSet:
        - Ref: "EC2SecurityGroup00sg07fd500f946aad8a200ZP1Hf"
        - Ref: "EC2SecurityGroup00sg07401c0c33946a24100LzGmg"
        - Ref: "EC2SecurityGroup00sg0158898f4b43a0ae900gUN5N"
        Ipv6Addresses: []
        SubnetId:
          Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
        AssociatePublicIpAddress: false
        NetworkInterfaceId:
          Ref: "EC2NetworkInterface00eni0403053f58cf2839a00s8iH6"
        DeleteOnTermination: true
      ImageId: "ami-0d07675d294f17973"
      InstanceType: "t2.medium"
      Monitoring: false
      Tags:
      - Value: "ec2-jumpserver-shengkwan"
        Key: "Name"
      InstanceInitiatedShutdownBehavior: "stop"
      CpuOptions:
        ThreadsPerCore: 1
        CoreCount: 2
      AvailabilityZone: "ap-southeast-1b"
      PrivateDnsNameOptions:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      SecurityGroupIds:
      - "sg-07fd500f946aad8a2"
      - "sg-07401c0c33946a241"
      - "sg-0158898f4b43a0ae9"
      DisableApiTermination: false
      KeyName: "pilot-ssh-test-shengkwan-key-pair"
      SourceDestCheck: true
      PlacementGroupName: ""
      VpcId: "vpc-02790342fee4ebf9f"
      State:
        Code: "80"
        Name: "stopped"
      CreditSpecification:
        CPUCredits: "standard"
  LambdaVersion00functionsgprodgenairagsummariser2200lcBCJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Version"
    DeletionPolicy: "Retain"
    Properties:
      CodeSha256: "5b17ffd8dc726ca80798bf5d24edee4f2a7defe7dc23b1068a0016f25acb910b"
      FunctionName:
        Ref: "LambdaFunction00sgprodgenairagsummariser00BDrwV"
      Description: ""
  IAMRole00sgprodgenaiembeddingrolervd72zod00nMv0m:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-41ed82fb-d9c0-481a-bf0f-a54bcb0b6080"
      - "arn:aws:iam::aws:policy/AmazonBedrockFullAccess"
      - "arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-embedding-role-rvd72zod"
      Policies:
      - PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Resource: "*"
            Action: "lambda:InvokeFunction"
            Effect: "Allow"
            Sid: "VisualEditor0"
        PolicyName: "invokeLambda"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  EC2NetworkInterface00eni0021624e92085281500aX6eo:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "Network Interface for Transit Gateway Attachment tgw-attach-0bd627e94343f3fb3"
      PrivateIpAddress: "10.25.71.42"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.42"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet: []
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet02b8e59fe96020ae100KicDu"
      SourceDestCheck: false
      InterfaceType: "transit_gateway"
      Tags: []
  EC2Volume00vol01bd16c2e811bb9d700chg0W:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Volume"
    DeletionPolicy: "Retain"
    Properties:
      MultiAttachEnabled: false
      SnapshotId: "snap-0c8eab48745cf2897"
      VolumeType: "gp3"
      KmsKeyId: "arn:aws:kms:ap-southeast-1:343218203122:key/e0af6c3f-73fc-497e-863a-6754f0dce6b1"
      Encrypted: true
      Size: 50
      AutoEnableIO: false
      AvailabilityZone: "ap-southeast-1c"
      Throughput: 125
      Iops: 3000
      Tags:
      - Value: "essien-jumpserver-ebs"
        Key: "Name"
  ECSTaskDefinition00taskdefinitiongenaipilot1100q009c:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::TaskDefinition"
    DeletionPolicy: "Retain"
    Properties:
      TaskRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      InferenceAccelerators: []
      Memory: "3072"
      PlacementConstraints: []
      Cpu: "1024"
      RequiresCompatibilities:
      - "FARGATE"
      NetworkMode: "awsvpc"
      EnableFaultInjection: false
      ExecutionRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      RuntimePlatform:
        OperatingSystemFamily: "LINUX"
        CpuArchitecture: "X86_64"
      Volumes: []
      ContainerDefinitions:
      - Secrets: []
        Memory: 3072
        VolumesFrom: []
        Cpu: 1024
        EntryPoint: []
        DnsServers: []
        Image: "343218203122.dkr.ecr.ap-southeast-1.amazonaws.com/genai-ecr:webapp-latest-v4"
        Essential: true
        LogConfiguration:
          SecretOptions: []
          Options:
            awslogs-group: "/ecs/genaipilot"
            awslogs-create-group: "true"
            awslogs-region: "ap-southeast-1"
            awslogs-stream-prefix: "ecs"
          LogDriver: "awslogs"
        ResourceRequirements: []
        EnvironmentFiles: []
        Name: "genaifrontend"
        DockerSecurityOptions: []
        SystemControls: []
        DnsSearchDomains: []
        CredentialSpecs: []
        Ulimits: []
        ExtraHosts: []
        MountPoints: []
        DependsOn: []
        DockerLabels: {}
        PortMappings:
        - ContainerPort: 8080
          AppProtocol: "http"
          Protocol: "tcp"
          HostPort: 8080
          Name: "genaifrontend-80-tcp"
        Command: []
        Environment: []
        Links: []
      Family: "genaipilot"
      Tags: []
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole010b2536c2684ce0be035f9d7ab9c14e00TvW1P:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-010b2536-c268-4ce0-be03-5f9d7ab9c14e"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/TO_BE_DELETED-test_function_sqs:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00TOBEDELETEDtestfunctionsqsrolexqi663q10032Oxs"
      Users: []
  EC2NetworkInterfaceAttachment00elaattach02ddec1c1add9031300Gde3i:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-00a48d3999ce17929"
      DeviceIndex: "1"
      DeleteOnTermination: false
  LambdaFunction00TOBEDELETEDtestfunctionsqs00qijDh:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Function"
    DeletionPolicy: "Retain"
    Properties:
      MemorySize: 128
      Description: ""
      TracingConfig:
        Mode: "PassThrough"
      VpcConfig:
        SecurityGroupIds:
        - "sg-075615342aa3e28b9"
        SubnetIds:
        - Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
        - Ref: "EC2Subnet00subnet0d68b865e8a7e3cc0002GF7k"
        Ipv6AllowedForDualStack: false
      Timeout: 20
      RuntimeManagementConfig:
        UpdateRuntimeOn: "Auto"
      Handler: "lambda_function.lambda_handler"
      ReservedConcurrentExecutions: 3
      Code:
        SourceKMSKeyArn:
          Ref: "LambdaFunction00TOBEDELETEDtestfunctionsqs00qijDhCodeSourceKMSKeyArnel7EO"
        S3ObjectVersion:
          Ref: "LambdaFunction00TOBEDELETEDtestfunctionsqs00qijDhCodeS3ObjectVersionKeWms"
        S3Bucket:
          Ref: "LambdaFunction00TOBEDELETEDtestfunctionsqs00qijDhCodeS3BucketcmHcy"
        ZipFile:
          Ref: "LambdaFunction00TOBEDELETEDtestfunctionsqs00qijDhCodeZipFileSpmPV"
        ImageUri:
          Ref: "LambdaFunction00TOBEDELETEDtestfunctionsqs00qijDhCodeImageUriLhvwz"
        S3Key:
          Ref: "LambdaFunction00TOBEDELETEDtestfunctionsqs00qijDhCodeS3KeyUpDM4"
      Role:
        Fn::GetAtt:
        - "IAMRole00TOBEDELETEDtestfunctionsqsrolexqi663q10032Oxs"
        - "Arn"
      FileSystemConfigs: []
      FunctionName: "TO_BE_DELETED-test_function_sqs"
      Runtime: "python3.12"
      PackageType: "Zip"
      LoggingConfig:
        LogFormat: "Text"
        LogGroup: "/aws/lambda/TO_BE_DELETED-test_function_sqs"
      RecursiveLoop: "Terminate"
      EphemeralStorage:
        Size: 512
      Layers:
      - "arn:aws:lambda:ap-southeast-1:343218203122:layer:pymongo:4"
      Architectures:
      - "x86_64"
  EC2Subnet00subnet01c6199eacb456cba003NMB5:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Subnet"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc0182b4cdff5ae990b00WzWIq"
      MapPublicIpOnLaunch: false
      EnableDns64: false
      AvailabilityZoneId: "apse1-az3"
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      CidrBlock: "172.31.0.0/20"
      Ipv6Native: false
      Tags: []
  EC2SecurityGroup00sg06010a299d4942ce200PwBIq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "Allows HTTPS from Internal ALB only"
      GroupName: "GenAI-Pilot-ECSFargate-Frontend_SG"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      SecurityGroupIngress:
      - IpProtocol: "tcp"
        Description: "Source ALB internal"
        FromPort: 80
        SourceSecurityGroupId: "sg-0fbe083eaa2bbd46c"
        ToPort: 80
        SourceSecurityGroupOwnerId: "343218203122"
      - IpProtocol: "tcp"
        Description: "Source ALB Internal (Target group)"
        FromPort: 8080
        SourceSecurityGroupId: "sg-0fbe083eaa2bbd46c"
        ToPort: 8080
        SourceSecurityGroupOwnerId: "343218203122"
      - IpProtocol: "tcp"
        Description: "Source ALB Internal"
        FromPort: 443
        SourceSecurityGroupId: "sg-0fbe083eaa2bbd46c"
        ToPort: 443
        SourceSecurityGroupOwnerId: "343218203122"
      - IpProtocol: "tcp"
        Description: "Source DocuDB SG"
        FromPort: 443
        SourceSecurityGroupId: "sg-02a57c92533299fd5"
        ToPort: 443
        SourceSecurityGroupOwnerId: "343218203122"
      - IpProtocol: "tcp"
        Description: "Source VPC Endpoint SG"
        FromPort: 443
        SourceSecurityGroupId: "sg-0ef00776c538db142"
        ToPort: 443
        SourceSecurityGroupOwnerId: "343218203122"
      SecurityGroupEgress:
      - CidrIp: "10.25.71.48/28"
        IpProtocol: "tcp"
        Description: "ALB Target group"
        FromPort: 8080
        ToPort: 8080
      - CidrIp: "10.25.48.64/28"
        IpProtocol: "tcp"
        Description: "ALB Target group"
        FromPort: 8080
        ToPort: 8080
      - CidrIp: "10.25.71.48/28"
        IpProtocol: "tcp"
        Description: "Towards ALB"
        FromPort: 443
        ToPort: 443
      - CidrIp: "10.25.48.64/28"
        IpProtocol: "tcp"
        Description: "Towards ALB"
        FromPort: 443
        ToPort: 443
      - IpProtocol: "tcp"
        DestinationSecurityGroupId:
          Fn::GetAtt:
          - "EC2SecurityGroup00sg02a57c92533299fd5009RYMP"
          - "GroupId"
        Description: "Towards DocuDB"
        FromPort: 443
        ToPort: 443
      - IpProtocol: "tcp"
        DestinationSecurityGroupId:
          Fn::GetAtt:
          - "EC2SecurityGroup00sg0ef00776c538db14200Lv7u9"
          - "GroupId"
        Description: "Towards VPC Endpoints SG"
        FromPort: 443
        ToPort: 443
  EC2SecurityGroup00sg0e26af1625e40eb8600Qt54I:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "[DO NOT DELETE] Security Group that allows outbound NFS traffic\
        \ for SageMaker Notebooks Domain [d-jvwdzisnv061]"
      GroupName: "security-group-for-outbound-nfs-d-jvwdzisnv061"
      VpcId:
        Ref: "EC2VPC00vpc0182b4cdff5ae990b00WzWIq"
      SecurityGroupEgress:
      - IpProtocol: "tcp"
        DestinationSecurityGroupId:
          Fn::GetAtt:
          - "EC2SecurityGroup00sg003b7e062102ab43800Jwkb0"
          - "GroupId"
        FromPort: 2049
        ToPort: 2049
      Tags:
      - Value: "arn:aws:sagemaker:ap-southeast-1:343218203122:domain/d-jvwdzisnv061"
        Key: "ManagedByAmazonSageMakerResource"
  EC2NetworkInterface00eni00228eb4db19aba3300dV0V8:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "AWS Lambda VPC ENI-test-ingest-b56f768b-af3c-4a63-8aac-a898beadbdac"
      PrivateIpAddress: "10.25.71.123"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.123"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-075615342aa3e28b9"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet0d68b865e8a7e3cc0002GF7k"
      SourceDestCheck: true
      InterfaceType: "lambda"
      Tags: []
  EC2NetworkInterface00eni009547dc462a0f3d100F8E7c:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "Network Interface for Transit Gateway Attachment tgw-attach-0bd627e94343f3fb3"
      PrivateIpAddress: "10.25.71.5"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.5"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet: []
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet03593bd789c587e3c00RCDbo"
      SourceDestCheck: false
      InterfaceType: "transit_gateway"
      Tags: []
  EC2Route00rtb036e82d67b2ea04ea008FQvm:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Route"
    DeletionPolicy: "Retain"
    Properties:
      TransitGatewayId:
        Ref: "EC2TransitGateway00tgw052b76048cb5c20c000VNzWV"
      RouteTableId:
        Ref: "EC2RouteTable00rtb036e82d67b2ea04ea0037JXh"
      DestinationCidrBlock: "0.0.0.0/0"
  EC2NetworkInterface00eni00acdcc3d4862e8a800NtfpT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "AWS Lambda VPC ENI-SecretsManagergenai-prod-authdbv2-auto-rotate-d6f054fb-f772-41fc-b2d7-9f04224c4328"
      PrivateIpAddress: "10.25.71.120"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.120"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-075615342aa3e28b9"
      - "sg-02a57c92533299fd5"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet0d68b865e8a7e3cc0002GF7k"
      SourceDestCheck: true
      InterfaceType: "lambda"
      Tags: []
  EC2NetworkInterfaceAttachment00eniattach0803101e0b44dde7e00c1kRl:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0c66dedac91dbb828"
      InstanceId: "i-020d34aa93d2d7e6f"
      DeviceIndex: "0"
      DeleteOnTermination: true
  EC2SubnetRouteTableAssociation00rtbassoc0fc30c0ffb0402b6600dv4aL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    DeletionPolicy: "Retain"
    Properties:
      RouteTableId:
        Ref: "EC2RouteTable00rtb0b5bcb0011b72f45600UhxSV"
      SubnetId:
        Ref: "EC2Subnet00subnet048794c64c2e4427a00kAh5w"
  IAMRole00sgprodgenairelevantdocsv1rolekqa8fjxd00OcXbc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-58c20211-8f38-49f0-84a5-1677bf626dcb"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-relevantdocs-v1-role-kqa8fjxd"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  EC2Subnet00subnet0e7c29cffbb72373f00bJwid:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Subnet"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      MapPublicIpOnLaunch: false
      EnableDns64: false
      AvailabilityZoneId: "apse1-az2"
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      CidrBlock: "10.25.71.16/28"
      Ipv6Native: false
      Tags:
      - Value: "GenAI-Dev-Public-1b (reserved)"
        Key: "Name"
  EC2NetworkInterface00eni0315c131e17a6526300hJ3OS:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "VPC Endpoint Interface vpce-051baa26464b8677b"
      PrivateIpAddress: "10.25.71.77"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.77"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-02d1755cab861734f"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet060714d7ed3b1128b00T1t2O"
      SourceDestCheck: true
      InterfaceType: "vpc_endpoint"
      Tags: []
  ECSTaskDefinition00taskdefinitiongenaipilot2400w43aM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::TaskDefinition"
    DeletionPolicy: "Retain"
    Properties:
      TaskRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      InferenceAccelerators: []
      Memory: "3072"
      PlacementConstraints: []
      Cpu: "1024"
      RequiresCompatibilities:
      - "FARGATE"
      NetworkMode: "awsvpc"
      EnableFaultInjection: false
      ExecutionRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      RuntimePlatform:
        OperatingSystemFamily: "LINUX"
        CpuArchitecture: "X86_64"
      Volumes: []
      ContainerDefinitions:
      - Secrets: []
        Memory: 3072
        VolumesFrom: []
        Cpu: 1024
        EntryPoint: []
        DnsServers: []
        ReadonlyRootFilesystem: true
        Image: "343218203122.dkr.ecr.ap-southeast-1.amazonaws.com/genai-ecr:DockerImage-Redhat-Webapp-NodeJS-Latest"
        Essential: true
        LogConfiguration:
          SecretOptions: []
          Options:
            awslogs-group: "/ecs/genaipilot"
            awslogs-create-group: "true"
            awslogs-region: "ap-southeast-1"
            awslogs-stream-prefix: "ecs"
          LogDriver: "awslogs"
        ResourceRequirements: []
        EnvironmentFiles: []
        Name: "genaifrontend"
        DockerSecurityOptions: []
        SystemControls: []
        DnsSearchDomains: []
        CredentialSpecs: []
        Ulimits: []
        ExtraHosts: []
        MountPoints: []
        DependsOn: []
        DockerLabels: {}
        PortMappings:
        - ContainerPort: 8080
          AppProtocol: "http"
          Protocol: "tcp"
          HostPort: 8080
          Name: "genaifrontend-80-tcp"
        Command: []
        Environment: []
        Links: []
      Family: "genaipilot"
      Tags: []
  EC2SecurityGroup00sg079e452b3a301f966002Mqlj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "[DO NOT DELETE] Security Group that allows inbound NFS traffic\
        \ for SageMaker Notebooks Domain [d-rggd9yk1a92u]"
      GroupName: "security-group-for-inbound-nfs-d-rggd9yk1a92u"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      SecurityGroupIngress:
      - IpProtocol: "tcp"
        FromPort: 2049
        SourceSecurityGroupId: "sg-0cfe7a368624b4bfc"
        ToPort: 2049
        SourceSecurityGroupOwnerId: "343218203122"
      Tags:
      - Value: "arn:aws:sagemaker:ap-southeast-1:343218203122:domain/d-rggd9yk1a92u"
        Key: "ManagedByAmazonSageMakerResource"
  EC2SecurityGroup00sg018c8a78c89c0d40400oULTp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "harith"
      GroupName: "harith-ec2-sg"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      SecurityGroupIngress:
      - IpProtocol: "-1"
        FromPort: -1
        SourceSecurityGroupId: "sg-0a6c63d92a738a24c"
        ToPort: -1
        SourceSecurityGroupOwnerId: "343218203122"
      - IpProtocol: "tcp"
        FromPort: 27017
        SourceSecurityGroupId: "sg-075615342aa3e28b9"
        ToPort: 27017
        SourceSecurityGroupOwnerId: "343218203122"
  IAMManagedPolicy00policyserviceroleAmazonSageMakerServiceCatalogProductsUseRole20240813T11151700KXeWn:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AmazonSageMakerServiceCatalogProductsUseRole-20240813T111517"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:cloudformation:*:*:stack/sagemaker-*"
          Action:
          - "cloudformation:CreateChangeSet"
          - "cloudformation:CreateStack"
          - "cloudformation:DescribeChangeSet"
          - "cloudformation:DeleteChangeSet"
          - "cloudformation:DeleteStack"
          - "cloudformation:DescribeStacks"
          - "cloudformation:ExecuteChangeSet"
          - "cloudformation:SetStackPolicy"
          - "cloudformation:UpdateStack"
          Effect: "Allow"
        - Resource: "*"
          Action:
          - "cloudwatch:PutMetricData"
          Effect: "Allow"
        - Resource:
          - "arn:aws:codebuild:*:*:project/sagemaker-*"
          - "arn:aws:codebuild:*:*:build/sagemaker-*"
          Action:
          - "codebuild:BatchGetBuilds"
          - "codebuild:StartBuild"
          Effect: "Allow"
        - Resource: "arn:aws:codecommit:*:*:sagemaker-*"
          Action:
          - "codecommit:CancelUploadArchive"
          - "codecommit:GetBranch"
          - "codecommit:GetCommit"
          - "codecommit:GetUploadArchiveStatus"
          - "codecommit:UploadArchive"
          Effect: "Allow"
        - Resource: "arn:aws:codepipeline:*:*:sagemaker-*"
          Action:
          - "codepipeline:StartPipelineExecution"
          Effect: "Allow"
        - Resource: "*"
          Action:
          - "ec2:DescribeRouteTables"
          Effect: "Allow"
        - Resource: "*"
          Action:
          - "ecr:BatchCheckLayerAvailability"
          - "ecr:BatchGetImage"
          - "ecr:Describe*"
          - "ecr:GetAuthorizationToken"
          - "ecr:GetDownloadUrlForLayer"
          Effect: "Allow"
        - Resource:
          - "arn:aws:ecr:*:*:repository/sagemaker-*"
          Action:
          - "ecr:BatchDeleteImage"
          - "ecr:CompleteLayerUpload"
          - "ecr:CreateRepository"
          - "ecr:DeleteRepository"
          - "ecr:InitiateLayerUpload"
          - "ecr:PutImage"
          - "ecr:UploadLayerPart"
          Effect: "Allow"
        - Resource:
          - "arn:aws:events:*:*:rule/sagemaker-*"
          Action:
          - "events:DeleteRule"
          - "events:DescribeRule"
          - "events:PutRule"
          - "events:PutTargets"
          - "events:RemoveTargets"
          Effect: "Allow"
        - Resource: "arn:aws:firehose:*:*:deliverystream/sagemaker-*"
          Action:
          - "firehose:PutRecord"
          - "firehose:PutRecordBatch"
          Effect: "Allow"
        - Resource:
          - "arn:aws:glue:*:*:catalog"
          - "arn:aws:glue:*:*:database/default"
          - "arn:aws:glue:*:*:database/global_temp"
          - "arn:aws:glue:*:*:database/sagemaker-*"
          - "arn:aws:glue:*:*:table/sagemaker-*"
          - "arn:aws:glue:*:*:tableVersion/sagemaker-*"
          Action:
          - "glue:BatchCreatePartition"
          - "glue:BatchDeletePartition"
          - "glue:BatchDeleteTable"
          - "glue:BatchDeleteTableVersion"
          - "glue:BatchGetPartition"
          - "glue:CreateDatabase"
          - "glue:CreatePartition"
          - "glue:CreateTable"
          - "glue:DeletePartition"
          - "glue:DeleteTable"
          - "glue:DeleteTableVersion"
          - "glue:GetDatabase"
          - "glue:GetPartition"
          - "glue:GetPartitions"
          - "glue:GetTable"
          - "glue:GetTables"
          - "glue:GetTableVersion"
          - "glue:GetTableVersions"
          - "glue:SearchTables"
          - "glue:UpdatePartition"
          - "glue:UpdateTable"
          - "glue:GetUserDefinedFunctions"
          Effect: "Allow"
        - Resource:
          - "arn:aws:iam::*:role/service-role/AmazonSageMakerServiceCatalogProductsUse*"
          Action:
          - "iam:PassRole"
          Effect: "Allow"
        - Resource:
          - "arn:aws:lambda:*:*:function:sagemaker-*"
          Action:
          - "lambda:InvokeFunction"
          Effect: "Allow"
        - Resource: "*"
          Action:
          - "logs:CreateLogDelivery"
          - "logs:CreateLogGroup"
          - "logs:CreateLogStream"
          - "logs:DeleteLogDelivery"
          - "logs:Describe*"
          - "logs:GetLogDelivery"
          - "logs:GetLogEvents"
          - "logs:ListLogDeliveries"
          - "logs:PutLogEvents"
          - "logs:PutResourcePolicy"
          - "logs:UpdateLogDelivery"
          Effect: "Allow"
        - Resource:
          - "arn:aws:s3:::aws-glue-*"
          - "arn:aws:s3:::sagemaker-*"
          Action:
          - "s3:CreateBucket"
          - "s3:DeleteBucket"
          - "s3:GetBucketAcl"
          - "s3:GetBucketCors"
          - "s3:GetBucketLocation"
          - "s3:ListAllMyBuckets"
          - "s3:ListBucket"
          - "s3:ListBucketMultipartUploads"
          - "s3:PutBucketCors"
          - "s3:PutObjectAcl"
          Effect: "Allow"
        - Resource:
          - "arn:aws:s3:::aws-glue-*"
          - "arn:aws:s3:::sagemaker-*"
          Action:
          - "s3:AbortMultipartUpload"
          - "s3:DeleteObject"
          - "s3:GetObject"
          - "s3:GetObjectVersion"
          - "s3:PutObject"
          Effect: "Allow"
        - Action:
          - "sagemaker:*"
          Effect: "Allow"
          NotResource:
          - "arn:aws:sagemaker:*:*:domain/*"
          - "arn:aws:sagemaker:*:*:user-profile/*"
          - "arn:aws:sagemaker:*:*:app/*"
          - "arn:aws:sagemaker:*:*:flow-definition/*"
        - Resource:
          - "arn:aws:states:*:*:stateMachine:sagemaker-*"
          - "arn:aws:states:*:*:execution:sagemaker-*:*"
          Action:
          - "states:DescribeExecution"
          - "states:DescribeStateMachine"
          - "states:DescribeStateMachineForExecution"
          - "states:GetExecutionHistory"
          - "states:ListExecutions"
          - "states:ListTagsForResource"
          - "states:StartExecution"
          - "states:StopExecution"
          - "states:TagResource"
          - "states:UntagResource"
          - "states:UpdateStateMachine"
          Effect: "Allow"
        - Resource: "*"
          Action:
          - "states:ListStateMachines"
          Effect: "Allow"
        - Condition:
            StringEqualsIgnoreCase:
              aws:ResourceTag/sagemaker: "true"
          Resource: "arn:aws:codestar-connections:*:*:connection/*"
          Action:
          - "codestar-connections:UseConnection"
          Effect: "Allow"
      Roles:
      - "AmazonSageMakerServiceCatalogProductsUseRole"
      Users: []
  EC2SubnetNetworkAclAssociation00aclassoc021e34575f94fd02e00VE1ws:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    DeletionPolicy: "Retain"
    Properties:
      NetworkAclId:
        Ref: "EC2NetworkAcl00acl02223366315f41b3800EucVg"
      SubnetId:
        Ref: "EC2Subnet00subnet0e7c29cffbb72373f00bJwid"
  EC2NetworkInterfaceAttachment00elaattach0b3f9e85a70cafa6300ku1fN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0ba6d615c9e6e38ea"
      DeviceIndex: "1"
      DeleteOnTermination: false
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole63e57394b1db4dcd85dd83fd9b825e5a00A5dez:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-63e57394-b1db-4dcd-85dd-83fd9b825e5a"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/test-websocket-sendMessage:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - "test-websocket-sendMessage-role-ss9l57uu"
      Users: []
  EC2NetworkInterfaceAttachment00elaattach04a9487c9e48ebbc600dvA1b:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-07dd16b1642a516bf"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2NetworkInterface00eni0cb94fdb98f85080f00BIrVf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "AWS Lambda VPC ENI-poc-websocket-sendMessageSQS-280ae5e5-7b9f-446f-bba0-8a9c3f82629d"
      PrivateIpAddress: "10.25.71.169"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.169"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-07fd500f946aad8a2"
      - "sg-07401c0c33946a241"
      - "sg-0158898f4b43a0ae9"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      SourceDestCheck: true
      InterfaceType: "lambda"
      Tags: []
  IAMRole00testwebsocketConnectrole9054j2c100TOgmE:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-04081705-cf01-4c5d-b7e5-e1e7b71f1cae"
      MaxSessionDuration: 3600
      RoleName: "test-websocketConnect-role-9054j2c1"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  EC2SubnetRouteTableAssociation00rtbassoc01a9d2f5fcb93eaa700i8VXW:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    DeletionPolicy: "Retain"
    Properties:
      RouteTableId:
        Ref: "EC2RouteTable00rtb0272f811966d349e500R5SCh"
      SubnetId:
        Ref: "EC2Subnet00subnet03593bd789c587e3c00RCDbo"
  EventsRule00ruleDONOTDELETEAmazonInspectorLambdaManagedRule00J8zbu:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Events::Rule"
    DeletionPolicy: "Retain"
    Properties:
      EventBusName:
        Ref: "EventsEventBus00default002gd2v"
      EventPattern:
        detail-type:
        - "AWS API Call via CloudTrail"
        source:
        - "aws.lambda"
        detail:
          eventSource:
          - "lambda.amazonaws.com"
          managementEvent:
          - true
      Description: "Managed rule used to route lambda Events to Inspector"
      State: "ENABLED"
      Targets:
      - Arn: "arn:aws:inspector2:ap-southeast-1:::"
        Id: "InspectorTarget"
      Id: "DO-NOT-DELETE-AmazonInspectorLambdaManagedRule"
      Name: "DO-NOT-DELETE-AmazonInspectorLambdaManagedRule"
  IAMManagedPolicy00policyserviceroleAWSLambdaVPCAccessExecutionRole4f735b8fdc184bdcb59dad745a2ed2e200x2DyM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaVPCAccessExecutionRole-4f735b8f-dc18-4bdc-b59d-ad745a2ed2e2"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "*"
          Action:
          - "ec2:CreateNetworkInterface"
          - "ec2:DeleteNetworkInterface"
          - "ec2:DescribeNetworkInterfaces"
          Effect: "Allow"
      Roles:
      - "sg-prod-genai-checkcredsdocdb-role-iwrpl7hp"
      Users: []
  EC2Route00rtb07a95c43e9fdd755c001NRnF:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Route"
    DeletionPolicy: "Retain"
    Properties:
      RouteTableId:
        Ref: "EC2RouteTable00rtb07a95c43e9fdd755c00a32xl"
      DestinationPrefixListId: "pl-6fa54006"
      GatewayId: "vpce-0a90de6423482ae10"
      VpcEndpointId: "vpce-0a90de6423482ae10"
  EC2Subnet00subnet02b8e59fe96020ae100KicDu:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Subnet"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      MapPublicIpOnLaunch: false
      EnableDns64: false
      AvailabilityZoneId: "apse1-az3"
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      CidrBlock: "10.25.71.32/28"
      Ipv6Native: false
      Tags:
      - Value: "GenAI-Dev-TGWAttach-Private-1c"
        Key: "Name"
  EC2NetworkInterface00eni0bf1d3448b57944d300X9oc6:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "VPC Endpoint Interface vpce-0bd7143d5af1bcbf8"
      PrivateIpAddress: "10.25.71.207"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.207"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-0ef00776c538db142"
      - "sg-03d66fb80efac83a5"
      - "sg-02a57c92533299fd5"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
      SourceDestCheck: true
      InterfaceType: "vpc_endpoint"
      Tags: []
  EC2NetworkInterfaceAttachment00eniattach012cf12b52b3b20b400rmmz0:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-00eac7703d746cb35"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2NetworkInterfaceAttachment00elaattach04b96e23a452975ae00TgQAe:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0ca7abd2d5b8b4214"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2NetworkInterfaceAttachment00elaattach078806bf5afc2ef2100MNK09:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0315c131e17a65263"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2NetworkInterfaceAttachment00elaattach01c7a32881ce4111800WQTF2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0136c68eabca8ebcf"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2Subnet00subnet060714d7ed3b1128b00T1t2O:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Subnet"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      MapPublicIpOnLaunch: false
      EnableDns64: false
      AvailabilityZoneId: "apse1-az3"
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      CidrBlock: "10.25.71.64/28"
      Ipv6Native: false
      Tags:
      - Value: "GenAI-Dev-ECSAppLB-Private-1c"
        Key: "Name"
  IAMInstanceProfile00ec2adminaccess00YQdI9:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::InstanceProfile"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/"
      Roles:
      - Ref: "IAMRole00ec2adminaccess00wxTvp"
      InstanceProfileName:
        Ref: "IAMRole00ec2adminaccess00wxTvp"
  EC2NetworkInsightsPath00nip0f683856df70d9d0e00U2rgk:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInsightsPath"
    DeletionPolicy: "Retain"
    Properties:
      FilterAtSource:
        DestinationAddress: "8.8.8.8"
      Protocol: "tcp"
      Source: "i-034fcb24b6251e968"
      Tags:
      - Value: "internet-egress-https"
        Key: "Name"
  EC2NetworkInterfaceAttachment00eniattach03518c0b830f7d7bc00VMN79:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0a784c4b5215c97d7"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2VPC00vpc0182b4cdff5ae990b00WzWIq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VPC"
    DeletionPolicy: "Retain"
    Properties:
      CidrBlock: "172.31.0.0/16"
      EnableDnsSupport: true
      InstanceTenancy: "default"
      EnableDnsHostnames: true
      Tags:
      - Value: "[DEFAULT]"
        Key: "Name"
  EC2NetworkInterfaceAttachment00elaattach08da428146c18e5d100kr9Qe:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0ed02c4ab5a99c45f"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2SubnetNetworkAclAssociation00aclassoc0166b11e4b5e12fec00mK2JC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    DeletionPolicy: "Retain"
    Properties:
      NetworkAclId:
        Ref: "EC2NetworkAcl00acl002d273352c73de1400EoHdQ"
      SubnetId:
        Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
  EC2Volume00vol0057ef600adf6805f002Wpm5:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Volume"
    DeletionPolicy: "Retain"
    Properties:
      MultiAttachEnabled: false
      SnapshotId: "snap-0d0d9f5db331ffa4b"
      VolumeType: "gp3"
      KmsKeyId: "arn:aws:kms:ap-southeast-1:343218203122:key/e0af6c3f-73fc-497e-863a-6754f0dce6b1"
      Encrypted: true
      Size: 8
      AutoEnableIO: false
      AvailabilityZone: "ap-southeast-1b"
      Throughput: 125
      Iops: 3000
      Tags:
      - Value: "tapo-test-1 [encrypted]"
        Key: "name"
  EC2SecurityGroup00sg00b5af668cf24cf1f009wHrc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "allow whitelist from cloudfront"
      GroupName: "alb-genai-pilot"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      SecurityGroupIngress:
      - IpProtocol: "tcp"
        Description: "Cloudfront whitelist"
        FromPort: 443
        ToPort: 443
        SourcePrefixListId: "pl-31a34658"
      SecurityGroupEgress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
  EC2NetworkInterface00eni0be64425943c3dfed00kLtOI:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "RDSNetworkInterface"
      PrivateIpAddress: "10.25.71.135"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.135"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-075615342aa3e28b9"
      - "sg-02a57c92533299fd5"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet048794c64c2e4427a00kAh5w"
      SourceDestCheck: true
      InterfaceType: "interface"
      Tags: []
  EC2SubnetRouteTableAssociation00rtbassoc07354ff622c0a9a4e00VpB54:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    DeletionPolicy: "Retain"
    Properties:
      RouteTableId:
        Ref: "EC2RouteTable00rtb0272f811966d349e500R5SCh"
      SubnetId:
        Ref: "EC2Subnet00subnet02b8e59fe96020ae100KicDu"
  IAMRole00ecsTaskExecutionRole00axG9S:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
      - "arn:aws:iam::aws:policy/AmazonSSMFullAccess"
      - "arn:aws:iam::aws:policy/service-role/ROSAKMSProviderPolicy"
      - "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess"
      - "arn:aws:iam::aws:policy/SecretsManagerReadWrite"
      - "arn:aws:iam::aws:policy/AmazonElasticContainerRegistryPublicFullAccess"
      MaxSessionDuration: 3600
      RoleName: "ecsTaskExecutionRole"
      AssumeRolePolicyDocument:
        Version: "2008-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "ecs-tasks.amazonaws.com"
          Sid: ""
  EC2NetworkInterface00eni0469175a2c55d807400oEJ16:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "VPC Endpoint Interface vpce-02d8a2532923f5a37"
      PrivateIpAddress: "10.25.71.57"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.57"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-02d1755cab861734f"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet040ea0b30fd89092a00dTOsl"
      SourceDestCheck: true
      InterfaceType: "vpc_endpoint"
      Tags: []
  EC2NetworkInterfaceAttachment00elaattach0ce847d1c630158ab00hjlyg:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0274b5b1972f1edc3"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2VPCEndpoint00vpce0d8fc93334fc81a8000Usa1i:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VPCEndpoint"
    DeletionPolicy: "Retain"
    Properties:
      PrivateDnsEnabled: true
      IpAddressType: "ipv4"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      DnsOptions:
        PrivateDnsOnlyForInboundResolverEndpoint: "NotSpecified"
        DnsRecordIpType: "ipv4"
      RouteTableIds: []
      ServiceName: "com.amazonaws.ap-southeast-1.ssm-contacts"
      PolicyDocument:
        Statement:
        - Resource: "*"
          Action: "*"
          Effect: "Allow"
          Principal: "*"
      VpcEndpointType: "Interface"
      ResourceConfigurationArn: ""
      SecurityGroupIds:
      - "sg-0ef00776c538db142"
      SubnetIds:
      - Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      - Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
      ServiceNetworkArn: ""
  EC2NetworkInterface00eni03ebb21c83a16a05500osKNC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: ""
      PrivateIpAddress: "10.25.71.170"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.170"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-0a6c63d92a738a24c"
      - "sg-07fd500f946aad8a2"
      - "sg-0158898f4b43a0ae9"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      SourceDestCheck: true
      InterfaceType: "interface"
      Tags: []
  IAMRole00AWSServiceRoleForECS00OokwO:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/aws-service-role/ecs.amazonaws.com/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/aws-service-role/AmazonECSServiceRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "AWSServiceRoleForECS"
      Description: "Role to enable Amazon ECS to manage your cluster."
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "ecs.amazonaws.com"
  EC2SecurityGroup00sg00f35c2e43c1efd0a00qKIA7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "Allows ec2 to connect to auth db"
      GroupName: "ec2-to-authdb-sg"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      SecurityGroupIngress:
      - IpProtocol: "tcp"
        Description: "allows inbound from rebekah-public-ec2"
        FromPort: 27017
        SourceSecurityGroupId: "sg-03faa669e447f1310"
        ToPort: 27017
        SourceSecurityGroupOwnerId: "343218203122"
      SecurityGroupEgress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole1d0383259fff4d7dbf34f3281d0abb3b00kbhNP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-1d038325-9fff-4d7d-bf34-f3281d0abb3b"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-prod-genai-retrievedocs-v1:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgprodgenairetrievedocsv1rolecjvr7yih00FzXgJ"
      Users: []
  EC2NetworkInterfaceAttachment00elaattach0f7db74a141b92e80001YW2X:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0c038a3d04e1b0718"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2NetworkInterfaceAttachment00eniattach07cda7e8bba33a166002S57V:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-01f1da401b50eb80e"
      InstanceId: "i-0af21fb2531ca410d"
      DeviceIndex: "0"
      DeleteOnTermination: true
  EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Subnet"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      MapPublicIpOnLaunch: false
      EnableDns64: false
      AvailabilityZoneId: "apse1-az2"
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      CidrBlock: "10.25.71.160/27"
      Ipv6Native: false
      Tags:
      - Value: "GenAI-Dev-Application-Private-1b"
        Key: "Name"
  GuardDutyDetector0076c6f9f1d4c9c10a71501f6ed2696af500ssuhX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::GuardDuty::Detector"
    DeletionPolicy: "Retain"
    Properties:
      FindingPublishingFrequency: "SIX_HOURS"
      Enable: true
      DataSources:
        MalwareProtection:
          ScanEc2InstanceWithFindings:
            EbsVolumes: true
        S3Logs:
          Enable: true
        Kubernetes:
          AuditLogs:
            Enable: false
      Features:
      - Status: "ENABLED"
        Name: "CLOUD_TRAIL"
      - Status: "ENABLED"
        Name: "DNS_LOGS"
      - Status: "ENABLED"
        Name: "FLOW_LOGS"
      - Status: "ENABLED"
        Name: "S3_DATA_EVENTS"
      - Status: "DISABLED"
        Name: "EKS_AUDIT_LOGS"
      - Status: "ENABLED"
        Name: "EBS_MALWARE_PROTECTION"
      - Status: "ENABLED"
        Name: "RDS_LOGIN_EVENTS"
      - Status: "DISABLED"
        AdditionalConfiguration:
        - Status: "DISABLED"
          Name: "EKS_ADDON_MANAGEMENT"
        Name: "EKS_RUNTIME_MONITORING"
      - Status: "ENABLED"
        Name: "LAMBDA_NETWORK_LOGS"
      - Status: "DISABLED"
        AdditionalConfiguration:
        - Status: "DISABLED"
          Name: "EKS_ADDON_MANAGEMENT"
        - Status: "DISABLED"
          Name: "ECS_FARGATE_AGENT_MANAGEMENT"
        - Status: "DISABLED"
          Name: "EC2_AGENT_MANAGEMENT"
        Name: "RUNTIME_MONITORING"
      Tags: []
  EC2SecurityGroup00sg01a0388df347bf2bf00Tva6b:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "[DO NOT DELETE] Security Group that allows inbound NFS traffic\
        \ for SageMaker Notebooks Domain [d-te2ilw9kubrv]"
      GroupName: "security-group-for-inbound-nfs-d-te2ilw9kubrv"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      SecurityGroupIngress:
      - IpProtocol: "tcp"
        FromPort: 2049
        SourceSecurityGroupId: "sg-0a126cd14bab4182c"
        ToPort: 2049
        SourceSecurityGroupOwnerId: "343218203122"
      Tags:
      - Value: "arn:aws:sagemaker:ap-southeast-1:343218203122:domain/d-te2ilw9kubrv"
        Key: "ManagedByAmazonSageMakerResource"
  EC2NetworkInterface00eni07bf3986264a0fcb800Gp9C9:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "VPC Endpoint Interface vpce-0279b53fbb66caba2"
      PrivateIpAddress: "10.25.71.52"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.52"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-075615342aa3e28b9"
      - "sg-02d1755cab861734f"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet040ea0b30fd89092a00dTOsl"
      SourceDestCheck: true
      InterfaceType: "vpc_endpoint"
      Tags: []
  EC2Volume00vol025bc069a9af78b0f00asn1c:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Volume"
    DeletionPolicy: "Retain"
    Properties:
      MultiAttachEnabled: false
      SnapshotId: "snap-06269d3b382c49703"
      VolumeType: "gp3"
      KmsKeyId: "arn:aws:kms:ap-southeast-1:343218203122:key/e0af6c3f-73fc-497e-863a-6754f0dce6b1"
      Encrypted: true
      Size: 10
      AutoEnableIO: true
      AvailabilityZone: "ap-southeast-1b"
      Throughput: 125
      Iops: 3000
      Tags: []
  EventsRule00ruleDONOTDELETEAmazonInspectorLambdaTagManagedRule00ovnIH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Events::Rule"
    DeletionPolicy: "Retain"
    Properties:
      EventBusName:
        Ref: "EventsEventBus00default002gd2v"
      EventPattern:
        detail-type:
        - "Tag Change on Resource"
        source:
        - "aws.tag"
        detail:
          service:
          - "lambda"
      Description: "Managed rule used to route Lambda Tag Change Events to Inspector"
      State: "ENABLED"
      Targets:
      - Arn: "arn:aws:inspector2:ap-southeast-1:::"
        Id: "InspectorTarget"
      Id: "DO-NOT-DELETE-AmazonInspectorLambdaTagManagedRule"
      Name: "DO-NOT-DELETE-AmazonInspectorLambdaTagManagedRule"
  EC2Volume00vol021be5aa3f1e190f200dZIoK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Volume"
    DeletionPolicy: "Retain"
    Properties:
      MultiAttachEnabled: false
      SnapshotId: "snap-018c6f82f07f077ea"
      VolumeType: "gp3"
      Encrypted: false
      Size: 64
      AutoEnableIO: true
      AvailabilityZone: "ap-southeast-1b"
      Throughput: 125
      Iops: 3000
      Tags: []
  EC2SecurityGroup00sg0fbe083eaa2bbd46c00DaO9J:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "Forwards HTTPS traffic to ECS Fargate received from Firewall\
        \ subnet only"
      GroupName: "GenAI-Pilot-Internal_ALB-SG"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      SecurityGroupIngress:
      - CidrIp: "10.25.71.48/28"
        IpProtocol: "tcp"
        Description: "Allow HTTP traffic from public internet for ALB"
        FromPort: 80
        ToPort: 80
      - CidrIp: "10.25.71.48/28"
        IpProtocol: "tcp"
        FromPort: 8080
        ToPort: 8080
      - CidrIp: "10.25.71.48/28"
        IpProtocol: "tcp"
        Description: "Firewall Endpoint source"
        FromPort: 443
        ToPort: 443
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "tcp"
        Description: "test"
        FromPort: 443
        ToPort: 443
      SecurityGroupEgress:
      - CidrIp:
          Fn::GetAtt:
          - "EC2VPC00vpc02790342fee4ebf9f00YtCms"
          - "CidrBlock"
        IpProtocol: "tcp"
        Description: "Allow HTTP traffic for ALB"
        FromPort: 80
        ToPort: 80
      - CidrIp:
          Fn::GetAtt:
          - "EC2VPC00vpc02790342fee4ebf9f00YtCms"
          - "CidrBlock"
        IpProtocol: "tcp"
        Description: "Test"
        FromPort: 8080
        ToPort: 8080
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "-1"
        Description: "test"
        FromPort: -1
        ToPort: -1
      - CidrIp:
          Fn::GetAtt:
          - "EC2VPC00vpc02790342fee4ebf9f00YtCms"
          - "CidrBlock"
        IpProtocol: "tcp"
        Description: "Allow HTTPS traffic for ALB"
        FromPort: 443
        ToPort: 443
  EC2Route00rtb0272f811966d349e500E4xqp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Route"
    DeletionPolicy: "Retain"
    Properties:
      RouteTableId:
        Ref: "EC2RouteTable00rtb0272f811966d349e500R5SCh"
      DestinationCidrBlock:
        Fn::GetAtt:
        - "EC2VPC00vpc02790342fee4ebf9f00YtCms"
        - "CidrBlock"
      GatewayId: "local"
      VpcEndpointId: "local"
  EC2NetworkInterface00eni01f1da401b50eb80e00zeVWp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: ""
      PrivateIpAddress: "10.25.71.173"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.173"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-07fd500f946aad8a2"
      - "sg-018c8a78c89c0d404"
      - "sg-02a57c92533299fd5"
      - "sg-0158898f4b43a0ae9"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      SourceDestCheck: true
      InterfaceType: "interface"
      Tags: []
  EC2NetworkInsightsPath00nip038b73718e10f516700aO3Oj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInsightsPath"
    DeletionPolicy: "Retain"
    Properties:
      Destination: "vpce-0081c8ebf3c1f7fd5"
      FilterAtSource:
        DestinationPortRange:
          ToPort: 443
          FromPort: 443
      Protocol: "tcp"
      Source: "eni-01108417634392849"
      Tags:
      - Value: "secrets-manager-debug-2"
        Key: "Name"
  EC2InternetGateway00igw0b271b841ab11150e00bc0Qi:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::InternetGateway"
    DeletionPolicy: "Retain"
    Properties:
      Tags:
      - Value: "GenAI-Pilot-IGW"
        Key: "Name"
  ECSTaskDefinition00taskdefinitiongenaipilot37000KCOs:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::TaskDefinition"
    DeletionPolicy: "Retain"
    Properties:
      TaskRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      InferenceAccelerators: []
      Memory: "3072"
      PlacementConstraints: []
      Cpu: "1024"
      RequiresCompatibilities:
      - "FARGATE"
      NetworkMode: "awsvpc"
      EnableFaultInjection: false
      ExecutionRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      RuntimePlatform:
        OperatingSystemFamily: "LINUX"
        CpuArchitecture: "X86_64"
      Volumes: []
      ContainerDefinitions:
      - Secrets: []
        Memory: 3072
        VolumesFrom: []
        Cpu: 1024
        EntryPoint: []
        DnsServers: []
        ReadonlyRootFilesystem: true
        Image: "343218203122.dkr.ecr.ap-southeast-1.amazonaws.com/genai-ecr:Prod-Frontend-Latest-V9"
        Essential: true
        LogConfiguration:
          SecretOptions: []
          Options:
            awslogs-group: "/ecs/genaipilot"
            awslogs-create-group: "true"
            awslogs-region: "ap-southeast-1"
            awslogs-stream-prefix: "ecs"
          LogDriver: "awslogs"
        ResourceRequirements: []
        EnvironmentFiles: []
        Name: "genaifrontend"
        DockerSecurityOptions: []
        SystemControls: []
        DnsSearchDomains: []
        CredentialSpecs: []
        Ulimits: []
        ExtraHosts: []
        MountPoints: []
        DependsOn: []
        DockerLabels: {}
        PortMappings:
        - ContainerPort: 8080
          AppProtocol: "http"
          Protocol: "tcp"
          HostPort: 8080
          Name: "genaifrontend-80-tcp"
        Command: []
        Environment: []
        Links: []
      Family: "genaipilot"
      Tags: []
  IAMRole00ec2adminaccess00wxTvp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AmazonSageMaker-ExecutionPolicy-20240813T111543"
      - "arn:aws:iam::aws:policy/AmazonAPIGatewayInvokeFullAccess"
      - "arn:aws:iam::aws:policy/AdministratorAccess"
      MaxSessionDuration: 3600
      RoleName: "ec2-admin-access"
      Description: "Allows EC2 instances to call AWS services on your behalf."
      Policies:
      - PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Resource: "*"
            Action:
            - "ssm:DescribeAssociation"
            - "ssm:GetDeployablePatchSnapshotForInstance"
            - "ssm:GetDocument"
            - "ssm:DescribeDocument"
            - "ssm:GetManifest"
            - "ssm:GetParameter"
            - "ssm:GetParameters"
            - "ssm:ListAssociations"
            - "ssm:ListInstanceAssociations"
            - "ssm:PutInventory"
            - "ssm:PutComplianceItems"
            - "ssm:PutConfigurePackageResult"
            - "ssm:UpdateAssociationStatus"
            - "ssm:UpdateInstanceAssociationStatus"
            - "ssm:UpdateInstanceInformation"
            Effect: "Allow"
          - Resource: "*"
            Action:
            - "ssmmessages:CreateControlChannel"
            - "ssmmessages:CreateDataChannel"
            - "ssmmessages:OpenControlChannel"
            - "ssmmessages:OpenDataChannel"
            Effect: "Allow"
          - Resource: "*"
            Action:
            - "ec2messages:AcknowledgeMessage"
            - "ec2messages:DeleteMessage"
            - "ec2messages:FailMessage"
            - "ec2messages:GetEndpoint"
            - "ec2messages:GetMessages"
            - "ec2messages:SendReply"
            Effect: "Allow"
        PolicyName: "SSMAgent"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "ec2.amazonaws.com"
  EC2NetworkInterfaceAttachment00eniattach05d1f5c851d2cd41800DzJdS:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-03ebb21c83a16a055"
      InstanceId: "i-0e38931234673f678"
      DeviceIndex: "0"
      DeleteOnTermination: true
  EC2SecurityGroup00sg075615342aa3e28b900936Zj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "default VPC security group"
      GroupName: "default"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      SecurityGroupIngress:
      - CidrIp: "10.25.71.0/32"
        IpProtocol: "-1"
        Description: "allow inbound local"
        FromPort: -1
        ToPort: -1
      - IpProtocol: "-1"
        FromPort: -1
        SourceSecurityGroupId:
          Fn::GetAtt:
          - "EC2VPC00vpc02790342fee4ebf9f00YtCms"
          - "DefaultSecurityGroup"
        ToPort: -1
        SourceSecurityGroupOwnerId: "343218203122"
      SecurityGroupEgress:
      - CidrIp: "10.25.71.0/32"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
  EC2NetworkInterfaceAttachment00eniattach07e4e3388ea2fc21700YD0jb:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-03fe0ac31fc735c31"
      InstanceId: "i-056aa8a8a3a7d7440"
      DeviceIndex: "0"
      DeleteOnTermination: true
  EventsRule00ruleDONOTDELETEAmazonInspectorEcrManagedRule00TPL64:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Events::Rule"
    DeletionPolicy: "Retain"
    Properties:
      EventBusName:
        Ref: "EventsEventBus00default002gd2v"
      EventPattern:
        detail-type:
        - "ECR Image Action"
        - "ECR Scan Resource Change"
        source:
        - "aws.ecr"
      Description: "Managed rule used to route ECR Events to Inspector"
      State: "ENABLED"
      Targets:
      - Arn: "arn:aws:inspector2:ap-southeast-1:::"
        Id: "InspectorTarget"
      Id: "DO-NOT-DELETE-AmazonInspectorEcrManagedRule"
      Name: "DO-NOT-DELETE-AmazonInspectorEcrManagedRule"
  IAMInstanceProfile00troubleshootelbrole00EHKhM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::InstanceProfile"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/"
      Roles:
      - "troubleshoot-elb-role"
      InstanceProfileName: "troubleshoot-elb-role"
  EC2VPCEndpoint00vpce05918385aabf34a2e00QHzgT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VPCEndpoint"
    DeletionPolicy: "Retain"
    Properties:
      PrivateDnsEnabled: true
      IpAddressType: "ipv4"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      DnsOptions:
        PrivateDnsOnlyForInboundResolverEndpoint: "NotSpecified"
        DnsRecordIpType: "ipv4"
      RouteTableIds: []
      ServiceName: "com.amazonaws.ap-southeast-1.ec2messages"
      PolicyDocument:
        Statement:
        - Resource: "*"
          Action: "*"
          Effect: "Allow"
          Principal: "*"
      VpcEndpointType: "Interface"
      ResourceConfigurationArn: ""
      SecurityGroupIds:
      - "sg-0ef00776c538db142"
      SubnetIds:
      - Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      - Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
      ServiceNetworkArn: ""
  EC2VolumeAttachment00vol0c5c3a52ca610e45500YIFnJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VolumeAttachment"
    DeletionPolicy: "Retain"
    Properties:
      InstanceId: "i-0af21fb2531ca410d"
      VolumeId: "vol-0c5c3a52ca610e455"
      Device: "/dev/sda1"
  EC2SubnetNetworkAclAssociation00aclassoc0b4ac57fe7df3313b00VjFOD:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    DeletionPolicy: "Retain"
    Properties:
      NetworkAclId:
        Ref: "EC2NetworkAcl00acl0612aef300c98d4f400YxiZL"
      SubnetId:
        Ref: "EC2Subnet00subnet048794c64c2e4427a00kAh5w"
  EC2VolumeAttachment00vol01bd16c2e811bb9d700PkgMa:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VolumeAttachment"
    DeletionPolicy: "Retain"
    Properties:
      InstanceId: "i-0e19ff01674e306d5"
      VolumeId: "vol-01bd16c2e811bb9d7"
      Device: "/dev/xvda"
  LambdaFunction00sgprodgenairagsummariser00BDrwV:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Function"
    DeletionPolicy: "Retain"
    Properties:
      MemorySize: 5120
      Description: ""
      TracingConfig:
        Mode: "PassThrough"
      VpcConfig:
        SecurityGroupIds:
        - "sg-03d66fb80efac83a5"
        - "sg-02a57c92533299fd5"
        - "sg-075615342aa3e28b9"
        - "sg-00dd21ae4b1e23f22"
        - "sg-02d1755cab861734f"
        SubnetIds:
        - Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
        - Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
        Ipv6AllowedForDualStack: false
      Timeout: 300
      Code:
        SourceKMSKeyArn:
          Ref: "LambdaFunction00sgprodgenairagsummariser00BDrwVCodeSourceKMSKeyArnTcgPW"
        S3ObjectVersion:
          Ref: "LambdaFunction00sgprodgenairagsummariser00BDrwVCodeS3ObjectVersion3gc5d"
        S3Bucket:
          Ref: "LambdaFunction00sgprodgenairagsummariser00BDrwVCodeS3BucketNGWFk"
        ZipFile:
          Ref: "LambdaFunction00sgprodgenairagsummariser00BDrwVCodeZipFile1MS4d"
        ImageUri:
          Ref: "LambdaFunction00sgprodgenairagsummariser00BDrwVCodeImageUriL27hj"
        S3Key:
          Ref: "LambdaFunction00sgprodgenairagsummariser00BDrwVCodeS3Key36bMp"
      Role:
        Fn::GetAtt:
        - "IAMRole00sgprodgenaisummariserroleu702de5o00E2i94"
        - "Arn"
      FileSystemConfigs: []
      FunctionName: "sg-prod-genai-rag-summariser"
      PackageType: "Image"
      LoggingConfig:
        LogFormat: "Text"
        LogGroup: "/aws/lambda/sg-prod-genai-rag-summariser"
      RecursiveLoop: "Terminate"
      Environment:
        Variables:
          HIGH_PRIORITY_QUEUE_ARN: "arn:aws:sqs:ap-southeast-1:343218203122:summariser_continuous_conversation.fifo"
          HIGH_PRIORITY_QUEUE_URL: "https://sqs.ap-southeast-1.amazonaws.com/343218203122/summariser_continuous_conversation.fifo"
          DOCDB_KEY: "mongodb://summariser:summariser123@sg-prod-genai-summariser-v1.cluster-czs8w0aayayu.ap-southeast-1.docdb.amazonaws.com:27017/?tls=true&tlsCAFile=./global-bundle.pem&replicaSet=rs0&readPreference=secondaryPreferred&retryWrites=false"
          NORMAL_PRIORITY_QUEUE_URL: "https://sqs.ap-southeast-1.amazonaws.com/343218203122/summariser_new_conversation.fifo"
          NORMAL_PRIORITY_QUEUE_ARN: "arn:aws:sqs:ap-southeast-1:343218203122:summariser_new_conversation.fifo"
      EphemeralStorage:
        Size: 512
      Architectures:
      - "x86_64"
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole5e5ce3b843874532aa72088dbc65462500Dybqm:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-5e5ce3b8-4387-4532-aa72-088dbc654625"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:us-east-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:us-east-1:343218203122:log-group:/aws/lambda/sg-prod-genai-relevantdocs-sgmkr-216-v1:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - "sg-prod-genai-relevantdocs-sgmkr-216-v1-role-ifo2j6bd"
      Users: []
  EC2SecurityGroup00sg0a126cd14bab4182c00lSN8k:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "[DO NOT DELETE] Security Group that allows outbound NFS traffic\
        \ for SageMaker Notebooks Domain [d-te2ilw9kubrv]"
      GroupName: "security-group-for-outbound-nfs-d-te2ilw9kubrv"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      SecurityGroupEgress:
      - IpProtocol: "tcp"
        DestinationSecurityGroupId:
          Fn::GetAtt:
          - "EC2SecurityGroup00sg01a0388df347bf2bf00Tva6b"
          - "GroupId"
        FromPort: 2049
        ToPort: 2049
      Tags:
      - Value: "arn:aws:sagemaker:ap-southeast-1:343218203122:domain/d-te2ilw9kubrv"
        Key: "ManagedByAmazonSageMakerResource"
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole7e655138e6284630a29ee435acea831200oYB1i:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-7e655138-e628-4630-a29e-e435acea8312"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-prod-genai-relevantdocs-sgmkr-216-v1:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - "sg-prod-genai-relevantdocs-sgmkr-216-v1-role-tpj8ud89"
      Users: []
  EC2NetworkInterfaceAttachment00elaattach0693c06d3f1f759c700x7C4e:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0965302076cb1523b"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2NetworkInterface00eni0a34e15b9b56fa56100TqrMl:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "VPC Endpoint Interface vpce-0db541c372e21216b"
      PrivateIpAddress: "10.25.71.182"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.182"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-0ef00776c538db142"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      SourceDestCheck: true
      InterfaceType: "vpc_endpoint"
      Tags: []
  IAMRole00AWSCloud9SSMAccessRole00U5v1Q:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/AWSCloud9SSMInstanceProfile"
      MaxSessionDuration: 3600
      RoleName: "AWSCloud9SSMAccessRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service:
            - "ec2.amazonaws.com"
            - "cloud9.amazonaws.com"
  EC2Volume00vol096be7436e031867d00uisnn:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Volume"
    DeletionPolicy: "Retain"
    Properties:
      MultiAttachEnabled: false
      SnapshotId: "snap-0a40ca51538eab60d"
      VolumeType: "gp3"
      Encrypted: false
      Size: 20
      AutoEnableIO: true
      AvailabilityZone: "ap-southeast-1b"
      Throughput: 125
      Iops: 3000
      Tags: []
  EC2NetworkInterface00eni0dbe46f71ee55e00f00NW4eI:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "VPC Endpoint Interface vpce-07f234231dd3592f4"
      PrivateIpAddress: "10.25.71.201"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.201"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-075615342aa3e28b9"
      - "sg-0bb8d1d9641e826f4"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
      SourceDestCheck: true
      InterfaceType: "vpc_endpoint"
      Tags: []
  EC2SubnetNetworkAclAssociation00aclassoc03db0b71fa136254000sHzCP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    DeletionPolicy: "Retain"
    Properties:
      NetworkAclId:
        Ref: "EC2NetworkAcl00acl0035712838ecf942d00mb5Sn"
      SubnetId:
        Ref: "EC2Subnet00subnet040ea0b30fd89092a00dTOsl"
  EC2NetworkInterfaceAttachment00elaattach0a92a642db9fa45b9000vhOs:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0021624e920852815"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2NetworkInterfaceAttachment00elaattach008dc5441b62d612a008j2vl:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0469175a2c55d8074"
      DeviceIndex: "1"
      DeleteOnTermination: false
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRolea655d158af2842f980b5a052107040e000sjvox:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-a655d158-af28-42f9-80b5-a052107040e0"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:us-east-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:us-east-1:343218203122:log-group:/aws/lambda/sg-prod-genai-relevantdocs-216-v1:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - "sg-prod-genai-relevantdocs-216-v1-role-yqpyi36c"
      Users: []
  EC2NetworkInterface00eni03fe0ac31fc735c3100Zf8wi:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: ""
      PrivateIpAddress: "10.25.71.183"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.183"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-07fd500f946aad8a2"
      - "sg-0158898f4b43a0ae9"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      SourceDestCheck: true
      InterfaceType: "interface"
      Tags: []
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole7a6d0050e9de4d839789f3b5be0c2b6500EkBcj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-7a6d0050-e9de-4d83-9789-f3b5be0c2b65"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-prod-genai-presignedurl-s3-220-v1:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - "sg-prod-genai-presignedurl-s3-220-v1-role-e0vmopci"
      Users: []
  EC2SecurityGroup00sg0a6c63d92a738a24c00HIVRk:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "CLI access to dev team"
      GroupName: "GenAI-Pilot-cvpn-SG"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      SecurityGroupIngress:
      - CidrIp:
          Fn::GetAtt:
          - "EC2VPC00vpc02790342fee4ebf9f00YtCms"
          - "CidrBlock"
        IpProtocol: "tcp"
        FromPort: 22
        ToPort: 22
      - CidrIp:
          Fn::GetAtt:
          - "EC2VPC00vpc02790342fee4ebf9f00YtCms"
          - "CidrBlock"
        IpProtocol: "tcp"
        FromPort: 443
        ToPort: 443
      - CidrIp:
          Fn::GetAtt:
          - "EC2VPC00vpc02790342fee4ebf9f00YtCms"
          - "CidrBlock"
        IpProtocol: "icmp"
        FromPort: -1
        ToPort: -1
      SecurityGroupEgress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
      Tags:
      - Value: "GenAI-Pilot-cvpn-SG"
        Key: "Name"
  EC2NetworkInterface00eni09c67fb148e45c6f100sJ6tS:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "AWS Lambda VPC ENI-sg-prod-genai-deleteobject-s3-70e16bd6-e082-4f5b-b4bb-1f5b58889345"
      PrivateIpAddress: "10.25.71.202"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.202"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-02c2f03d3e7cd125f"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
      SourceDestCheck: true
      InterfaceType: "lambda"
      Tags: []
  EC2NetworkInterface00eni0e4ef44b014a28b9000sEX1r:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "SageMaker managed ENI for endpoint jumpstart-dft-llama-3-1-8b-instruct-20240828-164716\
        \ instance i-08c54f254e61d8876"
      PrivateIpAddress: "10.25.71.219"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.219"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-075615342aa3e28b9"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
      SourceDestCheck: true
      InterfaceType: "interface"
      Tags: []
  EC2SecurityGroup00sg0146c1d90e9e154b900nuSxE:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "Allow ECS Web subnets and Application subnets to access to\
        \ API Gateway VPC endpoint"
      GroupName: "GenAI-Pilot-Private-APIGW-VPC-Endpoint-SG"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      SecurityGroupIngress:
      - CidrIp: "10.25.71.64/28"
        IpProtocol: "tcp"
        Description: "ECS Web subnet 1c"
        FromPort: 443
        ToPort: 443
      - CidrIp: "10.25.71.160/27"
        IpProtocol: "tcp"
        Description: "App subnet 1b"
        FromPort: 443
        ToPort: 443
      - CidrIp: "10.25.71.48/28"
        IpProtocol: "tcp"
        Description: "ECS Web subnet 1b"
        FromPort: 443
        ToPort: 443
      - CidrIp: "10.25.71.192/27"
        IpProtocol: "tcp"
        Description: "App subnet 1c"
        FromPort: 443
        ToPort: 443
      SecurityGroupEgress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
  EC2Volume00vol0c5c3a52ca610e45500jBR4f:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Volume"
    DeletionPolicy: "Retain"
    Properties:
      MultiAttachEnabled: false
      SnapshotId: "snap-091bcb51d6f04afa9"
      VolumeType: "gp3"
      KmsKeyId: "arn:aws:kms:ap-southeast-1:343218203122:key/e0af6c3f-73fc-497e-863a-6754f0dce6b1"
      Encrypted: true
      Size: 20
      AutoEnableIO: false
      AvailabilityZone: "ap-southeast-1b"
      Throughput: 125
      Iops: 3000
      Tags:
      - Value: "nabil-jumpserver-EBS"
        Key: "Name"
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRoled26adc1f0b1749e090430c154b08cff600jmKiD:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-d26adc1f-0b17-49e0-9043-0c154b08cff6"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/check-python-version:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - "check-python-version-role-q9j1tu4x"
      Users: []
  EC2NetworkInterfaceAttachment00elaattach0bf616e989d57810600kWHWu:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-00acdcc3d4862e8a8"
      DeviceIndex: "1"
      DeleteOnTermination: false
  ElasticLoadBalancingV2Listener00listenerappGenAIPilotInternalALBa1f8a8ad2aaa94bb81a01d29aab27dc000KQUuv:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    DeletionPolicy: "Retain"
    Properties:
      ListenerAttributes:
      - Value: "true"
        Key: "routing.http.response.server.enabled"
      - Value: ""
        Key: "routing.http.response.access_control_allow_headers.header_value"
      - Value: ""
        Key: "routing.http.response.x_frame_options.header_value"
      - Value: ""
        Key: "routing.http.response.access_control_allow_methods.header_value"
      - Value: ""
        Key: "routing.http.response.access_control_allow_origin.header_value"
      - Value: ""
        Key: "routing.http.response.access_control_allow_credentials.header_value"
      - Value: ""
        Key: "routing.http.response.x_content_type_options.header_value"
      - Value: ""
        Key: "routing.http.response.content_security_policy.header_value"
      - Value: ""
        Key: "routing.http.response.access_control_expose_headers.header_value"
      - Value: ""
        Key: "routing.http.response.strict_transport_security.header_value"
      - Value: ""
        Key: "routing.http.response.access_control_max_age.header_value"
      Protocol: "HTTP"
      LoadBalancerArn:
        Ref: "ElasticLoadBalancingV2LoadBalancer00loadbalancerappGenAIPilotInternalALBa1f8a8ad2aaa94bb00Up2ZY"
      DefaultActions:
      - Order: 1
        Type: "redirect"
        RedirectConfig:
          Path: "/#{path}"
          Host: "#{host}"
          Query: "#{query}"
          Protocol: "HTTPS"
          StatusCode: "HTTP_301"
          Port: "443"
      Port: 80
  EC2Volume00vol03616c082cedd037400H2zHj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Volume"
    DeletionPolicy: "Retain"
    Properties:
      MultiAttachEnabled: false
      SnapshotId: "snap-0a00914b732a105a7"
      VolumeType: "gp3"
      KmsKeyId: "arn:aws:kms:ap-southeast-1:343218203122:key/e0af6c3f-73fc-497e-863a-6754f0dce6b1"
      Encrypted: true
      Size: 100
      AutoEnableIO: false
      AvailabilityZone: "ap-southeast-1b"
      Throughput: 125
      Iops: 3000
      Tags:
      - Value: "WeiYan"
        Key: "Name"
  EC2NetworkInterface00eni0ed02c4ab5a99c45f00M6T5I:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "VPC Endpoint Interface vpce-06069bea79007eb11"
      PrivateIpAddress: "10.25.71.208"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.208"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-0ef00776c538db142"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
      SourceDestCheck: true
      InterfaceType: "vpc_endpoint"
      Tags: []
  EC2NetworkInterface00eni00845fde09b1e526600ozZdg:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "VPC Endpoint Interface vpce-0fc55ede1b592407c"
      PrivateIpAddress: "10.25.71.198"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.198"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-02d1755cab861734f"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
      SourceDestCheck: true
      InterfaceType: "vpc_endpoint"
      Tags: []
  EC2VolumeAttachment00vol025bc069a9af78b0f00Y8bbr:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VolumeAttachment"
    DeletionPolicy: "Retain"
    Properties:
      InstanceId: "i-056aa8a8a3a7d7440"
      VolumeId: "vol-025bc069a9af78b0f"
      Device: "/dev/sda1"
  LambdaVersion00functionsgprodgenairagsummariser1200AfoAE:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Version"
    DeletionPolicy: "Retain"
    Properties:
      CodeSha256: "08fd962d9331f5bc91f8450616f34f05ebed6928fe9115c05516ba0a189954ee"
      FunctionName:
        Ref: "LambdaFunction00sgprodgenairagsummariser00BDrwV"
      Description: ""
  EC2RouteTable00rtb0b5bcb0011b72f45600UhxSV:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::RouteTable"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      Tags:
      - Value: "GenAI-Pilot-rtb-private-Database"
        Key: "Name"
  EC2SecurityGroup00sg02a57c92533299fd5009RYMP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "Allows access from EC2"
      GroupName: "websocketDocDB"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      SecurityGroupIngress:
      - CidrIp:
          Fn::GetAtt:
          - "EC2VPC00vpc02790342fee4ebf9f00YtCms"
          - "CidrBlock"
        IpProtocol: "tcp"
        Description: "allow inbound from firewall"
        FromPort: 27017
        ToPort: 27017
      - IpProtocol: "tcp"
        FromPort: 27017
        SourceSecurityGroupId: "sg-075615342aa3e28b9"
        ToPort: 27017
        SourceSecurityGroupOwnerId: "343218203122"
      - IpProtocol: "tcp"
        FromPort: 27017
        SourceSecurityGroupId: "sg-0fd865e5bd1a64a07"
        ToPort: 27017
        SourceSecurityGroupOwnerId: "343218203122"
      - IpProtocol: "tcp"
        Description: "allow inbound from alb internal"
        FromPort: 27017
        SourceSecurityGroupId: "sg-0fbe083eaa2bbd46c"
        ToPort: 27017
        SourceSecurityGroupOwnerId: "343218203122"
      - IpProtocol: "tcp"
        Description: "allow inbound from ECS frontend"
        FromPort: 27017
        SourceSecurityGroupId: "sg-06010a299d4942ce2"
        ToPort: 27017
        SourceSecurityGroupOwnerId: "343218203122"
      - IpProtocol: "tcp"
        Description: "allow inbound from itself"
        FromPort: 27017
        SourceSecurityGroupId: "sg-02a57c92533299fd5"
        ToPort: 27017
        SourceSecurityGroupOwnerId: "343218203122"
      - IpProtocol: "tcp"
        Description: "allow inbound from lambda"
        FromPort: 27017
        SourceSecurityGroupId: "sg-03d66fb80efac83a5"
        ToPort: 27017
        SourceSecurityGroupOwnerId: "343218203122"
      - IpProtocol: "tcp"
        Description: "DocuDB SG"
        FromPort: 443
        SourceSecurityGroupId: "sg-02a57c92533299fd5"
        ToPort: 443
        SourceSecurityGroupOwnerId: "343218203122"
      - IpProtocol: "tcp"
        Description: "From ECS Frontend SG"
        FromPort: 443
        SourceSecurityGroupId: "sg-06010a299d4942ce2"
        ToPort: 443
        SourceSecurityGroupOwnerId: "343218203122"
      - IpProtocol: "tcp"
        Description: "VPC Endpoint SG"
        FromPort: 443
        SourceSecurityGroupId: "sg-0ef00776c538db142"
        ToPort: 443
        SourceSecurityGroupOwnerId: "343218203122"
      SecurityGroupEgress:
      - CidrIp:
          Fn::GetAtt:
          - "EC2VPC00vpc02790342fee4ebf9f00YtCms"
          - "CidrBlock"
        IpProtocol: "-1"
        Description: "Internal traffic only"
        FromPort: -1
        ToPort: -1
      - IpProtocol: "tcp"
        DestinationSecurityGroupId: "sg-02a57c92533299fd5"
        FromPort: 443
        ToPort: 443
  EC2NetworkInterfaceAttachment00elaattach0019b29dc47fdfd4d004ZJsM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0307d7afd49e38cac"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2NetworkInterface00eni0c66dedac91dbb82800UErIr:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: ""
      PrivateIpAddress: "10.25.71.175"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.175"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-07fd500f946aad8a2"
      - "sg-0fd865e5bd1a64a07"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      SourceDestCheck: true
      InterfaceType: "interface"
      Tags: []
  EC2NetworkInterfaceAttachment00elaattach09039a97bff23419c00SLbpV:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-00d8354b1cac7c803"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2VPCDHCPOptionsAssociation00vpc0182b4cdff5ae990b00oT4R0:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VPCDHCPOptionsAssociation"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc0182b4cdff5ae990b00WzWIq"
      DhcpOptionsId:
        Ref: "EC2DHCPOptions00dopt04b52e307ae8973a2004Pj9R"
  EventsEventBus00default002gd2v:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Events::EventBus"
    DeletionPolicy: "Retain"
    Properties:
      Tags: []
      Name: "default"
  ECSTaskDefinition00taskdefinitiongenaipilot2500klzDr:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::TaskDefinition"
    DeletionPolicy: "Retain"
    Properties:
      TaskRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      InferenceAccelerators: []
      Memory: "3072"
      PlacementConstraints: []
      Cpu: "1024"
      RequiresCompatibilities:
      - "FARGATE"
      NetworkMode: "awsvpc"
      EnableFaultInjection: false
      ExecutionRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      RuntimePlatform:
        OperatingSystemFamily: "LINUX"
        CpuArchitecture: "X86_64"
      Volumes: []
      ContainerDefinitions:
      - Secrets: []
        Memory: 3072
        VolumesFrom: []
        Cpu: 1024
        EntryPoint: []
        DnsServers: []
        ReadonlyRootFilesystem: true
        Image: "343218203122.dkr.ecr.ap-southeast-1.amazonaws.com/genai-ecr:Prod-Frontend-Latest"
        Essential: true
        LogConfiguration:
          SecretOptions: []
          Options:
            awslogs-group: "/ecs/genaipilot"
            awslogs-create-group: "true"
            awslogs-region: "ap-southeast-1"
            awslogs-stream-prefix: "ecs"
          LogDriver: "awslogs"
        ResourceRequirements: []
        EnvironmentFiles: []
        Name: "genaifrontend"
        DockerSecurityOptions: []
        SystemControls: []
        DnsSearchDomains: []
        CredentialSpecs: []
        Ulimits: []
        ExtraHosts: []
        MountPoints: []
        DependsOn: []
        DockerLabels: {}
        PortMappings:
        - ContainerPort: 8080
          AppProtocol: "http"
          Protocol: "tcp"
          HostPort: 8080
          Name: "genaifrontend-80-tcp"
        Command: []
        Environment: []
        Links: []
      Family: "genaipilot"
      Tags: []
  EC2NetworkInterfaceAttachment00elaattach0e1b98baa44e1deb600QWZCm:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0c126820bbb0450ae"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2NetworkInterfaceAttachment00elaattach0953a0f8e69c4c54500xjbB6:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0157b804091e19126"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2NetworkInterface00eni022abac26e32c29b0004gzkm:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "RDSNetworkInterface"
      PrivateIpAddress: "10.25.71.124"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.124"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-075615342aa3e28b9"
      - "sg-02a57c92533299fd5"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet0d68b865e8a7e3cc0002GF7k"
      SourceDestCheck: true
      InterfaceType: "interface"
      Tags: []
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole80b083c0722f4531a0c4a78af6fcbd7000OqRSC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-80b083c0-722f-4531-a0c4-a78af6fcbd70"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-prod-genai-categoriser:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - "sg-prod-genai-categoriser-role-soncqz8c"
      Users: []
  EC2Subnet00subnet0ff6c65f492e7220000wureK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Subnet"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc0182b4cdff5ae990b00WzWIq"
      MapPublicIpOnLaunch: false
      EnableDns64: false
      AvailabilityZoneId: "apse1-az2"
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      CidrBlock: "172.31.32.0/20"
      Ipv6Native: false
      Tags: []
  EC2SecurityGroup00sg09b2b11bee0d39e7a00k6LCr:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "launch-wizard-9 created 2024-10-29T02:58:26.769Z"
      GroupName: "launch-wizard-9"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      SecurityGroupIngress:
      - CidrIp: "161.142.154.86/32"
        IpProtocol: "tcp"
        FromPort: 22
        ToPort: 22
      - CidrIp:
          Fn::GetAtt:
          - "EC2VPC00vpc02790342fee4ebf9f00YtCms"
          - "CidrBlock"
        IpProtocol: "tcp"
        FromPort: 22
        ToPort: 22
      - CidrIp: "113.23.196.18/32"
        IpProtocol: "tcp"
        FromPort: 22
        ToPort: 22
      SecurityGroupEgress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
  EC2NetworkInterfaceAttachment00eniattach018847fa418e6f7ad00ioCcb:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0e4ef44b014a28b90"
      DeviceIndex: "1"
      DeleteOnTermination: false
  ECSTaskDefinition00taskdefinitiongenaipilot4002maZl:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::TaskDefinition"
    DeletionPolicy: "Retain"
    Properties:
      TaskRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      InferenceAccelerators: []
      Memory: "3072"
      PlacementConstraints: []
      Cpu: "1024"
      RequiresCompatibilities:
      - "FARGATE"
      NetworkMode: "awsvpc"
      EnableFaultInjection: false
      ExecutionRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      RuntimePlatform:
        OperatingSystemFamily: "LINUX"
        CpuArchitecture: "X86_64"
      Volumes: []
      ContainerDefinitions:
      - Secrets: []
        Memory: 3072
        VolumesFrom: []
        Cpu: 1024
        EntryPoint: []
        DnsServers: []
        Image: "343218203122.dkr.ecr.ap-southeast-1.amazonaws.com/genai-ecr"
        Essential: true
        LogConfiguration:
          SecretOptions: []
          Options:
            awslogs-group: "/ecs/genaipilot"
            awslogs-create-group: "true"
            awslogs-region: "ap-southeast-1"
            awslogs-stream-prefix: "ecs"
          LogDriver: "awslogs"
        ResourceRequirements: []
        EnvironmentFiles: []
        Name: "genaifrontend"
        DockerSecurityOptions: []
        SystemControls: []
        DnsSearchDomains: []
        CredentialSpecs: []
        Ulimits: []
        ExtraHosts: []
        MountPoints: []
        DependsOn: []
        DockerLabels: {}
        PortMappings:
        - ContainerPort: 8080
          AppProtocol: "http"
          Protocol: "tcp"
          HostPort: 8080
          Name: "genaifrontend-80-tcp"
        Command: []
        Environment: []
        Links: []
      Family: "genaipilot"
      Tags: []
  EC2Route00rtb07a95c43e9fdd755c00f7yZc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Route"
    DeletionPolicy: "Retain"
    Properties:
      RouteTableId:
        Ref: "EC2RouteTable00rtb07a95c43e9fdd755c00a32xl"
      DestinationCidrBlock:
        Fn::GetAtt:
        - "EC2VPC00vpc02790342fee4ebf9f00YtCms"
        - "CidrBlock"
      GatewayId: "local"
      VpcEndpointId: "local"
  EC2Subnet00subnet01aebeb15e1111ff300ZtTfX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Subnet"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc0182b4cdff5ae990b00WzWIq"
      MapPublicIpOnLaunch: false
      EnableDns64: false
      AvailabilityZoneId: "apse1-az1"
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      CidrBlock: "172.31.16.0/20"
      Ipv6Native: false
      Tags: []
  EC2VPCEndpoint00vpce07f234231dd3592f400tyLhT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VPCEndpoint"
    DeletionPolicy: "Retain"
    Properties:
      PrivateDnsEnabled: true
      IpAddressType: "ipv4"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      DnsOptions:
        PrivateDnsOnlyForInboundResolverEndpoint: "NotSpecified"
        DnsRecordIpType: "ipv4"
      RouteTableIds: []
      ServiceName: "com.amazonaws.ap-southeast-1.servicecatalog"
      PolicyDocument:
        Statement:
        - Resource: "*"
          Action: "*"
          Effect: "Allow"
          Principal: "*"
      VpcEndpointType: "Interface"
      ResourceConfigurationArn: ""
      SecurityGroupIds:
      - "sg-075615342aa3e28b9"
      - "sg-0bb8d1d9641e826f4"
      SubnetIds:
      - Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      - Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
      ServiceNetworkArn: ""
  EC2NetworkInterfaceAttachment00elaattach018ab7bf4765ccbdd00We1Wj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-03b95c83cc0ca8b8a"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2NetworkInterfaceAttachment00eniattach0e079615992c1886b006YpB2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0403053f58cf2839a"
      InstanceId: "i-0630337e785e424b3"
      DeviceIndex: "0"
      DeleteOnTermination: true
  ECSTaskDefinition00taskdefinitiongenaipilot5006vgTx:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::TaskDefinition"
    DeletionPolicy: "Retain"
    Properties:
      TaskRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      InferenceAccelerators: []
      Memory: "3072"
      PlacementConstraints: []
      Cpu: "1024"
      RequiresCompatibilities:
      - "FARGATE"
      NetworkMode: "awsvpc"
      EnableFaultInjection: false
      ExecutionRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      RuntimePlatform:
        OperatingSystemFamily: "LINUX"
        CpuArchitecture: "X86_64"
      Volumes: []
      ContainerDefinitions:
      - Secrets: []
        Memory: 3072
        VolumesFrom: []
        Cpu: 1024
        EntryPoint: []
        DnsServers: []
        Image: "343218203122.dkr.ecr.ap-southeast-1.amazonaws.com/genai-ecr:sit"
        Essential: true
        LogConfiguration:
          SecretOptions: []
          Options:
            awslogs-group: "/ecs/genaipilot"
            awslogs-create-group: "true"
            awslogs-region: "ap-southeast-1"
            awslogs-stream-prefix: "ecs"
          LogDriver: "awslogs"
        ResourceRequirements: []
        EnvironmentFiles: []
        Name: "genaifrontend"
        DockerSecurityOptions: []
        SystemControls: []
        DnsSearchDomains: []
        CredentialSpecs: []
        Ulimits: []
        ExtraHosts: []
        MountPoints: []
        DependsOn: []
        DockerLabels: {}
        PortMappings:
        - ContainerPort: 8080
          AppProtocol: "http"
          Protocol: "tcp"
          HostPort: 8080
          Name: "genaifrontend-80-tcp"
        Command: []
        Environment: []
        Links: []
      Family: "genaipilot"
      Tags: []
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole8cc3c229d0894a4380378102318e1dd800yW0sB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-8cc3c229-d089-4a43-8037-8102318e1dd8"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-prod-genai-presignedurl-s3:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
        - Resource:
          - "arn:aws:s3:::sg-prod-genai-summariser"
          - "arn:aws:s3:::sg-prod-genai-summariser/*"
          Action:
          - "s3:ListBucket"
          - "s3:DeleteObject"
          - "s3:PutObject"
          - "s3:GetObject"
          Effect: "Allow"
          Sid: "AllowS3Access"
      Roles:
      - "sg-prod-genai-presignedurl-s3-role-txfh0skj"
      Users: []
  EC2NetworkInterface00eni0cfb6711de6a4759800920G8:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "VPC Endpoint Interface vpce-02e99197c055622d1"
      PrivateIpAddress: "10.25.71.190"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.190"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-0ef00776c538db142"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      SourceDestCheck: true
      InterfaceType: "vpc_endpoint"
      Tags: []
  EC2VPCEndpoint00vpce02e99197c055622d100dcjNN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VPCEndpoint"
    DeletionPolicy: "Retain"
    Properties:
      PrivateDnsEnabled: false
      IpAddressType: "ipv4"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      DnsOptions:
        PrivateDnsOnlyForInboundResolverEndpoint: "NotSpecified"
        DnsRecordIpType: "ipv4"
      RouteTableIds: []
      ServiceName: "com.amazonaws.ap-southeast-1.logs"
      PolicyDocument:
        Statement:
        - Resource: "*"
          Action: "*"
          Effect: "Allow"
          Principal: "*"
      VpcEndpointType: "Interface"
      ResourceConfigurationArn: ""
      SecurityGroupIds:
      - "sg-0ef00776c538db142"
      SubnetIds:
      - Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      - Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
      ServiceNetworkArn: ""
  EC2NetworkInterface00eni0403053f58cf2839a00s8iH6:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: ""
      PrivateIpAddress: "10.25.71.180"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.180"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-07fd500f946aad8a2"
      - "sg-07401c0c33946a241"
      - "sg-0158898f4b43a0ae9"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      SourceDestCheck: true
      InterfaceType: "interface"
      Tags: []
  ECSTaskDefinition00taskdefinitiongenaipilot1500nF2lh:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::TaskDefinition"
    DeletionPolicy: "Retain"
    Properties:
      TaskRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      InferenceAccelerators: []
      Memory: "3072"
      PlacementConstraints: []
      Cpu: "1024"
      RequiresCompatibilities:
      - "FARGATE"
      NetworkMode: "awsvpc"
      EnableFaultInjection: false
      ExecutionRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      RuntimePlatform:
        OperatingSystemFamily: "LINUX"
        CpuArchitecture: "X86_64"
      Volumes: []
      ContainerDefinitions:
      - Secrets: []
        Memory: 3072
        VolumesFrom: []
        Cpu: 1024
        EntryPoint: []
        DnsServers: []
        Image: "343218203122.dkr.ecr.ap-southeast-1.amazonaws.com/genai-ecr:falaina"
        Essential: true
        LogConfiguration:
          SecretOptions: []
          Options:
            awslogs-group: "/ecs/genaipilot"
            awslogs-create-group: "true"
            awslogs-region: "ap-southeast-1"
            awslogs-stream-prefix: "ecs"
          LogDriver: "awslogs"
        ResourceRequirements: []
        EnvironmentFiles: []
        Name: "genaifrontend"
        DockerSecurityOptions: []
        SystemControls: []
        DnsSearchDomains: []
        CredentialSpecs: []
        Ulimits: []
        ExtraHosts: []
        MountPoints: []
        DependsOn: []
        DockerLabels: {}
        PortMappings:
        - ContainerPort: 8080
          AppProtocol: "http"
          Protocol: "tcp"
          HostPort: 8080
          Name: "genaifrontend-80-tcp"
        Command: []
        Environment: []
        Links: []
      Family: "genaipilot"
      Tags: []
  EC2NetworkInterface00eni0fac682d984f084eb00Nm7Yn:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "VPC Endpoint Interface vpce-0487064705b74cdcd"
      PrivateIpAddress: "10.25.71.166"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.166"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-075615342aa3e28b9"
      - "sg-0bb8d1d9641e826f4"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      SourceDestCheck: true
      InterfaceType: "vpc_endpoint"
      Tags: []
  EC2VPCEndpoint00vpce0fc55ede1b592407c00sY1bj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VPCEndpoint"
    DeletionPolicy: "Retain"
    Properties:
      PrivateDnsEnabled: true
      IpAddressType: "ipv4"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      DnsOptions:
        PrivateDnsOnlyForInboundResolverEndpoint: "NotSpecified"
        DnsRecordIpType: "ipv4"
      RouteTableIds: []
      ServiceName: "com.amazonaws.ap-southeast-1.logs"
      PolicyDocument:
        Statement:
        - Resource: "*"
          Action: "*"
          Effect: "Allow"
          Principal: "*"
      VpcEndpointType: "Interface"
      ResourceConfigurationArn: ""
      SecurityGroupIds:
      - "sg-02d1755cab861734f"
      SubnetIds:
      - Ref: "EC2Subnet00subnet040ea0b30fd89092a00dTOsl"
      - Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
      ServiceNetworkArn: ""
  EC2VolumeAttachment00vol086aefbd878266b9500lCywR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VolumeAttachment"
    DeletionPolicy: "Retain"
    Properties:
      InstanceId: "i-020d34aa93d2d7e6f"
      VolumeId: "vol-086aefbd878266b95"
      Device: "/dev/sda1"
  EC2NetworkInterfaceAttachment00eniattach0d876f5d8aa696aca00Zj0Ad:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0b03d50b57749ef3e"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2NetworkAcl00acl0035712838ecf942d00mb5Sn:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkAcl"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      Tags:
      - Value: "GenAI-Pilot-ECS-acl"
        Key: "Name"
  EC2NetworkInterfaceAttachment00elaattach06bbd7651436d4e2000h5NqG:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0cfb6711de6a47598"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2NetworkAcl00acl002d273352c73de1400EoHdQ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkAcl"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      Tags:
      - Value: "GenAI-Pilot-APP-acl"
        Key: "Name"
  EC2NetworkInterfaceAttachment00elaattach046c2ebc1c2b1ecc800Rb68Y:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0f4fa902aca663ade"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2NetworkInterface00eni0f823989133be313c00LPZkQ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "AWS Lambda VPC ENI-SecretsManagergenai-prod-authdbv2-auto-rotate-6a397d30-9013-4f74-a4fb-7a0611c4d6f2"
      PrivateIpAddress: "10.25.71.136"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.136"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-075615342aa3e28b9"
      - "sg-02a57c92533299fd5"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet048794c64c2e4427a00kAh5w"
      SourceDestCheck: true
      InterfaceType: "lambda"
      Tags: []
  EC2NetworkInterfaceAttachment00eniattach0ab3fde4f218b37cc00Lxfvc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-099302c03e8e3f16a"
      DeviceIndex: "1"
      DeleteOnTermination: false
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRolea0b9c1267e134645b0bf3fe8c922bf0200su4d7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-a0b9c126-7e13-4645-b0bf-3fe8c922bf02"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-prod-genai-retrievedocs-216-v1:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - "sg-prod-genai-retrievedocs-216-v1-role-qqjc3kd2"
      Users: []
  EC2NetworkInterface00eni0965302076cb1523b00Sqiok:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "AWS Lambda VPC ENI-sg-prod-genai-rag-summariser-0fcdd724-daca-4bd2-8b48-efb1faf28256"
      PrivateIpAddress: "10.25.71.188"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.188"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-075615342aa3e28b9"
      - "sg-03d66fb80efac83a5"
      - "sg-02d1755cab861734f"
      - "sg-02a57c92533299fd5"
      - "sg-00dd21ae4b1e23f22"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      SourceDestCheck: true
      InterfaceType: "lambda"
      Tags: []
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole41ed82fbd9c0481abf0fa54bcb0b608000HVccS:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-41ed82fb-d9c0-481a-bf0f-a54bcb0b6080"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-prod-genai-embedding:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgprodgenaiembeddingrolervd72zod00nMv0m"
      Users: []
  ECSTaskDefinition00taskdefinitiongenaipilot14000SppQ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::TaskDefinition"
    DeletionPolicy: "Retain"
    Properties:
      TaskRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      InferenceAccelerators: []
      Memory: "3072"
      PlacementConstraints: []
      Cpu: "1024"
      RequiresCompatibilities:
      - "FARGATE"
      NetworkMode: "awsvpc"
      EnableFaultInjection: false
      ExecutionRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      RuntimePlatform:
        OperatingSystemFamily: "LINUX"
        CpuArchitecture: "X86_64"
      Volumes: []
      ContainerDefinitions:
      - Secrets: []
        Memory: 3072
        VolumesFrom: []
        Cpu: 1024
        EntryPoint: []
        DnsServers: []
        Image: "343218203122.dkr.ecr.ap-southeast-1.amazonaws.com/genai-ecr:testlogin"
        Essential: true
        LogConfiguration:
          SecretOptions: []
          Options:
            awslogs-group: "/ecs/genaipilot"
            awslogs-create-group: "true"
            awslogs-region: "ap-southeast-1"
            awslogs-stream-prefix: "ecs"
          LogDriver: "awslogs"
        ResourceRequirements: []
        EnvironmentFiles: []
        Name: "genaifrontend"
        DockerSecurityOptions: []
        SystemControls: []
        DnsSearchDomains: []
        CredentialSpecs: []
        Ulimits: []
        ExtraHosts: []
        MountPoints: []
        DependsOn: []
        DockerLabels: {}
        PortMappings:
        - ContainerPort: 8080
          AppProtocol: "http"
          Protocol: "tcp"
          HostPort: 8080
          Name: "genaifrontend-80-tcp"
        Command: []
        Environment: []
        Links: []
      Family: "genaipilot"
      Tags: []
  EC2SecurityGroup00sg06504fdb22a344a3100UgNKB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "testing vpc endpoint for s3 with lambda"
      GroupName: "s3-lambda-vpc-endpoint"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      SecurityGroupIngress:
      - IpProtocol: "tcp"
        FromPort: 443
        ToPort: 443
        SourcePrefixListId: "pl-6fa54006"
      SecurityGroupEgress:
      - IpProtocol: "-1"
        FromPort: -1
        DestinationPrefixListId: "pl-6fa54006"
        ToPort: -1
  EC2SecurityGroup00sg0f8a6a4ca99e624a500FsznX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "[DO NOT DELETE] Security Group that allows inbound NFS traffic\
        \ for SageMaker Notebooks Domain [d-elfzewpomisz]"
      GroupName: "security-group-for-inbound-nfs-d-elfzewpomisz"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      SecurityGroupIngress:
      - IpProtocol: "tcp"
        FromPort: 2049
        SourceSecurityGroupId: "sg-0b3fdb872f4244cab"
        ToPort: 2049
        SourceSecurityGroupOwnerId: "343218203122"
      Tags:
      - Value: "arn:aws:sagemaker:ap-southeast-1:343218203122:domain/d-elfzewpomisz"
        Key: "ManagedByAmazonSageMakerResource"
  EC2NetworkInterfaceAttachment00elaattach0182edd1caee752aa00USBVv:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-06015366523e884bd"
      DeviceIndex: "1"
      DeleteOnTermination: false
  ECSTaskDefinition00taskdefinitiongenaipilot1900Jhyp5:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::TaskDefinition"
    DeletionPolicy: "Retain"
    Properties:
      TaskRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      InferenceAccelerators: []
      Memory: "3072"
      PlacementConstraints: []
      Cpu: "1024"
      RequiresCompatibilities:
      - "FARGATE"
      NetworkMode: "awsvpc"
      EnableFaultInjection: false
      ExecutionRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      RuntimePlatform:
        OperatingSystemFamily: "LINUX"
        CpuArchitecture: "X86_64"
      Volumes: []
      ContainerDefinitions:
      - Secrets: []
        Memory: 3072
        VolumesFrom: []
        Cpu: 1024
        EntryPoint: []
        DnsServers: []
        Image: "343218203122.dkr.ecr.ap-southeast-1.amazonaws.com/genai-ecr:confirmmsg"
        Essential: true
        LogConfiguration:
          SecretOptions: []
          Options:
            awslogs-group: "/ecs/genaipilot"
            awslogs-create-group: "true"
            awslogs-region: "ap-southeast-1"
            awslogs-stream-prefix: "ecs"
          LogDriver: "awslogs"
        ResourceRequirements: []
        EnvironmentFiles: []
        Name: "genaifrontend"
        DockerSecurityOptions: []
        SystemControls: []
        DnsSearchDomains: []
        CredentialSpecs: []
        Ulimits: []
        ExtraHosts: []
        MountPoints: []
        DependsOn: []
        DockerLabels: {}
        PortMappings:
        - ContainerPort: 8080
          AppProtocol: "http"
          Protocol: "tcp"
          HostPort: 8080
          Name: "genaifrontend-80-tcp"
        Command: []
        Environment: []
        Links: []
      Family: "genaipilot"
      Tags: []
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRoledbb6cc3ee9c54262abc9a402c2f4038100Xw48z:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-dbb6cc3e-e9c5-4262-abc9-a402c2f40381"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-prod-genai-relevantdocs-sgmkr:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
        - Resource:
          - "arn:aws:s3:::sg-prod-genai-casefinder"
          - "arn:aws:s3:::sg-prod-genai-casefinder/*"
          Action:
          - "s3:ListBucket"
          - "s3:GetObject"
          - "s3:DeleteObject"
          - "s3:PutObject"
          Effect: "Allow"
          Sid: "AllowS3Access"
        - Resource:
          - "*"
          Action:
          - "sagemaker:InvokeEndpoint"
          - "sagemaker:InvokeEndpointAsync"
          - "sagemaker:InvokeEndpointWithResponseStream"
          Effect: "Allow"
          Sid: "AllowInvokeSagemakerEndpoint"
      Roles:
      - "sg-prod-genai-relevantdocs-sgmkr-role-adfg7mbu"
      Users: []
  EC2NetworkInterface00eni0651cf4ea695d7b66002tGeF:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "AWS Lambda VPC ENI-DLQ-handler-sg-prod-genai-summariser-36ab7dd2-99cd-40f0-af47-71488431a5f4"
      PrivateIpAddress: "10.25.71.199"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.199"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-075615342aa3e28b9"
      - "sg-02d1755cab861734f"
      - "sg-00dd21ae4b1e23f22"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
      SourceDestCheck: true
      InterfaceType: "lambda"
      Tags: []
  EC2Instance00i0332276dc3494333e00h0XfK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Instance"
    DeletionPolicy: "Retain"
    Properties:
      Tenancy: "default"
      SecurityGroups:
      - "GenAI-Pilot-Private-Tmicro-to-App"
      - "launch-wizard-9"
      PrivateIpAddress: "10.25.71.29"
      UserData: "IyEvYmluL2Jhc2gKY2QgL3RtcApzdWRvIHl1bSBpbnN0YWxsIC15IGh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9lYzItZG93bmxvYWRzLXdpbmRvd3MvU1NNQWdlbnQvbGF0ZXN0L2xpbnV4X2FtZDY0L2FtYXpvbi1zc20tYWdlbnQucnBtCnN1ZG8gc3lzdGVtY3RsIGVuYWJsZSBhbWF6b24tc3NtLWFnZW50CnN1ZG8gc3lzdGVtY3RsIHN0YXJ0IGFtYXpvbi1zc20tYWdlbnQ="
      BlockDeviceMappings:
      - Ebs:
          SnapshotId: "snap-0d0d9f5db331ffa4b"
          VolumeType: "gp3"
          KmsKeyId:
            Fn::GetAtt:
            - "KMSKey00e0af6c3f73fc497e863a6754f0dce6b1003YkeT"
            - "Arn"
          Encrypted: true
          Iops: 3000
          VolumeSize: 8
          DeleteOnTermination: false
        DeviceName: "/dev/xvda"
      IamInstanceProfile:
        Ref: "IAMInstanceProfile00ec2adminaccess00YQdI9"
      SubnetId:
        Ref: "EC2Subnet00subnet0e7c29cffbb72373f00bJwid"
      EbsOptimized: false
      Volumes:
      - VolumeId: "vol-0057ef600adf6805f"
        Device: "/dev/xvda"
      NetworkInterfaces:
      - PrivateIpAddresses:
        - PrivateIpAddress: "10.25.71.29"
          Primary: true
        SecondaryPrivateIpAddressCount: 0
        DeviceIndex: "0"
        GroupSet:
        - Ref: "EC2SecurityGroup00sg07fd500f946aad8a200ZP1Hf"
        - Ref: "EC2SecurityGroup00sg09b2b11bee0d39e7a00k6LCr"
        Ipv6Addresses: []
        SubnetId:
          Ref: "EC2Subnet00subnet0e7c29cffbb72373f00bJwid"
        AssociatePublicIpAddress: false
        NetworkInterfaceId:
          Ref: "EC2NetworkInterface00eni037d41ab5199db37e00nxJcs"
        DeleteOnTermination: true
      ImageId: "ami-0ef1a6822965893ba"
      InstanceType: "t2.micro"
      Monitoring: false
      Tags:
      - Value: "test-tapo-1"
        Key: "Name"
      InstanceInitiatedShutdownBehavior: "stop"
      CpuOptions:
        ThreadsPerCore: 1
        CoreCount: 1
      AvailabilityZone: "ap-southeast-1b"
      PrivateDnsNameOptions:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      SecurityGroupIds:
      - "sg-07fd500f946aad8a2"
      - "sg-09b2b11bee0d39e7a"
      DisableApiTermination: false
      KeyName: "test-tapo-1"
      SourceDestCheck: true
      PlacementGroupName: ""
      VpcId: "vpc-02790342fee4ebf9f"
      State:
        Code: "80"
        Name: "stopped"
      CreditSpecification:
        CPUCredits: "standard"
  EC2VPCDHCPOptionsAssociation00vpc02790342fee4ebf9f00eI1NT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VPCDHCPOptionsAssociation"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      DhcpOptionsId:
        Ref: "EC2DHCPOptions00dopt04b52e307ae8973a2004Pj9R"
  IAMRole00sgprodgenairetrievedocsv1rolecjvr7yih00FzXgJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-1d038325-9fff-4d7d-bf34-f3281d0abb3b"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-retrievedocs-v1-role-cjvr7yih"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  EC2Instance00i0b2e07dbc66acf6c200JpYpw:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Instance"
    DeletionPolicy: "Retain"
    Properties:
      Tenancy: "default"
      SecurityGroups:
      - "GenAI-Pilot-Private-Tmicro-to-App"
      - "GenAI-Pilot-Private-Cvpn-to-App"
      PrivateIpAddress: "10.25.71.172"
      BlockDeviceMappings:
      - Ebs:
          SnapshotId: "snap-0a00914b732a105a7"
          VolumeType: "gp3"
          KmsKeyId:
            Fn::GetAtt:
            - "KMSKey00e0af6c3f73fc497e863a6754f0dce6b1003YkeT"
            - "Arn"
          Encrypted: true
          Iops: 3000
          VolumeSize: 100
          DeleteOnTermination: false
        DeviceName: "/dev/xvda"
      IamInstanceProfile:
        Ref: "IAMInstanceProfile00ec2adminaccess00YQdI9"
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      EbsOptimized: false
      Volumes:
      - VolumeId: "vol-03616c082cedd0374"
        Device: "/dev/xvda"
      NetworkInterfaces:
      - PrivateIpAddresses:
        - PrivateIpAddress: "10.25.71.172"
          Primary: true
        SecondaryPrivateIpAddressCount: 0
        DeviceIndex: "0"
        GroupSet:
        - Ref: "EC2SecurityGroup00sg07fd500f946aad8a200ZP1Hf"
        - Ref: "EC2SecurityGroup00sg0158898f4b43a0ae900gUN5N"
        Ipv6Addresses: []
        SubnetId:
          Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
        AssociatePublicIpAddress: false
        NetworkInterfaceId:
          Ref: "EC2NetworkInterface00eni0e26b9298bc1d4f2100vMskC"
        DeleteOnTermination: true
      ImageId: "ami-0a065ed4926e5a2c4"
      InstanceType: "t2.xlarge"
      Monitoring: false
      Tags:
      - Value: "ec2-jumpserver-weiyan"
        Key: "Name"
      InstanceInitiatedShutdownBehavior: "stop"
      CpuOptions:
        ThreadsPerCore: 1
        CoreCount: 4
      AvailabilityZone: "ap-southeast-1b"
      PrivateDnsNameOptions:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      SecurityGroupIds:
      - "sg-07fd500f946aad8a2"
      - "sg-0158898f4b43a0ae9"
      DisableApiTermination: false
      KeyName: "build-img-keypair"
      SourceDestCheck: true
      PlacementGroupName: ""
      VpcId: "vpc-02790342fee4ebf9f"
      State:
        Code: "80"
        Name: "stopped"
      CreditSpecification:
        CPUCredits: "standard"
  S3Bucket00sgprodgenaiserveraccesslogging00Jtda7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::S3::Bucket"
    DeletionPolicy: "Retain"
    Properties:
      PublicAccessBlockConfiguration:
        RestrictPublicBuckets: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        BlockPublicAcls: true
      BucketName: "sg-prod-genai-serveraccesslogging"
      OwnershipControls:
        Rules:
        - ObjectOwnership: "BucketOwnerEnforced"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - BucketKeyEnabled: true
          ServerSideEncryptionByDefault:
            SSEAlgorithm: "AES256"
      Tags:
      - Value: "Server Access Logging"
        Key: "Name"
      LoggingConfiguration:
        TargetObjectKeyFormat:
          SimplePrefix: {}
        DestinationBucketName: "sg-prod-genai-serveraccesslogging"
        LogFilePrefix: ""
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole04081705cf014c5db7e5e1e7b71f1cae00bLaRJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-04081705-cf01-4c5d-b7e5-e1e7b71f1cae"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/test-websocketConnect:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00testwebsocketConnectrole9054j2c100TOgmE"
      Users: []
  EC2NetworkInterface00eni0274b5b1972f1edc300mimf4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "VPC Endpoint Interface vpce-0eaba5802efe6e784"
      PrivateIpAddress: "10.25.71.221"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.221"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-075615342aa3e28b9"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
      SourceDestCheck: true
      InterfaceType: "vpc_endpoint"
      Tags: []
  EC2VolumeAttachment00vol0057ef600adf6805f00QQC5O:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VolumeAttachment"
    DeletionPolicy: "Retain"
    Properties:
      InstanceId: "i-0332276dc3494333e"
      VolumeId: "vol-0057ef600adf6805f"
      Device: "/dev/xvda"
  EC2NetworkInterfaceAttachment00eniattach09ae7952aca72f3f700x397L:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0be64425943c3dfed"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2SubnetRouteTableAssociation00rtbassoc0fb2b1576c3c1169600RaJuC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    DeletionPolicy: "Retain"
    Properties:
      RouteTableId:
        Ref: "EC2RouteTable00rtb036e82d67b2ea04ea0037JXh"
      SubnetId:
        Ref: "EC2Subnet00subnet060714d7ed3b1128b00T1t2O"
  EC2NetworkInterface00eni07a0fb58a82aaa1d200Ov3Lz:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "VPC Endpoint Interface vpce-05918385aabf34a2e"
      PrivateIpAddress: "10.25.71.205"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.205"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-0ef00776c538db142"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
      SourceDestCheck: true
      InterfaceType: "vpc_endpoint"
      Tags: []
  EC2Route00rtb0272f811966d349e50099iVd:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Route"
    DeletionPolicy: "Retain"
    Properties:
      TransitGatewayId:
        Ref: "EC2TransitGateway00tgw052b76048cb5c20c000VNzWV"
      RouteTableId:
        Ref: "EC2RouteTable00rtb0272f811966d349e500R5SCh"
      DestinationCidrBlock: "0.0.0.0/0"
  S3Bucket00sggenaiaccesslog001Roh7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::S3::Bucket"
    DeletionPolicy: "Retain"
    Properties:
      PublicAccessBlockConfiguration:
        RestrictPublicBuckets: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        BlockPublicAcls: true
      BucketName: "sg-genai-accesslog"
      OwnershipControls:
        Rules:
        - ObjectOwnership: "BucketOwnerEnforced"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - BucketKeyEnabled: true
          ServerSideEncryptionByDefault:
            SSEAlgorithm: "AES256"
      Tags:
      - Value: "genai access log"
        Key: "Name"
      LoggingConfiguration:
        TargetObjectKeyFormat:
          SimplePrefix: {}
        DestinationBucketName:
          Ref: "S3Bucket00sgprodgenaiserveraccesslogging00Jtda7"
        LogFilePrefix: ""
  EC2SecurityGroup00sg03d66fb80efac83a500jFmjY:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "All configurations for lambda especially outbound internet"
      GroupName: "lambda-func-security-group"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      SecurityGroupIngress:
      - IpProtocol: "-1"
        FromPort: -1
        SourceSecurityGroupId: "sg-02a57c92533299fd5"
        ToPort: -1
        SourceSecurityGroupOwnerId: "343218203122"
      SecurityGroupEgress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
  EC2SecurityGroup00sg0015158c72d369b5100qzoxC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "Security group attached to sg-prod-genai-courtcasesdb-216-v1\
        \ to allow EC2 instances with specific security groups attached to connect\
        \ to the database. Modification could lead to connection loss."
      GroupName: "docdb-ec2-sg-prod-genai-courtcasesdb-216-v1:i-03f8874d8826997dc"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      SecurityGroupIngress:
      - IpProtocol: "tcp"
        FromPort: 27017
        SourceSecurityGroupId: "sg-0f3201c1695e4b6cd"
        ToPort: 27017
        SourceSecurityGroupOwnerId: "343218203122"
  EC2NetworkInterfaceAttachment00elaattach0c24e5af7497c5c1900GzHhR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0101a0a742e119f49"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2NetworkInterface00eni0c038a3d04e1b0718003ERAV:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "VPC Endpoint Interface vpce-0b989238df5acf8e1"
      PrivateIpAddress: "10.25.71.176"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.176"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-075615342aa3e28b9"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      SourceDestCheck: true
      InterfaceType: "vpc_endpoint"
      Tags: []
  EC2SecurityGroup00sg0ef00776c538db14200Lv7u9:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "For connection to managed instances Private endpoints"
      GroupName: "GenAI-Pilot-Private-Internal-to-VPC"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      SecurityGroupIngress:
      - CidrIp:
          Fn::GetAtt:
          - "EC2VPC00vpc02790342fee4ebf9f00YtCms"
          - "CidrBlock"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
      SecurityGroupEgress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
  EventsRule00ruleDONOTDELETEAmazonInspectorLambdaCodeManagedRule00BhrqQ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Events::Rule"
    DeletionPolicy: "Retain"
    Properties:
      EventBusName:
        Ref: "EventsEventBus00default002gd2v"
      EventPattern:
        detail-type:
        - "Scan Successful"
        - "Scan In Progress"
        - "Scan Failed"
        source:
        - "aws.codeguru-security"
        detail:
          resourceId:
            lambda:
              functionName:
              - exists: true
              codeSha256:
              - exists: true
      Description: "Managed rule used to route Lambda Code Change Events to Inspector"
      State: "ENABLED"
      Targets:
      - Arn: "arn:aws:inspector2:ap-southeast-1:::"
        Id: "InspectorTarget"
      Id: "DO-NOT-DELETE-AmazonInspectorLambdaCodeManagedRule"
      Name: "DO-NOT-DELETE-AmazonInspectorLambdaCodeManagedRule"
  EC2DHCPOptions00dopt04b52e307ae8973a2004Pj9R:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::DHCPOptions"
    DeletionPolicy: "Retain"
    Properties:
      DomainName: "ap-southeast-1.compute.internal"
      DomainNameServers:
      - "AmazonProvidedDNS"
      Tags: []
  EC2NetworkInterface00eni0ff444c3a25c75674002rkXQ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "VPC Endpoint Interface vpce-02d8a2532923f5a37"
      PrivateIpAddress: "10.25.71.71"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.71"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-02d1755cab861734f"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet060714d7ed3b1128b00T1t2O"
      SourceDestCheck: true
      InterfaceType: "vpc_endpoint"
      Tags: []
  EC2NetworkInterface00eni0ba6d615c9e6e38ea00mI6Hn:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "VPC Endpoint Interface vpce-07f234231dd3592f4"
      PrivateIpAddress: "10.25.71.181"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.181"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-075615342aa3e28b9"
      - "sg-0bb8d1d9641e826f4"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      SourceDestCheck: true
      InterfaceType: "vpc_endpoint"
      Tags: []
  EC2NetworkInterfaceAttachment00elaattach06ebf718301132bdf00QxqT8:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0fac682d984f084eb"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2NetworkInterface00eni07dd16b1642a516bf00ODSFp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "VPC Endpoint Interface vpce-0bd7143d5af1bcbf8"
      PrivateIpAddress: "10.25.71.168"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.168"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-0ef00776c538db142"
      - "sg-03d66fb80efac83a5"
      - "sg-02a57c92533299fd5"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      SourceDestCheck: true
      InterfaceType: "vpc_endpoint"
      Tags: []
  EC2NetworkInterfaceAttachment00elaattach04cbe8fca174c919900Som1f:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-01c4e7986c13e3225"
      DeviceIndex: "1"
      DeleteOnTermination: false
  ECSTaskDefinition00taskdefinitiongenaipilot2000YCdcp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::TaskDefinition"
    DeletionPolicy: "Retain"
    Properties:
      TaskRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      InferenceAccelerators: []
      Memory: "3072"
      PlacementConstraints: []
      Cpu: "1024"
      RequiresCompatibilities:
      - "FARGATE"
      NetworkMode: "awsvpc"
      EnableFaultInjection: false
      ExecutionRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      RuntimePlatform:
        OperatingSystemFamily: "LINUX"
        CpuArchitecture: "X86_64"
      Volumes: []
      ContainerDefinitions:
      - Secrets: []
        Memory: 3072
        VolumesFrom: []
        Cpu: 1024
        EntryPoint: []
        DnsServers: []
        Image: "343218203122.dkr.ecr.ap-southeast-1.amazonaws.com/genai-ecr:DockerImage-Redhat-Webapp-NodeJS-Latest"
        Essential: true
        LogConfiguration:
          SecretOptions: []
          Options:
            awslogs-group: "/ecs/genaipilot"
            awslogs-create-group: "true"
            awslogs-region: "ap-southeast-1"
            awslogs-stream-prefix: "ecs"
          LogDriver: "awslogs"
        ResourceRequirements: []
        EnvironmentFiles: []
        Name: "genaifrontend"
        DockerSecurityOptions: []
        SystemControls: []
        DnsSearchDomains: []
        CredentialSpecs: []
        Ulimits: []
        ExtraHosts: []
        MountPoints: []
        DependsOn: []
        DockerLabels: {}
        PortMappings:
        - ContainerPort: 8080
          AppProtocol: "http"
          Protocol: "tcp"
          HostPort: 8080
          Name: "genaifrontend-80-tcp"
        Command: []
        Environment: []
        Links: []
      Family: "genaipilot"
      Tags: []
  EC2NetworkInterfaceAttachment00eniattach07197c5501aa5eb6500oueBC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-01108417634392849"
      DeviceIndex: "1"
      DeleteOnTermination: false
  IAMRole00TOBEDELETEDtestfunctionsqsrolexqi663q10032Oxs:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-010b2536-c268-4ce0-be03-5f9d7ab9c14e"
      - "arn:aws:iam::aws:policy/AmazonSQSFullAccess"
      - "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess"
      - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
      - "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
      - "arn:aws:iam::aws:policy/AdministratorAccess"
      MaxSessionDuration: 3600
      RoleName: "TO_BE_DELETED-test_function_sqs-role-xqi663q1"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  EC2NetworkInterface00eni0ca7abd2d5b8b421400WoyMV:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "AWS Lambda VPC ENI-sg-prod-genai-rag-summariser-95887e05-faab-4ad3-a190-001dc9cc49f4"
      PrivateIpAddress: "10.25.71.197"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.197"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-075615342aa3e28b9"
      - "sg-03d66fb80efac83a5"
      - "sg-02d1755cab861734f"
      - "sg-02a57c92533299fd5"
      - "sg-00dd21ae4b1e23f22"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
      SourceDestCheck: true
      InterfaceType: "lambda"
      Tags: []
  EC2SecurityGroup00sg0b3fdb872f4244cab00HlKTH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "[DO NOT DELETE] Security Group that allows outbound NFS traffic\
        \ for SageMaker Notebooks Domain [d-elfzewpomisz]"
      GroupName: "security-group-for-outbound-nfs-d-elfzewpomisz"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      SecurityGroupEgress:
      - IpProtocol: "tcp"
        DestinationSecurityGroupId:
          Fn::GetAtt:
          - "EC2SecurityGroup00sg0f8a6a4ca99e624a500FsznX"
          - "GroupId"
        FromPort: 2049
        ToPort: 2049
      Tags:
      - Value: "arn:aws:sagemaker:ap-southeast-1:343218203122:domain/d-elfzewpomisz"
        Key: "ManagedByAmazonSageMakerResource"
  EC2SubnetRouteTableAssociation00rtbassoc07ced79467707c0c500wLOpq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    DeletionPolicy: "Retain"
    Properties:
      RouteTableId:
        Ref: "EC2RouteTable00rtb07a95c43e9fdd755c00a32xl"
      SubnetId:
        Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
  IAMManagedPolicy00policyserviceroleAWSLambdaVPCAccessExecutionRoledecc2e5a94834c849ccbc2f430f7f86d00x9KO1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaVPCAccessExecutionRole-decc2e5a-9483-4c84-9ccb-c2f430f7f86d"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "*"
          Action:
          - "ec2:CreateNetworkInterface"
          - "ec2:DeleteNetworkInterface"
          - "ec2:DescribeNetworkInterfaces"
          Effect: "Allow"
      Roles:
      - "sg-test-async-output-generator-role-0lwo40k1"
      Users: []
  EC2NetworkInterface00eni0157b804091e1912600iQZtD:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "AWS Lambda VPC ENI-sg-prod-genai-categoriser-1939bcb2-2105-4f35-9ca6-1032a5d29c3e"
      PrivateIpAddress: "10.25.71.174"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.174"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-075615342aa3e28b9"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      SourceDestCheck: true
      InterfaceType: "lambda"
      Tags: []
  EC2NetworkInterfaceAttachment00eniattach06ce143794fc0438000XOJ5u:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-037d41ab5199db37e"
      InstanceId: "i-0332276dc3494333e"
      DeviceIndex: "0"
      DeleteOnTermination: true
  EC2NetworkInterfaceAttachment00elaattach069a8085ac389728200YYBKB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0cf366ea0b3590ae8"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2SecurityGroup00sg0ce499337c440f4c500VVfHa:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "Security group attached to instances to securely connect\
        \ to sg-prod-genai-courtcasesdb-216-v1. Modification could lead to connection\
        \ loss."
      GroupName: "ec2-docdb-sg-prod-genai-courtcasesdb-216-v1:i-06fa70419b272af92"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      SecurityGroupEgress:
      - IpProtocol: "tcp"
        DestinationSecurityGroupId:
          Fn::GetAtt:
          - "EC2SecurityGroup00sg06dc6dabaa393db2b00jQbNg"
          - "GroupId"
        FromPort: 27017
        ToPort: 27017
  ElastiCacheUser00default00krI2i:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ElastiCache::User"
    DeletionPolicy: "Retain"
    Properties:
      UserName: "default"
      UserId: "default"
      Engine: "redis"
      Tags: []
  ECSTaskDefinition00taskdefinitiongenaipilot3400CNC47:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::TaskDefinition"
    DeletionPolicy: "Retain"
    Properties:
      TaskRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      InferenceAccelerators: []
      Memory: "3072"
      PlacementConstraints: []
      Cpu: "1024"
      RequiresCompatibilities:
      - "FARGATE"
      NetworkMode: "awsvpc"
      EnableFaultInjection: false
      ExecutionRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      RuntimePlatform:
        OperatingSystemFamily: "LINUX"
        CpuArchitecture: "X86_64"
      Volumes: []
      ContainerDefinitions:
      - Secrets: []
        Memory: 3072
        VolumesFrom: []
        Cpu: 1024
        EntryPoint: []
        DnsServers: []
        ReadonlyRootFilesystem: true
        Image: "343218203122.dkr.ecr.ap-southeast-1.amazonaws.com/genai-ecr:Prod-Frontend-Latest-V6"
        Essential: true
        LogConfiguration:
          SecretOptions: []
          Options:
            awslogs-group: "/ecs/genaipilot"
            awslogs-create-group: "true"
            awslogs-region: "ap-southeast-1"
            awslogs-stream-prefix: "ecs"
          LogDriver: "awslogs"
        ResourceRequirements: []
        EnvironmentFiles: []
        Name: "genaifrontend"
        DockerSecurityOptions: []
        SystemControls: []
        DnsSearchDomains: []
        CredentialSpecs: []
        Ulimits: []
        ExtraHosts: []
        MountPoints: []
        DependsOn: []
        DockerLabels: {}
        PortMappings:
        - ContainerPort: 8080
          AppProtocol: "http"
          Protocol: "tcp"
          HostPort: 8080
          Name: "genaifrontend-80-tcp"
        Command: []
        Environment: []
        Links: []
      Family: "genaipilot"
      Tags: []
  ECSTaskDefinition00taskdefinitiongenaipilot1800mdV7M:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::TaskDefinition"
    DeletionPolicy: "Retain"
    Properties:
      TaskRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      InferenceAccelerators: []
      Memory: "3072"
      PlacementConstraints: []
      Cpu: "1024"
      RequiresCompatibilities:
      - "FARGATE"
      NetworkMode: "awsvpc"
      EnableFaultInjection: false
      ExecutionRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      RuntimePlatform:
        OperatingSystemFamily: "LINUX"
        CpuArchitecture: "X86_64"
      Volumes: []
      ContainerDefinitions:
      - Secrets: []
        Memory: 3072
        VolumesFrom: []
        Cpu: 1024
        EntryPoint: []
        DnsServers: []
        Image: "343218203122.dkr.ecr.ap-southeast-1.amazonaws.com/genai-ecr:callback"
        Essential: true
        LogConfiguration:
          SecretOptions: []
          Options:
            awslogs-group: "/ecs/genaipilot"
            awslogs-create-group: "true"
            awslogs-region: "ap-southeast-1"
            awslogs-stream-prefix: "ecs"
          LogDriver: "awslogs"
        ResourceRequirements: []
        EnvironmentFiles: []
        Name: "genaifrontend"
        DockerSecurityOptions: []
        SystemControls: []
        DnsSearchDomains: []
        CredentialSpecs: []
        Ulimits: []
        ExtraHosts: []
        MountPoints: []
        DependsOn: []
        DockerLabels: {}
        PortMappings:
        - ContainerPort: 8080
          AppProtocol: "http"
          Protocol: "tcp"
          HostPort: 8080
          Name: "genaifrontend-80-tcp"
        Command: []
        Environment: []
        Links: []
      Family: "genaipilot"
      Tags: []
  EC2NetworkInterface00eni0b03d50b57749ef3e00Sznw7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "ELB app/GenAI-Pilot-Internal-ALB/a1f8a8ad2aaa94bb"
      PrivateIpAddress: "10.25.71.73"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.73"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-0fbe083eaa2bbd46c"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet060714d7ed3b1128b00T1t2O"
      SourceDestCheck: true
      InterfaceType: "interface"
      Tags: []
  IAMManagedPolicy00policytroubleshootelbpolicy00FBf95:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "troubleshoot-elb-policy"
      Path: "/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "*"
          Action:
          - "ec2:*"
          - "elasticloadbalancing:*"
          Effect: "Allow"
          Sid: "VisualEditor0"
      Roles:
      - "troubleshoot-elb-role"
      Users: []
  EC2SecurityGroup00sg0b08eb1fc654d9b9b003gQSd:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "Allow outbound query to On-prem"
      GroupName: "GenAI-Pilot-DNS_Resolver-SG"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      SecurityGroupIngress:
      - CidrIp: "10.25.16.0/24"
        IpProtocol: "tcp"
        Description: "Receive DNS query response"
        FromPort: 53
        ToPort: 53
      - CidrIp: "10.25.16.0/24"
        IpProtocol: "udp"
        Description: "Receive DNS query response"
        FromPort: 53
        ToPort: 53
      SecurityGroupEgress:
      - CidrIp: "10.25.16.0/24"
        IpProtocol: "tcp"
        Description: "Query from DNS outbound endpoint"
        FromPort: 53
        ToPort: 53
      - CidrIp: "10.25.16.0/24"
        IpProtocol: "udp"
        Description: "Query from DNS outbound endpoint"
        FromPort: 53
        ToPort: 53
      Tags:
      - Value: "DNS query on-prem"
        Key: "Use Case"
  EC2Volume00vol0ede911e6e7166a34003L4Fh:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Volume"
    DeletionPolicy: "Retain"
    Properties:
      MultiAttachEnabled: false
      SnapshotId: "snap-0f046e41753d61952"
      VolumeType: "gp3"
      Encrypted: false
      Size: 50
      AutoEnableIO: true
      AvailabilityZone: "ap-southeast-1c"
      Throughput: 125
      Iops: 3000
      Tags: []
  EC2NetworkInterfaceAttachment00elaattach02313570176fc0cd600f2LsK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0fe3b3221166496f2"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2NetworkInterface00eni01c4e7986c13e3225006Nk3l:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "AWS Lambda VPC ENI-DLQ-handler-sg-prod-genai-summariser-a6a55b5e-04bf-4baa-914c-5a8c50768073"
      PrivateIpAddress: "10.25.71.177"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.177"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-075615342aa3e28b9"
      - "sg-02d1755cab861734f"
      - "sg-00dd21ae4b1e23f22"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      SourceDestCheck: true
      InterfaceType: "lambda"
      Tags: []
  EC2Route00rtb036e82d67b2ea04ea009FCKV:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Route"
    DeletionPolicy: "Retain"
    Properties:
      RouteTableId:
        Ref: "EC2RouteTable00rtb036e82d67b2ea04ea0037JXh"
      DestinationCidrBlock:
        Fn::GetAtt:
        - "EC2VPC00vpc02790342fee4ebf9f00YtCms"
        - "CidrBlock"
      GatewayId: "local"
      VpcEndpointId: "local"
  EC2VPCEndpoint00vpce0db541c372e21216b00wYdtG:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VPCEndpoint"
    DeletionPolicy: "Retain"
    Properties:
      PrivateDnsEnabled: true
      IpAddressType: "ipv4"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      DnsOptions:
        PrivateDnsOnlyForInboundResolverEndpoint: "NotSpecified"
        DnsRecordIpType: "ipv4"
      RouteTableIds: []
      ServiceName: "com.amazonaws.ap-southeast-1.ssmmessages"
      PolicyDocument:
        Statement:
        - Resource: "*"
          Action: "*"
          Effect: "Allow"
          Principal: "*"
      VpcEndpointType: "Interface"
      ResourceConfigurationArn: ""
      SecurityGroupIds:
      - "sg-0ef00776c538db142"
      SubnetIds:
      - Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      - Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
      ServiceNetworkArn: ""
  EC2NetworkInterface00eni0136c68eabca8ebcf00kn9TM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "AWS Lambda VPC ENI-poc-websocket-sendMessageSQS-c88fd598-3e08-431e-9914-d8a32c06068a"
      PrivateIpAddress: "10.25.71.213"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.213"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-07fd500f946aad8a2"
      - "sg-07401c0c33946a241"
      - "sg-0158898f4b43a0ae9"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
      SourceDestCheck: true
      InterfaceType: "lambda"
      Tags: []
  EC2NetworkInterfaceAttachment00elaattach024360c5d9735012d00zARNt:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0350a81abd119d205"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2Route00rtb0a15cf959dd31167200Jv7sQ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Route"
    DeletionPolicy: "Retain"
    Properties:
      RouteTableId:
        Ref: "EC2RouteTable00rtb0a15cf959dd3116720074dZf"
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId:
        Ref: "EC2InternetGateway00igw0b271b841ab11150e00bc0Qi"
      VpcEndpointId: "igw-0b271b841ab11150e"
  EC2NetworkInterface00eni0b201d27c0387eee100qeyPK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "VPC Endpoint Interface vpce-08984f3f8624c01e1"
      PrivateIpAddress: "10.25.71.185"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.185"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-0a6c63d92a738a24c"
      - "sg-075615342aa3e28b9"
      - "sg-0158898f4b43a0ae9"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      SourceDestCheck: true
      InterfaceType: "vpc_endpoint"
      Tags: []
  EC2NetworkInterfaceAttachment00elaattach068f30db5d09fd2f600tBvhj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0a34e15b9b56fa561"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2Volume00vol0d2d00400caa3edc900INJxo:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Volume"
    DeletionPolicy: "Retain"
    Properties:
      MultiAttachEnabled: false
      SnapshotId: "snap-0903637be2b2f49b4"
      VolumeType: "gp3"
      Encrypted: false
      Size: 10
      AutoEnableIO: true
      AvailabilityZone: "ap-southeast-1b"
      Throughput: 125
      Iops: 3000
      Tags: []
  EC2SecurityGroup00sg00d8f631552cd9eb600DNIpl:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "BNM Whitelisting IP listing"
      GroupName: "ALB-BNM-whitelist"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      SecurityGroupIngress:
      - CidrIp: "161.69.119.0/24"
        IpProtocol: "-1"
        Description: "CASB"
        FromPort: -1
        ToPort: -1
      - CidrIp: "203.115.236.0/24"
        IpProtocol: "-1"
        Description: "PUAM"
        FromPort: -1
        ToPort: -1
      - CidrIp: "211.25.63.0/24"
        IpProtocol: "-1"
        Description: "BNM TTDC"
        FromPort: -1
        ToPort: -1
      SecurityGroupEgress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
  EC2Instance00i056aa8a8a3a7d744000HYDDG:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Instance"
    DeletionPolicy: "Retain"
    Properties:
      Tenancy: "default"
      SecurityGroups:
      - "GenAI-Pilot-Private-Tmicro-to-App"
      - "GenAI-Pilot-Private-Cvpn-to-App"
      PrivateIpAddress: "10.25.71.183"
      BlockDeviceMappings:
      - Ebs:
          SnapshotId: "snap-06269d3b382c49703"
          VolumeType: "gp3"
          KmsKeyId:
            Fn::GetAtt:
            - "KMSKey00e0af6c3f73fc497e863a6754f0dce6b1003YkeT"
            - "Arn"
          Encrypted: true
          Iops: 3000
          VolumeSize: 10
          DeleteOnTermination: true
        DeviceName: "/dev/sda1"
      IamInstanceProfile:
        Ref: "IAMInstanceProfile00ec2adminaccess00YQdI9"
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      EbsOptimized: true
      Volumes:
      - VolumeId: "vol-025bc069a9af78b0f"
        Device: "/dev/sda1"
      NetworkInterfaces:
      - PrivateIpAddresses:
        - PrivateIpAddress: "10.25.71.183"
          Primary: true
        SecondaryPrivateIpAddressCount: 0
        DeviceIndex: "0"
        GroupSet:
        - Ref: "EC2SecurityGroup00sg07fd500f946aad8a200ZP1Hf"
        - Ref: "EC2SecurityGroup00sg0158898f4b43a0ae900gUN5N"
        Ipv6Addresses: []
        SubnetId:
          Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
        AssociatePublicIpAddress: false
        NetworkInterfaceId:
          Ref: "EC2NetworkInterface00eni03fe0ac31fc735c3100Zf8wi"
        DeleteOnTermination: true
      ImageId: "ami-04b8810eb11008260"
      InstanceType: "t3.xlarge"
      Monitoring: false
      Tags:
      - Value: "ec2-jumpserver-jiahueic"
        Key: "Name"
      InstanceInitiatedShutdownBehavior: "stop"
      CpuOptions:
        ThreadsPerCore: 2
        CoreCount: 2
      AvailabilityZone: "ap-southeast-1b"
      PrivateDnsNameOptions:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      SecurityGroupIds:
      - "sg-07fd500f946aad8a2"
      - "sg-0158898f4b43a0ae9"
      DisableApiTermination: false
      KeyName: "jiahueic-key"
      SourceDestCheck: true
      PlacementGroupName: ""
      VpcId: "vpc-02790342fee4ebf9f"
      State:
        Code: "80"
        Name: "stopped"
      CreditSpecification:
        CPUCredits: "unlimited"
  EC2NetworkInterface00eni00250e1c3f579834d00Ixk1Y:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "RDSNetworkInterface"
      PrivateIpAddress: "10.25.71.122"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.122"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-075615342aa3e28b9"
      - "sg-02a57c92533299fd5"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet0d68b865e8a7e3cc0002GF7k"
      SourceDestCheck: true
      InterfaceType: "interface"
      Tags: []
  EC2VPCEndpoint00vpce08984f3f8624c01e100LKg10:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VPCEndpoint"
    DeletionPolicy: "Retain"
    Properties:
      PrivateDnsEnabled: true
      IpAddressType: "ipv4"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      DnsOptions:
        PrivateDnsOnlyForInboundResolverEndpoint: "NotSpecified"
        DnsRecordIpType: "ipv4"
      RouteTableIds: []
      ServiceName: "com.amazonaws.ap-southeast-1.execute-api"
      PolicyDocument:
        Statement:
        - Resource: "*"
          Action: "*"
          Effect: "Allow"
          Principal: "*"
      VpcEndpointType: "Interface"
      ResourceConfigurationArn: ""
      SecurityGroupIds:
      - "sg-075615342aa3e28b9"
      - "sg-0a6c63d92a738a24c"
      - "sg-0158898f4b43a0ae9"
      SubnetIds:
      - Ref: "EC2Subnet00subnet060714d7ed3b1128b00T1t2O"
      - Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      ServiceNetworkArn: ""
  ECSTaskDefinition00taskdefinitiongenaipilot1000i6gIp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::TaskDefinition"
    DeletionPolicy: "Retain"
    Properties:
      TaskRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      InferenceAccelerators: []
      Memory: "3072"
      PlacementConstraints: []
      Cpu: "1024"
      RequiresCompatibilities:
      - "FARGATE"
      NetworkMode: "awsvpc"
      EnableFaultInjection: false
      ExecutionRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      RuntimePlatform:
        OperatingSystemFamily: "LINUX"
        CpuArchitecture: "X86_64"
      Volumes: []
      ContainerDefinitions:
      - Secrets: []
        Memory: 3072
        VolumesFrom: []
        Cpu: 1024
        EntryPoint: []
        DnsServers: []
        Image: "343218203122.dkr.ecr.ap-southeast-1.amazonaws.com/genai-ecr:webapp-latest-v3"
        Essential: true
        LogConfiguration:
          SecretOptions: []
          Options:
            awslogs-group: "/ecs/genaipilot"
            awslogs-create-group: "true"
            awslogs-region: "ap-southeast-1"
            awslogs-stream-prefix: "ecs"
          LogDriver: "awslogs"
        ResourceRequirements: []
        EnvironmentFiles: []
        Name: "genaifrontend"
        DockerSecurityOptions: []
        SystemControls: []
        DnsSearchDomains: []
        CredentialSpecs: []
        Ulimits: []
        ExtraHosts: []
        MountPoints: []
        DependsOn: []
        DockerLabels: {}
        PortMappings:
        - ContainerPort: 8080
          AppProtocol: "http"
          Protocol: "tcp"
          HostPort: 8080
          Name: "genaifrontend-80-tcp"
        Command: []
        Environment: []
        Links: []
      Family: "genaipilot"
      Tags: []
  EC2NetworkInterface00eni07f4d77c21904f2f700H0YAs:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "VPC Endpoint Interface vpce-0ae2c7083956f432e"
      PrivateIpAddress: "10.25.71.167"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.167"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-075615342aa3e28b9"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      SourceDestCheck: true
      InterfaceType: "vpc_endpoint"
      Tags: []
  EC2SubnetNetworkAclAssociation00aclassoc0667c0e134e0e2d2b00PIDOz:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    DeletionPolicy: "Retain"
    Properties:
      NetworkAclId:
        Ref: "EC2NetworkAcl00acl0612aef300c98d4f400YxiZL"
      SubnetId:
        Ref: "EC2Subnet00subnet0d68b865e8a7e3cc0002GF7k"
  EC2VPCEndpoint00vpce0279b53fbb66caba2003MmNb:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VPCEndpoint"
    DeletionPolicy: "Retain"
    Properties:
      PrivateDnsEnabled: false
      IpAddressType: "ipv4"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      DnsOptions:
        PrivateDnsOnlyForInboundResolverEndpoint: "NotSpecified"
        DnsRecordIpType: "ipv4"
      RouteTableIds: []
      ServiceName: "com.amazonaws.ap-southeast-1.s3"
      PolicyDocument:
        Statement:
        - Resource:
          - "arn:aws:s3:::prod-ap-southeast-1-starport-layer-bucket/*"
          Action:
          - "s3:GetObject"
          Effect: "Allow"
          Principal: "*"
          Sid: "Access-to-specific-bucket-only"
      VpcEndpointType: "Interface"
      ResourceConfigurationArn: ""
      SecurityGroupIds:
      - "sg-075615342aa3e28b9"
      - "sg-02d1755cab861734f"
      SubnetIds:
      - Ref: "EC2Subnet00subnet060714d7ed3b1128b00T1t2O"
      - Ref: "EC2Subnet00subnet040ea0b30fd89092a00dTOsl"
      ServiceNetworkArn: ""
  EC2RouteTable00rtb07a95c43e9fdd755c00a32xl:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::RouteTable"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      Tags:
      - Value: "GenAI-Pilot-rtb-private-Application"
        Key: "Name"
  EC2NetworkInterfaceAttachment00elaattach07b45f76ea3307dff00zlbiK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0763c30bed1df264e"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2NetworkInterface00eni00eac7703d746cb3500cXxCa:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "ELB app/GenAI-Pilot-Internal-ALB/a1f8a8ad2aaa94bb"
      PrivateIpAddress: "10.25.71.55"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.55"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-0fbe083eaa2bbd46c"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet040ea0b30fd89092a00dTOsl"
      SourceDestCheck: true
      InterfaceType: "interface"
      Tags: []
  EC2NetworkInterface00eni0763c30bed1df264e00BNHqx:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "VPC Endpoint Interface vpce-0db541c372e21216b"
      PrivateIpAddress: "10.25.71.215"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.215"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-0ef00776c538db142"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
      SourceDestCheck: true
      InterfaceType: "vpc_endpoint"
      Tags: []
  EMRServerlessApplication0000flqtrnjdheti2500KdZWe:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EMRServerless::Application"
    DeletionPolicy: "Retain"
    Properties:
      AutoStartConfiguration:
        Enabled: true
      Type: "Spark"
      Architecture: "X86_64"
      WorkerTypeSpecifications: {}
      InitialCapacity: []
      ImageConfiguration:
        ImageUri: "119527597002.dkr.ecr.ap-southeast-1.amazonaws.com/sagemaker-data-wrangler-emr-container:5.0.3"
      MonitoringConfiguration:
        ManagedPersistenceMonitoringConfiguration:
          Enabled: true
        CloudWatchLoggingConfiguration:
          Enabled: false
          LogTypeMap: []
      AutoStopConfiguration:
        Enabled: true
        IdleTimeoutMinutes: 5
      ReleaseLabel: "emr-6.15.0"
      RuntimeConfiguration: []
      Tags:
      - Value: "True"
        Key: "sagemaker:is-canvas-resource"
      Name: "sm-canvas-data-wrangler-emr-app-GenAI-user"
  EC2RouteTable00rtb0a15cf959dd3116720074dZf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::RouteTable"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      Tags:
      - Value: "GenAI-Pilot-rtb-public-ap-southeast-1b"
        Key: "Name"
  EC2NetworkInterface00eni0cd92354a0adaf20d00iKVsB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "VPC Endpoint Interface vpce-0d8fc93334fc81a80"
      PrivateIpAddress: "10.25.71.211"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.211"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-0ef00776c538db142"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
      SourceDestCheck: true
      InterfaceType: "vpc_endpoint"
      Tags: []
  EC2SubnetNetworkAclAssociation00aclassoc03f01d528f95aeea700DhadC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    DeletionPolicy: "Retain"
    Properties:
      NetworkAclId:
        Ref: "EC2NetworkAcl00acl02223366315f41b3800EucVg"
      SubnetId:
        Ref: "EC2Subnet00subnet02b8e59fe96020ae100KicDu"
  ECSTaskDefinition00taskdefinitiongenaipilot2800neifH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::TaskDefinition"
    DeletionPolicy: "Retain"
    Properties:
      TaskRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      InferenceAccelerators: []
      Memory: "3072"
      PlacementConstraints: []
      Cpu: "1024"
      RequiresCompatibilities:
      - "FARGATE"
      NetworkMode: "awsvpc"
      EnableFaultInjection: false
      ExecutionRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      RuntimePlatform:
        OperatingSystemFamily: "LINUX"
        CpuArchitecture: "X86_64"
      Volumes: []
      ContainerDefinitions:
      - Secrets: []
        Memory: 3072
        VolumesFrom: []
        Cpu: 1024
        EntryPoint: []
        DnsServers: []
        ReadonlyRootFilesystem: true
        Image: "343218203122.dkr.ecr.ap-southeast-1.amazonaws.com/genai-ecr:Prod-Frontend-Latest-V2"
        Essential: true
        LogConfiguration:
          SecretOptions: []
          Options:
            awslogs-group: "/ecs/genaipilot"
            awslogs-create-group: "true"
            awslogs-region: "ap-southeast-1"
            awslogs-stream-prefix: "ecs"
          LogDriver: "awslogs"
        ResourceRequirements: []
        EnvironmentFiles: []
        Name: "genaifrontend"
        DockerSecurityOptions: []
        SystemControls: []
        DnsSearchDomains: []
        CredentialSpecs: []
        Ulimits: []
        ExtraHosts: []
        MountPoints: []
        DependsOn: []
        DockerLabels: {}
        PortMappings:
        - ContainerPort: 8080
          AppProtocol: "http"
          Protocol: "tcp"
          HostPort: 8080
          Name: "genaifrontend-80-tcp"
        Command: []
        Environment: []
        Links: []
      Family: "genaipilot"
      Tags: []
  EC2RouteTable00rtb030713ec66e66a37700hAtjG:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::RouteTable"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc0182b4cdff5ae990b00WzWIq"
      Tags:
      - Value: "DO NOT USE"
        Key: "Name"
  ECSTaskDefinition00taskdefinitiongenaipilot9003ftLc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::TaskDefinition"
    DeletionPolicy: "Retain"
    Properties:
      TaskRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      InferenceAccelerators: []
      Memory: "3072"
      PlacementConstraints: []
      Cpu: "1024"
      RequiresCompatibilities:
      - "FARGATE"
      NetworkMode: "awsvpc"
      EnableFaultInjection: false
      ExecutionRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      RuntimePlatform:
        OperatingSystemFamily: "LINUX"
        CpuArchitecture: "X86_64"
      Volumes: []
      ContainerDefinitions:
      - Secrets: []
        Memory: 3072
        VolumesFrom: []
        Cpu: 1024
        EntryPoint: []
        DnsServers: []
        Image: "343218203122.dkr.ecr.ap-southeast-1.amazonaws.com/genai-ecr:webapp-latest-v2"
        Essential: true
        LogConfiguration:
          SecretOptions: []
          Options:
            awslogs-group: "/ecs/genaipilot"
            awslogs-create-group: "true"
            awslogs-region: "ap-southeast-1"
            awslogs-stream-prefix: "ecs"
          LogDriver: "awslogs"
        ResourceRequirements: []
        EnvironmentFiles: []
        Name: "genaifrontend"
        DockerSecurityOptions: []
        SystemControls: []
        DnsSearchDomains: []
        CredentialSpecs: []
        Ulimits: []
        ExtraHosts: []
        MountPoints: []
        DependsOn: []
        DockerLabels: {}
        PortMappings:
        - ContainerPort: 8080
          AppProtocol: "http"
          Protocol: "tcp"
          HostPort: 8080
          Name: "genaifrontend-80-tcp"
        Command: []
        Environment: []
        Links: []
      Family: "genaipilot"
      Tags: []
  EC2NetworkInterface00eni0307d7afd49e38cac00l1BQk:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "VPC Endpoint Interface vpce-0ae2c7083956f432e"
      PrivateIpAddress: "10.25.71.217"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.217"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-075615342aa3e28b9"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
      SourceDestCheck: true
      InterfaceType: "vpc_endpoint"
      Tags: []
  EC2NetworkInterface00eni0101a0a742e119f4900MkshR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "VPC Endpoint Interface vpce-0eaba5802efe6e784"
      PrivateIpAddress: "10.25.71.178"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.178"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-075615342aa3e28b9"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      SourceDestCheck: true
      InterfaceType: "vpc_endpoint"
      Tags: []
  EC2Volume00vol0107ba962d2a3a96500Ax8Cl:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Volume"
    DeletionPolicy: "Retain"
    Properties:
      MultiAttachEnabled: false
      SnapshotId: "snap-083334dfef8e3d924"
      VolumeType: "gp3"
      KmsKeyId: "arn:aws:kms:ap-southeast-1:343218203122:key/e0af6c3f-73fc-497e-863a-6754f0dce6b1"
      Encrypted: true
      Size: 100
      AutoEnableIO: false
      AvailabilityZone: "ap-southeast-1b"
      Throughput: 125
      Iops: 3000
      Tags:
      - Value: "yenmay-jumpserver-EBS"
        Key: "Name"
  EC2NetworkInterfaceAttachment00elaattach0c602d6f66101f54c00hqG0l:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-04ad4cad81ecb049b"
      DeviceIndex: "1"
      DeleteOnTermination: false
  ECSTaskDefinition00taskdefinitiongenaipilot2600pukqi:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::TaskDefinition"
    DeletionPolicy: "Retain"
    Properties:
      TaskRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      InferenceAccelerators: []
      Memory: "3072"
      PlacementConstraints: []
      Cpu: "1024"
      RequiresCompatibilities:
      - "FARGATE"
      NetworkMode: "awsvpc"
      EnableFaultInjection: false
      ExecutionRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      RuntimePlatform:
        OperatingSystemFamily: "LINUX"
        CpuArchitecture: "X86_64"
      Volumes: []
      ContainerDefinitions:
      - Secrets: []
        Memory: 3072
        VolumesFrom: []
        Cpu: 1024
        EntryPoint: []
        DnsServers: []
        ReadonlyRootFilesystem: true
        Image: "343218203122.dkr.ecr.ap-southeast-1.amazonaws.com/genai-ecr:Prod-Frontend-Latest"
        Essential: true
        LogConfiguration:
          SecretOptions: []
          Options:
            awslogs-group: "/ecs/genaipilot"
            awslogs-create-group: "true"
            awslogs-region: "ap-southeast-1"
            awslogs-stream-prefix: "ecs"
          LogDriver: "awslogs"
        ResourceRequirements: []
        EnvironmentFiles: []
        Name: "genaifrontend"
        DockerSecurityOptions: []
        SystemControls: []
        DnsSearchDomains: []
        CredentialSpecs: []
        Ulimits: []
        ExtraHosts: []
        MountPoints: []
        DependsOn: []
        DockerLabels: {}
        PortMappings:
        - ContainerPort: 8080
          AppProtocol: "http"
          Protocol: "tcp"
          HostPort: 8080
          Name: "genaifrontend-80-tcp"
        Command: []
        Environment: []
        Links: []
      Family: "genaipilot"
      Tags: []
  EC2NetworkInterface00eni05aa5fe94d3f9cb7b00xmvpj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "VPC Endpoint Interface vpce-051baa26464b8677b"
      PrivateIpAddress: "10.25.71.60"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.60"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-02d1755cab861734f"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet040ea0b30fd89092a00dTOsl"
      SourceDestCheck: true
      InterfaceType: "vpc_endpoint"
      Tags: []
  IAMManagedPolicy00policyserviceroleAWSLambdaVPCAccessExecutionRoleeb939dd910c5410e9399b506c4ad65bf00HSIxl:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaVPCAccessExecutionRole-eb939dd9-10c5-410e-9399-b506c4ad65bf"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "*"
          Action:
          - "ec2:CreateNetworkInterface"
          - "ec2:DeleteNetworkInterface"
          - "ec2:DescribeNetworkInterfaces"
          Effect: "Allow"
      Roles:
      - "sg-test-genai-summariser-retrievetofrontend-role-reppyiad"
      Users: []
  ECSTaskDefinition00taskdefinitiongenaipilot100t7FXc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::TaskDefinition"
    DeletionPolicy: "Retain"
    Properties:
      InferenceAccelerators: []
      Memory: "3072"
      PlacementConstraints: []
      Cpu: "1024"
      RequiresCompatibilities:
      - "FARGATE"
      NetworkMode: "awsvpc"
      EnableFaultInjection: false
      ExecutionRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      RuntimePlatform:
        OperatingSystemFamily: "LINUX"
        CpuArchitecture: "X86_64"
      Volumes: []
      ContainerDefinitions:
      - ExtraHosts: []
        Secrets: []
        VolumesFrom: []
        Cpu: 0
        EntryPoint: []
        DnsServers: []
        Image: "343218203122.dkr.ecr.ap-southeast-1.amazonaws.com/genai-ecr:latest"
        Essential: true
        LogConfiguration:
          SecretOptions: []
          Options:
            awslogs-group: "/ecs/genaipilot"
            awslogs-create-group: "true"
            awslogs-region: "ap-southeast-1"
            awslogs-stream-prefix: "ecs"
          LogDriver: "awslogs"
        ResourceRequirements: []
        EnvironmentFiles: []
        Name: "genaifrontend"
        MountPoints: []
        DependsOn: []
        DockerLabels: {}
        PortMappings:
        - ContainerPort: 80
          AppProtocol: "http"
          Protocol: "tcp"
          HostPort: 80
          Name: "genaifrontend-80-tcp"
        DockerSecurityOptions: []
        SystemControls: []
        Command: []
        DnsSearchDomains: []
        Environment: []
        Links: []
        CredentialSpecs: []
        Ulimits: []
      Family: "genaipilot"
      Tags: []
  EC2NetworkInterfaceAttachment00eniattach0d1429effffaa72c800tZyZ5:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-03917fbeaf5a2f79a"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2NetworkInterface00eni0c126820bbb0450ae000YoHW:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "VPC Endpoint Interface vpce-06069bea79007eb11"
      PrivateIpAddress: "10.25.71.186"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.186"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-0ef00776c538db142"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      SourceDestCheck: true
      InterfaceType: "vpc_endpoint"
      Tags: []
  ECSTaskDefinition00taskdefinitiongenaipilot1600fxkds:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::TaskDefinition"
    DeletionPolicy: "Retain"
    Properties:
      TaskRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      InferenceAccelerators: []
      Memory: "3072"
      PlacementConstraints: []
      Cpu: "1024"
      RequiresCompatibilities:
      - "FARGATE"
      NetworkMode: "awsvpc"
      EnableFaultInjection: false
      ExecutionRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      RuntimePlatform:
        OperatingSystemFamily: "LINUX"
        CpuArchitecture: "X86_64"
      Volumes: []
      ContainerDefinitions:
      - Secrets: []
        Memory: 3072
        VolumesFrom: []
        Cpu: 1024
        EntryPoint: []
        DnsServers: []
        Image: "343218203122.dkr.ecr.ap-southeast-1.amazonaws.com/genai-ecr:callback"
        Essential: true
        LogConfiguration:
          SecretOptions: []
          Options:
            awslogs-group: "/ecs/genaipilot"
            awslogs-create-group: "true"
            awslogs-region: "ap-southeast-1"
            awslogs-stream-prefix: "ecs"
          LogDriver: "awslogs"
        ResourceRequirements: []
        EnvironmentFiles: []
        Name: "genaifrontend"
        DockerSecurityOptions: []
        SystemControls: []
        DnsSearchDomains: []
        CredentialSpecs: []
        Ulimits: []
        ExtraHosts: []
        MountPoints: []
        DependsOn: []
        DockerLabels: {}
        PortMappings:
        - ContainerPort: 8080
          AppProtocol: "http"
          Protocol: "tcp"
          HostPort: 8080
          Name: "genaifrontend-80-tcp"
        Command: []
        Environment: []
        Links: []
      Family: "genaipilot"
      Tags: []
  EC2SecurityGroup00sg07401c0c33946a24100LzGmg:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "Allows access to websocket server hosted in EC2 through port\
        \ 8000"
      GroupName: "WebsocketServerSecurityGroup"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      SecurityGroupIngress:
      - CidrIp: "211.25.63.2/32"
        IpProtocol: "tcp"
        FromPort: 8000
        ToPort: 8000
      - CidrIp: "10.25.71.180/32"
        IpProtocol: "tcp"
        FromPort: 8000
        ToPort: 8000
      SecurityGroupEgress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
  EC2NetworkInterface00eni0350a81abd119d20500d5YKY:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "VPC Endpoint Interface vpce-02e99197c055622d1"
      PrivateIpAddress: "10.25.71.210"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.210"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-0ef00776c538db142"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
      SourceDestCheck: true
      InterfaceType: "vpc_endpoint"
      Tags: []
  EC2Subnet00subnet048794c64c2e4427a00kAh5w:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Subnet"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      MapPublicIpOnLaunch: false
      EnableDns64: false
      AvailabilityZoneId: "apse1-az2"
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      CidrBlock: "10.25.71.128/28"
      Ipv6Native: false
      Tags:
      - Value: "GenAI-Dev-Database-Private-1b"
        Key: "Name"
  EC2NetworkInterfaceAttachment00elaattach099213db538b13bab00G1Xnp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0f823989133be313c"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2NetworkInterface00eni0110841763439284900MaD9W:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "arn:aws:ecs:ap-southeast-1:343218203122:attachment/475c0c8d-fbc0-4fbc-b895-0d80c98cc0d1"
      PrivateIpAddress: "10.25.71.78"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.78"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-06010a299d4942ce2"
      - "sg-075615342aa3e28b9"
      - "sg-02d1755cab861734f"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet060714d7ed3b1128b00T1t2O"
      SourceDestCheck: true
      InterfaceType: "interface"
      Tags: []
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole8e7d1e7f07b949f4ac177be439adab5f00DGUyd:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-8e7d1e7f-07b9-49f4-ac17-7be439adab5f"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-test-genai-summariser-retrievetofrontend-ERROR:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - "sg-test-genai-summariser-retrievetofrontend-ERROR-role-4l4jw71p"
      Users: []
  ECSTaskDefinition00taskdefinitiongenaipilot3300VgdpN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::TaskDefinition"
    DeletionPolicy: "Retain"
    Properties:
      TaskRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      InferenceAccelerators: []
      Memory: "3072"
      PlacementConstraints: []
      Cpu: "1024"
      RequiresCompatibilities:
      - "FARGATE"
      NetworkMode: "awsvpc"
      EnableFaultInjection: false
      ExecutionRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      RuntimePlatform:
        OperatingSystemFamily: "LINUX"
        CpuArchitecture: "X86_64"
      Volumes: []
      ContainerDefinitions:
      - Secrets: []
        Memory: 3072
        VolumesFrom: []
        Cpu: 1024
        EntryPoint: []
        DnsServers: []
        ReadonlyRootFilesystem: true
        Image: "343218203122.dkr.ecr.ap-southeast-1.amazonaws.com/genai-ecr:Prod-Frontend-Latest-V5"
        Essential: true
        LogConfiguration:
          SecretOptions: []
          Options:
            awslogs-group: "/ecs/genaipilot"
            awslogs-create-group: "true"
            awslogs-region: "ap-southeast-1"
            awslogs-stream-prefix: "ecs"
          LogDriver: "awslogs"
        ResourceRequirements: []
        EnvironmentFiles: []
        Name: "genaifrontend"
        DockerSecurityOptions: []
        SystemControls: []
        DnsSearchDomains: []
        CredentialSpecs: []
        Ulimits: []
        ExtraHosts: []
        MountPoints: []
        DependsOn: []
        DockerLabels: {}
        PortMappings:
        - ContainerPort: 8080
          AppProtocol: "http"
          Protocol: "tcp"
          HostPort: 8080
          Name: "genaifrontend-80-tcp"
        Command: []
        Environment: []
        Links: []
      Family: "genaipilot"
      Tags: []
  LambdaVersion00functionsgprodgenairagsummariser40099SJj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Version"
    DeletionPolicy: "Retain"
    Properties:
      CodeSha256: "f1105cf03aa512494f9491b5a7675e2ee5e21b04d6b18e73bc638ee6fd8d424d"
      FunctionName:
        Ref: "LambdaFunction00sgprodgenairagsummariser00BDrwV"
      Description: ""
  EC2VPCEndpoint00vpce0b989238df5acf8e100Yfezs:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VPCEndpoint"
    DeletionPolicy: "Retain"
    Properties:
      PrivateDnsEnabled: true
      IpAddressType: "ipv4"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      DnsOptions:
        PrivateDnsOnlyForInboundResolverEndpoint: "NotSpecified"
        DnsRecordIpType: "ipv4"
      RouteTableIds: []
      ServiceName: "com.amazonaws.ap-southeast-1.sts"
      PolicyDocument:
        Statement:
        - Resource: "*"
          Action: "*"
          Effect: "Allow"
          Principal: "*"
      VpcEndpointType: "Interface"
      ResourceConfigurationArn: ""
      SecurityGroupIds:
      - "sg-075615342aa3e28b9"
      SubnetIds:
      - Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      - Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
      ServiceNetworkArn: ""
  EC2SecurityGroup00sg0bb8d1d9641e826f400gARYs:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "Security Group for Sagemaker Endpoint"
      GroupName: "Sagemaker-Endpoint-SG"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      SecurityGroupIngress:
      - CidrIp: "113.23.196.18/32"
        IpProtocol: "tcp"
        Description: "BNM Wifi"
        FromPort: 22
        ToPort: 22
      SecurityGroupEgress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
  EC2SecurityGroup00sg003b7e062102ab43800Jwkb0:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "[DO NOT DELETE] Security Group that allows inbound NFS traffic\
        \ for SageMaker Notebooks Domain [d-jvwdzisnv061]"
      GroupName: "security-group-for-inbound-nfs-d-jvwdzisnv061"
      VpcId:
        Ref: "EC2VPC00vpc0182b4cdff5ae990b00WzWIq"
      SecurityGroupIngress:
      - IpProtocol: "tcp"
        FromPort: 2049
        SourceSecurityGroupId: "sg-0e26af1625e40eb86"
        ToPort: 2049
        SourceSecurityGroupOwnerId: "343218203122"
      Tags:
      - Value: "arn:aws:sagemaker:ap-southeast-1:343218203122:domain/d-jvwdzisnv061"
        Key: "ManagedByAmazonSageMakerResource"
  ECSTaskDefinition00taskdefinitiongenaipilot2200r4eMF:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::TaskDefinition"
    DeletionPolicy: "Retain"
    Properties:
      TaskRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      InferenceAccelerators: []
      Memory: "3072"
      PlacementConstraints: []
      Cpu: "1024"
      RequiresCompatibilities:
      - "FARGATE"
      NetworkMode: "awsvpc"
      EnableFaultInjection: false
      ExecutionRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      RuntimePlatform:
        OperatingSystemFamily: "LINUX"
        CpuArchitecture: "X86_64"
      Volumes: []
      ContainerDefinitions:
      - Secrets: []
        Memory: 3072
        VolumesFrom: []
        Cpu: 1024
        EntryPoint: []
        DnsServers: []
        Image: "343218203122.dkr.ecr.ap-southeast-1.amazonaws.com/genai-ecr:DockerImage-Redhat-Webapp-NodeJS-Latest"
        Essential: true
        LogConfiguration:
          SecretOptions: []
          Options:
            awslogs-group: "/ecs/genaipilot"
            awslogs-create-group: "true"
            awslogs-region: "ap-southeast-1"
            awslogs-stream-prefix: "ecs"
          LogDriver: "awslogs"
        ResourceRequirements: []
        EnvironmentFiles: []
        Name: "genaifrontend"
        DockerSecurityOptions: []
        SystemControls: []
        DnsSearchDomains: []
        CredentialSpecs: []
        Ulimits: []
        ExtraHosts: []
        MountPoints: []
        DependsOn: []
        DockerLabels: {}
        PortMappings:
        - ContainerPort: 8080
          AppProtocol: "http"
          Protocol: "tcp"
          HostPort: 8080
          Name: "genaifrontend-80-tcp"
        Command: []
        Environment: []
        Links: []
      Family: "genaipilot"
      Tags: []
  ECSTaskDefinition00taskdefinitiongenaipilot3200AsXP2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::TaskDefinition"
    DeletionPolicy: "Retain"
    Properties:
      TaskRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      InferenceAccelerators: []
      Memory: "3072"
      PlacementConstraints: []
      Cpu: "1024"
      RequiresCompatibilities:
      - "FARGATE"
      NetworkMode: "awsvpc"
      EnableFaultInjection: false
      ExecutionRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      RuntimePlatform:
        OperatingSystemFamily: "LINUX"
        CpuArchitecture: "X86_64"
      Volumes: []
      ContainerDefinitions:
      - Secrets: []
        Memory: 3072
        VolumesFrom: []
        Cpu: 1024
        EntryPoint: []
        DnsServers: []
        ReadonlyRootFilesystem: true
        Image: "343218203122.dkr.ecr.ap-southeast-1.amazonaws.com/genai-ecr:PROD-FRONTEND-LATEST-V4"
        Essential: true
        LogConfiguration:
          SecretOptions: []
          Options:
            awslogs-group: "/ecs/genaipilot"
            awslogs-create-group: "true"
            awslogs-region: "ap-southeast-1"
            awslogs-stream-prefix: "ecs"
          LogDriver: "awslogs"
        ResourceRequirements: []
        EnvironmentFiles: []
        Name: "genaifrontend"
        DockerSecurityOptions: []
        SystemControls: []
        DnsSearchDomains: []
        CredentialSpecs: []
        Ulimits: []
        ExtraHosts: []
        MountPoints: []
        DependsOn: []
        DockerLabels: {}
        PortMappings:
        - ContainerPort: 8080
          AppProtocol: "http"
          Protocol: "tcp"
          HostPort: 8080
          Name: "genaifrontend-80-tcp"
        Command: []
        Environment: []
        Links: []
      Family: "genaipilot"
      Tags: []
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole4f40009a09c84abb82815578c7dcd31d00n3xHX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-4f40009a-09c8-4abb-8281-5578c7dcd31d"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-prod-genai-summariser-220-v1:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgprodgenaisummariser220v1roledhe171x700gl1mR"
      Users: []
  EC2NetworkInterface00eni037d41ab5199db37e00nxJcs:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: ""
      PrivateIpAddress: "10.25.71.29"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.29"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-07fd500f946aad8a2"
      - "sg-09b2b11bee0d39e7a"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet0e7c29cffbb72373f00bJwid"
      SourceDestCheck: true
      InterfaceType: "interface"
      Tags: []
  EC2Route00rtb0a15cf959dd311672009JB1k:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Route"
    DeletionPolicy: "Retain"
    Properties:
      RouteTableId:
        Ref: "EC2RouteTable00rtb0a15cf959dd3116720074dZf"
      DestinationCidrBlock:
        Fn::GetAtt:
        - "EC2VPC00vpc02790342fee4ebf9f00YtCms"
        - "CidrBlock"
      GatewayId: "local"
      VpcEndpointId: "local"
  IAMManagedPolicy00policyserviceroleAmazonEventBridgeSchedulerExecutionPolicy8abf97efc72643308353d2e7b096ece700BeILN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "Amazon-EventBridge-Scheduler-Execution-Policy-8abf97ef-c726-4330-8353-d2e7b096ece7"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource:
          - "arn:aws:lambda:ap-southeast-1:343218203122:function:StartEC2Instances:*"
          - "arn:aws:lambda:ap-southeast-1:343218203122:function:StartEC2Instances"
          Action:
          - "lambda:InvokeFunction"
          Effect: "Allow"
      Roles:
      - "Amazon_EventBridge_Scheduler_LAMBDA_51910dd796"
      Users: []
  EC2NetworkInsightsPath00nip0882f94ba9a7e49e200Wl6cB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInsightsPath"
    DeletionPolicy: "Retain"
    Properties:
      Destination: "vpce-0081c8ebf3c1f7fd5"
      Protocol: "tcp"
      FilterAtDestination:
        DestinationPortRange:
          ToPort: 443
          FromPort: 443
      Source: "i-0af21fb2531ca410d"
      Tags:
      - Value: "secrets-manager-debug"
        Key: "Name"
  ECRRepository00genaiecr00hTiyB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECR::Repository"
    DeletionPolicy: "Retain"
    Properties:
      ImageScanningConfiguration:
        ScanOnPush: false
      RepositoryName: "genai-ecr"
      EncryptionConfiguration:
        EncryptionType: "AES256"
      RepositoryPolicyText:
        Version: "2012-10-17"
        Statement:
        - Action:
          - "ecr:BatchGetImage"
          - "ecr:BatchCheckLayerAvailability"
          - "ecr:CompleteLayerUpload"
          - "ecr:GetDownloadUrlForLayer"
          - "ecr:InitiateLayerUpload"
          - "ecr:PutImage"
          - "ecr:UploadLayerPart"
          Effect: "Allow"
          Principal:
            AWS: "arn:aws:iam::343218203122:role/ecsTaskExecutionRole"
          Sid: "AllowPushPull"
      Tags: []
      ImageTagMutability: "IMMUTABLE"
  EC2NetworkInterface00eni01592f366fa5b378e00slqfI:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "AWS Lambda VPC ENI-sg-prod-genai-deleteobject-s3-32997a99-42b0-4993-8d71-236d2aeba632"
      PrivateIpAddress: "10.25.71.189"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.189"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-02c2f03d3e7cd125f"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      SourceDestCheck: true
      InterfaceType: "lambda"
      Tags: []
  EC2TransitGateway00tgw052b76048cb5c20c000VNzWV:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::TransitGateway"
    DeletionPolicy: "Retain"
    Properties:
      Description: ""
      AssociationDefaultRouteTableId: "tgw-rtb-05410d30fb80d380d"
      AutoAcceptSharedAttachments: "enable"
      DefaultRouteTablePropagation: "enable"
      TransitGatewayCidrBlocks: []
      PropagationDefaultRouteTableId: "tgw-rtb-05410d30fb80d380d"
      DefaultRouteTableAssociation: "enable"
      VpnEcmpSupport: "enable"
      SecurityGroupReferencingSupport: "disable"
      DnsSupport: "enable"
      MulticastSupport: "disable"
      AmazonSideAsn: 65011
      Tags:
      - Value: "sh-tgwhub-001"
        Key: "Name"
  EC2Volume00vol0f2365d819f90156100RGuc5:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Volume"
    DeletionPolicy: "Retain"
    Properties:
      MultiAttachEnabled: false
      SnapshotId: "snap-0aef1e4787ca1c85d"
      VolumeType: "gp3"
      KmsKeyId: "arn:aws:kms:ap-southeast-1:343218203122:key/e0af6c3f-73fc-497e-863a-6754f0dce6b1"
      Encrypted: true
      Size: 8
      AutoEnableIO: false
      AvailabilityZone: "ap-southeast-1b"
      Throughput: 125
      Iops: 3000
      Tags:
      - Value: "tapo-test-2 [encrypted]"
        Key: "name"
  EC2SecurityGroup00sg00dd21ae4b1e23f2200C0lAi:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "allows each resource in our pilot app to connect to each\
        \ other"
      GroupName: "GenAI-Pilot-all-resources"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      SecurityGroupIngress:
      - CidrIp: "10.25.71.0/32"
        IpProtocol: "-1"
        Description: "Allow inbound local"
        FromPort: -1
        ToPort: -1
      - IpProtocol: "-1"
        FromPort: -1
        SourceSecurityGroupId: "sg-00dd21ae4b1e23f22"
        ToPort: -1
        SourceSecurityGroupOwnerId: "343218203122"
      SecurityGroupEgress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
  EC2NetworkInterfaceAttachment00elaattach0592e0c015c89f57b00QBFgO:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-00ad0f5dea7abdd85"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2SecurityGroup00sg0cfe7a368624b4bfc00oaLQB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "[DO NOT DELETE] Security Group that allows outbound NFS traffic\
        \ for SageMaker Notebooks Domain [d-rggd9yk1a92u]"
      GroupName: "security-group-for-outbound-nfs-d-rggd9yk1a92u"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      SecurityGroupEgress:
      - IpProtocol: "tcp"
        DestinationSecurityGroupId:
          Fn::GetAtt:
          - "EC2SecurityGroup00sg079e452b3a301f966002Mqlj"
          - "GroupId"
        FromPort: 2049
        ToPort: 2049
      Tags:
      - Value: "arn:aws:sagemaker:ap-southeast-1:343218203122:domain/d-rggd9yk1a92u"
        Key: "ManagedByAmazonSageMakerResource"
  EC2NetworkInterfaceAttachment00elaattach0f9a1a4b6543db3e900JCyXx:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0dbe46f71ee55e00f"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2Route00rtb030713ec66e66a37700H27LT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Route"
    DeletionPolicy: "Retain"
    Properties:
      RouteTableId:
        Ref: "EC2RouteTable00rtb030713ec66e66a37700hAtjG"
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId:
        Ref: "EC2InternetGateway00igw06258a1d9641f4baa00iJNEi"
      VpcEndpointId: "igw-06258a1d9641f4baa"
  EC2NetworkInterfaceAttachment00elaattach0fee408fbbfa3243f007tTZw:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0cb94fdb98f85080f"
      DeviceIndex: "1"
      DeleteOnTermination: false
  SQSQueue00teststandardqueue00x2UX1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::SQS::Queue"
    DeletionPolicy: "Retain"
    Properties:
      SqsManagedSseEnabled: true
      ReceiveMessageWaitTimeSeconds: 0
      DelaySeconds: 0
      MessageRetentionPeriod: 86400
      MaximumMessageSize: 262144
      VisibilityTimeout: 20
      QueueName: "test_standard_queue"
  EC2RouteTable00rtb036e82d67b2ea04ea0037JXh:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::RouteTable"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      Tags:
      - Value: "GenAI-Pilot-rtb-private-ECSWebAppLB"
        Key: "Name"
  ECSTaskDefinition00taskdefinitiongenaipilot1200ACY2M:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::TaskDefinition"
    DeletionPolicy: "Retain"
    Properties:
      TaskRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      InferenceAccelerators: []
      Memory: "3072"
      PlacementConstraints: []
      Cpu: "1024"
      RequiresCompatibilities:
      - "FARGATE"
      NetworkMode: "awsvpc"
      EnableFaultInjection: false
      ExecutionRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      RuntimePlatform:
        OperatingSystemFamily: "LINUX"
        CpuArchitecture: "X86_64"
      Volumes: []
      ContainerDefinitions:
      - Secrets: []
        Memory: 3072
        VolumesFrom: []
        Cpu: 1024
        EntryPoint: []
        DnsServers: []
        Image: "343218203122.dkr.ecr.ap-southeast-1.amazonaws.com/genai-ecr:DockerImage-Redhat-Webapp-NodeJS-Latest"
        Essential: true
        LogConfiguration:
          SecretOptions: []
          Options:
            awslogs-group: "/ecs/genaipilot"
            awslogs-create-group: "true"
            awslogs-region: "ap-southeast-1"
            awslogs-stream-prefix: "ecs"
          LogDriver: "awslogs"
        ResourceRequirements: []
        EnvironmentFiles: []
        Name: "genaifrontend"
        DockerSecurityOptions: []
        SystemControls: []
        DnsSearchDomains: []
        CredentialSpecs: []
        Ulimits: []
        ExtraHosts: []
        MountPoints: []
        DependsOn: []
        DockerLabels: {}
        PortMappings:
        - ContainerPort: 8080
          AppProtocol: "http"
          Protocol: "tcp"
          HostPort: 8080
          Name: "genaifrontend-80-tcp"
        Command: []
        Environment: []
        Links: []
      Family: "genaipilot"
      Tags: []
  EC2Subnet00subnet03593bd789c587e3c00RCDbo:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Subnet"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      MapPublicIpOnLaunch: false
      EnableDns64: false
      AvailabilityZoneId: "apse1-az2"
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      CidrBlock: "10.25.71.0/28"
      Ipv6Native: false
      Tags:
      - Value: "GenAI-Dev-TGWAttach-Private-1b"
        Key: "Name"
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole5c881dad5b1a44c081417df98c414d0100FjjJY:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-5c881dad-5b1a-44c0-8141-7df98c414d01"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-prod-genai-summariser:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgprodgenaisummariserroleu702de5o00E2i94"
      Users: []
  EC2RouteTable00rtb0272f811966d349e500R5SCh:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::RouteTable"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      Tags:
      - Value: "GenAI-Pilot-rtb-private-TgwAttach"
        Key: "Name"
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRolec65e19754b1940dcbc64dcb9feb5da0500ee4N9:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-c65e1975-4b19-40dc-bc64-dcb9feb5da05"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-test-genai-summariser-deletechatfunction:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - "sg-test-genai-summariser-deletechatfunction-role-lle032db"
      Users: []
  EC2SubnetNetworkAclAssociation00aclassoc095e6dccd3dbaf33400rbRnk:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    DeletionPolicy: "Retain"
    Properties:
      NetworkAclId:
        Ref: "EC2NetworkAcl00acl002d273352c73de1400EoHdQ"
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
  ECSTaskDefinition00taskdefinitiongenaipilot35001BacZ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::TaskDefinition"
    DeletionPolicy: "Retain"
    Properties:
      TaskRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      InferenceAccelerators: []
      Memory: "3072"
      PlacementConstraints: []
      Cpu: "1024"
      RequiresCompatibilities:
      - "FARGATE"
      NetworkMode: "awsvpc"
      EnableFaultInjection: false
      ExecutionRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      RuntimePlatform:
        OperatingSystemFamily: "LINUX"
        CpuArchitecture: "X86_64"
      Volumes: []
      ContainerDefinitions:
      - Secrets: []
        Memory: 3072
        VolumesFrom: []
        Cpu: 1024
        EntryPoint: []
        DnsServers: []
        ReadonlyRootFilesystem: true
        Image: "343218203122.dkr.ecr.ap-southeast-1.amazonaws.com/genai-ecr:Prod-Frontend-Latest-V7"
        Essential: true
        LogConfiguration:
          SecretOptions: []
          Options:
            awslogs-group: "/ecs/genaipilot"
            awslogs-create-group: "true"
            awslogs-region: "ap-southeast-1"
            awslogs-stream-prefix: "ecs"
          LogDriver: "awslogs"
        ResourceRequirements: []
        EnvironmentFiles: []
        Name: "genaifrontend"
        DockerSecurityOptions: []
        SystemControls: []
        DnsSearchDomains: []
        CredentialSpecs: []
        Ulimits: []
        ExtraHosts: []
        MountPoints: []
        DependsOn: []
        DockerLabels: {}
        PortMappings:
        - ContainerPort: 8080
          AppProtocol: "http"
          Protocol: "tcp"
          HostPort: 8080
          Name: "genaifrontend-80-tcp"
        Command: []
        Environment: []
        Links: []
      Family: "genaipilot"
      Tags: []
  EC2NetworkInterface00eni0f4fa902aca663ade00EwPkT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "VPC Endpoint Interface vpce-0081c8ebf3c1f7fd5"
      PrivateIpAddress: "10.25.71.141"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.141"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-0ef00776c538db142"
      - "sg-075615342aa3e28b9"
      - "sg-02a57c92533299fd5"
      - "sg-0158898f4b43a0ae9"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet048794c64c2e4427a00kAh5w"
      SourceDestCheck: true
      InterfaceType: "vpc_endpoint"
      Tags: []
  EC2VPCEndpoint00vpce05f8f2706ff8cbb8a00lVRdF:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VPCEndpoint"
    DeletionPolicy: "Retain"
    Properties:
      PrivateDnsEnabled: true
      IpAddressType: "ipv4"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      DnsOptions:
        PrivateDnsOnlyForInboundResolverEndpoint: "NotSpecified"
        DnsRecordIpType: "ipv4"
      RouteTableIds: []
      ServiceName: "com.amazonaws.ap-southeast-1.sagemaker.runtime"
      PolicyDocument:
        Statement:
        - Resource: "*"
          Action: "*"
          Effect: "Allow"
          Principal: "*"
      VpcEndpointType: "Interface"
      ResourceConfigurationArn: ""
      SecurityGroupIds:
      - "sg-075615342aa3e28b9"
      - "sg-0bb8d1d9641e826f4"
      SubnetIds:
      - Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      - Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
      ServiceNetworkArn: ""
  EC2VPCEndpoint00vpce051baa26464b8677b0099EOO:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VPCEndpoint"
    DeletionPolicy: "Retain"
    Properties:
      PrivateDnsEnabled: true
      IpAddressType: "ipv4"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      DnsOptions:
        PrivateDnsOnlyForInboundResolverEndpoint: "NotSpecified"
        DnsRecordIpType: "ipv4"
      RouteTableIds: []
      ServiceName: "com.amazonaws.ap-southeast-1.ecr.api"
      PolicyDocument:
        Statement:
        - Resource: "*"
          Action: "*"
          Effect: "Allow"
          Principal: "*"
      VpcEndpointType: "Interface"
      ResourceConfigurationArn: ""
      SecurityGroupIds:
      - "sg-02d1755cab861734f"
      SubnetIds:
      - Ref: "EC2Subnet00subnet060714d7ed3b1128b00T1t2O"
      - Ref: "EC2Subnet00subnet040ea0b30fd89092a00dTOsl"
      ServiceNetworkArn: ""
  EC2SecurityGroup00sg07fd500f946aad8a200ZP1Hf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "For Deep Security scan by CSD-STU"
      GroupName: "GenAI-Pilot-Private-Tmicro-to-App"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      SecurityGroupIngress:
      - CidrIp: "192.168.228.101/32"
        IpProtocol: "tcp"
        FromPort: 4122
        ToPort: 4122
      - CidrIp: "192.168.128.101/32"
        IpProtocol: "tcp"
        FromPort: 4122
        ToPort: 4122
      - CidrIp: "192.168.228.101/32"
        IpProtocol: "tcp"
        FromPort: 4120
        ToPort: 4120
      - CidrIp: "192.168.128.101/32"
        IpProtocol: "tcp"
        FromPort: 4120
        ToPort: 4120
      - CidrIp: "192.168.128.101/32"
        IpProtocol: "tcp"
        FromPort: 4118
        ToPort: 4118
      - CidrIp: "192.168.128.102/32"
        IpProtocol: "tcp"
        FromPort: 4118
        ToPort: 4118
      - CidrIp: "192.168.228.101/32"
        IpProtocol: "tcp"
        FromPort: 4118
        ToPort: 4118
      - CidrIp: "192.168.228.101/32"
        IpProtocol: "tcp"
        FromPort: 443
        ToPort: 443
      - CidrIp: "192.168.128.101/32"
        IpProtocol: "tcp"
        FromPort: 443
        ToPort: 443
      SecurityGroupEgress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole6e5925e5d6ef4876ab8170be31d4cd6a00QgFPS:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-6e5925e5-d6ef-4876-ab81-70be31d4cd6a"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-prod-genai-presignedurl-s3-v1:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - "sg-prod-genai-presignedurl-s3-v1-role-06pxc6kn"
      Users: []
  EC2NetworkInterfaceAttachment00elaattach076eac0ee2064ecf200dNPIp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-05aa5fe94d3f9cb7b"
      DeviceIndex: "1"
      DeleteOnTermination: false
  ECSTaskDefinition00taskdefinitiongenaipilot2300XiUJ1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::TaskDefinition"
    DeletionPolicy: "Retain"
    Properties:
      TaskRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      InferenceAccelerators: []
      Memory: "3072"
      PlacementConstraints: []
      Cpu: "1024"
      RequiresCompatibilities:
      - "FARGATE"
      NetworkMode: "awsvpc"
      EnableFaultInjection: false
      ExecutionRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      RuntimePlatform:
        OperatingSystemFamily: "LINUX"
        CpuArchitecture: "X86_64"
      Volumes: []
      ContainerDefinitions:
      - Secrets: []
        Memory: 3072
        VolumesFrom: []
        Cpu: 1024
        EntryPoint: []
        DnsServers: []
        Image: "343218203122.dkr.ecr.ap-southeast-1.amazonaws.com/genai-ecr:DockerImage-Redhat-Webapp-NodeJS-Latest"
        Essential: true
        LogConfiguration:
          SecretOptions: []
          Options:
            awslogs-group: "/ecs/genaipilot"
            awslogs-create-group: "true"
            awslogs-region: "ap-southeast-1"
            awslogs-stream-prefix: "ecs"
          LogDriver: "awslogs"
        ResourceRequirements: []
        EnvironmentFiles: []
        Name: "genaifrontend"
        DockerSecurityOptions: []
        SystemControls: []
        DnsSearchDomains: []
        CredentialSpecs: []
        Ulimits: []
        ExtraHosts: []
        MountPoints: []
        DependsOn: []
        DockerLabels: {}
        PortMappings:
        - ContainerPort: 8080
          AppProtocol: "http"
          Protocol: "tcp"
          HostPort: 8080
          Name: "genaifrontend-80-tcp"
        Command: []
        Environment: []
        Links: []
      Family: "genaipilot"
      Tags: []
  IAMManagedPolicy00policyserviceroleAWSLambdaVPCAccessExecutionRole60f1b547c14c4b30ba989b55c10f110900cjy6E:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaVPCAccessExecutionRole-60f1b547-c14c-4b30-ba98-9b55c10f1109"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "*"
          Action:
          - "ec2:CreateNetworkInterface"
          - "ec2:DeleteNetworkInterface"
          - "ec2:DescribeNetworkInterfaces"
          Effect: "Allow"
      Roles:
      - "sg-test-genai-summariser-retrievetofrontend-role-1bli1c8l"
      Users: []
  ECSTaskDefinition00taskdefinitiongenaipilot600jACre:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::TaskDefinition"
    DeletionPolicy: "Retain"
    Properties:
      TaskRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      InferenceAccelerators: []
      Memory: "3072"
      PlacementConstraints: []
      Cpu: "1024"
      RequiresCompatibilities:
      - "FARGATE"
      NetworkMode: "awsvpc"
      EnableFaultInjection: false
      ExecutionRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      RuntimePlatform:
        OperatingSystemFamily: "LINUX"
        CpuArchitecture: "X86_64"
      Volumes: []
      ContainerDefinitions:
      - Secrets: []
        Memory: 3072
        VolumesFrom: []
        Cpu: 1024
        EntryPoint: []
        DnsServers: []
        Image: "343218203122.dkr.ecr.ap-southeast-1.amazonaws.com/genai-ecr:nabil-test"
        Essential: true
        LogConfiguration:
          SecretOptions: []
          Options:
            awslogs-group: "/ecs/genaipilot"
            awslogs-create-group: "true"
            awslogs-region: "ap-southeast-1"
            awslogs-stream-prefix: "ecs"
          LogDriver: "awslogs"
        ResourceRequirements: []
        EnvironmentFiles: []
        Name: "genaifrontend"
        DockerSecurityOptions: []
        SystemControls: []
        DnsSearchDomains: []
        CredentialSpecs: []
        Ulimits: []
        ExtraHosts: []
        MountPoints: []
        DependsOn: []
        DockerLabels: {}
        PortMappings:
        - ContainerPort: 8080
          AppProtocol: "http"
          Protocol: "tcp"
          HostPort: 8080
          Name: "genaifrontend-80-tcp"
        Command: []
        Environment: []
        Links: []
      Family: "genaipilot"
      Tags: []
  ECSTaskDefinition00taskdefinitiongenaipilot21005KCOm:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::TaskDefinition"
    DeletionPolicy: "Retain"
    Properties:
      TaskRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      InferenceAccelerators: []
      Memory: "3072"
      PlacementConstraints: []
      Cpu: "1024"
      RequiresCompatibilities:
      - "FARGATE"
      NetworkMode: "awsvpc"
      EnableFaultInjection: false
      ExecutionRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      RuntimePlatform:
        OperatingSystemFamily: "LINUX"
        CpuArchitecture: "X86_64"
      Volumes: []
      ContainerDefinitions:
      - Secrets: []
        Memory: 3072
        VolumesFrom: []
        Cpu: 1024
        EntryPoint: []
        DnsServers: []
        Image: "343218203122.dkr.ecr.ap-southeast-1.amazonaws.com/genai-ecr:DockerImage-Redhat-Webapp-NodeJS-Latest"
        Essential: true
        LogConfiguration:
          SecretOptions: []
          Options:
            awslogs-group: "/ecs/genaipilot"
            awslogs-create-group: "true"
            awslogs-region: "ap-southeast-1"
            awslogs-stream-prefix: "ecs"
          LogDriver: "awslogs"
        ResourceRequirements: []
        EnvironmentFiles: []
        Name: "genaifrontend"
        DockerSecurityOptions: []
        SystemControls: []
        DnsSearchDomains: []
        CredentialSpecs: []
        Ulimits: []
        ExtraHosts: []
        MountPoints: []
        DependsOn: []
        DockerLabels: {}
        PortMappings:
        - ContainerPort: 8080
          AppProtocol: "http"
          Protocol: "tcp"
          HostPort: 8080
          Name: "genaifrontend-80-tcp"
        Command: []
        Environment: []
        Links: []
      Family: "genaipilot"
      Tags: []
  IAMRole00sgprodgenaisummariser220v1roledhe171x700gl1mR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-4f40009a-09c8-4abb-8281-5578c7dcd31d"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-summariser-220-v1-role-dhe171x7"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  SQSQueue00summarisercontinuousconversationfifo00KeXfW:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::SQS::Queue"
    DeletionPolicy: "Retain"
    Properties:
      ReceiveMessageWaitTimeSeconds: 0
      SqsManagedSseEnabled: true
      FifoThroughputLimit: "perQueue"
      DelaySeconds: 0
      FifoQueue: true
      MessageRetentionPeriod: 1800
      MaximumMessageSize: 262144
      DeduplicationScope: "queue"
      VisibilityTimeout: 300
      ContentBasedDeduplication: true
      QueueName: "summariser_continuous_conversation.fifo"
  EC2VPCEndpoint00vpce0eaba5802efe6e78400TwRnM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VPCEndpoint"
    DeletionPolicy: "Retain"
    Properties:
      PrivateDnsEnabled: true
      IpAddressType: "ipv4"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      DnsOptions:
        PrivateDnsOnlyForInboundResolverEndpoint: "NotSpecified"
        DnsRecordIpType: "ipv4"
      RouteTableIds: []
      ServiceName: "com.amazonaws.ap-southeast-1.textract"
      PolicyDocument:
        Statement:
        - Resource: "*"
          Action: "*"
          Effect: "Allow"
          Principal: "*"
      VpcEndpointType: "Interface"
      ResourceConfigurationArn: ""
      SecurityGroupIds:
      - "sg-075615342aa3e28b9"
      SubnetIds:
      - Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      - Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
      ServiceNetworkArn: ""
  EC2SecurityGroup00sg0158898f4b43a0ae900gUN5N:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "For developer cli access to servers"
      GroupName: "GenAI-Pilot-Private-Cvpn-to-App"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      SecurityGroupIngress:
      - IpProtocol: "tcp"
        FromPort: 22
        SourceSecurityGroupId: "sg-0a6c63d92a738a24c"
        ToPort: 22
        SourceSecurityGroupOwnerId: "343218203122"
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "icmp"
        FromPort: -1
        ToPort: -1
      - IpProtocol: "icmp"
        FromPort: -1
        SourceSecurityGroupId: "sg-0a6c63d92a738a24c"
        ToPort: -1
        SourceSecurityGroupOwnerId: "343218203122"
      SecurityGroupEgress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
      Tags:
      - Value: "GenAI-Pilot-Private-Cvpn-to-App"
        Key: "Name"
  EC2VolumeAttachment00vol03616c082cedd037400URh7a:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VolumeAttachment"
    DeletionPolicy: "Retain"
    Properties:
      InstanceId: "i-0b2e07dbc66acf6c2"
      VolumeId: "vol-03616c082cedd0374"
      Device: "/dev/xvda"
  EC2SubnetNetworkAclAssociation00aclassoc0aefbb8d416af075500X1yB1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    DeletionPolicy: "Retain"
    Properties:
      NetworkAclId:
        Ref: "EC2NetworkAcl00acl0df56d18f4814922c00cT3MU"
      SubnetId:
        Ref: "EC2Subnet00subnet01aebeb15e1111ff300ZtTfX"
  EC2NetworkInterfaceAttachment00elaattach0495fe5982993a8c900IByAR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-00845fde09b1e5266"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2NetworkInterface00eni0d4fc09fcf56f4daf00e48pJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: "VPC Endpoint Interface vpce-0081c8ebf3c1f7fd5"
      PrivateIpAddress: "10.25.71.117"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.117"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-0ef00776c538db142"
      - "sg-075615342aa3e28b9"
      - "sg-02a57c92533299fd5"
      - "sg-0158898f4b43a0ae9"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet0d68b865e8a7e3cc0002GF7k"
      SourceDestCheck: true
      InterfaceType: "vpc_endpoint"
      Tags: []
  EC2VPCEndpoint00vpce0487064705b74cdcd00Oee1f:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VPCEndpoint"
    DeletionPolicy: "Retain"
    Properties:
      PrivateDnsEnabled: true
      IpAddressType: "ipv4"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      DnsOptions:
        PrivateDnsOnlyForInboundResolverEndpoint: "NotSpecified"
        DnsRecordIpType: "ipv4"
      RouteTableIds: []
      ServiceName: "com.amazonaws.ap-southeast-1.sagemaker.api"
      PolicyDocument:
        Statement:
        - Resource: "*"
          Action: "*"
          Effect: "Allow"
          Principal: "*"
      VpcEndpointType: "Interface"
      ResourceConfigurationArn: ""
      SecurityGroupIds:
      - "sg-075615342aa3e28b9"
      - "sg-0bb8d1d9641e826f4"
      SubnetIds:
      - Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      - Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
      ServiceNetworkArn: ""
  EC2Route00rtb07a95c43e9fdd755c00ch91N:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Route"
    DeletionPolicy: "Retain"
    Properties:
      TransitGatewayId:
        Ref: "EC2TransitGateway00tgw052b76048cb5c20c000VNzWV"
      RouteTableId:
        Ref: "EC2RouteTable00rtb07a95c43e9fdd755c00a32xl"
      DestinationCidrBlock: "0.0.0.0/0"
  ECSTaskDefinition00taskdefinitiongenaipilot800OQRuD:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::TaskDefinition"
    DeletionPolicy: "Retain"
    Properties:
      TaskRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      InferenceAccelerators: []
      Memory: "3072"
      PlacementConstraints: []
      Cpu: "1024"
      RequiresCompatibilities:
      - "FARGATE"
      NetworkMode: "awsvpc"
      EnableFaultInjection: false
      ExecutionRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      RuntimePlatform:
        OperatingSystemFamily: "LINUX"
        CpuArchitecture: "X86_64"
      Volumes: []
      ContainerDefinitions:
      - Secrets: []
        Memory: 3072
        VolumesFrom: []
        Cpu: 1024
        EntryPoint: []
        DnsServers: []
        Image: "343218203122.dkr.ecr.ap-southeast-1.amazonaws.com/genai-ecr:webapp-test-latest"
        Essential: true
        LogConfiguration:
          SecretOptions: []
          Options:
            awslogs-group: "/ecs/genaipilot"
            awslogs-create-group: "true"
            awslogs-region: "ap-southeast-1"
            awslogs-stream-prefix: "ecs"
          LogDriver: "awslogs"
        ResourceRequirements: []
        EnvironmentFiles: []
        Name: "genaifrontend"
        DockerSecurityOptions: []
        SystemControls: []
        DnsSearchDomains: []
        CredentialSpecs: []
        Ulimits: []
        ExtraHosts: []
        MountPoints: []
        DependsOn: []
        DockerLabels: {}
        PortMappings:
        - ContainerPort: 8080
          AppProtocol: "http"
          Protocol: "tcp"
          HostPort: 8080
          Name: "genaifrontend-80-tcp"
        Command: []
        Environment: []
        Links: []
      Family: "genaipilot"
      Tags: []
  EC2SubnetRouteTableAssociation00rtbassoc0daf4e10a7c51090800JmmqC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    DeletionPolicy: "Retain"
    Properties:
      RouteTableId:
        Ref: "EC2RouteTable00rtb036e82d67b2ea04ea0037JXh"
      SubnetId:
        Ref: "EC2Subnet00subnet040ea0b30fd89092a00dTOsl"
  EC2NetworkInterfaceAttachment00elaattach06ca470b135c2c75c00TIhMJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-07bf3986264a0fcb8"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2SecurityGroup00sg02d1755cab861734f00Obaqo:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "Allows ECS pull images from private ECR"
      GroupName: "PrivateLink-ECStoECR"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      SecurityGroupIngress:
      - CidrIp: "10.25.71.0/32"
        IpProtocol: "-1"
        Description: "allow inbound local"
        FromPort: -1
        ToPort: -1
      - IpProtocol: "-1"
        FromPort: -1
        SourceSecurityGroupId: "sg-02d1755cab861734f"
        ToPort: -1
        SourceSecurityGroupOwnerId: "343218203122"
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "tcp"
        Description: "Test"
        FromPort: 443
        ToPort: 443
      - IpProtocol: "tcp"
        Description: "ECS pull images from ECR"
        FromPort: 443
        SourceSecurityGroupId: "sg-06010a299d4942ce2"
        ToPort: 443
        SourceSecurityGroupOwnerId: "343218203122"
      SecurityGroupEgress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
      Tags:
      - Value: "faidhi.nordin@bnm.gov.my"
        Key: "created_by"
      - Value: "21/08/2024"
        Key: "created_date"
      - Value: "Private Link ECS to ECR"
        Key: "purpose"
  ECSTaskDefinition00taskdefinitiongenaipilot3600oBwE7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::TaskDefinition"
    DeletionPolicy: "Retain"
    Properties:
      TaskRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      InferenceAccelerators: []
      Memory: "3072"
      PlacementConstraints: []
      Cpu: "1024"
      RequiresCompatibilities:
      - "FARGATE"
      NetworkMode: "awsvpc"
      EnableFaultInjection: false
      ExecutionRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00axG9S"
        - "Arn"
      RuntimePlatform:
        OperatingSystemFamily: "LINUX"
        CpuArchitecture: "X86_64"
      Volumes: []
      ContainerDefinitions:
      - Secrets: []
        Memory: 3072
        VolumesFrom: []
        Cpu: 1024
        EntryPoint: []
        DnsServers: []
        ReadonlyRootFilesystem: true
        Image: "343218203122.dkr.ecr.ap-southeast-1.amazonaws.com/genai-ecr:Prod-Frontend-Latest-V8"
        Essential: true
        LogConfiguration:
          SecretOptions: []
          Options:
            awslogs-group: "/ecs/genaipilot"
            awslogs-create-group: "true"
            awslogs-region: "ap-southeast-1"
            awslogs-stream-prefix: "ecs"
          LogDriver: "awslogs"
        ResourceRequirements: []
        EnvironmentFiles: []
        Name: "genaifrontend"
        DockerSecurityOptions: []
        SystemControls: []
        DnsSearchDomains: []
        CredentialSpecs: []
        Ulimits: []
        ExtraHosts: []
        MountPoints: []
        DependsOn: []
        DockerLabels: {}
        PortMappings:
        - ContainerPort: 8080
          AppProtocol: "http"
          Protocol: "tcp"
          HostPort: 8080
          Name: "genaifrontend-80-tcp"
        Command: []
        Environment: []
        Links: []
      Family: "genaipilot"
      Tags: []
  EC2SubnetNetworkAclAssociation00aclassoc08f30363c6fe33e4000DEYcR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    DeletionPolicy: "Retain"
    Properties:
      NetworkAclId:
        Ref: "EC2NetworkAcl00acl0df56d18f4814922c00cT3MU"
      SubnetId:
        Ref: "EC2Subnet00subnet01c6199eacb456cba003NMB5"
  EC2NetworkInterfaceAttachment00elaattach0097e24af3797420b00hV9lq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-0bf1d3448b57944d3"
      DeviceIndex: "1"
      DeleteOnTermination: false
  LambdaFunction00sgprodgenaiembedding00kydR3:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Function"
    DeletionPolicy: "Retain"
    Properties:
      MemorySize: 128
      Description: ""
      TracingConfig:
        Mode: "PassThrough"
      VpcConfig:
        SecurityGroupIds:
        - "sg-075615342aa3e28b9"
        SubnetIds:
        - Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
        - Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
        Ipv6AllowedForDualStack: false
      Timeout: 900
      RuntimeManagementConfig:
        UpdateRuntimeOn: "Auto"
      Handler: "lambda_function.lambda_handler"
      Code:
        SourceKMSKeyArn:
          Ref: "LambdaFunction00sgprodgenaiembedding00kydR3CodeSourceKMSKeyArnw5C7q"
        S3ObjectVersion:
          Ref: "LambdaFunction00sgprodgenaiembedding00kydR3CodeS3ObjectVersionBGtXg"
        S3Bucket:
          Ref: "LambdaFunction00sgprodgenaiembedding00kydR3CodeS3Buckett4IeM"
        ZipFile:
          Ref: "LambdaFunction00sgprodgenaiembedding00kydR3CodeZipFileTzcbp"
        ImageUri:
          Ref: "LambdaFunction00sgprodgenaiembedding00kydR3CodeImageUri7YNu9"
        S3Key:
          Ref: "LambdaFunction00sgprodgenaiembedding00kydR3CodeS3KeyD0yi9"
      Role:
        Fn::GetAtt:
        - "IAMRole00sgprodgenaiembeddingrolervd72zod00nMv0m"
        - "Arn"
      FileSystemConfigs: []
      FunctionName: "sg-prod-genai-embedding"
      Runtime: "python3.9"
      PackageType: "Zip"
      LoggingConfig:
        LogFormat: "Text"
        LogGroup: "/aws/lambda/sg-prod-genai-embedding"
      RecursiveLoop: "Terminate"
      EphemeralStorage:
        Size: 512
      Layers:
      - "arn:aws:lambda:ap-southeast-1:770693421928:layer:Klayers-p39-boto3:23"
      - "arn:aws:lambda:ap-southeast-1:580247275435:layer:LambdaInsightsExtension:53"
      Architectures:
      - "x86_64"
  EC2NetworkInterfaceAttachment00elaattach09da54017e9ad5fef00UzSk6:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-07a0fb58a82aaa1d2"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2NetworkInterfaceAttachment00eniattach07d610565f7e72c41005Hxsk:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterfaceAttachment"
    DeletionPolicy: "Retain"
    Properties:
      NetworkInterfaceId: "eni-022abac26e32c29b0"
      DeviceIndex: "1"
      DeleteOnTermination: false
  EC2Instance00i0e19ff01674e306d500votwb:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Instance"
    DeletionPolicy: "Retain"
    Properties:
      Tenancy: "default"
      SecurityGroups:
      - "GenAI-Pilot-Private-Internal-to-VPC"
      - "GenAI-Pilot-Private-Tmicro-to-App"
      - "default"
      - "GenAI-Pilot-Private-Cvpn-to-App"
      PrivateIpAddress: "10.25.71.222"
      BlockDeviceMappings:
      - Ebs:
          SnapshotId: "snap-0c8eab48745cf2897"
          VolumeType: "gp3"
          KmsKeyId:
            Fn::GetAtt:
            - "KMSKey00e0af6c3f73fc497e863a6754f0dce6b1003YkeT"
            - "Arn"
          Encrypted: true
          Iops: 3000
          VolumeSize: 50
          DeleteOnTermination: false
        DeviceName: "/dev/xvda"
      IamInstanceProfile:
        Ref: "IAMInstanceProfile00ec2adminaccess00YQdI9"
      SubnetId:
        Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
      EbsOptimized: true
      Volumes:
      - VolumeId: "vol-01bd16c2e811bb9d7"
        Device: "/dev/xvda"
      NetworkInterfaces:
      - PrivateIpAddresses:
        - PrivateIpAddress: "10.25.71.222"
          Primary: true
        SecondaryPrivateIpAddressCount: 0
        DeviceIndex: "0"
        GroupSet:
        - Ref: "EC2SecurityGroup00sg0ef00776c538db14200Lv7u9"
        - Ref: "EC2SecurityGroup00sg07fd500f946aad8a200ZP1Hf"
        - Ref: "EC2SecurityGroup00sg075615342aa3e28b900936Zj"
        - Ref: "EC2SecurityGroup00sg0158898f4b43a0ae900gUN5N"
        Ipv6Addresses: []
        SubnetId:
          Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
        AssociatePublicIpAddress: false
        NetworkInterfaceId:
          Ref: "EC2NetworkInterface00eni0a79669b8bad1083a00XvjA2"
        DeleteOnTermination: true
      ImageId: "ami-04a5ce820a419d6da"
      InstanceType: "t3.medium"
      Monitoring: false
      Tags:
      - Value: "ec2-jumpserver-essien"
        Key: "Name"
      InstanceInitiatedShutdownBehavior: "stop"
      CpuOptions:
        ThreadsPerCore: 2
        CoreCount: 1
      AvailabilityZone: "ap-southeast-1c"
      PrivateDnsNameOptions:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      SecurityGroupIds:
      - "sg-0ef00776c538db142"
      - "sg-07fd500f946aad8a2"
      - "sg-075615342aa3e28b9"
      - "sg-0158898f4b43a0ae9"
      DisableApiTermination: false
      KeyName: "pilot-SG-Essien"
      SourceDestCheck: true
      PlacementGroupName: ""
      VpcId: "vpc-02790342fee4ebf9f"
      State:
        Code: "80"
        Name: "stopped"
      CreditSpecification:
        CPUCredits: "unlimited"
  EC2VPCEndpoint00vpce06069bea79007eb1100iuOkn:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VPCEndpoint"
    DeletionPolicy: "Retain"
    Properties:
      PrivateDnsEnabled: true
      IpAddressType: "ipv4"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00YtCms"
      DnsOptions:
        PrivateDnsOnlyForInboundResolverEndpoint: "NotSpecified"
        DnsRecordIpType: "ipv4"
      RouteTableIds: []
      ServiceName: "com.amazonaws.ap-southeast-1.ssm-incidents"
      PolicyDocument:
        Statement:
        - Resource: "*"
          Action: "*"
          Effect: "Allow"
          Principal: "*"
      VpcEndpointType: "Interface"
      ResourceConfigurationArn: ""
      SecurityGroupIds:
      - "sg-0ef00776c538db142"
      SubnetIds:
      - Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00cdlk3"
      - Ref: "EC2Subnet00subnet0d1db15411089416b00yV78w"
      ServiceNetworkArn: ""
  EC2TransitGatewayVpcAttachment00tgwattach0bd627e94343f3fb300AnOIN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::TransitGatewayVpcAttachment"
    DeletionPolicy: "Retain"
    Properties:
      Options:
        ApplianceModeSupport: "enable"
        SecurityGroupReferencingSupport: "enable"
        DnsSupport: "enable"
        Ipv6Support: "disable"
      TransitGatewayId:
        Ref: "EC2TransitGateway00tgw052b76048cb5c20c000VNzWV"
      VpcId: "vpc-02790342fee4ebf9f"
      SubnetIds:
      - "subnet-03593bd789c587e3c"
      - "subnet-02b8e59fe96020ae1"
      Tags:
      - Value: "GenAI-Prod-tgwa-001"
        Key: "Name"
  LambdaFunction00sgtestasyncoutputretrieve00bLo4BCodeS3ObjectVersionuMwqY:
    NoEcho: "true"
    Type: "String"
    Description: "For versioned objects, the version of the deployment package object\
      \ to use."
  LambdaFunction00sgprodgenaideleteobjects300UvJu4CodeZipFile8qunF:
    NoEcho: "true"
    Type: "String"
    Description: "(Node.js and Python) The source code of your Lambda function. If\
      \ you include your function source inline with this parameter, CFN places it\
      \ in a file named ``index`` and zips it to create a [deployment package](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html).\
      \ This zip file cannot exceed 4MB. For the ``Handler`` property, the first part\
      \ of the handler identifier must be ``index``. For example, ``index.handler``.\n\
      \  For JSON, you must escape quotes and special characters such as newline (``\\\
      n``) with a backslash.\n If you specify a function that interacts with an AWS\
      \ CloudFormation custom resource, you don't have to write your own functions\
      \ to send responses to the custom resource that invoked the function. AWS CloudFormation\
      \ provides a response module ([cfn-response](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-lambda-function-code-cfnresponsemodule.html))\
      \ that simplifies sending responses. See [Using Lambda with CloudFormation](https://docs.aws.amazon.com/lambda/latest/dg/services-cloudformation.html)\
      \ for details."
  LambdaFunction00testingest00w7sc4CodeS3BucketMaJEP:
    NoEcho: "true"
    Type: "String"
    Description: "An Amazon S3 bucket in the same AWS-Region as your function. The\
      \ bucket can be in a different AWS-account."
  LambdaFunction00TOBEDELETEDtestfunctionsqs00IfKlXCodeZipFilemV8zA:
    NoEcho: "true"
    Type: "String"
    Description: "(Node.js and Python) The source code of your Lambda function. If\
      \ you include your function source inline with this parameter, CFN places it\
      \ in a file named ``index`` and zips it to create a [deployment package](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html).\
      \ This zip file cannot exceed 4MB. For the ``Handler`` property, the first part\
      \ of the handler identifier must be ``index``. For example, ``index.handler``.\n\
      \  For JSON, you must escape quotes and special characters such as newline (``\\\
      n``) with a backslash.\n If you specify a function that interacts with an AWS\
      \ CloudFormation custom resource, you don't have to write your own functions\
      \ to send responses to the custom resource that invoked the function. AWS CloudFormation\
      \ provides a response module ([cfn-response](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-lambda-function-code-cfnresponsemodule.html))\
      \ that simplifies sending responses. See [Using Lambda with CloudFormation](https://docs.aws.amazon.com/lambda/latest/dg/services-cloudformation.html)\
      \ for details."
  LambdaFunction00sgprodgenais3triggertutorial004FiTWCodeS3ObjectVersion5R6nd:
    NoEcho: "true"
    Type: "String"
    Description: "For versioned objects, the version of the deployment package object\
      \ to use."
  LambdaFunction00sgtestasyncoutputretrieve00bLo4BCodeSourceKMSKeyArn1Y3dj:
    NoEcho: "true"
    Type: "String"
    Description: "Value of write only property Code/SourceKMSKeyArn of resource LambdaFunction00sgtestasyncoutputretrieve00bLo4B."
  LambdaFunction00sgprodgenairagsummariser00rFz1vCodeImageUri6cZCc:
    NoEcho: "true"
    Type: "String"
    Description: "URI of a [container image](https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html)\
      \ in the Amazon ECR registry."
  LambdaFunction00TBDdummylambdapython31200yxco7CodeS3Key8Vgdf:
    NoEcho: "true"
    Type: "String"
    Description: "The Amazon S3 key of the deployment package."
  LambdaFunction00sgprodgenairetrievedocssgmkr00Fg4smCodeS3BuckethZZ6X:
    NoEcho: "true"
    Type: "String"
    Description: "An Amazon S3 bucket in the same AWS-Region as your function. The\
      \ bucket can be in a different AWS-account."
  LambdaFunction00sgprodgenaideleteobjects300UvJu4CodeS3KeyDHp8C:
    NoEcho: "true"
    Type: "String"
    Description: "The Amazon S3 key of the deployment package."
  LambdaFunction00sgtestasyncoutputgenerator00F4igyCodeSourceKMSKeyArnj34wO:
    NoEcho: "true"
    Type: "String"
    Description: "Value of write only property Code/SourceKMSKeyArn of resource LambdaFunction00sgtestasyncoutputgenerator00F4igy."
  LambdaFunction00sgtestasyncoutputretrieve00bLo4BCodeZipFile7RiFD:
    NoEcho: "true"
    Type: "String"
    Description: "(Node.js and Python) The source code of your Lambda function. If\
      \ you include your function source inline with this parameter, CFN places it\
      \ in a file named ``index`` and zips it to create a [deployment package](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html).\
      \ This zip file cannot exceed 4MB. For the ``Handler`` property, the first part\
      \ of the handler identifier must be ``index``. For example, ``index.handler``.\n\
      \  For JSON, you must escape quotes and special characters such as newline (``\\\
      n``) with a backslash.\n If you specify a function that interacts with an AWS\
      \ CloudFormation custom resource, you don't have to write your own functions\
      \ to send responses to the custom resource that invoked the function. AWS CloudFormation\
      \ provides a response module ([cfn-response](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-lambda-function-code-cfnresponsemodule.html))\
      \ that simplifies sending responses. See [Using Lambda with CloudFormation](https://docs.aws.amazon.com/lambda/latest/dg/services-cloudformation.html)\
      \ for details."
  LambdaFunction00TOBEDELETEDtestfunctionsqs00IfKlXCodeS3Bucket1iVZn:
    NoEcho: "true"
    Type: "String"
    Description: "An Amazon S3 bucket in the same AWS-Region as your function. The\
      \ bucket can be in a different AWS-account."
  LambdaFunction00sgprodgenais3triggertutorial004FiTWCodeS3KeyDofqh:
    NoEcho: "true"
    Type: "String"
    Description: "The Amazon S3 key of the deployment package."
  LambdaFunction00sgprodgenairagsummariser00rFz1vCodeS3ObjectVersionNHNB5:
    NoEcho: "true"
    Type: "String"
    Description: "For versioned objects, the version of the deployment package object\
      \ to use."
  LambdaFunction00StopEC2Instances00PCSJxCodeS3ObjectVersionKU3vc:
    NoEcho: "true"
    Type: "String"
    Description: "For versioned objects, the version of the deployment package object\
      \ to use."
  LambdaFunction00sgprodgenais3triggertutorial004FiTWCodeSourceKMSKeyArns9ybT:
    NoEcho: "true"
    Type: "String"
    Description: "Value of write only property Code/SourceKMSKeyArn of resource LambdaFunction00sgprodgenais3triggertutorial004FiTW."
  LambdaFunction00testuploads300XYdXGCodeS3KeyL8GXg:
    NoEcho: "true"
    Type: "String"
    Description: "The Amazon S3 key of the deployment package."
  LambdaFunction00sgtestasyncoutputgenerator00F4igyCodeZipFilemzjaO:
    NoEcho: "true"
    Type: "String"
    Description: "(Node.js and Python) The source code of your Lambda function. If\
      \ you include your function source inline with this parameter, CFN places it\
      \ in a file named ``index`` and zips it to create a [deployment package](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html).\
      \ This zip file cannot exceed 4MB. For the ``Handler`` property, the first part\
      \ of the handler identifier must be ``index``. For example, ``index.handler``.\n\
      \  For JSON, you must escape quotes and special characters such as newline (``\\\
      n``) with a backslash.\n If you specify a function that interacts with an AWS\
      \ CloudFormation custom resource, you don't have to write your own functions\
      \ to send responses to the custom resource that invoked the function. AWS CloudFormation\
      \ provides a response module ([cfn-response](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-lambda-function-code-cfnresponsemodule.html))\
      \ that simplifies sending responses. See [Using Lambda with CloudFormation](https://docs.aws.amazon.com/lambda/latest/dg/services-cloudformation.html)\
      \ for details."
  LambdaFunction00sgtestgenaisummariserretrievetofrontend00yM0rsCodeZipFileJw5ZK:
    NoEcho: "true"
    Type: "String"
    Description: "(Node.js and Python) The source code of your Lambda function. If\
      \ you include your function source inline with this parameter, CFN places it\
      \ in a file named ``index`` and zips it to create a [deployment package](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html).\
      \ This zip file cannot exceed 4MB. For the ``Handler`` property, the first part\
      \ of the handler identifier must be ``index``. For example, ``index.handler``.\n\
      \  For JSON, you must escape quotes and special characters such as newline (``\\\
      n``) with a backslash.\n If you specify a function that interacts with an AWS\
      \ CloudFormation custom resource, you don't have to write your own functions\
      \ to send responses to the custom resource that invoked the function. AWS CloudFormation\
      \ provides a response module ([cfn-response](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-lambda-function-code-cfnresponsemodule.html))\
      \ that simplifies sending responses. See [Using Lambda with CloudFormation](https://docs.aws.amazon.com/lambda/latest/dg/services-cloudformation.html)\
      \ for details."
  LambdaFunction00sgtestgenaisummariserretrievetofrontendERROR00zqPX0CodeSourceKMSKeyArnugMlq:
    NoEcho: "true"
    Type: "String"
    Description: "Value of write only property Code/SourceKMSKeyArn of resource LambdaFunction00sgtestgenaisummariserretrievetofrontendERROR00zqPX0."
  LambdaFunction00sgprodgenais3triggertutorial004FiTWCodeZipFileCiIps:
    NoEcho: "true"
    Type: "String"
    Description: "(Node.js and Python) The source code of your Lambda function. If\
      \ you include your function source inline with this parameter, CFN places it\
      \ in a file named ``index`` and zips it to create a [deployment package](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html).\
      \ This zip file cannot exceed 4MB. For the ``Handler`` property, the first part\
      \ of the handler identifier must be ``index``. For example, ``index.handler``.\n\
      \  For JSON, you must escape quotes and special characters such as newline (``\\\
      n``) with a backslash.\n If you specify a function that interacts with an AWS\
      \ CloudFormation custom resource, you don't have to write your own functions\
      \ to send responses to the custom resource that invoked the function. AWS CloudFormation\
      \ provides a response module ([cfn-response](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-lambda-function-code-cfnresponsemodule.html))\
      \ that simplifies sending responses. See [Using Lambda with CloudFormation](https://docs.aws.amazon.com/lambda/latest/dg/services-cloudformation.html)\
      \ for details."
  LambdaFunction00StopEC2Instances00PCSJxCodeZipFile0B3d0:
    NoEcho: "true"
    Type: "String"
    Description: "(Node.js and Python) The source code of your Lambda function. If\
      \ you include your function source inline with this parameter, CFN places it\
      \ in a file named ``index`` and zips it to create a [deployment package](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html).\
      \ This zip file cannot exceed 4MB. For the ``Handler`` property, the first part\
      \ of the handler identifier must be ``index``. For example, ``index.handler``.\n\
      \  For JSON, you must escape quotes and special characters such as newline (``\\\
      n``) with a backslash.\n If you specify a function that interacts with an AWS\
      \ CloudFormation custom resource, you don't have to write your own functions\
      \ to send responses to the custom resource that invoked the function. AWS CloudFormation\
      \ provides a response module ([cfn-response](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-lambda-function-code-cfnresponsemodule.html))\
      \ that simplifies sending responses. See [Using Lambda with CloudFormation](https://docs.aws.amazon.com/lambda/latest/dg/services-cloudformation.html)\
      \ for details."
  LambdaFunction00testuploads300XYdXGCodeS3Bucket1nqjc:
    NoEcho: "true"
    Type: "String"
    Description: "An Amazon S3 bucket in the same AWS-Region as your function. The\
      \ bucket can be in a different AWS-account."
  LambdaFunction00TBDdummylambdapython31200yxco7CodeImageUriGXyCY:
    NoEcho: "true"
    Type: "String"
    Description: "URI of a [container image](https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html)\
      \ in the Amazon ECR registry."
  LambdaFunction00sgprodgenairetrievedocs00RA8w4CodeSourceKMSKeyArnfTSEy:
    NoEcho: "true"
    Type: "String"
    Description: "Value of write only property Code/SourceKMSKeyArn of resource LambdaFunction00sgprodgenairetrievedocs00RA8w4."
  LambdaFunction00TBDdummylambdapython31200yxco7CodeS3ObjectVersionRIgic:
    NoEcho: "true"
    Type: "String"
    Description: "For versioned objects, the version of the deployment package object\
      \ to use."
  LambdaFunction00StopEC2Instances00PCSJxCodeSourceKMSKeyArnApJNc:
    NoEcho: "true"
    Type: "String"
    Description: "Value of write only property Code/SourceKMSKeyArn of resource LambdaFunction00StopEC2Instances00PCSJx."
  LambdaFunction00sgprodgenairetrievedocssgmkr00Fg4smCodeS3Keybs16A:
    NoEcho: "true"
    Type: "String"
    Description: "The Amazon S3 key of the deployment package."
  LambdaFunction00sgprodgenairetrievedocs00RA8w4CodeZipFileqcUZn:
    NoEcho: "true"
    Type: "String"
    Description: "(Node.js and Python) The source code of your Lambda function. If\
      \ you include your function source inline with this parameter, CFN places it\
      \ in a file named ``index`` and zips it to create a [deployment package](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html).\
      \ This zip file cannot exceed 4MB. For the ``Handler`` property, the first part\
      \ of the handler identifier must be ``index``. For example, ``index.handler``.\n\
      \  For JSON, you must escape quotes and special characters such as newline (``\\\
      n``) with a backslash.\n If you specify a function that interacts with an AWS\
      \ CloudFormation custom resource, you don't have to write your own functions\
      \ to send responses to the custom resource that invoked the function. AWS CloudFormation\
      \ provides a response module ([cfn-response](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-lambda-function-code-cfnresponsemodule.html))\
      \ that simplifies sending responses. See [Using Lambda with CloudFormation](https://docs.aws.amazon.com/lambda/latest/dg/services-cloudformation.html)\
      \ for details."
  LambdaFunction00sgtestgenaisummariserretrievetofrontendERROR00zqPX0CodeZipFileSrDZT:
    NoEcho: "true"
    Type: "String"
    Description: "(Node.js and Python) The source code of your Lambda function. If\
      \ you include your function source inline with this parameter, CFN places it\
      \ in a file named ``index`` and zips it to create a [deployment package](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html).\
      \ This zip file cannot exceed 4MB. For the ``Handler`` property, the first part\
      \ of the handler identifier must be ``index``. For example, ``index.handler``.\n\
      \  For JSON, you must escape quotes and special characters such as newline (``\\\
      n``) with a backslash.\n If you specify a function that interacts with an AWS\
      \ CloudFormation custom resource, you don't have to write your own functions\
      \ to send responses to the custom resource that invoked the function. AWS CloudFormation\
      \ provides a response module ([cfn-response](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-lambda-function-code-cfnresponsemodule.html))\
      \ that simplifies sending responses. See [Using Lambda with CloudFormation](https://docs.aws.amazon.com/lambda/latest/dg/services-cloudformation.html)\
      \ for details."
  LambdaFunction00sgtestgenaisummariserretrievetofrontendERROR00zqPX0CodeS3KeyRFezh:
    NoEcho: "true"
    Type: "String"
    Description: "The Amazon S3 key of the deployment package."
  LambdaFunction00sgprodgenairetrievedocs00RA8w4CodeS3BuckettWzRL:
    NoEcho: "true"
    Type: "String"
    Description: "An Amazon S3 bucket in the same AWS-Region as your function. The\
      \ bucket can be in a different AWS-account."
  LambdaFunction00sgtestgenaisummariserretrievetofrontend00yM0rsCodeS3BucketzWPFP:
    NoEcho: "true"
    Type: "String"
    Description: "An Amazon S3 bucket in the same AWS-Region as your function. The\
      \ bucket can be in a different AWS-account."
  LambdaFunction00StartEC2Instances00MHqS9CodeS3Bucket8HKLz:
    NoEcho: "true"
    Type: "String"
    Description: "An Amazon S3 bucket in the same AWS-Region as your function. The\
      \ bucket can be in a different AWS-account."
  LambdaFunction00testretrieves3metadata00bgeRMCodeZipFilepkJiE:
    NoEcho: "true"
    Type: "String"
    Description: "(Node.js and Python) The source code of your Lambda function. If\
      \ you include your function source inline with this parameter, CFN places it\
      \ in a file named ``index`` and zips it to create a [deployment package](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html).\
      \ This zip file cannot exceed 4MB. For the ``Handler`` property, the first part\
      \ of the handler identifier must be ``index``. For example, ``index.handler``.\n\
      \  For JSON, you must escape quotes and special characters such as newline (``\\\
      n``) with a backslash.\n If you specify a function that interacts with an AWS\
      \ CloudFormation custom resource, you don't have to write your own functions\
      \ to send responses to the custom resource that invoked the function. AWS CloudFormation\
      \ provides a response module ([cfn-response](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-lambda-function-code-cfnresponsemodule.html))\
      \ that simplifies sending responses. See [Using Lambda with CloudFormation](https://docs.aws.amazon.com/lambda/latest/dg/services-cloudformation.html)\
      \ for details."
  LambdaFunction00testuploads300XYdXGCodeSourceKMSKeyArn48FcV:
    NoEcho: "true"
    Type: "String"
    Description: "Value of write only property Code/SourceKMSKeyArn of resource LambdaFunction00testuploads300XYdXG."
  LambdaFunction00sgprodgenaideleteobjects300UvJu4CodeS3BucketZMrqv:
    NoEcho: "true"
    Type: "String"
    Description: "An Amazon S3 bucket in the same AWS-Region as your function. The\
      \ bucket can be in a different AWS-account."
  LambdaFunction00sgprodgenairagsummariser00rFz1vCodeS3Bucket79RLf:
    NoEcho: "true"
    Type: "String"
    Description: "An Amazon S3 bucket in the same AWS-Region as your function. The\
      \ bucket can be in a different AWS-account."
  LambdaFunction00StartEC2Instances00MHqS9CodeImageUriaKCgd:
    NoEcho: "true"
    Type: "String"
    Description: "URI of a [container image](https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html)\
      \ in the Amazon ECR registry."
  LambdaFunction00testuploads300XYdXGCodeImageUriMGMe3:
    NoEcho: "true"
    Type: "String"
    Description: "URI of a [container image](https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html)\
      \ in the Amazon ECR registry."
  LambdaFunction00testingest00w7sc4CodeImageUriPmRLd:
    NoEcho: "true"
    Type: "String"
    Description: "URI of a [container image](https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html)\
      \ in the Amazon ECR registry."
  LambdaFunction00sgprodgenairagsummariser00rFz1vCodeZipFileGdN37:
    NoEcho: "true"
    Type: "String"
    Description: "(Node.js and Python) The source code of your Lambda function. If\
      \ you include your function source inline with this parameter, CFN places it\
      \ in a file named ``index`` and zips it to create a [deployment package](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html).\
      \ This zip file cannot exceed 4MB. For the ``Handler`` property, the first part\
      \ of the handler identifier must be ``index``. For example, ``index.handler``.\n\
      \  For JSON, you must escape quotes and special characters such as newline (``\\\
      n``) with a backslash.\n If you specify a function that interacts with an AWS\
      \ CloudFormation custom resource, you don't have to write your own functions\
      \ to send responses to the custom resource that invoked the function. AWS CloudFormation\
      \ provides a response module ([cfn-response](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-lambda-function-code-cfnresponsemodule.html))\
      \ that simplifies sending responses. See [Using Lambda with CloudFormation](https://docs.aws.amazon.com/lambda/latest/dg/services-cloudformation.html)\
      \ for details."
  LambdaFunction00sgprodgenairetrievedocs00RA8w4CodeImageUri8gvCI:
    NoEcho: "true"
    Type: "String"
    Description: "URI of a [container image](https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html)\
      \ in the Amazon ECR registry."
  LambdaFunction00sgtestgenaisummariserretrievetofrontend00yM0rsCodeS3ObjectVersionqVty4:
    NoEcho: "true"
    Type: "String"
    Description: "For versioned objects, the version of the deployment package object\
      \ to use."
  LambdaFunction00StartEC2Instances00MHqS9CodeSourceKMSKeyArnv4R4D:
    NoEcho: "true"
    Type: "String"
    Description: "Value of write only property Code/SourceKMSKeyArn of resource LambdaFunction00StartEC2Instances00MHqS9."
  LambdaFunction00sgprodgenairetrievedocssgmkr00Fg4smCodeImageUriVCp86:
    NoEcho: "true"
    Type: "String"
    Description: "URI of a [container image](https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html)\
      \ in the Amazon ECR registry."
  LambdaFunction00TBDdummylambdapython31200yxco7CodeZipFileDK71u:
    NoEcho: "true"
    Type: "String"
    Description: "(Node.js and Python) The source code of your Lambda function. If\
      \ you include your function source inline with this parameter, CFN places it\
      \ in a file named ``index`` and zips it to create a [deployment package](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html).\
      \ This zip file cannot exceed 4MB. For the ``Handler`` property, the first part\
      \ of the handler identifier must be ``index``. For example, ``index.handler``.\n\
      \  For JSON, you must escape quotes and special characters such as newline (``\\\
      n``) with a backslash.\n If you specify a function that interacts with an AWS\
      \ CloudFormation custom resource, you don't have to write your own functions\
      \ to send responses to the custom resource that invoked the function. AWS CloudFormation\
      \ provides a response module ([cfn-response](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-lambda-function-code-cfnresponsemodule.html))\
      \ that simplifies sending responses. See [Using Lambda with CloudFormation](https://docs.aws.amazon.com/lambda/latest/dg/services-cloudformation.html)\
      \ for details."
  LambdaFunction00sgtestasyncoutputgenerator00F4igyCodeS3KeyRNOLB:
    NoEcho: "true"
    Type: "String"
    Description: "The Amazon S3 key of the deployment package."
  LambdaFunction00TOBEDELETEDtestfunctionsqs00IfKlXCodeImageUrigeW5h:
    NoEcho: "true"
    Type: "String"
    Description: "URI of a [container image](https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html)\
      \ in the Amazon ECR registry."
  LambdaFunction00sgprodgenairagsummariser00rFz1vCodeSourceKMSKeyArnORqeh:
    NoEcho: "true"
    Type: "String"
    Description: "Value of write only property Code/SourceKMSKeyArn of resource LambdaFunction00sgprodgenairagsummariser00rFz1v."
  LambdaFunction00sgprodgenairetrievedocs00RA8w4CodeS3ObjectVersionDv7se:
    NoEcho: "true"
    Type: "String"
    Description: "For versioned objects, the version of the deployment package object\
      \ to use."
  LambdaFunction00StartEC2Instances00MHqS9CodeS3KeyEJtW5:
    NoEcho: "true"
    Type: "String"
    Description: "The Amazon S3 key of the deployment package."
  LambdaFunction00testuploads300XYdXGCodeS3ObjectVersionM9I4l:
    NoEcho: "true"
    Type: "String"
    Description: "For versioned objects, the version of the deployment package object\
      \ to use."
  LambdaFunction00sgprodgenaideleteobjects300UvJu4CodeImageUri4OoAb:
    NoEcho: "true"
    Type: "String"
    Description: "URI of a [container image](https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html)\
      \ in the Amazon ECR registry."
  LambdaFunction00sgprodgenais3triggertutorial004FiTWCodeS3Bucketj68PG:
    NoEcho: "true"
    Type: "String"
    Description: "An Amazon S3 bucket in the same AWS-Region as your function. The\
      \ bucket can be in a different AWS-account."
  LambdaFunction00StopEC2Instances00PCSJxCodeS3BucketsTmcw:
    NoEcho: "true"
    Type: "String"
    Description: "An Amazon S3 bucket in the same AWS-Region as your function. The\
      \ bucket can be in a different AWS-account."
  LambdaFunction00TBDdummylambdapython31200yxco7CodeSourceKMSKeyArnMHNJV:
    NoEcho: "true"
    Type: "String"
    Description: "Value of write only property Code/SourceKMSKeyArn of resource LambdaFunction00TBDdummylambdapython31200yxco7."
  LambdaFunction00testingest00w7sc4CodeSourceKMSKeyArnzmw2E:
    NoEcho: "true"
    Type: "String"
    Description: "Value of write only property Code/SourceKMSKeyArn of resource LambdaFunction00testingest00w7sc4."
  LambdaFunction00testretrieves3metadata00bgeRMCodeS3ObjectVersionEn8an:
    NoEcho: "true"
    Type: "String"
    Description: "For versioned objects, the version of the deployment package object\
      \ to use."
  LambdaFunction00sgtestgenaisummariserretrievetofrontend00yM0rsCodeImageUrivN0Y6:
    NoEcho: "true"
    Type: "String"
    Description: "URI of a [container image](https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html)\
      \ in the Amazon ECR registry."
  LambdaFunction00sgtestasyncoutputgenerator00F4igyCodeS3ObjectVersioncC6rF:
    NoEcho: "true"
    Type: "String"
    Description: "For versioned objects, the version of the deployment package object\
      \ to use."
  LambdaFunction00sgtestgenaisummariserretrievetofrontendERROR00zqPX0CodeImageUriyjKHK:
    NoEcho: "true"
    Type: "String"
    Description: "URI of a [container image](https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html)\
      \ in the Amazon ECR registry."
  LambdaFunction00testretrieves3metadata00bgeRMCodeS3BucketZSEuJ:
    NoEcho: "true"
    Type: "String"
    Description: "An Amazon S3 bucket in the same AWS-Region as your function. The\
      \ bucket can be in a different AWS-account."
  LambdaFunction00sgprodgenairetrievedocs00RA8w4CodeS3KeywGSg0:
    NoEcho: "true"
    Type: "String"
    Description: "The Amazon S3 key of the deployment package."
  LambdaFunction00sgprodgenairagsummariser00rFz1vCodeS3Keyi2O6i:
    NoEcho: "true"
    Type: "String"
    Description: "The Amazon S3 key of the deployment package."
  LambdaFunction00sgprodgenais3triggertutorial004FiTWCodeImageUriCBKEf:
    NoEcho: "true"
    Type: "String"
    Description: "URI of a [container image](https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html)\
      \ in the Amazon ECR registry."
  LambdaFunction00sgprodgenaideleteobjects300UvJu4CodeS3ObjectVersionqvjsy:
    NoEcho: "true"
    Type: "String"
    Description: "For versioned objects, the version of the deployment package object\
      \ to use."
  LambdaFunction00sgtestasyncoutputretrieve00bLo4BCodeS3KeyPQRIp:
    NoEcho: "true"
    Type: "String"
    Description: "The Amazon S3 key of the deployment package."
  LambdaFunction00testretrieves3metadata00bgeRMCodeImageUritSiib:
    NoEcho: "true"
    Type: "String"
    Description: "URI of a [container image](https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html)\
      \ in the Amazon ECR registry."
  LambdaFunction00testuploads300XYdXGCodeZipFilekDD56:
    NoEcho: "true"
    Type: "String"
    Description: "(Node.js and Python) The source code of your Lambda function. If\
      \ you include your function source inline with this parameter, CFN places it\
      \ in a file named ``index`` and zips it to create a [deployment package](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html).\
      \ This zip file cannot exceed 4MB. For the ``Handler`` property, the first part\
      \ of the handler identifier must be ``index``. For example, ``index.handler``.\n\
      \  For JSON, you must escape quotes and special characters such as newline (``\\\
      n``) with a backslash.\n If you specify a function that interacts with an AWS\
      \ CloudFormation custom resource, you don't have to write your own functions\
      \ to send responses to the custom resource that invoked the function. AWS CloudFormation\
      \ provides a response module ([cfn-response](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-lambda-function-code-cfnresponsemodule.html))\
      \ that simplifies sending responses. See [Using Lambda with CloudFormation](https://docs.aws.amazon.com/lambda/latest/dg/services-cloudformation.html)\
      \ for details."
  LambdaFunction00sgtestasyncoutputretrieve00bLo4BCodeS3BucketvhN6X:
    NoEcho: "true"
    Type: "String"
    Description: "An Amazon S3 bucket in the same AWS-Region as your function. The\
      \ bucket can be in a different AWS-account."
  LambdaFunction00TOBEDELETEDtestfunctionsqs00IfKlXCodeSourceKMSKeyArnGCwci:
    NoEcho: "true"
    Type: "String"
    Description: "Value of write only property Code/SourceKMSKeyArn of resource LambdaFunction00TOBEDELETEDtestfunctionsqs00IfKlX."
  LambdaFunction00TOBEDELETEDtestfunctionsqs00IfKlXCodeS3ObjectVersioniGwll:
    NoEcho: "true"
    Type: "String"
    Description: "For versioned objects, the version of the deployment package object\
      \ to use."
  LambdaFunction00testretrieves3metadata00bgeRMCodeSourceKMSKeyArnHMaZL:
    NoEcho: "true"
    Type: "String"
    Description: "Value of write only property Code/SourceKMSKeyArn of resource LambdaFunction00testretrieves3metadata00bgeRM."
  LambdaFunction00TOBEDELETEDtestfunctionsqs00IfKlXCodeS3KeyQORTk:
    NoEcho: "true"
    Type: "String"
    Description: "The Amazon S3 key of the deployment package."
  LambdaFunction00sgprodgenairetrievedocssgmkr00Fg4smCodeSourceKMSKeyArnGBQk2:
    NoEcho: "true"
    Type: "String"
    Description: "Value of write only property Code/SourceKMSKeyArn of resource LambdaFunction00sgprodgenairetrievedocssgmkr00Fg4sm."
  LambdaFunction00TBDdummylambdapython31200yxco7CodeS3BucketBYSpO:
    NoEcho: "true"
    Type: "String"
    Description: "An Amazon S3 bucket in the same AWS-Region as your function. The\
      \ bucket can be in a different AWS-account."
  LambdaFunction00sgprodgenairetrievedocssgmkr00Fg4smCodeS3ObjectVersiondChG5:
    NoEcho: "true"
    Type: "String"
    Description: "For versioned objects, the version of the deployment package object\
      \ to use."
  LambdaFunction00StartEC2Instances00MHqS9CodeS3ObjectVersionIGXP2:
    NoEcho: "true"
    Type: "String"
    Description: "For versioned objects, the version of the deployment package object\
      \ to use."
  LambdaFunction00sgtestgenaisummariserretrievetofrontendERROR00zqPX0CodeS3ObjectVersionGfcmH:
    NoEcho: "true"
    Type: "String"
    Description: "For versioned objects, the version of the deployment package object\
      \ to use."
  LambdaFunction00testretrieves3metadata00bgeRMCodeS3Key2FFW9:
    NoEcho: "true"
    Type: "String"
    Description: "The Amazon S3 key of the deployment package."
  LambdaFunction00StopEC2Instances00PCSJxCodeS3KeySZh2G:
    NoEcho: "true"
    Type: "String"
    Description: "The Amazon S3 key of the deployment package."
  LambdaFunction00sgprodgenairetrievedocssgmkr00Fg4smCodeZipFileJpVSD:
    NoEcho: "true"
    Type: "String"
    Description: "(Node.js and Python) The source code of your Lambda function. If\
      \ you include your function source inline with this parameter, CFN places it\
      \ in a file named ``index`` and zips it to create a [deployment package](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html).\
      \ This zip file cannot exceed 4MB. For the ``Handler`` property, the first part\
      \ of the handler identifier must be ``index``. For example, ``index.handler``.\n\
      \  For JSON, you must escape quotes and special characters such as newline (``\\\
      n``) with a backslash.\n If you specify a function that interacts with an AWS\
      \ CloudFormation custom resource, you don't have to write your own functions\
      \ to send responses to the custom resource that invoked the function. AWS CloudFormation\
      \ provides a response module ([cfn-response](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-lambda-function-code-cfnresponsemodule.html))\
      \ that simplifies sending responses. See [Using Lambda with CloudFormation](https://docs.aws.amazon.com/lambda/latest/dg/services-cloudformation.html)\
      \ for details."
  LambdaFunction00StopEC2Instances00PCSJxCodeImageUri2zRI3:
    NoEcho: "true"
    Type: "String"
    Description: "URI of a [container image](https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html)\
      \ in the Amazon ECR registry."
  LambdaFunction00sgprodgenaideleteobjects300UvJu4CodeSourceKMSKeyArnfMUAo:
    NoEcho: "true"
    Type: "String"
    Description: "Value of write only property Code/SourceKMSKeyArn of resource LambdaFunction00sgprodgenaideleteobjects300UvJu4."
  LambdaFunction00StartEC2Instances00MHqS9CodeZipFileCQ8hj:
    NoEcho: "true"
    Type: "String"
    Description: "(Node.js and Python) The source code of your Lambda function. If\
      \ you include your function source inline with this parameter, CFN places it\
      \ in a file named ``index`` and zips it to create a [deployment package](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html).\
      \ This zip file cannot exceed 4MB. For the ``Handler`` property, the first part\
      \ of the handler identifier must be ``index``. For example, ``index.handler``.\n\
      \  For JSON, you must escape quotes and special characters such as newline (``\\\
      n``) with a backslash.\n If you specify a function that interacts with an AWS\
      \ CloudFormation custom resource, you don't have to write your own functions\
      \ to send responses to the custom resource that invoked the function. AWS CloudFormation\
      \ provides a response module ([cfn-response](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-lambda-function-code-cfnresponsemodule.html))\
      \ that simplifies sending responses. See [Using Lambda with CloudFormation](https://docs.aws.amazon.com/lambda/latest/dg/services-cloudformation.html)\
      \ for details."
  LambdaFunction00sgtestasyncoutputretrieve00bLo4BCodeImageUrimOiGy:
    NoEcho: "true"
    Type: "String"
    Description: "URI of a [container image](https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html)\
      \ in the Amazon ECR registry."
  LambdaFunction00sgtestasyncoutputgenerator00F4igyCodeS3Bucketbi4xN:
    NoEcho: "true"
    Type: "String"
    Description: "An Amazon S3 bucket in the same AWS-Region as your function. The\
      \ bucket can be in a different AWS-account."
  LambdaFunction00sgtestgenaisummariserretrievetofrontendERROR00zqPX0CodeS3BucketzF0n1:
    NoEcho: "true"
    Type: "String"
    Description: "An Amazon S3 bucket in the same AWS-Region as your function. The\
      \ bucket can be in a different AWS-account."
  LambdaFunction00testingest00w7sc4CodeZipFile8OGBg:
    NoEcho: "true"
    Type: "String"
    Description: "(Node.js and Python) The source code of your Lambda function. If\
      \ you include your function source inline with this parameter, CFN places it\
      \ in a file named ``index`` and zips it to create a [deployment package](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html).\
      \ This zip file cannot exceed 4MB. For the ``Handler`` property, the first part\
      \ of the handler identifier must be ``index``. For example, ``index.handler``.\n\
      \  For JSON, you must escape quotes and special characters such as newline (``\\\
      n``) with a backslash.\n If you specify a function that interacts with an AWS\
      \ CloudFormation custom resource, you don't have to write your own functions\
      \ to send responses to the custom resource that invoked the function. AWS CloudFormation\
      \ provides a response module ([cfn-response](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-lambda-function-code-cfnresponsemodule.html))\
      \ that simplifies sending responses. See [Using Lambda with CloudFormation](https://docs.aws.amazon.com/lambda/latest/dg/services-cloudformation.html)\
      \ for details."
  LambdaFunction00sgtestgenaisummariserretrievetofrontend00yM0rsCodeS3KeyPvadC:
    NoEcho: "true"
    Type: "String"
    Description: "The Amazon S3 key of the deployment package."
  LambdaFunction00sgtestasyncoutputgenerator00F4igyCodeImageUriD9H2v:
    NoEcho: "true"
    Type: "String"
    Description: "URI of a [container image](https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html)\
      \ in the Amazon ECR registry."
  LambdaFunction00testingest00w7sc4CodeS3KeyVP8gy:
    NoEcho: "true"
    Type: "String"
    Description: "The Amazon S3 key of the deployment package."
  LambdaFunction00testingest00w7sc4CodeS3ObjectVersionDTaFq:
    NoEcho: "true"
    Type: "String"
    Description: "For versioned objects, the version of the deployment package object\
      \ to use."
  LambdaFunction00sgtestgenaisummariserretrievetofrontend00yM0rsCodeSourceKMSKeyArnPUQol:
    NoEcho: "true"
    Type: "String"
    Description: "Value of write only property Code/SourceKMSKeyArn of resource LambdaFunction00sgtestgenaisummariserretrievetofrontend00yM0rs."
  IAMRole00AmazonSageMakerServiceCatalogProductsEventsRole00Zw0Pq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/service-role/AmazonSageMakerServiceCatalogProductsEventsServiceRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "AmazonSageMakerServiceCatalogProductsEventsRole"
      Description: "SageMaker role created from the SageMaker AWS Management Console.\
        \ This role will grant permissions required to use AWS Events within the Amazon\
        \ SageMaker portfolio of products."
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "events.amazonaws.com"
          Sid: ""
  LambdaVersion00functionsgprodgenairagsummariser1100ke2O5:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Version"
    DeletionPolicy: "Retain"
    Properties:
      CodeSha256: "f60250ae753f0d31ccff62ddfbd9ea8211f4faea23af09ad3f22aaf91ee1d4e0"
      FunctionName:
        Ref: "LambdaFunction00sgprodgenairagsummariser00rFz1v"
      Description: ""
  NeptuneDBCluster00sgprodgenaiauthdbv200rdakT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Neptune::DBCluster"
    DeletionPolicy: "Retain"
    Properties:
      StorageEncrypted: true
      EngineVersion: "5.0.0"
      KmsKeyId:
        Fn::GetAtt:
        - "KMSKey0051a5c08ff1b24e92b22b5784f7f0dc3300rv3Pv"
        - "Arn"
      AssociatedRoles: []
      AvailabilityZones:
      - "ap-southeast-1a"
      - "ap-southeast-1b"
      - "ap-southeast-1c"
      DBClusterIdentifier: "sg-prod-genai-authdb-v2"
      PreferredMaintenanceWindow: "sun:03:00-sun:03:30"
      IamAuthEnabled: false
      DBSubnetGroupName: "genai-pilot-database-private"
      DeletionProtection: true
      PreferredBackupWindow: "00:00-00:30"
      DBPort: 27017
      VpcSecurityGroupIds:
      - "sg-075615342aa3e28b9"
      - "sg-02a57c92533299fd5"
      CopyTagsToSnapshot: false
      DBClusterParameterGroupName: "default.docdb5.0"
      BackupRetentionPeriod: 7
      Tags: []
      EnableCloudwatchLogsExports:
      - "audit"
      - "profiler"
  RDSDBCluster00sgprodgenaiauthdbv200lZVmv:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::RDS::DBCluster"
    DeletionPolicy: "Retain"
    Properties:
      StorageEncrypted: true
      AssociatedRoles: []
      EnableHttpEndpoint: false
      EngineMode: "provisioned"
      Port: 27017
      DBClusterIdentifier: "sg-prod-genai-authdb-v2"
      PreferredBackupWindow: "00:00-00:30"
      NetworkType: "IPV4"
      VpcSecurityGroupIds:
      - "sg-075615342aa3e28b9"
      - "sg-02a57c92533299fd5"
      CopyTagsToSnapshot: false
      Engine: "docdb"
      Tags: []
      EngineVersion: "5.0.0"
      StorageType: "aurora"
      KmsKeyId:
        Fn::GetAtt:
        - "KMSKey0051a5c08ff1b24e92b22b5784f7f0dc3300rv3Pv"
        - "Arn"
      AvailabilityZones:
      - "ap-southeast-1a"
      - "ap-southeast-1b"
      - "ap-southeast-1c"
      EnableLocalWriteForwarding: false
      PreferredMaintenanceWindow: "sun:03:00-sun:03:30"
      AutoMinorVersionUpgrade: false
      DBSubnetGroupName:
        Ref: "RDSDBSubnetGroup00genaipilotdatabaseprivate00FOLyi"
      DeletionProtection: true
      AllocatedStorage: 1
      ManageMasterUserPassword: false
      MasterUserSecret: {}
      MasterUsername: "Superadmin"
      ReadEndpoint: {}
      EnableIAMDatabaseAuthentication: false
      DBClusterParameterGroupName: "default.docdb5.0"
      BackupRetentionPeriod: 7
      EnableCloudwatchLogsExports:
      - "audit"
      - "profiler"
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole72c8fad67f404948bc5261bb9aca65a100P8DSa:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-72c8fad6-7f40-4948-bc52-61bb9aca65a1"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:us-east-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:us-east-1:343218203122:log-group:/aws/lambda/sg-prod-genai-summariser-sgmkr-220-v1:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgprodgenaisummarisersgmkr220v1role115c2d3q00XGLty"
      Users: []
  IAMRole00AmazonSageMakerServiceCatalogProductsApiGatewayRole00fK3tD:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/service-role/AmazonSageMakerServiceCatalogProductsApiGatewayServiceRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "AmazonSageMakerServiceCatalogProductsApiGatewayRole"
      Description: "SageMaker role created from the SageMaker AWS Management Console.\
        \ This role will grant permissions required to use AWS ApiGateway within the\
        \ Amazon SageMaker portfolio of products."
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "apigateway.amazonaws.com"
  EC2Subnet00subnet0d1db15411089416b0025bgM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Subnet"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00HMUI8"
      MapPublicIpOnLaunch: false
      EnableDns64: false
      AvailabilityZoneId: "apse1-az3"
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      CidrBlock: "10.25.71.192/27"
      Ipv6Native: false
      Tags:
      - Value: "GenAI-Dev-Application-Private-1c"
        Key: "Name"
  IAMRole00sgprodgenaiembedding216v1rolesnvor3l700F7Omp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-ed12a80c-554d-4b69-ad06-a641d3d55dd3"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-embedding-216-v1-role-snvor3l7"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole19fcf6129ab34a569ea988d5ee03b9f500yJctm:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-19fcf612-9ab3-4a56-9ea9-88d5ee03b9f5"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/testonly:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00testonlyrolenfg62mse00upNXc"
      Users: []
  IAMRole00sgwssgetCategoriesroleywzj7th700SBt9U:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/AmazonBedrockFullAccess"
      - "arn:aws:iam::aws:policy/AmazonAPIGatewayInvokeFullAccess"
      - "arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy"
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-e3f8658b-1e0a-47f4-af73-ceba309f797e"
      MaxSessionDuration: 3600
      RoleName: "sg-wss-getCategories-role-ywzj7th7"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  EC2NetworkInterface00eni03fe0ac31fc735c3100N9ywo:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: ""
      PrivateIpAddress: "10.25.71.183"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.183"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-07fd500f946aad8a2"
      - "sg-0158898f4b43a0ae9"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00GtpLi"
      SourceDestCheck: true
      InterfaceType: "interface"
      Tags: []
  SQSQueue00summarisercontinuousconversationfifo0034XKU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::SQS::Queue"
    DeletionPolicy: "Retain"
    Properties:
      ReceiveMessageWaitTimeSeconds: 0
      SqsManagedSseEnabled: true
      FifoThroughputLimit: "perQueue"
      DelaySeconds: 0
      FifoQueue: true
      MessageRetentionPeriod: 1800
      MaximumMessageSize: 262144
      DeduplicationScope: "queue"
      VisibilityTimeout: 300
      ContentBasedDeduplication: true
      QueueName: "summariser_continuous_conversation.fifo"
  IAMRole00sgprodgenairelevantdocssgmkr216v1roleifo2j6bd00UCgUq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-5e5ce3b8-4387-4532-aa72-088dbc654625"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-relevantdocs-sgmkr-216-v1-role-ifo2j6bd"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMRole00AWSServiceRoleForAmazonSageMakerNotebooks00AwyGC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/aws-service-role/sagemaker.amazonaws.com/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/aws-service-role/AmazonSageMakerNotebooksServiceRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "AWSServiceRoleForAmazonSageMakerNotebooks"
      Description: "AWS SageMaker Notebooks Service Linked Role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "sagemaker.amazonaws.com"
  EC2VolumeAttachment00vol086aefbd878266b9500gDXmG:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VolumeAttachment"
    DeletionPolicy: "Retain"
    Properties:
      InstanceId: "i-020d34aa93d2d7e6f"
      VolumeId: "vol-086aefbd878266b95"
      Device: "/dev/sda1"
  IAMRole00sgtestasyncoutputretrieverolezouh477p00H9HhV:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaVPCAccessExecutionRole-b57946ea-2e9c-4510-82aa-3a4fd3a137de"
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-8541693f-50fd-4a60-9c4a-47d70a4f284c"
      MaxSessionDuration: 3600
      RoleName: "sg-test-async-output-retrieve-role-zouh477p"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMRole00sgprodgenairelevantdocs216v1roleq5n41cwk00sEVxp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-da83cadd-73a9-4f6d-8dff-cc3788405fe0"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-relevantdocs-216-v1-role-q5n41cwk"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  LambdaPermission00functionsgprodgenairetrievedocssgmkr002Y06l:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Permission"
    DeletionPolicy: "Retain"
    Properties:
      FunctionName:
        Fn::GetAtt:
        - "LambdaFunction00sgprodgenairetrievedocssgmkr00Fg4sm"
        - "Arn"
      Action: "lambda:InvokeFunction"
      SourceArn: "arn:aws:execute-api:ap-southeast-1:343218203122:5bz5602exb/*/*/casefinder_retrievedocs_sagemaker"
      Principal: "apigateway.amazonaws.com"
  IAMManagedPolicy00policyserviceroleAWSLambdaVPCAccessExecutionRoleeb939dd910c5410e9399b506c4ad65bf00sidSi:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaVPCAccessExecutionRole-eb939dd9-10c5-410e-9399-b506c4ad65bf"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "*"
          Action:
          - "ec2:CreateNetworkInterface"
          - "ec2:DeleteNetworkInterface"
          - "ec2:DescribeNetworkInterfaces"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgtestgenaisummariserretrievetofrontendrolereppyiad005NSsR"
      Users: []
  LambdaFunction00sgtestasyncoutputretrieve00bLo4B:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Function"
    DeletionPolicy: "Retain"
    Properties:
      MemorySize: 128
      Description: ""
      TracingConfig:
        Mode: "PassThrough"
      VpcConfig:
        SecurityGroupIds:
        - "sg-075615342aa3e28b9"
        SubnetIds:
        - Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00GtpLi"
        - Ref: "EC2Subnet00subnet0d1db15411089416b0025bgM"
        Ipv6AllowedForDualStack: false
      Timeout: 900
      RuntimeManagementConfig:
        UpdateRuntimeOn: "Auto"
      Handler: "lambda_function.lambda_handler"
      Code:
        SourceKMSKeyArn:
          Ref: "LambdaFunction00sgtestasyncoutputretrieve00bLo4BCodeSourceKMSKeyArn1Y3dj"
        S3ObjectVersion:
          Ref: "LambdaFunction00sgtestasyncoutputretrieve00bLo4BCodeS3ObjectVersionuMwqY"
        S3Bucket:
          Ref: "LambdaFunction00sgtestasyncoutputretrieve00bLo4BCodeS3BucketvhN6X"
        ZipFile:
          Ref: "LambdaFunction00sgtestasyncoutputretrieve00bLo4BCodeZipFile7RiFD"
        ImageUri:
          Ref: "LambdaFunction00sgtestasyncoutputretrieve00bLo4BCodeImageUrimOiGy"
        S3Key:
          Ref: "LambdaFunction00sgtestasyncoutputretrieve00bLo4BCodeS3KeyPQRIp"
      Role:
        Fn::GetAtt:
        - "IAMRole00sgtestasyncoutputretrieverolezouh477p00H9HhV"
        - "Arn"
      FileSystemConfigs: []
      FunctionName: "sg-test-async-output-retrieve"
      Runtime: "python3.9"
      PackageType: "Zip"
      LoggingConfig:
        LogFormat: "Text"
        LogGroup: "/aws/lambda/sg-test-async-output-retrieve"
      RecursiveLoop: "Terminate"
      EphemeralStorage:
        Size: 512
      Architectures:
      - "x86_64"
  LambdaFunction00TBDdummylambdapython31200yxco7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Function"
    DeletionPolicy: "Retain"
    Properties:
      MemorySize: 128
      Description: ""
      TracingConfig:
        Mode: "PassThrough"
      Timeout: 3
      RuntimeManagementConfig:
        UpdateRuntimeOn: "Auto"
      Handler: "lambda_function.lambda_handler"
      Code:
        SourceKMSKeyArn:
          Ref: "LambdaFunction00TBDdummylambdapython31200yxco7CodeSourceKMSKeyArnMHNJV"
        S3ObjectVersion:
          Ref: "LambdaFunction00TBDdummylambdapython31200yxco7CodeS3ObjectVersionRIgic"
        S3Bucket:
          Ref: "LambdaFunction00TBDdummylambdapython31200yxco7CodeS3BucketBYSpO"
        ZipFile:
          Ref: "LambdaFunction00TBDdummylambdapython31200yxco7CodeZipFileDK71u"
        ImageUri:
          Ref: "LambdaFunction00TBDdummylambdapython31200yxco7CodeImageUriGXyCY"
        S3Key:
          Ref: "LambdaFunction00TBDdummylambdapython31200yxco7CodeS3Key8Vgdf"
      Role:
        Fn::GetAtt:
        - "IAMRole00TBDdummylambdapython312rolebdh3shth00FpJCY"
        - "Arn"
      FileSystemConfigs: []
      FunctionName: "TBD-dummy-lambda-python312"
      Runtime: "python3.12"
      PackageType: "Zip"
      LoggingConfig:
        LogFormat: "Text"
        LogGroup: "/aws/lambda/TBD-dummy-lambda-python312"
      RecursiveLoop: "Terminate"
      EphemeralStorage:
        Size: 512
      Architectures:
      - "x86_64"
  IAMRole00sgprodgenaisummarisersgmkrrole59rxtb9s00LWVCf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-495c3c74-e322-4294-8a43-300168dd3e0e"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-summariser-sgmkr-role-59rxtb9s"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMRole00sgprodgenairelevantdocssgmkrv1rolem6i3uxr900EruKt:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-1a0e2e1f-a03c-4052-ac43-b0422a6174f1"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-relevantdocs-sgmkr-v1-role-m6i3uxr9"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  EC2SecurityGroup00sg02a57c92533299fd5002bQaE:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "Allows access from EC2"
      GroupName: "websocketDocDB"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00HMUI8"
      SecurityGroupIngress:
      - CidrIp:
          Fn::GetAtt:
          - "EC2VPC00vpc02790342fee4ebf9f00HMUI8"
          - "CidrBlock"
        IpProtocol: "tcp"
        Description: "allow inbound from firewall"
        FromPort: 27017
        ToPort: 27017
      - IpProtocol: "tcp"
        FromPort: 27017
        SourceSecurityGroupId: "sg-075615342aa3e28b9"
        ToPort: 27017
        SourceSecurityGroupOwnerId: "343218203122"
      - IpProtocol: "tcp"
        FromPort: 27017
        SourceSecurityGroupId: "sg-0fd865e5bd1a64a07"
        ToPort: 27017
        SourceSecurityGroupOwnerId: "343218203122"
      - IpProtocol: "tcp"
        Description: "allow inbound from alb internal"
        FromPort: 27017
        SourceSecurityGroupId: "sg-0fbe083eaa2bbd46c"
        ToPort: 27017
        SourceSecurityGroupOwnerId: "343218203122"
      - IpProtocol: "tcp"
        Description: "allow inbound from ECS frontend"
        FromPort: 27017
        SourceSecurityGroupId: "sg-06010a299d4942ce2"
        ToPort: 27017
        SourceSecurityGroupOwnerId: "343218203122"
      - IpProtocol: "tcp"
        Description: "allow inbound from itself"
        FromPort: 27017
        SourceSecurityGroupId: "sg-02a57c92533299fd5"
        ToPort: 27017
        SourceSecurityGroupOwnerId: "343218203122"
      - IpProtocol: "tcp"
        Description: "allow inbound from lambda"
        FromPort: 27017
        SourceSecurityGroupId: "sg-03d66fb80efac83a5"
        ToPort: 27017
        SourceSecurityGroupOwnerId: "343218203122"
      - IpProtocol: "tcp"
        Description: "DocuDB SG"
        FromPort: 443
        SourceSecurityGroupId: "sg-02a57c92533299fd5"
        ToPort: 443
        SourceSecurityGroupOwnerId: "343218203122"
      - IpProtocol: "tcp"
        Description: "From ECS Frontend SG"
        FromPort: 443
        SourceSecurityGroupId: "sg-06010a299d4942ce2"
        ToPort: 443
        SourceSecurityGroupOwnerId: "343218203122"
      - IpProtocol: "tcp"
        Description: "VPC Endpoint SG"
        FromPort: 443
        SourceSecurityGroupId: "sg-0ef00776c538db142"
        ToPort: 443
        SourceSecurityGroupOwnerId: "343218203122"
      SecurityGroupEgress:
      - CidrIp:
          Fn::GetAtt:
          - "EC2VPC00vpc02790342fee4ebf9f00HMUI8"
          - "CidrBlock"
        IpProtocol: "-1"
        Description: "Internal traffic only"
        FromPort: -1
        ToPort: -1
      - IpProtocol: "tcp"
        DestinationSecurityGroupId: "sg-02a57c92533299fd5"
        FromPort: 443
        ToPort: 443
  IAMRole00sgprodgenaideleteobjects3role5jyencc400qDeqO:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-2a7013cf-ab2a-42ea-8af9-23bee3774c25"
      - "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
      - "arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-deleteobject-s3-role-5jyencc4"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  EC2NetworkInterface00eni0c66dedac91dbb82800SHN00:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: ""
      PrivateIpAddress: "10.25.71.175"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.175"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-07fd500f946aad8a2"
      - "sg-0fd865e5bd1a64a07"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00GtpLi"
      SourceDestCheck: true
      InterfaceType: "interface"
      Tags: []
  IAMRole00sgtestasyncoutputgeneratorrole0lwo40k100Oxkpv:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-93e015c8-ba22-4a97-99ab-74a7c3b009ce"
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaVPCAccessExecutionRole-decc2e5a-9483-4c84-9ccb-c2f430f7f86d"
      MaxSessionDuration: 3600
      RoleName: "sg-test-async-output-generator-role-0lwo40k1"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  LambdaVersion00functionsgtestgenaisummariserretrievetofrontend100a9Dp7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Version"
    DeletionPolicy: "Retain"
    Properties:
      FunctionName:
        Ref: "LambdaFunction00sgtestgenaisummariserretrievetofrontend00yM0rs"
      Description: "V2"
      RuntimePolicy:
        UpdateRuntimeOn: "Auto"
      CodeSha256: "/f7CRq1Uk9elN2u+Q/i0EqvO2/VXRx/c/i45EG7FZ48="
  IAMRole00AWSServiceRoleForAccessAnalyzer00V2KP7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/aws-service-role/access-analyzer.amazonaws.com/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/aws-service-role/AccessAnalyzerServiceRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "AWSServiceRoleForAccessAnalyzer"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "access-analyzer.amazonaws.com"
  RDSDBInstance00sgprodgenaisummariserv100b4PxE:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::RDS::DBInstance"
    DeletionPolicy: "Retain"
    Properties:
      StorageEncrypted: true
      AssociatedRoles: []
      CertificateDetails: {}
      Port: "27017"
      DBClusterIdentifier:
        Ref: "RDSDBCluster00sgprodgenaisummariserv100IE7gQ"
      ProcessorFeatures: []
      StorageThroughput: 0
      PreferredBackupWindow: "00:00-00:30"
      MonitoringInterval: 0
      DBParameterGroupName: "default.docdb5.0"
      Endpoint: {}
      NetworkType: "IPV4"
      DedicatedLogVolume: false
      CopyTagsToSnapshot: false
      MultiAZ: false
      Engine: "docdb"
      Tags: []
      LicenseModel: "na"
      EngineVersion: "5.0.0"
      StorageType: "standard"
      KmsKeyId:
        Fn::GetAtt:
        - "KMSKey0051a5c08ff1b24e92b22b5784f7f0dc3300rv3Pv"
        - "Arn"
      DBInstanceClass: "db.t3.medium"
      AvailabilityZone: "ap-southeast-1b"
      OptionGroupName: "default:docdb-5-0"
      PreferredMaintenanceWindow: "mon:19:53-mon:20:23"
      EnablePerformanceInsights: false
      AutoMinorVersionUpgrade: true
      DBSubnetGroupName:
        Ref: "RDSDBSubnetGroup00genaipilotdatabaseprivate00FOLyi"
      DeletionProtection: false
      DBInstanceIdentifier: "sg-prod-genai-summariser-v1"
      AllocatedStorage: "1"
      CACertificateIdentifier: "rds-ca-rsa2048-g1"
      ManageMasterUserPassword: false
      MasterUserSecret: {}
      VPCSecurityGroups:
      - Fn::GetAtt:
        - "EC2SecurityGroup00sg075615342aa3e28b900dirPO"
        - "GroupId"
      - Fn::GetAtt:
        - "EC2SecurityGroup00sg02a57c92533299fd5002bQaE"
        - "GroupId"
      DBSecurityGroups: []
      MasterUsername: "summariser"
      EnableIAMDatabaseAuthentication: false
      BackupRetentionPeriod: 7
      PromotionTier: 1
      PubliclyAccessible: false
      EnableCloudwatchLogsExports:
      - "audit"
      - "profiler"
  LambdaFunction00sgprodgenairagsummariser00rFz1v:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Function"
    DeletionPolicy: "Retain"
    Properties:
      MemorySize: 5120
      Description: ""
      TracingConfig:
        Mode: "PassThrough"
      VpcConfig:
        SecurityGroupIds:
        - "sg-03d66fb80efac83a5"
        - "sg-02a57c92533299fd5"
        - "sg-075615342aa3e28b9"
        - "sg-00dd21ae4b1e23f22"
        - "sg-02d1755cab861734f"
        SubnetIds:
        - Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00GtpLi"
        - Ref: "EC2Subnet00subnet0d1db15411089416b0025bgM"
        Ipv6AllowedForDualStack: false
      Timeout: 300
      Code:
        SourceKMSKeyArn:
          Ref: "LambdaFunction00sgprodgenairagsummariser00rFz1vCodeSourceKMSKeyArnORqeh"
        S3ObjectVersion:
          Ref: "LambdaFunction00sgprodgenairagsummariser00rFz1vCodeS3ObjectVersionNHNB5"
        S3Bucket:
          Ref: "LambdaFunction00sgprodgenairagsummariser00rFz1vCodeS3Bucket79RLf"
        ZipFile:
          Ref: "LambdaFunction00sgprodgenairagsummariser00rFz1vCodeZipFileGdN37"
        ImageUri:
          Ref: "LambdaFunction00sgprodgenairagsummariser00rFz1vCodeImageUri6cZCc"
        S3Key:
          Ref: "LambdaFunction00sgprodgenairagsummariser00rFz1vCodeS3Keyi2O6i"
      Role:
        Fn::GetAtt:
        - "IAMRole00sgprodgenaisummariserroleu702de5o00p9Frs"
        - "Arn"
      FileSystemConfigs: []
      FunctionName: "sg-prod-genai-rag-summariser"
      PackageType: "Image"
      LoggingConfig:
        LogFormat: "Text"
        LogGroup: "/aws/lambda/sg-prod-genai-rag-summariser"
      RecursiveLoop: "Terminate"
      Environment:
        Variables:
          HIGH_PRIORITY_QUEUE_ARN: "arn:aws:sqs:ap-southeast-1:343218203122:summariser_continuous_conversation.fifo"
          HIGH_PRIORITY_QUEUE_URL: "https://sqs.ap-southeast-1.amazonaws.com/343218203122/summariser_continuous_conversation.fifo"
          DOCDB_KEY: "mongodb://summariser:summariser123@sg-prod-genai-summariser-v1.cluster-czs8w0aayayu.ap-southeast-1.docdb.amazonaws.com:27017/?tls=true&tlsCAFile=./global-bundle.pem&replicaSet=rs0&readPreference=secondaryPreferred&retryWrites=false"
          NORMAL_PRIORITY_QUEUE_URL: "https://sqs.ap-southeast-1.amazonaws.com/343218203122/summariser_new_conversation.fifo"
          NORMAL_PRIORITY_QUEUE_ARN: "arn:aws:sqs:ap-southeast-1:343218203122:summariser_new_conversation.fifo"
      EphemeralStorage:
        Size: 512
      Architectures:
      - "x86_64"
  LambdaPermission00functionsgtestgenaisummariserretrievetofrontendERROR00Modmf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Permission"
    DeletionPolicy: "Retain"
    Properties:
      FunctionName:
        Fn::GetAtt:
        - "LambdaFunction00sgtestgenaisummariserretrievetofrontendERROR00zqPX0"
        - "Arn"
      Action: "lambda:InvokeFunction"
      SourceArn: "arn:aws:execute-api:ap-southeast-1:343218203122:5nwb46kira/*/GET/sg-test-genai-summariser-retrievetofrontend-error"
      Principal: "apigateway.amazonaws.com"
  EC2Instance00i056aa8a8a3a7d7440001HAB9:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Instance"
    DeletionPolicy: "Retain"
    Properties:
      Tenancy: "default"
      SecurityGroups:
      - "GenAI-Pilot-Private-Tmicro-to-App"
      - "GenAI-Pilot-Private-Cvpn-to-App"
      PrivateIpAddress: "10.25.71.183"
      BlockDeviceMappings:
      - Ebs:
          SnapshotId: "snap-06269d3b382c49703"
          VolumeType: "gp3"
          KmsKeyId:
            Fn::GetAtt:
            - "KMSKey00e0af6c3f73fc497e863a6754f0dce6b100kSC3X"
            - "Arn"
          Encrypted: true
          Iops: 3000
          VolumeSize: 10
          DeleteOnTermination: true
        DeviceName: "/dev/sda1"
      IamInstanceProfile:
        Ref: "IAMInstanceProfile00ec2adminaccess00awY8x"
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00GtpLi"
      EbsOptimized: true
      Volumes:
      - VolumeId: "vol-025bc069a9af78b0f"
        Device: "/dev/sda1"
      NetworkInterfaces:
      - PrivateIpAddresses:
        - PrivateIpAddress: "10.25.71.183"
          Primary: true
        SecondaryPrivateIpAddressCount: 0
        DeviceIndex: "0"
        GroupSet:
        - Ref: "EC2SecurityGroup00sg07fd500f946aad8a200p0vJb"
        - Ref: "EC2SecurityGroup00sg0158898f4b43a0ae900nBPrb"
        Ipv6Addresses: []
        SubnetId:
          Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00GtpLi"
        AssociatePublicIpAddress: false
        NetworkInterfaceId:
          Ref: "EC2NetworkInterface00eni03fe0ac31fc735c3100N9ywo"
        DeleteOnTermination: true
      ImageId: "ami-04b8810eb11008260"
      InstanceType: "t3.xlarge"
      Monitoring: false
      Tags:
      - Value: "ec2-jumpserver-jiahueic"
        Key: "Name"
      InstanceInitiatedShutdownBehavior: "stop"
      CpuOptions:
        ThreadsPerCore: 2
        CoreCount: 2
      AvailabilityZone: "ap-southeast-1b"
      PrivateDnsNameOptions:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      SecurityGroupIds:
      - "sg-07fd500f946aad8a2"
      - "sg-0158898f4b43a0ae9"
      DisableApiTermination: false
      KeyName: "jiahueic-key"
      SourceDestCheck: true
      PlacementGroupName: ""
      VpcId: "vpc-02790342fee4ebf9f"
      State:
        Code: "80"
        Name: "stopped"
      CreditSpecification:
        CPUCredits: "unlimited"
  IAMManagedPolicy00policys3triggertutorial0005irB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "s3-trigger-tutorial"
      Path: "/"
      Description: "for testing s3 with lambda in VPC"
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:*:*:*"
          Action:
          - "logs:PutLogEvents"
          - "logs:CreateLogGroup"
          - "logs:CreateLogStream"
          Effect: "Allow"
        - Resource: "arn:aws:s3:::*/*"
          Action:
          - "s3:GetObject"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00lambdas3triggerroletest00wfwAj"
      Users: []
  IAMRole00AWSServiceRoleForAmazonGuardDutyMalwareProtection00Qu98V:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/aws-service-role/malware-protection.guardduty.amazonaws.com/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/aws-service-role/AmazonGuardDutyMalwareProtectionServiceRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "AWSServiceRoleForAmazonGuardDutyMalwareProtection"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "malware-protection.guardduty.amazonaws.com"
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole808546fc19624a87af4aa2b7f5e78fdf00ncLt8:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-808546fc-1962-4a87-af4a-a2b7f5e78fdf"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:us-east-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:us-east-1:343218203122:log-group:/aws/lambda/sg-prod-genai-embedding-216-v1:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgprodgenaiembedding216v1role13ykijed00jbwtn"
      Users: []
  IAMRole00sgprodgenairetrievedocsrole0rugefme00IkDv4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/AmazonBedrockFullAccess"
      - "arn:aws:iam::aws:policy/AWSLambda_FullAccess"
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-24532a28-a753-499b-94e7-2171697bb0be"
      - "arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-retrievedocs-role-0rugefme"
      Policies:
      - PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Resource: "*"
            Action:
            - "bedrock:InvokeModel"
            - "bedrock:ListFoundationModels"
            Effect: "Allow"
            Sid: "VisualEditor0"
        PolicyName: "BedrockTitanEmbed"
      - PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Resource: "*"
            Action: "lambda:InvokeFunction"
            Effect: "Allow"
            Sid: "VisualEditor0"
        PolicyName: "invokeLambda"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMRole00AWSServiceRoleForAmazonSSM00m5S7M:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/aws-service-role/ssm.amazonaws.com/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/aws-service-role/AmazonSSMServiceRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "AWSServiceRoleForAmazonSSM"
      Description: "Provides access to AWS Resources managed or used by Amazon SSM."
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "ssm.amazonaws.com"
  KMSKey000427c2807f024a39ad8eb57b18fcb60300r2Si6:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::KMS::Key"
    DeletionPolicy: "Retain"
    Properties:
      Origin: "AWS_KMS"
      MultiRegion: false
      Description: "Default key that protects my CodeCommit repositories when no other\
        \ key is defined"
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
        - Condition:
            StringEquals:
              kms:ViaService: "codecommit.ap-southeast-1.amazonaws.com"
              kms:CallerAccount: "343218203122"
          Resource: "*"
          Action:
          - "kms:Encrypt"
          - "kms:Decrypt"
          - "kms:ReEncrypt*"
          - "kms:GenerateDataKey*"
          - "kms:DescribeKey"
          Effect: "Allow"
          Principal:
            AWS: "*"
          Sid: "Allow access through CodeCommit for all principals in the account\
            \ that are authorized to use CodeCommit"
        - Resource: "*"
          Action:
          - "kms:Describe*"
          - "kms:Get*"
          - "kms:List*"
          Effect: "Allow"
          Principal:
            AWS: "arn:aws:iam::343218203122:root"
          Sid: "Allow direct access to key metadata to the account"
        Id: "auto-codecommit-2"
      KeySpec: "SYMMETRIC_DEFAULT"
      Enabled: true
      EnableKeyRotation: true
      KeyUsage: "ENCRYPT_DECRYPT"
      Tags: []
  IAMRole00sgprodgenaideleteobjects3220v1roleoo36c1ei00eJ9wA:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-98bfad84-8005-4bc2-b03f-af9a7391ed80"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-deleteobject-s3-220-v1-role-oo36c1ei"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMInstanceProfile00ec2adminaccess00awY8x:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::InstanceProfile"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/"
      Roles:
      - Ref: "IAMRole00ec2adminaccess00uFD3f"
      InstanceProfileName:
        Ref: "IAMRole00ec2adminaccess00uFD3f"
  IAMManagedPolicy00policyserviceroleAWSLambdaVPCAccessExecutionRoledecc2e5a94834c849ccbc2f430f7f86d00uUUMj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaVPCAccessExecutionRole-decc2e5a-9483-4c84-9ccb-c2f430f7f86d"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "*"
          Action:
          - "ec2:CreateNetworkInterface"
          - "ec2:DeleteNetworkInterface"
          - "ec2:DescribeNetworkInterfaces"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgtestasyncoutputgeneratorrole0lwo40k100Oxkpv"
      Users: []
  IAMRole00sgprodgenairetrievedocssgmkrv1rolem6o1pbmb00aNlC6:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-b95b6d76-b5a0-4fca-852e-ab68617cd455"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-retrievedocs-sgmkr-v1-role-m6o1pbmb"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMRole00sgprodgenairetrievedocsv1rolecjvr7yih00Ap4Pf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-1d038325-9fff-4d7d-bf34-f3281d0abb3b"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-retrievedocs-v1-role-cjvr7yih"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  RDSDBInstance00sgprodgenaicourtcasesdb216v1200rrrsC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::RDS::DBInstance"
    DeletionPolicy: "Retain"
    Properties:
      StorageEncrypted: true
      AssociatedRoles: []
      CertificateDetails: {}
      Port: "27017"
      DBClusterIdentifier:
        Ref: "RDSDBCluster00sgprodgenaicourtcasesdb216v100N3QVN"
      ProcessorFeatures: []
      StorageThroughput: 0
      PreferredBackupWindow: "00:00-00:30"
      MonitoringInterval: 0
      DBParameterGroupName: "default.docdb5.0"
      Endpoint: {}
      NetworkType: "IPV4"
      DedicatedLogVolume: false
      CopyTagsToSnapshot: false
      MultiAZ: false
      Engine: "docdb"
      Tags: []
      LicenseModel: "na"
      EngineVersion: "5.0.0"
      StorageType: "standard"
      KmsKeyId:
        Fn::GetAtt:
        - "KMSKey0051a5c08ff1b24e92b22b5784f7f0dc3300rv3Pv"
        - "Arn"
      DBInstanceClass: "db.t3.medium"
      AvailabilityZone: "ap-southeast-1c"
      OptionGroupName: "default:docdb-5-0"
      PreferredMaintenanceWindow: "wed:15:57-wed:16:27"
      EnablePerformanceInsights: false
      AutoMinorVersionUpgrade: true
      DBSubnetGroupName:
        Ref: "RDSDBSubnetGroup00genaipilotdatabaseprivate00FOLyi"
      DeletionProtection: false
      DBInstanceIdentifier: "sg-prod-genai-courtcasesdb-216-v1-2"
      AllocatedStorage: "1"
      CACertificateIdentifier: "rds-ca-rsa2048-g1"
      ManageMasterUserPassword: false
      MasterUserSecret: {}
      VPCSecurityGroups:
      - Fn::GetAtt:
        - "EC2SecurityGroup00sg075615342aa3e28b900dirPO"
        - "GroupId"
      - Fn::GetAtt:
        - "EC2SecurityGroup00sg02a57c92533299fd5002bQaE"
        - "GroupId"
      DBSecurityGroups: []
      MasterUsername: "Docdbadmin"
      EnableIAMDatabaseAuthentication: false
      BackupRetentionPeriod: 7
      PromotionTier: 1
      PubliclyAccessible: false
      EnableCloudwatchLogsExports:
      - "audit"
      - "profiler"
  IAMRole00sgprodgenaisummariser220v1roledhe171x700hNgkO:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-4f40009a-09c8-4abb-8281-5578c7dcd31d"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-summariser-220-v1-role-dhe171x7"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMRole00TBDdummylambdapython312rolebdh3shth00FpJCY:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-ebdf6f44-4b78-45a5-a51f-5cad7e3ec02a"
      MaxSessionDuration: 3600
      RoleName: "TBD-dummy-lambda-python312-role-bdh3shth"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  EC2Instance00i0332276dc3494333e00qtHOW:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Instance"
    DeletionPolicy: "Retain"
    Properties:
      Tenancy: "default"
      SecurityGroups:
      - "GenAI-Pilot-Private-Tmicro-to-App"
      - "launch-wizard-9"
      PrivateIpAddress: "10.25.71.29"
      UserData: "IyEvYmluL2Jhc2gKY2QgL3RtcApzdWRvIHl1bSBpbnN0YWxsIC15IGh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9lYzItZG93bmxvYWRzLXdpbmRvd3MvU1NNQWdlbnQvbGF0ZXN0L2xpbnV4X2FtZDY0L2FtYXpvbi1zc20tYWdlbnQucnBtCnN1ZG8gc3lzdGVtY3RsIGVuYWJsZSBhbWF6b24tc3NtLWFnZW50CnN1ZG8gc3lzdGVtY3RsIHN0YXJ0IGFtYXpvbi1zc20tYWdlbnQ="
      BlockDeviceMappings:
      - Ebs:
          SnapshotId: "snap-0d0d9f5db331ffa4b"
          VolumeType: "gp3"
          KmsKeyId:
            Fn::GetAtt:
            - "KMSKey00e0af6c3f73fc497e863a6754f0dce6b100kSC3X"
            - "Arn"
          Encrypted: true
          Iops: 3000
          VolumeSize: 8
          DeleteOnTermination: false
        DeviceName: "/dev/xvda"
      IamInstanceProfile:
        Ref: "IAMInstanceProfile00ec2adminaccess00awY8x"
      SubnetId:
        Ref: "EC2Subnet00subnet0e7c29cffbb72373f00m6e4L"
      EbsOptimized: false
      Volumes:
      - VolumeId: "vol-0057ef600adf6805f"
        Device: "/dev/xvda"
      NetworkInterfaces:
      - PrivateIpAddresses:
        - PrivateIpAddress: "10.25.71.29"
          Primary: true
        SecondaryPrivateIpAddressCount: 0
        DeviceIndex: "0"
        GroupSet:
        - Ref: "EC2SecurityGroup00sg07fd500f946aad8a200p0vJb"
        - Ref: "EC2SecurityGroup00sg09b2b11bee0d39e7a00gBxif"
        Ipv6Addresses: []
        SubnetId:
          Ref: "EC2Subnet00subnet0e7c29cffbb72373f00m6e4L"
        AssociatePublicIpAddress: false
        NetworkInterfaceId:
          Ref: "EC2NetworkInterface00eni037d41ab5199db37e00VgWYs"
        DeleteOnTermination: true
      ImageId: "ami-0ef1a6822965893ba"
      InstanceType: "t2.micro"
      Monitoring: false
      Tags:
      - Value: "test-tapo-1"
        Key: "Name"
      InstanceInitiatedShutdownBehavior: "stop"
      CpuOptions:
        ThreadsPerCore: 1
        CoreCount: 1
      AvailabilityZone: "ap-southeast-1b"
      PrivateDnsNameOptions:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      SecurityGroupIds:
      - "sg-07fd500f946aad8a2"
      - "sg-09b2b11bee0d39e7a"
      DisableApiTermination: false
      KeyName: "test-tapo-1"
      SourceDestCheck: true
      PlacementGroupName: ""
      VpcId: "vpc-02790342fee4ebf9f"
      State:
        Code: "80"
        Name: "stopped"
      CreditSpecification:
        CPUCredits: "standard"
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole86dc9dd00f0e46ae8f3267dce78a0da400HGZw1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-86dc9dd0-0f0e-46ae-8f32-67dce78a0da4"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/test-ingest:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00testingestrole0n1hok9900h7dCf"
      Users: []
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole1a0e2e1fa03c4052ac43b0422a6174f100IIhZs:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-1a0e2e1f-a03c-4052-ac43-b0422a6174f1"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-prod-genai-relevantdocs-sgmkr-v1:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgprodgenairelevantdocssgmkrv1rolem6i3uxr900EruKt"
      Users: []
  IAMRole00sgprodgenaiembeddingv1role2n24czs3003o7ji:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-ba8ca421-c98f-418b-b212-1f1bbb3c09af"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-embedding-v1-role-2n24czs3"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMRole00AmazonSageMakerServiceCatalogProductsFirehoseRole00cHDjo:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/service-role/AmazonSageMakerServiceCatalogProductsFirehoseServiceRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "AmazonSageMakerServiceCatalogProductsFirehoseRole"
      Description: "SageMaker role created from the SageMaker AWS Management Console.\
        \ This role will grant permissions required to use AWS Firehose within the\
        \ Amazon SageMaker portfolio of products."
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "firehose.amazonaws.com"
  EC2Subnet00subnet026e7fd8d1e877dbb00GtpLi:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Subnet"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00HMUI8"
      MapPublicIpOnLaunch: false
      EnableDns64: false
      AvailabilityZoneId: "apse1-az2"
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      CidrBlock: "10.25.71.160/27"
      Ipv6Native: false
      Tags:
      - Value: "GenAI-Dev-Application-Private-1b"
        Key: "Name"
  IAMSAMLProvider00samlproviderMicrosoftEntraIDprod00SXXl2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::SAMLProvider"
    DeletionPolicy: "Retain"
    Properties:
      Tags: []
      SamlMetadataDocument: "<?xml version=\"1.0\" encoding=\"utf-8\"?><EntityDescriptor\
        \ ID=\"_495b2e85-071d-47e7-8343-58741ab21665\" entityID=\"https://sts.windows.net/aac700cd-c721-4651-98dd-b78544c94fd6/\"\
        \ xmlns=\"urn:oasis:names:tc:SAML:2.0:metadata\"><Signature xmlns=\"http://www.w3.org/2000/09/xmldsig#\"\
        ><SignedInfo><CanonicalizationMethod Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#\"\
        \ /><SignatureMethod Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\"\
        \ /><Reference URI=\"#_495b2e85-071d-47e7-8343-58741ab21665\"><Transforms><Transform\
        \ Algorithm=\"http://www.w3.org/2000/09/xmldsig#enveloped-signature\" /><Transform\
        \ Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#\" /></Transforms><DigestMethod\
        \ Algorithm=\"http://www.w3.org/2001/04/xmlenc#sha256\" /><DigestValue>/RV5wvXwr2EbVXpAuCag1dvnkm9EFt32RMR8YF4Oht8=</DigestValue></Reference></SignedInfo><SignatureValue>cXQzlTZjlV/F0AWwgJL+4JOzhE6KR7/YTZDg2oooXQegHXKeikigWiGH8uZvq1518wJO/W+7SRVSP1sLoEJ2wvCHNgGYJ/sM/RTl6ZGaiR+dRPhJG7UVPKPBGIJh0KCJ7CesrShanHiBAmO3d9YzGRI1eGR5uuhk7X7/AOd4+/FJEGtdnNd9+o+1d1vmPL4vP8LxQmO+0VYsnIp2fpRPmR9BARtXi840nTz7FC+KzNGKY6gHYn7eH5OZ3saJMzockrk7bVIojD7HydmfHwiyiHcz146ebERBNUzCJ0URp0MPCpHoJzRcO9Wsej2v7sPKYx0sUyKawnz4rPhjNaJT/Q==</SignatureValue><ds:KeyInfo\
        \ xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\"><ds:X509Data><ds:X509Certificate>MIIC8DCCAdigAwIBAgIQbdb8IjUJVr5KHxSkpY0/bzANBgkqhkiG9w0BAQsFADA0MTIwMAYDVQQDEylNaWNyb3NvZnQgQXp1cmUgRmVkZXJhdGVkIFNTTyBDZXJ0aWZpY2F0ZTAeFw0yNDA4MjExNDA2MzJaFw0yNzA4MjExNDA2MzJaMDQxMjAwBgNVBAMTKU1pY3Jvc29mdCBBenVyZSBGZWRlcmF0ZWQgU1NPIENlcnRpZmljYXRlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzgE0dWArXgiZNwElXiymsD/6UTT9ucTdyeQgZPuqF0AvSiwRvzcLi2L/hoHxZE64kbTogAfGf5Eye7Q3YSHyq00EkmdAofEQFjJOGQQCe81yCtHrrAv1BNIQ5/28wLRmL0DK5FwdxAd6Vq7w6obSy+YM3eGs4pnjiMLonrTZcwQGN0LwElLngbvUKzbKZiqK0BD46NmRFlOSrMU/2PzPbN2mju+3er9k6FjjY9QQDuIhs9m+56PCksKJP3fdlGo+AlXkhevQpbu1fE6S5UCvLXVQzI+VxCT2v1QPi/5u3r1jjUk4pIs71FnTXITmkZv3Ez/MTqW7X0aRmnL08393ZQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQCX9eWY7+NvB/NR3GHLAy9IGlaTPkwsIjn0GJbix/mvqjrgeF2aZf6w0wQcDH4BKS/OxQ6Vn6qn6zTsAKkfsDkq36oIxT5n9Sf4NOEU5YIn2Gl+Ly3GUG11bC/LjN3OE0dezI4hqQmG6s6fb0G/Es+GvsMqndnfapdEK7lZl6XDYfJdIFtAKxaKXY5eff0RgETriF6aM91qoRLeishO00ZMBe3p2a1wT6s1t2gJQZnj0Go/y+f4PWFy4Io82WyPx1A3qcngPrOCP5eZksNVXxeN81Fzf+0Q69TfS4JG702BtLjeUlEbeoiruZONxGEo2t1i43GnY6p+tL3bfdldqXbO</ds:X509Certificate></ds:X509Data></ds:KeyInfo></Signature><RoleDescriptor\
        \ xsi:type=\"fed:SecurityTokenServiceType\" protocolSupportEnumeration=\"\
        http://docs.oasis-open.org/wsfed/federation/200706\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
        \ xmlns:fed=\"http://docs.oasis-open.org/wsfed/federation/200706\"><KeyDescriptor\
        \ use=\"signing\"><KeyInfo xmlns=\"http://www.w3.org/2000/09/xmldsig#\"><X509Data><X509Certificate>MIIC8DCCAdigAwIBAgIQbdb8IjUJVr5KHxSkpY0/bzANBgkqhkiG9w0BAQsFADA0MTIwMAYDVQQDEylNaWNyb3NvZnQgQXp1cmUgRmVkZXJhdGVkIFNTTyBDZXJ0aWZpY2F0ZTAeFw0yNDA4MjExNDA2MzJaFw0yNzA4MjExNDA2MzJaMDQxMjAwBgNVBAMTKU1pY3Jvc29mdCBBenVyZSBGZWRlcmF0ZWQgU1NPIENlcnRpZmljYXRlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzgE0dWArXgiZNwElXiymsD/6UTT9ucTdyeQgZPuqF0AvSiwRvzcLi2L/hoHxZE64kbTogAfGf5Eye7Q3YSHyq00EkmdAofEQFjJOGQQCe81yCtHrrAv1BNIQ5/28wLRmL0DK5FwdxAd6Vq7w6obSy+YM3eGs4pnjiMLonrTZcwQGN0LwElLngbvUKzbKZiqK0BD46NmRFlOSrMU/2PzPbN2mju+3er9k6FjjY9QQDuIhs9m+56PCksKJP3fdlGo+AlXkhevQpbu1fE6S5UCvLXVQzI+VxCT2v1QPi/5u3r1jjUk4pIs71FnTXITmkZv3Ez/MTqW7X0aRmnL08393ZQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQCX9eWY7+NvB/NR3GHLAy9IGlaTPkwsIjn0GJbix/mvqjrgeF2aZf6w0wQcDH4BKS/OxQ6Vn6qn6zTsAKkfsDkq36oIxT5n9Sf4NOEU5YIn2Gl+Ly3GUG11bC/LjN3OE0dezI4hqQmG6s6fb0G/Es+GvsMqndnfapdEK7lZl6XDYfJdIFtAKxaKXY5eff0RgETriF6aM91qoRLeishO00ZMBe3p2a1wT6s1t2gJQZnj0Go/y+f4PWFy4Io82WyPx1A3qcngPrOCP5eZksNVXxeN81Fzf+0Q69TfS4JG702BtLjeUlEbeoiruZONxGEo2t1i43GnY6p+tL3bfdldqXbO</X509Certificate></X509Data></KeyInfo></KeyDescriptor><fed:ClaimTypesOffered><auth:ClaimType\
        \ Uri=\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name\" xmlns:auth=\"\
        http://docs.oasis-open.org/wsfed/authorization/200706\"><auth:DisplayName>Name</auth:DisplayName><auth:Description>The\
        \ mutable display name of the user.</auth:Description></auth:ClaimType><auth:ClaimType\
        \ Uri=\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier\"\
        \ xmlns:auth=\"http://docs.oasis-open.org/wsfed/authorization/200706\"><auth:DisplayName>Subject</auth:DisplayName><auth:Description>An\
        \ immutable, globally unique, non-reusable identifier of the user that is\
        \ unique to the application for which a token is issued.</auth:Description></auth:ClaimType><auth:ClaimType\
        \ Uri=\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname\"\
        \ xmlns:auth=\"http://docs.oasis-open.org/wsfed/authorization/200706\"><auth:DisplayName>Given\
        \ Name</auth:DisplayName><auth:Description>First name of the user.</auth:Description></auth:ClaimType><auth:ClaimType\
        \ Uri=\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname\" xmlns:auth=\"\
        http://docs.oasis-open.org/wsfed/authorization/200706\"><auth:DisplayName>Surname</auth:DisplayName><auth:Description>Last\
        \ name of the user.</auth:Description></auth:ClaimType><auth:ClaimType Uri=\"\
        http://schemas.microsoft.com/identity/claims/displayname\" xmlns:auth=\"http://docs.oasis-open.org/wsfed/authorization/200706\"\
        ><auth:DisplayName>Display Name</auth:DisplayName><auth:Description>Display\
        \ name of the user.</auth:Description></auth:ClaimType><auth:ClaimType Uri=\"\
        http://schemas.microsoft.com/identity/claims/nickname\" xmlns:auth=\"http://docs.oasis-open.org/wsfed/authorization/200706\"\
        ><auth:DisplayName>Nick Name</auth:DisplayName><auth:Description>Nick name\
        \ of the user.</auth:Description></auth:ClaimType><auth:ClaimType Uri=\"http://schemas.microsoft.com/ws/2008/06/identity/claims/authenticationinstant\"\
        \ xmlns:auth=\"http://docs.oasis-open.org/wsfed/authorization/200706\"><auth:DisplayName>Authentication\
        \ Instant</auth:DisplayName><auth:Description>The time (UTC) when the user\
        \ is authenticated to Windows Azure Active Directory.</auth:Description></auth:ClaimType><auth:ClaimType\
        \ Uri=\"http://schemas.microsoft.com/ws/2008/06/identity/claims/authenticationmethod\"\
        \ xmlns:auth=\"http://docs.oasis-open.org/wsfed/authorization/200706\"><auth:DisplayName>Authentication\
        \ Method</auth:DisplayName><auth:Description>The method that Windows Azure\
        \ Active Directory uses to authenticate users.</auth:Description></auth:ClaimType><auth:ClaimType\
        \ Uri=\"http://schemas.microsoft.com/identity/claims/objectidentifier\" xmlns:auth=\"\
        http://docs.oasis-open.org/wsfed/authorization/200706\"><auth:DisplayName>ObjectIdentifier</auth:DisplayName><auth:Description>Primary\
        \ identifier for the user in the directory. Immutable, globally unique, non-reusable.</auth:Description></auth:ClaimType><auth:ClaimType\
        \ Uri=\"http://schemas.microsoft.com/identity/claims/tenantid\" xmlns:auth=\"\
        http://docs.oasis-open.org/wsfed/authorization/200706\"><auth:DisplayName>TenantId</auth:DisplayName><auth:Description>Identifier\
        \ for the user's tenant.</auth:Description></auth:ClaimType><auth:ClaimType\
        \ Uri=\"http://schemas.microsoft.com/identity/claims/identityprovider\" xmlns:auth=\"\
        http://docs.oasis-open.org/wsfed/authorization/200706\"><auth:DisplayName>IdentityProvider</auth:DisplayName><auth:Description>Identity\
        \ provider for the user.</auth:Description></auth:ClaimType><auth:ClaimType\
        \ Uri=\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress\"\
        \ xmlns:auth=\"http://docs.oasis-open.org/wsfed/authorization/200706\"><auth:DisplayName>Email</auth:DisplayName><auth:Description>Email\
        \ address of the user.</auth:Description></auth:ClaimType><auth:ClaimType\
        \ Uri=\"http://schemas.microsoft.com/ws/2008/06/identity/claims/groups\" xmlns:auth=\"\
        http://docs.oasis-open.org/wsfed/authorization/200706\"><auth:DisplayName>Groups</auth:DisplayName><auth:Description>Groups\
        \ of the user.</auth:Description></auth:ClaimType><auth:ClaimType Uri=\"http://schemas.microsoft.com/identity/claims/accesstoken\"\
        \ xmlns:auth=\"http://docs.oasis-open.org/wsfed/authorization/200706\"><auth:DisplayName>External\
        \ Access Token</auth:DisplayName><auth:Description>Access token issued by\
        \ external identity provider.</auth:Description></auth:ClaimType><auth:ClaimType\
        \ Uri=\"http://schemas.microsoft.com/ws/2008/06/identity/claims/expiration\"\
        \ xmlns:auth=\"http://docs.oasis-open.org/wsfed/authorization/200706\"><auth:DisplayName>External\
        \ Access Token Expiration</auth:DisplayName><auth:Description>UTC expiration\
        \ time of access token issued by external identity provider.</auth:Description></auth:ClaimType><auth:ClaimType\
        \ Uri=\"http://schemas.microsoft.com/identity/claims/openid2_id\" xmlns:auth=\"\
        http://docs.oasis-open.org/wsfed/authorization/200706\"><auth:DisplayName>External\
        \ OpenID 2.0 Identifier</auth:DisplayName><auth:Description>OpenID 2.0 identifier\
        \ issued by external identity provider.</auth:Description></auth:ClaimType><auth:ClaimType\
        \ Uri=\"http://schemas.microsoft.com/claims/groups.link\" xmlns:auth=\"http://docs.oasis-open.org/wsfed/authorization/200706\"\
        ><auth:DisplayName>GroupsOverageClaim</auth:DisplayName><auth:Description>Issued\
        \ when number of user's group claims exceeds return limit.</auth:Description></auth:ClaimType><auth:ClaimType\
        \ Uri=\"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\" xmlns:auth=\"\
        http://docs.oasis-open.org/wsfed/authorization/200706\"><auth:DisplayName>Role\
        \ Claim</auth:DisplayName><auth:Description>Roles that the user or Service\
        \ Principal is attached to</auth:Description></auth:ClaimType><auth:ClaimType\
        \ Uri=\"http://schemas.microsoft.com/ws/2008/06/identity/claims/wids\" xmlns:auth=\"\
        http://docs.oasis-open.org/wsfed/authorization/200706\"><auth:DisplayName>RoleTemplate\
        \ Id Claim</auth:DisplayName><auth:Description>Role template id of the Built-in\
        \ Directory Roles that the user is a member of</auth:Description></auth:ClaimType></fed:ClaimTypesOffered><fed:SecurityTokenServiceEndpoint><wsa:EndpointReference\
        \ xmlns:wsa=\"http://www.w3.org/2005/08/addressing\"><wsa:Address>https://login.microsoftonline.com/aac700cd-c721-4651-98dd-b78544c94fd6/wsfed</wsa:Address></wsa:EndpointReference></fed:SecurityTokenServiceEndpoint><fed:PassiveRequestorEndpoint><wsa:EndpointReference\
        \ xmlns:wsa=\"http://www.w3.org/2005/08/addressing\"><wsa:Address>https://login.microsoftonline.com/aac700cd-c721-4651-98dd-b78544c94fd6/wsfed</wsa:Address></wsa:EndpointReference></fed:PassiveRequestorEndpoint></RoleDescriptor><RoleDescriptor\
        \ xsi:type=\"fed:ApplicationServiceType\" protocolSupportEnumeration=\"http://docs.oasis-open.org/wsfed/federation/200706\"\
        \ xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:fed=\"http://docs.oasis-open.org/wsfed/federation/200706\"\
        ><KeyDescriptor use=\"signing\"><KeyInfo xmlns=\"http://www.w3.org/2000/09/xmldsig#\"\
        ><X509Data><X509Certificate>MIIC8DCCAdigAwIBAgIQbdb8IjUJVr5KHxSkpY0/bzANBgkqhkiG9w0BAQsFADA0MTIwMAYDVQQDEylNaWNyb3NvZnQgQXp1cmUgRmVkZXJhdGVkIFNTTyBDZXJ0aWZpY2F0ZTAeFw0yNDA4MjExNDA2MzJaFw0yNzA4MjExNDA2MzJaMDQxMjAwBgNVBAMTKU1pY3Jvc29mdCBBenVyZSBGZWRlcmF0ZWQgU1NPIENlcnRpZmljYXRlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzgE0dWArXgiZNwElXiymsD/6UTT9ucTdyeQgZPuqF0AvSiwRvzcLi2L/hoHxZE64kbTogAfGf5Eye7Q3YSHyq00EkmdAofEQFjJOGQQCe81yCtHrrAv1BNIQ5/28wLRmL0DK5FwdxAd6Vq7w6obSy+YM3eGs4pnjiMLonrTZcwQGN0LwElLngbvUKzbKZiqK0BD46NmRFlOSrMU/2PzPbN2mju+3er9k6FjjY9QQDuIhs9m+56PCksKJP3fdlGo+AlXkhevQpbu1fE6S5UCvLXVQzI+VxCT2v1QPi/5u3r1jjUk4pIs71FnTXITmkZv3Ez/MTqW7X0aRmnL08393ZQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQCX9eWY7+NvB/NR3GHLAy9IGlaTPkwsIjn0GJbix/mvqjrgeF2aZf6w0wQcDH4BKS/OxQ6Vn6qn6zTsAKkfsDkq36oIxT5n9Sf4NOEU5YIn2Gl+Ly3GUG11bC/LjN3OE0dezI4hqQmG6s6fb0G/Es+GvsMqndnfapdEK7lZl6XDYfJdIFtAKxaKXY5eff0RgETriF6aM91qoRLeishO00ZMBe3p2a1wT6s1t2gJQZnj0Go/y+f4PWFy4Io82WyPx1A3qcngPrOCP5eZksNVXxeN81Fzf+0Q69TfS4JG702BtLjeUlEbeoiruZONxGEo2t1i43GnY6p+tL3bfdldqXbO</X509Certificate></X509Data></KeyInfo></KeyDescriptor><fed:TargetScopes><wsa:EndpointReference\
        \ xmlns:wsa=\"http://www.w3.org/2005/08/addressing\"><wsa:Address>https://sts.windows.net/aac700cd-c721-4651-98dd-b78544c94fd6/</wsa:Address></wsa:EndpointReference></fed:TargetScopes><fed:ApplicationServiceEndpoint><wsa:EndpointReference\
        \ xmlns:wsa=\"http://www.w3.org/2005/08/addressing\"><wsa:Address>https://login.microsoftonline.com/aac700cd-c721-4651-98dd-b78544c94fd6/wsfed</wsa:Address></wsa:EndpointReference></fed:ApplicationServiceEndpoint><fed:PassiveRequestorEndpoint><wsa:EndpointReference\
        \ xmlns:wsa=\"http://www.w3.org/2005/08/addressing\"><wsa:Address>https://login.microsoftonline.com/aac700cd-c721-4651-98dd-b78544c94fd6/wsfed</wsa:Address></wsa:EndpointReference></fed:PassiveRequestorEndpoint></RoleDescriptor><IDPSSODescriptor\
        \ protocolSupportEnumeration=\"urn:oasis:names:tc:SAML:2.0:protocol\"><KeyDescriptor\
        \ use=\"signing\"><KeyInfo xmlns=\"http://www.w3.org/2000/09/xmldsig#\"><X509Data><X509Certificate>MIIC8DCCAdigAwIBAgIQbdb8IjUJVr5KHxSkpY0/bzANBgkqhkiG9w0BAQsFADA0MTIwMAYDVQQDEylNaWNyb3NvZnQgQXp1cmUgRmVkZXJhdGVkIFNTTyBDZXJ0aWZpY2F0ZTAeFw0yNDA4MjExNDA2MzJaFw0yNzA4MjExNDA2MzJaMDQxMjAwBgNVBAMTKU1pY3Jvc29mdCBBenVyZSBGZWRlcmF0ZWQgU1NPIENlcnRpZmljYXRlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzgE0dWArXgiZNwElXiymsD/6UTT9ucTdyeQgZPuqF0AvSiwRvzcLi2L/hoHxZE64kbTogAfGf5Eye7Q3YSHyq00EkmdAofEQFjJOGQQCe81yCtHrrAv1BNIQ5/28wLRmL0DK5FwdxAd6Vq7w6obSy+YM3eGs4pnjiMLonrTZcwQGN0LwElLngbvUKzbKZiqK0BD46NmRFlOSrMU/2PzPbN2mju+3er9k6FjjY9QQDuIhs9m+56PCksKJP3fdlGo+AlXkhevQpbu1fE6S5UCvLXVQzI+VxCT2v1QPi/5u3r1jjUk4pIs71FnTXITmkZv3Ez/MTqW7X0aRmnL08393ZQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQCX9eWY7+NvB/NR3GHLAy9IGlaTPkwsIjn0GJbix/mvqjrgeF2aZf6w0wQcDH4BKS/OxQ6Vn6qn6zTsAKkfsDkq36oIxT5n9Sf4NOEU5YIn2Gl+Ly3GUG11bC/LjN3OE0dezI4hqQmG6s6fb0G/Es+GvsMqndnfapdEK7lZl6XDYfJdIFtAKxaKXY5eff0RgETriF6aM91qoRLeishO00ZMBe3p2a1wT6s1t2gJQZnj0Go/y+f4PWFy4Io82WyPx1A3qcngPrOCP5eZksNVXxeN81Fzf+0Q69TfS4JG702BtLjeUlEbeoiruZONxGEo2t1i43GnY6p+tL3bfdldqXbO</X509Certificate></X509Data></KeyInfo></KeyDescriptor><SingleLogoutService\
        \ Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"\
        https://login.microsoftonline.com/aac700cd-c721-4651-98dd-b78544c94fd6/saml2\"\
        \ /><SingleSignOnService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\"\
        \ Location=\"https://login.microsoftonline.com/aac700cd-c721-4651-98dd-b78544c94fd6/saml2\"\
        \ /><SingleSignOnService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\"\
        \ Location=\"https://login.microsoftonline.com/aac700cd-c721-4651-98dd-b78544c94fd6/saml2\"\
        \ /></IDPSSODescriptor></EntityDescriptor>"
      Name: "Microsoft.EntraID.prod"
  EC2Instance00i0e19ff01674e306d50050VO5:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Instance"
    DeletionPolicy: "Retain"
    Properties:
      Tenancy: "default"
      SecurityGroups:
      - "GenAI-Pilot-Private-Internal-to-VPC"
      - "GenAI-Pilot-Private-Tmicro-to-App"
      - "default"
      - "GenAI-Pilot-Private-Cvpn-to-App"
      PrivateIpAddress: "10.25.71.222"
      BlockDeviceMappings:
      - Ebs:
          SnapshotId: "snap-0c8eab48745cf2897"
          VolumeType: "gp3"
          KmsKeyId:
            Fn::GetAtt:
            - "KMSKey00e0af6c3f73fc497e863a6754f0dce6b100kSC3X"
            - "Arn"
          Encrypted: true
          Iops: 3000
          VolumeSize: 50
          DeleteOnTermination: false
        DeviceName: "/dev/xvda"
      IamInstanceProfile:
        Ref: "IAMInstanceProfile00ec2adminaccess00awY8x"
      SubnetId:
        Ref: "EC2Subnet00subnet0d1db15411089416b0025bgM"
      EbsOptimized: true
      Volumes:
      - VolumeId: "vol-01bd16c2e811bb9d7"
        Device: "/dev/xvda"
      NetworkInterfaces:
      - PrivateIpAddresses:
        - PrivateIpAddress: "10.25.71.222"
          Primary: true
        SecondaryPrivateIpAddressCount: 0
        DeviceIndex: "0"
        GroupSet:
        - Ref: "EC2SecurityGroup00sg0ef00776c538db14200cp2bD"
        - Ref: "EC2SecurityGroup00sg07fd500f946aad8a200p0vJb"
        - Ref: "EC2SecurityGroup00sg075615342aa3e28b900dirPO"
        - Ref: "EC2SecurityGroup00sg0158898f4b43a0ae900nBPrb"
        Ipv6Addresses: []
        SubnetId:
          Ref: "EC2Subnet00subnet0d1db15411089416b0025bgM"
        AssociatePublicIpAddress: false
        NetworkInterfaceId:
          Ref: "EC2NetworkInterface00eni0a79669b8bad1083a00qGM3j"
        DeleteOnTermination: true
      ImageId: "ami-04a5ce820a419d6da"
      InstanceType: "t3.medium"
      Monitoring: false
      Tags:
      - Value: "ec2-jumpserver-essien"
        Key: "Name"
      InstanceInitiatedShutdownBehavior: "stop"
      CpuOptions:
        ThreadsPerCore: 2
        CoreCount: 1
      AvailabilityZone: "ap-southeast-1c"
      PrivateDnsNameOptions:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      SecurityGroupIds:
      - "sg-0ef00776c538db142"
      - "sg-07fd500f946aad8a2"
      - "sg-075615342aa3e28b9"
      - "sg-0158898f4b43a0ae9"
      DisableApiTermination: false
      KeyName: "pilot-SG-Essien"
      SourceDestCheck: true
      PlacementGroupName: ""
      VpcId: "vpc-02790342fee4ebf9f"
      State:
        Code: "80"
        Name: "stopped"
      CreditSpecification:
        CPUCredits: "unlimited"
  IAMRole00sgprodgenaipresignedurls3220v1rolee0vmopci00fWAx0:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-7a6d0050-e9de-4d83-9789-f3b5be0c2b65"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-presignedurl-s3-220-v1-role-e0vmopci"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  EC2Subnet00subnet048794c64c2e4427a00H739O:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Subnet"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00HMUI8"
      MapPublicIpOnLaunch: false
      EnableDns64: false
      AvailabilityZoneId: "apse1-az2"
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      CidrBlock: "10.25.71.128/28"
      Ipv6Native: false
      Tags:
      - Value: "GenAI-Dev-Database-Private-1b"
        Key: "Name"
  KMSKey008638d8df896d4fe8a82af2fdb61ac87700BoUid:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::KMS::Key"
    DeletionPolicy: "Retain"
    Properties:
      Origin: "AWS_KMS"
      MultiRegion: false
      Description: "To encrypt authDB in DocDB's username and password in Secrets\
        \ Manager"
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
        - Resource: "*"
          Action: "kms:*"
          Effect: "Allow"
          Principal:
            AWS: "arn:aws:iam::343218203122:root"
          Sid: "Enable IAM User Permissions"
        - Resource: "*"
          Action:
          - "kms:Create*"
          - "kms:Describe*"
          - "kms:Enable*"
          - "kms:List*"
          - "kms:Put*"
          - "kms:Update*"
          - "kms:Revoke*"
          - "kms:Disable*"
          - "kms:Get*"
          - "kms:Delete*"
          - "kms:TagResource"
          - "kms:UntagResource"
          - "kms:ScheduleKeyDeletion"
          - "kms:CancelKeyDeletion"
          - "kms:RotateKeyOnDemand"
          Effect: "Allow"
          Principal:
            AWS: "arn:aws:iam::343218203122:role/aws-reserved/sso.amazonaws.com/ap-southeast-1/AWSReservedSSO_GenAI_Admin_Access_37c71d1e8de0e9ae"
          Sid: "Allow access for Key Administrators"
        - Resource: "*"
          Action:
          - "kms:Encrypt"
          - "kms:Decrypt"
          - "kms:ReEncrypt*"
          - "kms:GenerateDataKey*"
          - "kms:DescribeKey"
          Effect: "Allow"
          Principal:
            AWS:
            - "arn:aws:iam::343218203122:role/ecsTaskExecutionRole"
            - "arn:aws:iam::343218203122:role/ec2-admin-access"
          Sid: "Allow use of the key"
        - Condition:
            Bool:
              kms:GrantIsForAWSResource: "true"
          Resource: "*"
          Action:
          - "kms:CreateGrant"
          - "kms:ListGrants"
          - "kms:RevokeGrant"
          Effect: "Allow"
          Principal:
            AWS:
            - "arn:aws:iam::343218203122:role/ecsTaskExecutionRole"
            - "arn:aws:iam::343218203122:role/ec2-admin-access"
          Sid: "Allow attachment of persistent resources"
        Id: "key-consolepolicy-3"
      KeySpec: "SYMMETRIC_DEFAULT"
      Enabled: true
      EnableKeyRotation: true
      KeyUsage: "ENCRYPT_DECRYPT"
      Tags: []
  EC2NetworkInterface00eni0403053f58cf2839a00xUR7A:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: ""
      PrivateIpAddress: "10.25.71.180"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.180"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-07fd500f946aad8a2"
      - "sg-07401c0c33946a241"
      - "sg-0158898f4b43a0ae9"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00GtpLi"
      SourceDestCheck: true
      InterfaceType: "interface"
      Tags: []
  LambdaFunction00StopEC2Instances00PCSJx:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Function"
    DeletionPolicy: "Retain"
    Properties:
      MemorySize: 128
      Description: ""
      TracingConfig:
        Mode: "PassThrough"
      Timeout: 10
      RuntimeManagementConfig:
        UpdateRuntimeOn: "Auto"
      Handler: "lambda_function.lambda_handler"
      Code:
        SourceKMSKeyArn:
          Ref: "LambdaFunction00StopEC2Instances00PCSJxCodeSourceKMSKeyArnApJNc"
        S3ObjectVersion:
          Ref: "LambdaFunction00StopEC2Instances00PCSJxCodeS3ObjectVersionKU3vc"
        S3Bucket:
          Ref: "LambdaFunction00StopEC2Instances00PCSJxCodeS3BucketsTmcw"
        ZipFile:
          Ref: "LambdaFunction00StopEC2Instances00PCSJxCodeZipFile0B3d0"
        ImageUri:
          Ref: "LambdaFunction00StopEC2Instances00PCSJxCodeImageUri2zRI3"
        S3Key:
          Ref: "LambdaFunction00StopEC2Instances00PCSJxCodeS3KeySZh2G"
      Role:
        Fn::GetAtt:
        - "IAMRole00startstopinstanceslambda00YvdFJ"
        - "Arn"
      FileSystemConfigs: []
      FunctionName: "StopEC2Instances"
      Runtime: "python3.12"
      PackageType: "Zip"
      LoggingConfig:
        LogFormat: "Text"
        LogGroup: "/aws/lambda/StopEC2Instances"
      RecursiveLoop: "Terminate"
      EphemeralStorage:
        Size: 512
      Architectures:
      - "x86_64"
  LambdaFunction00sgtestgenaisummariserretrievetofrontendERROR00zqPX0:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Function"
    DeletionPolicy: "Retain"
    Properties:
      MemorySize: 128
      Description: ""
      TracingConfig:
        Mode: "PassThrough"
      VpcConfig:
        SecurityGroupIds:
        - "sg-075615342aa3e28b9"
        - "sg-00dd21ae4b1e23f22"
        - "sg-02d1755cab861734f"
        SubnetIds:
        - Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00GtpLi"
        - Ref: "EC2Subnet00subnet0d1db15411089416b0025bgM"
        Ipv6AllowedForDualStack: false
      Timeout: 3
      RuntimeManagementConfig:
        UpdateRuntimeOn: "Auto"
      Handler: "lambda_function.lambda_handler"
      Code:
        SourceKMSKeyArn:
          Ref: "LambdaFunction00sgtestgenaisummariserretrievetofrontendERROR00zqPX0CodeSourceKMSKeyArnugMlq"
        S3ObjectVersion:
          Ref: "LambdaFunction00sgtestgenaisummariserretrievetofrontendERROR00zqPX0CodeS3ObjectVersionGfcmH"
        S3Bucket:
          Ref: "LambdaFunction00sgtestgenaisummariserretrievetofrontendERROR00zqPX0CodeS3BucketzF0n1"
        ZipFile:
          Ref: "LambdaFunction00sgtestgenaisummariserretrievetofrontendERROR00zqPX0CodeZipFileSrDZT"
        ImageUri:
          Ref: "LambdaFunction00sgtestgenaisummariserretrievetofrontendERROR00zqPX0CodeImageUriyjKHK"
        S3Key:
          Ref: "LambdaFunction00sgtestgenaisummariserretrievetofrontendERROR00zqPX0CodeS3KeyRFezh"
      Role:
        Fn::GetAtt:
        - "IAMRole00sgtestgenaisummariserretrievetofrontendrolereppyiad005NSsR"
        - "Arn"
      FileSystemConfigs: []
      FunctionName: "sg-test-genai-summariser-retrievetofrontend-ERROR"
      Runtime: "python3.12"
      PackageType: "Zip"
      LoggingConfig:
        LogFormat: "Text"
        LogGroup: "/aws/lambda/sg-test-genai-summariser-retrievetofrontend-ERROR"
      RecursiveLoop: "Terminate"
      Environment:
        Variables:
          DB_USER: "summariser"
          DB_CLUSTER_URL: "sg-prod-genai-summariser-v1.cluster-czs8w0aayayu.ap-southeast-1.docdb.amazonaws.com"
          DB_PASSWORD: "summariser123"
      EphemeralStorage:
        Size: 512
      Layers:
      - "arn:aws:lambda:ap-southeast-1:343218203122:layer:pymongo:4"
      Architectures:
      - "x86_64"
  IAMRole00AWSReservedSSOAdministratorAccesscde69922220c622800RF1Lk:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/aws-reserved/sso.amazonaws.com/ap-southeast-1/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/ReadOnlyAccess"
      - "arn:aws:iam::aws:policy/AdministratorAccess"
      MaxSessionDuration: 43200
      RoleName: "AWSReservedSSO_AdministratorAccess_cde69922220c6228"
      Description: "AdministratorAccess"
      Policies:
      - PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Condition:
              IpAddress:
                aws:SourceIp:
                - "211.25.63.2/32"
                - "203.115.236.2/32"
                - "203.106.28.194/32"
            Resource: "*"
            Action: "*"
            Effect: "Allow"
            Sid: "WhitelistIPPrivilegeuser"
        PolicyName: "AwsSSOInlinePolicy"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Condition:
            StringEquals:
              SAML:aud: "https://signin.aws.amazon.com/saml"
          Action:
          - "sts:AssumeRoleWithSAML"
          - "sts:TagSession"
          Effect: "Allow"
          Principal:
            Federated: "arn:aws:iam::343218203122:saml-provider/AWSSSO_1a32e06b3a2c2a2a_DO_NOT_DELETE"
  IAMRole00AWSCloud9SSMAccessRole00Aheps:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/AWSCloud9SSMInstanceProfile"
      MaxSessionDuration: 3600
      RoleName: "AWSCloud9SSMAccessRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service:
            - "ec2.amazonaws.com"
            - "cloud9.amazonaws.com"
  LambdaPermission00functionsgtestgenaisummariserretrievetofrontendERROR008nC5M:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Permission"
    DeletionPolicy: "Retain"
    Properties:
      FunctionName:
        Fn::GetAtt:
        - "LambdaFunction00sgtestgenaisummariserretrievetofrontendERROR00zqPX0"
        - "Arn"
      Action: "lambda:InvokeFunction"
      SourceArn: "arn:aws:execute-api:ap-southeast-1:343218203122:5nwb46kira/*/*/sg-test-genai-summariser-retrievetofrontend-ERROR"
      Principal: "apigateway.amazonaws.com"
  IAMRole00AWSServiceRoleForAmazonGuardDuty0069ulN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/aws-service-role/guardduty.amazonaws.com/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/aws-service-role/AmazonGuardDutyServiceRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "AWSServiceRoleForAmazonGuardDuty"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "guardduty.amazonaws.com"
  IAMRole00AWSServiceRoleForApplicationAutoScalingDynamoDBTable00pAxxT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/aws-service-role/AWSApplicationAutoscalingDynamoDBTablePolicy"
      MaxSessionDuration: 3600
      RoleName: "AWSServiceRoleForApplicationAutoScaling_DynamoDBTable"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "dynamodb.application-autoscaling.amazonaws.com"
  EC2SecurityGroup00sg07fd500f946aad8a200p0vJb:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "For Deep Security scan by CSD-STU"
      GroupName: "GenAI-Pilot-Private-Tmicro-to-App"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00HMUI8"
      SecurityGroupIngress:
      - CidrIp: "192.168.228.101/32"
        IpProtocol: "tcp"
        FromPort: 4122
        ToPort: 4122
      - CidrIp: "192.168.128.101/32"
        IpProtocol: "tcp"
        FromPort: 4122
        ToPort: 4122
      - CidrIp: "192.168.228.101/32"
        IpProtocol: "tcp"
        FromPort: 4120
        ToPort: 4120
      - CidrIp: "192.168.128.101/32"
        IpProtocol: "tcp"
        FromPort: 4120
        ToPort: 4120
      - CidrIp: "192.168.128.101/32"
        IpProtocol: "tcp"
        FromPort: 4118
        ToPort: 4118
      - CidrIp: "192.168.128.102/32"
        IpProtocol: "tcp"
        FromPort: 4118
        ToPort: 4118
      - CidrIp: "192.168.228.101/32"
        IpProtocol: "tcp"
        FromPort: 4118
        ToPort: 4118
      - CidrIp: "192.168.228.101/32"
        IpProtocol: "tcp"
        FromPort: 443
        ToPort: 443
      - CidrIp: "192.168.128.101/32"
        IpProtocol: "tcp"
        FromPort: 443
        ToPort: 443
      SecurityGroupEgress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole24532a28a753499b94e72171697bb0be00WUGr5:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-24532a28-a753-499b-94e7-2171697bb0be"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-prod-genai-retrievedocs:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgprodgenairetrievedocsrole0rugefme00IkDv4"
      Users: []
  IAMRole00AmazonSageMakerServiceCatalogProductsCloudformationRole00vNqtf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/service-role/AmazonSageMakerServiceCatalogProductsCloudformationServiceRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "AmazonSageMakerServiceCatalogProductsCloudformationRole"
      Description: "SageMaker role created from the SageMaker AWS Management Console.\
        \ This role will grant permissions required to use AWS CloudFormation within\
        \ the Amazon SageMaker portfolio of products."
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "cloudformation.amazonaws.com"
  IAMRole00AWSServiceRoleForECS00SUSeU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/aws-service-role/ecs.amazonaws.com/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/aws-service-role/AmazonECSServiceRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "AWSServiceRoleForECS"
      Description: "Role to enable Amazon ECS to manage your cluster."
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "ecs.amazonaws.com"
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRoled0cd18a657614ed5b992a37c8fe054ec00KQf8f:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-d0cd18a6-5761-4ed5-b992-a37c8fe054ec"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/testing_jwt:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00testingjwtrole1ogla2uh00Xon60"
      Users: []
  IAMRole00AWSReservedSSOReadOnlyAccess036221ba6ffd951400QdNZ7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/aws-reserved/sso.amazonaws.com/ap-southeast-1/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/ReadOnlyAccess"
      MaxSessionDuration: 43200
      RoleName: "AWSReservedSSO_ReadOnlyAccess_036221ba6ffd9514"
      Description: "Provides read-only access to AWS services and resources."
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Condition:
            StringEquals:
              SAML:aud: "https://signin.aws.amazon.com/saml"
          Action:
          - "sts:AssumeRoleWithSAML"
          - "sts:TagSession"
          Effect: "Allow"
          Principal:
            Federated: "arn:aws:iam::343218203122:saml-provider/AWSSSO_1a32e06b3a2c2a2a_DO_NOT_DELETE"
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole7e52c4cdc14545b285b097d29d27c81100IUFI8:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-7e52c4cd-c145-45b2-85b0-97d29d27c811"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-prod-genai-checkcredsdocdb:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgprodgenaicheckcredsdocdbroleiwrpl7hp00mNI5D"
      Users: []
  IAMManagedPolicy00policyserviceroleAWSLambdaVPCAccessExecutionRolec3e25113a4054f698cd20c5f7e1a588b00X1Z22:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaVPCAccessExecutionRole-c3e25113-a405-4f69-8cd2-0c5f7e1a588b"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "*"
          Action:
          - "ec2:CreateNetworkInterface"
          - "ec2:DeleteNetworkInterface"
          - "ec2:DescribeNetworkInterfaces"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgprodapigwapikeyauthorizerrole4e7fn10q001qPHt"
      Users: []
  IAMRole00sgprodgenaipresignedurls3roletxfh0skj00TGxGn:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-8cc3c229-d089-4a43-8037-8102318e1dd8"
      - "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
      - "arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-presignedurl-s3-role-txfh0skj"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMRole00sgprodgenairelevantdocssgmkr216v1roletpj8ud8900tTt9w:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-7e655138-e628-4630-a29e-e435acea8312"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-relevantdocs-sgmkr-216-v1-role-tpj8ud89"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMRole00sgtestgenaisummariserretrievetofrontendrolereppyiad005NSsR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaVPCAccessExecutionRole-eb939dd9-10c5-410e-9399-b506c4ad65bf"
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-16a39c68-a704-44d7-bb74-a24e4f434384"
      MaxSessionDuration: 3600
      RoleName: "sg-test-genai-summariser-retrievetofrontend-role-reppyiad"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMManagedPolicy00policyserviceroleAWSLambdaVPCAccessExecutionRolea9e27b708b6e4438a4dbd9df2f8b6d5f00qbYOY:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaVPCAccessExecutionRole-a9e27b70-8b6e-4438-a4db-d9df2f8b6d5f"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "*"
          Action:
          - "ec2:CreateNetworkInterface"
          - "ec2:DeleteNetworkInterface"
          - "ec2:DescribeNetworkInterfaces"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgtestgenaisummariserdeletechatfunctionrolelle032db00h7ECd"
      Users: []
  EC2VPC00vpc02790342fee4ebf9f00HMUI8:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VPC"
    DeletionPolicy: "Retain"
    Properties:
      CidrBlock: "10.25.71.0/24"
      EnableDnsSupport: true
      InstanceTenancy: "default"
      EnableDnsHostnames: true
      Tags:
      - Value: "GenAI-Pilot-VPC"
        Key: "Name"
  LambdaPermission00functionsgtestgenaisummariserretrievetofrontend00Na99H:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Permission"
    DeletionPolicy: "Retain"
    Properties:
      FunctionName:
        Fn::GetAtt:
        - "LambdaFunction00sgtestgenaisummariserretrievetofrontend00yM0rs"
        - "Arn"
      Action: "lambda:InvokeFunction"
      SourceArn: "arn:aws:execute-api:ap-southeast-1:343218203122:5nwb46kira/*/*/sg-test-genai-summariser-retrievetofrontend"
      Principal: "apigateway.amazonaws.com"
  NeptuneDBCluster00sgprodgenaicourtcasesdb216v100g0L5h:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Neptune::DBCluster"
    DeletionPolicy: "Retain"
    Properties:
      StorageEncrypted: true
      EngineVersion: "5.0.0"
      KmsKeyId:
        Fn::GetAtt:
        - "KMSKey0051a5c08ff1b24e92b22b5784f7f0dc3300rv3Pv"
        - "Arn"
      AssociatedRoles: []
      AvailabilityZones:
      - "ap-southeast-1a"
      - "ap-southeast-1b"
      - "ap-southeast-1c"
      DBClusterIdentifier: "sg-prod-genai-courtcasesdb-216-v1"
      PreferredMaintenanceWindow: "sat:17:40-sat:18:10"
      IamAuthEnabled: false
      DBSubnetGroupName: "genai-pilot-database-private"
      DeletionProtection: true
      PreferredBackupWindow: "00:00-00:30"
      DBPort: 27017
      VpcSecurityGroupIds:
      - "sg-075615342aa3e28b9"
      - "sg-02a57c92533299fd5"
      CopyTagsToSnapshot: false
      DBClusterParameterGroupName: "default.docdb5.0"
      BackupRetentionPeriod: 7
      Tags: []
      EnableCloudwatchLogsExports:
      - "audit"
      - "profiler"
  IAMManagedPolicy00policyserviceroleAmazonEventBridgeSchedulerExecutionPolicy5993931dd2ea467aa09a34ec895ab53300lREa0:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "Amazon-EventBridge-Scheduler-Execution-Policy-5993931d-d2ea-467a-a09a-34ec895ab533"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource:
          - "arn:aws:lambda:ap-southeast-1:343218203122:function:StopEC2Instances:*"
          - "arn:aws:lambda:ap-southeast-1:343218203122:function:StopEC2Instances"
          Action:
          - "lambda:InvokeFunction"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00AmazonEventBridgeSchedulerLAMBDA4f6da799a500etQgl"
      Users: []
  IAMRole00sgprodgenaisummariser220v1rolex0ewyv5t00Ymesq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-4ec4c4a8-8c5c-452d-a3f0-3487305a7517"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-summariser-220-v1-role-x0ewyv5t"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMRole00testwebsocketlambda00lDzZN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      - "arn:aws:iam::aws:policy/service-role/AWSLambdaSQSQueueExecutionRole"
      - "arn:aws:iam::aws:policy/AmazonAPIGatewayInvokeFullAccess"
      - "arn:aws:iam::aws:policy/AmazonVPCFullAccess"
      - "arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy"
      MaxSessionDuration: 43200
      RoleName: "test_websocket_lambda"
      Description: "Allows Lambda functions to call AWS services on your behalf."
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  LambdaFunction00sgtestasyncoutputgenerator00F4igy:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Function"
    DeletionPolicy: "Retain"
    Properties:
      MemorySize: 128
      Description: ""
      TracingConfig:
        Mode: "PassThrough"
      VpcConfig:
        SecurityGroupIds:
        - "sg-075615342aa3e28b9"
        SubnetIds:
        - Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00GtpLi"
        - Ref: "EC2Subnet00subnet0d1db15411089416b0025bgM"
        Ipv6AllowedForDualStack: false
      Timeout: 900
      RuntimeManagementConfig:
        UpdateRuntimeOn: "Auto"
      Handler: "lambda_function.lambda_handler"
      Code:
        SourceKMSKeyArn:
          Ref: "LambdaFunction00sgtestasyncoutputgenerator00F4igyCodeSourceKMSKeyArnj34wO"
        S3ObjectVersion:
          Ref: "LambdaFunction00sgtestasyncoutputgenerator00F4igyCodeS3ObjectVersioncC6rF"
        S3Bucket:
          Ref: "LambdaFunction00sgtestasyncoutputgenerator00F4igyCodeS3Bucketbi4xN"
        ZipFile:
          Ref: "LambdaFunction00sgtestasyncoutputgenerator00F4igyCodeZipFilemzjaO"
        ImageUri:
          Ref: "LambdaFunction00sgtestasyncoutputgenerator00F4igyCodeImageUriD9H2v"
        S3Key:
          Ref: "LambdaFunction00sgtestasyncoutputgenerator00F4igyCodeS3KeyRNOLB"
      Role:
        Fn::GetAtt:
        - "IAMRole00sgtestasyncoutputgeneratorrole0lwo40k100Oxkpv"
        - "Arn"
      FileSystemConfigs: []
      FunctionName: "sg-test-async-output-generator"
      Runtime: "python3.9"
      PackageType: "Zip"
      LoggingConfig:
        LogFormat: "Text"
        LogGroup: "/aws/lambda/sg-test-async-output-generator"
      RecursiveLoop: "Terminate"
      EphemeralStorage:
        Size: 512
      Architectures:
      - "x86_64"
  LambdaEventSourceMapping00613947be6c91422c9dc726aabe0d411f00dXDIq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::EventSourceMapping"
    DeletionPolicy: "Retain"
    Properties:
      BatchSize: 1
      FunctionName:
        Ref: "LambdaVersion00functionsgprodgenairagsummariser1100ke2O5"
      ScalingConfig:
        MaximumConcurrency: 2
      Enabled: false
      EventSourceArn:
        Fn::GetAtt:
        - "SQSQueue00summarisernewconversationfifo00tRGGa"
        - "Arn"
      Tags: []
      FunctionResponseTypes:
      - "ReportBatchItemFailures"
      MaximumBatchingWindowInSeconds: 0
  EC2VolumeAttachment00vol0057ef600adf6805f00lNH4l:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VolumeAttachment"
    DeletionPolicy: "Retain"
    Properties:
      InstanceId: "i-0332276dc3494333e"
      VolumeId: "vol-0057ef600adf6805f"
      Device: "/dev/xvda"
  EC2FlowLog00fl0229965715cf91f7d00MKNxi:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::FlowLog"
    DeletionPolicy: "Retain"
    Properties:
      LogFormat: "${version} ${account-id} ${interface-id} ${srcaddr} ${dstaddr} ${srcport}\
        \ ${dstport} ${protocol} ${packets} ${bytes} ${start} ${end} ${action} ${log-status}"
      ResourceId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00HMUI8"
      MaxAggregationInterval: 600
      ResourceType: "VPC"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00GQ5Hr"
      DeliverLogsPermissionArn:
        Fn::GetAtt:
        - "IAMRole00VPCFlowLogtoCloudWatch00NLDWk"
        - "Arn"
      LogDestinationType: "cloud-watch-logs"
      Tags:
      - Value: "GenAI-Pilot-VPC-Flow-Log"
        Key: "Name"
      TrafficType: "ALL"
  IAMRole00checkpythonversionroleq9j1tu4x00oqplv:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-d26adc1f-0b17-49e0-9043-0c154b08cff6"
      MaxSessionDuration: 3600
      RoleName: "check-python-version-role-q9j1tu4x"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMRole00sgwssdisconnectrolel31j5am600SUVmX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-967d1209-002d-4952-a35c-32410d5d96b0"
      MaxSessionDuration: 3600
      RoleName: "sg-wss-disconnect-role-l31j5am6"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMRole00sgprodgenaicategoriserv1roleqfdkclgb00iAKmP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-1aaa6268-de49-4369-aff0-f8c5237d3dd0"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-categoriser-v1-role-qfdkclgb"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMRole00AWSServiceRoleForAmazonInspector200WinUk:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/aws-service-role/inspector2.amazonaws.com/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/aws-service-role/AmazonInspector2ServiceRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "AWSServiceRoleForAmazonInspector2"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "inspector2.amazonaws.com"
  EC2SecurityGroup00sg0fd865e5bd1a64a0700D9Mvv:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "for akash ec2 server"
      GroupName: "akash-ec2-sg"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00HMUI8"
      SecurityGroupIngress:
      - IpProtocol: "-1"
        Description: "cVPN to Public"
        FromPort: -1
        SourceSecurityGroupId: "sg-0a6c63d92a738a24c"
        ToPort: -1
        SourceSecurityGroupOwnerId: "343218203122"
      SecurityGroupEgress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
  IAMRole00sgtestgenaisummariserasyncrole8n68333u00lQZqO:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-9840a814-e85a-49f8-b275-d4045d75cd31"
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaVPCAccessExecutionRole-5ff2e1b1-eb97-4549-ab08-0a3d9fedaf82"
      MaxSessionDuration: 3600
      RoleName: "sg-test-genai-summariser-async-role-8n68333u"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMRole00sgprodgenairetrievedocssgmkr361v1roleeak4zfkz00mfBGT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-6c59f144-022c-464b-baff-adb93a67cd3f"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-retrievedocs-sgmkr-361-v1-role-eak4zfkz"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  EC2SecurityGroup00sg075615342aa3e28b900dirPO:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "default VPC security group"
      GroupName: "default"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00HMUI8"
      SecurityGroupIngress:
      - CidrIp: "10.25.71.0/32"
        IpProtocol: "-1"
        Description: "allow inbound local"
        FromPort: -1
        ToPort: -1
      - IpProtocol: "-1"
        FromPort: -1
        SourceSecurityGroupId:
          Fn::GetAtt:
          - "EC2VPC00vpc02790342fee4ebf9f00HMUI8"
          - "DefaultSecurityGroup"
        ToPort: -1
        SourceSecurityGroupOwnerId: "343218203122"
      SecurityGroupEgress:
      - CidrIp: "10.25.71.0/32"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
  IAMRole00AWSServiceRoleForRDS006GyEX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/aws-service-role/rds.amazonaws.com/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/aws-service-role/AmazonRDSServiceRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "AWSServiceRoleForRDS"
      Description: "Allows Amazon RDS to manage AWS resources on your behalf"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "rds.amazonaws.com"
  IAMManagedPolicy00policyserviceroleAWSLambdaVPCAccessExecutionRole4f735b8fdc184bdcb59dad745a2ed2e200eUYrX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaVPCAccessExecutionRole-4f735b8f-dc18-4bdc-b59d-ad745a2ed2e2"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "*"
          Action:
          - "ec2:CreateNetworkInterface"
          - "ec2:DeleteNetworkInterface"
          - "ec2:DescribeNetworkInterfaces"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgprodgenaicheckcredsdocdbroleiwrpl7hp00mNI5D"
      Users: []
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole4ec4c4a88c5c452da3f03487305a751700UqGYE:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-4ec4c4a8-8c5c-452d-a3f0-3487305a7517"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:us-east-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:us-east-1:343218203122:log-group:/aws/lambda/sg-prod-genai-summariser-220-v1:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgprodgenaisummariser220v1rolex0ewyv5t00Ymesq"
      Users: []
  IAMSAMLProvider00samlproviderAWSSSO1a32e06b3a2c2a2aDONOTDELETE00oC4F0:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::SAMLProvider"
    DeletionPolicy: "Retain"
    Properties:
      Tags: []
      SamlMetadataDocument: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><md:EntityDescriptor\
        \ xmlns:md=\"urn:oasis:names:tc:SAML:2.0:metadata\" entityID=\"https://portal.sso.ap-southeast-1.amazonaws.com/saml/assertion/NDM4ODY5NzczODg5X2lucy00ZmY1ODE3NTY3YTA2N2E5\"\
        >\n  <md:IDPSSODescriptor WantAuthnRequestsSigned=\"false\" protocolSupportEnumeration=\"\
        urn:oasis:names:tc:SAML:2.0:protocol\">\n    <md:KeyDescriptor use=\"signing\"\
        >\n      <ds:KeyInfo xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\">\n  \
        \      <ds:X509Data>\n          <ds:X509Certificate>MIIDBjCCAe6gAwIBAgIEP3O2fzANBgkqhkiG9w0BAQsFADBFMRYwFAYDVQQDDA1hbWF6b25hd3MuY29tMQ0wCwYDVQQLDARJREFTMQ8wDQYDVQQKDAZBbWF6b24xCzAJBgNVBAYTAlVTMB4XDTI0MDUyNzA4MTUxMloXDTI5MDUyNzA4MTUxMlowRTEWMBQGA1UEAwwNYW1hem9uYXdzLmNvbTENMAsGA1UECwwESURBUzEPMA0GA1UECgwGQW1hem9uMQswCQYDVQQGEwJVUzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMyswNz974Jx8YgN3wrh/DwsptzKOziqfew9Ha24/Ra9k9Rq4/AjrJM0y9/KvaqKnJE+YNYmG585VJciwxO3I5JiuFSssu7xH5ghKC3ipJYIXX5eMHjCuDHP+IixNuxyDPPP+n+wRA7cmPUkd63RM2wco3goK7LQunwzY3LLt/ddcQ84EcGe9vdm2C0b4KI4FP8niZFQ87xDXgZvSQd6tYKjwURGpeVjOS/pIUhM4k3FV5Hy7XCkA6tctP1oaNqjUNiMWXJPX9elKgBrOMozFM2EyI2KsmTTsDIP6errZyRVVXehmbvLrXWuTReSZwuwY4r4ZQ2iq5E6QCeVeRkz+gECAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAhzADHXl545BTiEwym41pCv79DFrd/wz4TYkHr/0lXoDMHBwsGFqx24hlBvyRaolyjfZHV8spp57Mvb21/GJz9ufIXLvjb1+qimQJ9kg3CV3TRyUpMHXFglDaY5bLEdQmZ5e8jyyTjCPl+zugsszJ9u3+KwVuDRRKBxwB3WrCkw6lEh/u+EMUak9T07QIuawL+Da+enBdwaynM6Xkf2WnatrPNc7BnytY5la5hb4RqJNbLTqlhVTLCEF5m6DcDWlPMjXRbFIDG4K4Uw1fxJ9CdUYdCJzLVX7jzB2tvodcuAgIQWYm+77KQAiUDr7Ya4TgOhCnWE15TmDeh6TYfY3I8w==</ds:X509Certificate>\n\
        \        </ds:X509Data>\n      </ds:KeyInfo>\n    </md:KeyDescriptor>\n  \
        \  <md:SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\"\
        \ Location=\"https://portal.sso.ap-southeast-1.amazonaws.com/saml/logout/NDM4ODY5NzczODg5X2lucy00ZmY1ODE3NTY3YTA2N2E5\"\
        />\n    <md:SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\"\
        \ Location=\"https://portal.sso.ap-southeast-1.amazonaws.com/saml/logout/NDM4ODY5NzczODg5X2lucy00ZmY1ODE3NTY3YTA2N2E5\"\
        />\n    <md:NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</md:NameIDFormat>\n\
        \    <md:SingleSignOnService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\"\
        \ Location=\"https://portal.sso.ap-southeast-1.amazonaws.com/saml/assertion/NDM4ODY5NzczODg5X2lucy00ZmY1ODE3NTY3YTA2N2E5\"\
        />\n    <md:SingleSignOnService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\"\
        \ Location=\"https://portal.sso.ap-southeast-1.amazonaws.com/saml/assertion/NDM4ODY5NzczODg5X2lucy00ZmY1ODE3NTY3YTA2N2E5\"\
        />\n  </md:IDPSSODescriptor>\n</md:EntityDescriptor>\n"
      Name: "AWSSSO_1a32e06b3a2c2a2a_DO_NOT_DELETE"
  LambdaFunction00TOBEDELETEDtestfunctionsqs00IfKlX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Function"
    DeletionPolicy: "Retain"
    Properties:
      MemorySize: 128
      Description: ""
      TracingConfig:
        Mode: "PassThrough"
      VpcConfig:
        SecurityGroupIds:
        - "sg-075615342aa3e28b9"
        SubnetIds:
        - Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00GtpLi"
        - Ref: "EC2Subnet00subnet0d68b865e8a7e3cc000qmBpx"
        Ipv6AllowedForDualStack: false
      Timeout: 20
      RuntimeManagementConfig:
        UpdateRuntimeOn: "Auto"
      Handler: "lambda_function.lambda_handler"
      ReservedConcurrentExecutions: 3
      Code:
        SourceKMSKeyArn:
          Ref: "LambdaFunction00TOBEDELETEDtestfunctionsqs00IfKlXCodeSourceKMSKeyArnGCwci"
        S3ObjectVersion:
          Ref: "LambdaFunction00TOBEDELETEDtestfunctionsqs00IfKlXCodeS3ObjectVersioniGwll"
        S3Bucket:
          Ref: "LambdaFunction00TOBEDELETEDtestfunctionsqs00IfKlXCodeS3Bucket1iVZn"
        ZipFile:
          Ref: "LambdaFunction00TOBEDELETEDtestfunctionsqs00IfKlXCodeZipFilemV8zA"
        ImageUri:
          Ref: "LambdaFunction00TOBEDELETEDtestfunctionsqs00IfKlXCodeImageUrigeW5h"
        S3Key:
          Ref: "LambdaFunction00TOBEDELETEDtestfunctionsqs00IfKlXCodeS3KeyQORTk"
      Role:
        Fn::GetAtt:
        - "IAMRole00TOBEDELETEDtestfunctionsqsrolexqi663q100SDpvH"
        - "Arn"
      FileSystemConfigs: []
      FunctionName: "TO_BE_DELETED-test_function_sqs"
      Runtime: "python3.12"
      PackageType: "Zip"
      LoggingConfig:
        LogFormat: "Text"
        LogGroup: "/aws/lambda/TO_BE_DELETED-test_function_sqs"
      RecursiveLoop: "Terminate"
      EphemeralStorage:
        Size: 512
      Layers:
      - "arn:aws:lambda:ap-southeast-1:343218203122:layer:pymongo:4"
      Architectures:
      - "x86_64"
  IAMRole00AWSReservedSSOProductManagerReadOnly1bb6cd1b95c47c5b00b5k0r:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/aws-reserved/sso.amazonaws.com/ap-southeast-1/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/ReadOnlyAccess"
      MaxSessionDuration: 43200
      RoleName: "AWSReservedSSO_Product_Manager_ReadOnly_1bb6cd1b95c47c5b"
      Description: "Product_Manager_ReadOnly"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Condition:
            StringEquals:
              SAML:aud: "https://signin.aws.amazon.com/saml"
          Action:
          - "sts:AssumeRoleWithSAML"
          - "sts:TagSession"
          Effect: "Allow"
          Principal:
            Federated: "arn:aws:iam::343218203122:saml-provider/AWSSSO_1a32e06b3a2c2a2a_DO_NOT_DELETE"
  IAMManagedPolicy00policyserviceroleAWSLambdaVPCAccessExecutionRoleb57946ea2e9c451082aa3a4fd3a137de00BL5i2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaVPCAccessExecutionRole-b57946ea-2e9c-4510-82aa-3a4fd3a137de"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "*"
          Action:
          - "ec2:CreateNetworkInterface"
          - "ec2:DeleteNetworkInterface"
          - "ec2:DescribeNetworkInterfaces"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgtestasyncoutputretrieverolezouh477p00H9HhV"
      Users: []
  EC2FlowLog00fl095a87dfeb6e5ef0900BsPeJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::FlowLog"
    DeletionPolicy: "Retain"
    Properties:
      LogFormat: "${version} ${account-id} ${interface-id} ${srcaddr} ${dstaddr} ${srcport}\
        \ ${dstport} ${protocol} ${packets} ${bytes} ${start} ${end} ${action} ${log-status}"
      ResourceId:
        Ref: "EC2VPC00vpc0182b4cdff5ae990b00bQeb2"
      MaxAggregationInterval: 600
      ResourceType: "VPC"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcflowdefaultvpc00NsXEP"
      DeliverLogsPermissionArn:
        Fn::GetAtt:
        - "IAMRole00VPCFlowLogtoCloudWatch00NLDWk"
        - "Arn"
      LogDestinationType: "cloud-watch-logs"
      Tags:
      - Value: "vpcflow-logging-default-vpc"
        Key: "Name"
      TrafficType: "ALL"
  IAMRole00lambdas3triggerroletest00wfwAj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/s3-trigger-tutorial"
      - "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
      - "arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "lambda-s3-trigger-role-test"
      Description: "Allows Lambda functions to call AWS services on your behalf."
      Policies:
      - PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Resource: "*"
            Action:
            - "ec2:ReplaceNetworkAclEntry"
            - "ec2:CreateNetworkAclEntry"
            Effect: "Allow"
            Sid: "VisualEditor0"
        PolicyName: "AWS-Services-Interface-Endpoint-Policy"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMRole00AmazonEventBridgeSchedulerLAMBDA51910dd79600WJ7la:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/Amazon-EventBridge-Scheduler-Execution-Policy-8abf97ef-c726-4330-8353-d2e7b096ece7"
      MaxSessionDuration: 3600
      RoleName: "Amazon_EventBridge_Scheduler_LAMBDA_51910dd796"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Condition:
            StringEquals:
              aws:SourceAccount: "343218203122"
          Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "scheduler.amazonaws.com"
  IAMRole00sgprodgenaiembeddingrolervd72zod00qYQHP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-41ed82fb-d9c0-481a-bf0f-a54bcb0b6080"
      - "arn:aws:iam::aws:policy/AmazonBedrockFullAccess"
      - "arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-embedding-role-rvd72zod"
      Policies:
      - PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Resource: "*"
            Action: "lambda:InvokeFunction"
            Effect: "Allow"
            Sid: "VisualEditor0"
        PolicyName: "invokeLambda"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  LambdaEventSourceMapping00d5efa8fc944242c1af9cb61a4d642139003XdfP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::EventSourceMapping"
    DeletionPolicy: "Retain"
    Properties:
      BatchSize: 1
      FunctionName:
        Ref: "LambdaVersion00functionsgprodgenairagsummariser1000W8WWn"
      ScalingConfig:
        MaximumConcurrency: 2
      Enabled: false
      EventSourceArn:
        Fn::GetAtt:
        - "SQSQueue00summarisercontinuousconversationfifo0034XKU"
        - "Arn"
      Tags: []
      FunctionResponseTypes:
      - "ReportBatchItemFailures"
      MaximumBatchingWindowInSeconds: 0
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole17bfe709b6cf40819b4107255873200600D1EO5:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-17bfe709-b6cf-4081-9b41-072558732006"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-prod-genai-retrievedocs-sgmkr-361-v1:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgprodgenairetrievedocssgmkr361v1rolegoambdsg00WEZyD"
      Users: []
  EC2Instance00i0e38931234673f678005QBoV:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Instance"
    DeletionPolicy: "Retain"
    Properties:
      Tenancy: "default"
      SecurityGroups:
      - "GenAI-Pilot-cvpn-SG"
      - "GenAI-Pilot-Private-Tmicro-to-App"
      - "GenAI-Pilot-Private-Cvpn-to-App"
      PrivateIpAddress: "10.25.71.170"
      BlockDeviceMappings:
      - Ebs:
          SnapshotId: "snap-083334dfef8e3d924"
          VolumeType: "gp3"
          KmsKeyId:
            Fn::GetAtt:
            - "KMSKey00e0af6c3f73fc497e863a6754f0dce6b100kSC3X"
            - "Arn"
          Encrypted: true
          Iops: 3000
          VolumeSize: 100
          DeleteOnTermination: false
        DeviceName: "/dev/xvda"
      IamInstanceProfile:
        Ref: "IAMInstanceProfile00ec2adminaccess00awY8x"
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00GtpLi"
      EbsOptimized: true
      Volumes:
      - VolumeId: "vol-0107ba962d2a3a965"
        Device: "/dev/xvda"
      NetworkInterfaces:
      - PrivateIpAddresses:
        - PrivateIpAddress: "10.25.71.170"
          Primary: true
        SecondaryPrivateIpAddressCount: 0
        DeviceIndex: "0"
        GroupSet:
        - Ref: "EC2SecurityGroup00sg0a6c63d92a738a24c00FjML8"
        - Ref: "EC2SecurityGroup00sg07fd500f946aad8a200p0vJb"
        - Ref: "EC2SecurityGroup00sg0158898f4b43a0ae900nBPrb"
        Ipv6Addresses: []
        SubnetId:
          Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00GtpLi"
        AssociatePublicIpAddress: false
        NetworkInterfaceId:
          Ref: "EC2NetworkInterface00eni03ebb21c83a16a05500YTggn"
        DeleteOnTermination: true
      ImageId: "ami-08f49baa317796afd"
      InstanceType: "t3.xlarge"
      Monitoring: false
      Tags:
      - Value: "ec2-jumpserver-yenmay"
        Key: "Name"
      InstanceInitiatedShutdownBehavior: "stop"
      CpuOptions:
        ThreadsPerCore: 2
        CoreCount: 2
      AvailabilityZone: "ap-southeast-1b"
      PrivateDnsNameOptions:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      SecurityGroupIds:
      - "sg-0a6c63d92a738a24c"
      - "sg-07fd500f946aad8a2"
      - "sg-0158898f4b43a0ae9"
      DisableApiTermination: false
      KeyName: "yenmay-key"
      SourceDestCheck: true
      PlacementGroupName: ""
      VpcId: "vpc-02790342fee4ebf9f"
      State:
        Code: "80"
        Name: "stopped"
      CreditSpecification:
        CPUCredits: "standard"
  IAMRole00testingjwtrole1ogla2uh00Xon60:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-d0cd18a6-5761-4ed5-b992-a37c8fe054ec"
      MaxSessionDuration: 3600
      RoleName: "testing_jwt-role-1ogla2uh"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMRole00sgprodgenaideleteobjects3220v1rolef2osbylu00waw30:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-7cc63468-addc-47ff-82d9-2461a62eb155"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-deleteobject-s3-220-v1-role-f2osbylu"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  RDSDBInstance00sgprodgenaiauthdbv2100zzfvX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::RDS::DBInstance"
    DeletionPolicy: "Retain"
    Properties:
      StorageEncrypted: true
      AssociatedRoles: []
      CertificateDetails: {}
      Port: "27017"
      DBClusterIdentifier:
        Ref: "RDSDBCluster00sgprodgenaiauthdbv200lZVmv"
      ProcessorFeatures: []
      StorageThroughput: 0
      PreferredBackupWindow: "00:00-00:30"
      MonitoringInterval: 0
      DBParameterGroupName: "default.docdb5.0"
      Endpoint: {}
      NetworkType: "IPV4"
      DedicatedLogVolume: false
      CopyTagsToSnapshot: false
      MultiAZ: false
      Engine: "docdb"
      Tags: []
      LicenseModel: "na"
      EngineVersion: "5.0.0"
      StorageType: "standard"
      KmsKeyId:
        Fn::GetAtt:
        - "KMSKey0051a5c08ff1b24e92b22b5784f7f0dc3300rv3Pv"
        - "Arn"
      DBInstanceClass: "db.t3.medium"
      AvailabilityZone: "ap-southeast-1c"
      OptionGroupName: "default:docdb-5-0"
      PreferredMaintenanceWindow: "sun:03:00-sun:03:30"
      EnablePerformanceInsights: false
      AutoMinorVersionUpgrade: true
      DBSubnetGroupName:
        Ref: "RDSDBSubnetGroup00genaipilotdatabaseprivate00FOLyi"
      DeletionProtection: false
      DBInstanceIdentifier: "sg-prod-genai-authdb-v2-1"
      AllocatedStorage: "1"
      CACertificateIdentifier: "rds-ca-rsa2048-g1"
      ManageMasterUserPassword: false
      MasterUserSecret: {}
      VPCSecurityGroups:
      - Fn::GetAtt:
        - "EC2SecurityGroup00sg075615342aa3e28b900dirPO"
        - "GroupId"
      - Fn::GetAtt:
        - "EC2SecurityGroup00sg02a57c92533299fd5002bQaE"
        - "GroupId"
      DBSecurityGroups: []
      MasterUsername: "Superadmin"
      EnableIAMDatabaseAuthentication: false
      BackupRetentionPeriod: 7
      PromotionTier: 1
      PubliclyAccessible: false
      EnableCloudwatchLogsExports:
      - "audit"
      - "profiler"
  EC2SecurityGroup00sg018c8a78c89c0d40400HOaMM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "harith"
      GroupName: "harith-ec2-sg"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00HMUI8"
      SecurityGroupIngress:
      - IpProtocol: "-1"
        FromPort: -1
        SourceSecurityGroupId: "sg-0a6c63d92a738a24c"
        ToPort: -1
        SourceSecurityGroupOwnerId: "343218203122"
      - IpProtocol: "tcp"
        FromPort: 27017
        SourceSecurityGroupId: "sg-075615342aa3e28b9"
        ToPort: 27017
        SourceSecurityGroupOwnerId: "343218203122"
  IAMRole00AWSServiceRoleForAWSCloud900WkgkP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/aws-service-role/cloud9.amazonaws.com/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/aws-service-role/AWSCloud9ServiceRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "AWSServiceRoleForAWSCloud9"
      Description: "Service linked role for AWS Cloud9"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "cloud9.amazonaws.com"
  LambdaPermission00functionsgprodgenaideleteobjects3004BYj5:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Permission"
    DeletionPolicy: "Retain"
    Properties:
      FunctionName:
        Fn::GetAtt:
        - "LambdaFunction00sgprodgenaideleteobjects300UvJu4"
        - "Arn"
      Action: "lambda:InvokeFunction"
      SourceArn: "arn:aws:execute-api:ap-southeast-1:343218203122:ip5o3ftxh4/*/DELETE/deleteobject_s3"
      Principal: "apigateway.amazonaws.com"
  RDSDBCluster00sgprodgenaisummariserv100IE7gQ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::RDS::DBCluster"
    DeletionPolicy: "Retain"
    Properties:
      StorageEncrypted: true
      AssociatedRoles: []
      EnableHttpEndpoint: false
      EngineMode: "provisioned"
      Port: 27017
      DBClusterIdentifier: "sg-prod-genai-summariser-v1"
      PreferredBackupWindow: "00:00-00:30"
      NetworkType: "IPV4"
      VpcSecurityGroupIds:
      - "sg-075615342aa3e28b9"
      - "sg-02a57c92533299fd5"
      CopyTagsToSnapshot: false
      Engine: "docdb"
      Tags: []
      EngineVersion: "5.0.0"
      StorageType: "aurora"
      KmsKeyId:
        Fn::GetAtt:
        - "KMSKey0051a5c08ff1b24e92b22b5784f7f0dc3300rv3Pv"
        - "Arn"
      AvailabilityZones:
      - "ap-southeast-1a"
      - "ap-southeast-1b"
      - "ap-southeast-1c"
      EnableLocalWriteForwarding: false
      PreferredMaintenanceWindow: "mon:15:10-mon:15:40"
      AutoMinorVersionUpgrade: false
      DBSubnetGroupName:
        Ref: "RDSDBSubnetGroup00genaipilotdatabaseprivate00FOLyi"
      DeletionProtection: true
      AllocatedStorage: 1
      ManageMasterUserPassword: false
      MasterUserSecret: {}
      MasterUsername: "summariser"
      ReadEndpoint: {}
      EnableIAMDatabaseAuthentication: false
      DBClusterParameterGroupName: "default.docdb5.0"
      BackupRetentionPeriod: 7
      EnableCloudwatchLogsExports:
      - "audit"
      - "profiler"
  IAMRole00AWSServiceRoleForSSO00ouC4h:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/aws-service-role/sso.amazonaws.com/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/aws-service-role/AWSSSOServiceRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "AWSServiceRoleForSSO"
      Description: "Service-linked role used by AWS SSO to manage AWS resources, including\
        \ IAM roles, policies and SAML IdP on your behalf."
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "sso.amazonaws.com"
  IAMRole00testwebsocketConnectrole9054j2c100P0yiQ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-04081705-cf01-4c5d-b7e5-e1e7b71f1cae"
      MaxSessionDuration: 3600
      RoleName: "test-websocketConnect-role-9054j2c1"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole482e6e7854be4717add58b11fcaf946600kSeWL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-482e6e78-54be-4717-add5-8b11fcaf9466"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-prod-genai-summariser-v1:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgprodgenaisummariserv1rolene1k6vee00fpj4g"
      Users: []
  LambdaPermission00functionsgprodgenais3triggertutorial00ylMWf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Permission"
    DeletionPolicy: "Retain"
    Properties:
      FunctionName:
        Fn::GetAtt:
        - "LambdaFunction00sgprodgenais3triggertutorial004FiTW"
        - "Arn"
      Action: "lambda:InvokeFunction"
      SourceArn: "arn:aws:s3:::sg-prod-genai-vpc-testing"
      Principal: "s3.amazonaws.com"
      SourceAccount: "343218203122"
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole2b3af56cfe834d178707bf61ba2626dc00cEwyB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-2b3af56c-fe83-4d17-8707-bf61ba2626dc"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-prod-genai-categoriser-217-v1:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgprodgenaicategoriser217v1roleixsqitny00Bs6if"
      Users: []
  IAMRole00sgwssconnectrolekkh69le700PXMQs:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-e0a8e4fb-c407-415c-8803-06cf210a2b5e"
      MaxSessionDuration: 3600
      RoleName: "sg-wss-connect-role-kkh69le7"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMRole00sgtestgenaisummariserretrievetofrontendERRORrole4l4jw71p00KJqBu:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-8e7d1e7f-07b9-49f4-ac17-7be439adab5f"
      MaxSessionDuration: 3600
      RoleName: "sg-test-genai-summariser-retrievetofrontend-ERROR-role-4l4jw71p"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMRole00AmazonSageMakerServiceCatalogProductsCodeBuildRole003vI4U:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/AmazonSageMakerServiceCatalogProductsCodeBuildServiceRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "AmazonSageMakerServiceCatalogProductsCodeBuildRole"
      Description: "SageMaker role created from the SageMaker AWS Management Console.\
        \ This role will grant permissions required to use AWS CodeBuild within the\
        \ Amazon SageMaker portfolio of products."
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "codebuild.amazonaws.com"
  IAMRole00AmazonSageMakerExecutionRole20240813T11154300nu5Dd:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AmazonSageMaker-ExecutionPolicy-20240813T111543"
      - "arn:aws:iam::aws:policy/AWSCodePipeline_FullAccess"
      - "arn:aws:iam::aws:policy/AmazonSageMakerCanvasFullAccess"
      - "arn:aws:iam::aws:policy/AWSLambdaExecute"
      - "arn:aws:iam::aws:policy/AmazonSageMakerCanvasDataPrepFullAccess"
      - "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess"
      - "arn:aws:iam::aws:policy/AWSCodeCommitFullAccess"
      - "arn:aws:iam::aws:policy/AmazonSageMakerCanvasAIServicesAccess"
      - "arn:aws:iam::aws:policy/CloudWatchFullAccess"
      MaxSessionDuration: 3600
      RoleName: "AmazonSageMaker-ExecutionRole-20240813T111543"
      Description: "SageMaker execution role created from the SageMaker AWS Management\
        \ Console."
      Policies:
      - PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Resource: "*"
            Action: "sns:*"
            Effect: "Allow"
            Sid: "VisualEditor0"
        PolicyName: "SNS_Role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "sagemaker.amazonaws.com"
  IAMRole00lambdaex00ggt6n:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      MaxSessionDuration: 3600
      RoleName: "lambda-ex"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMRole00AWSServiceRoleForVPCTransitGateway00lRFll:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/aws-service-role/transitgateway.amazonaws.com/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/aws-service-role/AWSVPCTransitGatewayServiceRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "AWSServiceRoleForVPCTransitGateway"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "transitgateway.amazonaws.com"
  EC2Volume00vol0057ef600adf6805f00F3Mqc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Volume"
    DeletionPolicy: "Retain"
    Properties:
      MultiAttachEnabled: false
      SnapshotId: "snap-0d0d9f5db331ffa4b"
      VolumeType: "gp3"
      KmsKeyId: "arn:aws:kms:ap-southeast-1:343218203122:key/e0af6c3f-73fc-497e-863a-6754f0dce6b1"
      Encrypted: true
      Size: 8
      AutoEnableIO: false
      AvailabilityZone: "ap-southeast-1b"
      Throughput: 125
      Iops: 3000
      Tags:
      - Value: "tapo-test-1 [encrypted]"
        Key: "name"
  LambdaFunction00testingest00w7sc4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Function"
    DeletionPolicy: "Retain"
    Properties:
      MemorySize: 128
      Description: ""
      TracingConfig:
        Mode: "PassThrough"
      VpcConfig:
        SecurityGroupIds:
        - "sg-075615342aa3e28b9"
        SubnetIds:
        - Ref: "EC2Subnet00subnet048794c64c2e4427a00H739O"
        - Ref: "EC2Subnet00subnet0d68b865e8a7e3cc000qmBpx"
        Ipv6AllowedForDualStack: false
      Timeout: 3
      RuntimeManagementConfig:
        UpdateRuntimeOn: "Auto"
      Handler: "lambda_function.lambda_handler"
      Code:
        SourceKMSKeyArn:
          Ref: "LambdaFunction00testingest00w7sc4CodeSourceKMSKeyArnzmw2E"
        S3ObjectVersion:
          Ref: "LambdaFunction00testingest00w7sc4CodeS3ObjectVersionDTaFq"
        S3Bucket:
          Ref: "LambdaFunction00testingest00w7sc4CodeS3BucketMaJEP"
        ZipFile:
          Ref: "LambdaFunction00testingest00w7sc4CodeZipFile8OGBg"
        ImageUri:
          Ref: "LambdaFunction00testingest00w7sc4CodeImageUriPmRLd"
        S3Key:
          Ref: "LambdaFunction00testingest00w7sc4CodeS3KeyVP8gy"
      Role:
        Fn::GetAtt:
        - "IAMRole00testingestrole0n1hok9900h7dCf"
        - "Arn"
      FileSystemConfigs: []
      FunctionName: "test-ingest"
      Runtime: "python3.12"
      PackageType: "Zip"
      LoggingConfig:
        LogFormat: "Text"
        LogGroup: "/aws/lambda/test-ingest"
      RecursiveLoop: "Terminate"
      EphemeralStorage:
        Size: 512
      Architectures:
      - "x86_64"
  IAMRole00AWSServiceRoleForSupport00hJA4D:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/aws-service-role/support.amazonaws.com/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/aws-service-role/AWSSupportServiceRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "AWSServiceRoleForSupport"
      Description: "Enables resource access for AWS to provide billing, administrative\
        \ and support services"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "support.amazonaws.com"
  IAMRole00TOBEDELETEDtestfunctionsqsrolexqi663q100SDpvH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-010b2536-c268-4ce0-be03-5f9d7ab9c14e"
      - "arn:aws:iam::aws:policy/AmazonSQSFullAccess"
      - "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess"
      - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
      - "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
      - "arn:aws:iam::aws:policy/AdministratorAccess"
      MaxSessionDuration: 3600
      RoleName: "TO_BE_DELETED-test_function_sqs-role-xqi663q1"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  SQSQueue00teststandardqueue00hx0zm:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::SQS::Queue"
    DeletionPolicy: "Retain"
    Properties:
      SqsManagedSseEnabled: true
      ReceiveMessageWaitTimeSeconds: 0
      DelaySeconds: 0
      MessageRetentionPeriod: 86400
      MaximumMessageSize: 262144
      VisibilityTimeout: 20
      QueueName: "test_standard_queue"
  EC2VolumeAttachment00vol045cae6da6d093ba700lCmpD:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VolumeAttachment"
    DeletionPolicy: "Retain"
    Properties:
      InstanceId: "i-0630337e785e424b3"
      VolumeId: "vol-045cae6da6d093ba7"
      Device: "/dev/xvda"
  IAMRole00sgprodgenaipresignedurls3220v1role5jlwsarb00MxbcN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-2b0d223b-d86b-4194-9f3a-37a580b92791"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-presignedurl-s3-220-v1-role-5jlwsarb"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMRole00AmazonSageMakerServiceCatalogProductsCodePipelineRole00qiVL4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/service-role/AmazonSageMakerServiceCatalogProductsCodePipelineServiceRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "AmazonSageMakerServiceCatalogProductsCodePipelineRole"
      Description: "SageMaker role created from the SageMaker AWS Management Console.\
        \ This role will grant permissions required to use AWS CodePipeline within\
        \ the Amazon SageMaker portfolio of products."
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "codepipeline.amazonaws.com"
          Sid: ""
  IAMRole00VPCFlowLogtoCloudWatch00NLDWk:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/Publish-Log-to-CloudWatch"
      MaxSessionDuration: 3600
      RoleName: "VPC-Flow-Log-to-CloudWatch"
      Description: "Allows VPC Flow Logs to be written to Cloud Watch"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "vpc-flow-logs.amazonaws.com"
  IAMRole00AmazonSageMakerServiceCatalogProductsExecutionRole006MHPQ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess"
      MaxSessionDuration: 3600
      RoleName: "AmazonSageMakerServiceCatalogProductsExecutionRole"
      Description: "SageMaker role created from the SageMaker AWS Management Console.\
        \ This role will grant permissions required to use AWS SageMaker within the\
        \ Amazon SageMaker portfolio of products."
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "sagemaker.amazonaws.com"
  IAMRole00sgprodgenaipresignedurls3v1role06pxc6kn00hee3l:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-6e5925e5-d6ef-4876-ab81-70be31d4cd6a"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-presignedurl-s3-v1-role-06pxc6kn"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMRole00sgtestgenaisummariserpython312rolehua3z5vc00IAw86:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/AmazonSQSFullAccess"
      - "arn:aws:iam::aws:policy/AmazonSNSFullAccess"
      - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-ecca6ee0-8e95-493a-b76a-74a3cde0600e"
      - "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess"
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaVPCAccessExecutionRole-624f0b52-d06d-4bf2-9634-781caf0b34f3"
      MaxSessionDuration: 3600
      RoleName: "sg-test-genai-summariser-python312-role-hua3z5vc"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRoleba8ca421c98f418bb2121f1bbb3c09af00okF1l:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-ba8ca421-c98f-418b-b212-1f1bbb3c09af"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-prod-genai-embedding-v1:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgprodgenaiembeddingv1role2n24czs3003o7ji"
      Users: []
  SQSQueue00summarisernewconversationfifo00tRGGa:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::SQS::Queue"
    DeletionPolicy: "Retain"
    Properties:
      ReceiveMessageWaitTimeSeconds: 0
      SqsManagedSseEnabled: true
      FifoThroughputLimit: "perQueue"
      DelaySeconds: 0
      FifoQueue: true
      MessageRetentionPeriod: 1800
      MaximumMessageSize: 262144
      DeduplicationScope: "queue"
      VisibilityTimeout: 300
      ContentBasedDeduplication: true
      QueueName: "summariser_new_conversation.fifo"
  SecretsManagerSecret00secretpilotgenaiauthdbV3TMZM00MefKF:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::SecretsManager::Secret"
    DeletionPolicy: "Retain"
    Properties:
      ReplicaRegions: []
      Description: "Access to AuthDB for Gen AI Pilot"
      KmsKeyId:
        Fn::GetAtt:
        - "KMSKey008638d8df896d4fe8a82af2fdb61ac87700BoUid"
        - "Arn"
      Tags: []
      Name: "pilot/genai/authdb"
  LogsLogGroup00awsvpcflowdefaultvpc00NsXEP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "INFREQUENT_ACCESS"
      RetentionInDays: 7
      LogGroupName: "/aws/vpcflow/default-vpc"
      Tags:
      - Value: "GenAI-Prod-Default-VPC"
        Key: "Name"
      DataProtectionPolicy: {}
  RDSDBCluster00sgprodgenaiwebsocketdb00rL91m:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::RDS::DBCluster"
    DeletionPolicy: "Retain"
    Properties:
      StorageEncrypted: true
      AssociatedRoles: []
      EnableHttpEndpoint: false
      EngineMode: "provisioned"
      Port: 27017
      DBClusterIdentifier: "sg-prod-genai-websocketdb"
      PreferredBackupWindow: "00:00-00:30"
      NetworkType: "IPV4"
      VpcSecurityGroupIds:
      - "sg-02a57c92533299fd5"
      - "sg-075615342aa3e28b9"
      CopyTagsToSnapshot: false
      Engine: "docdb"
      Tags: []
      EngineVersion: "5.0.0"
      StorageType: "aurora"
      KmsKeyId:
        Fn::GetAtt:
        - "KMSKey0051a5c08ff1b24e92b22b5784f7f0dc3300rv3Pv"
        - "Arn"
      AvailabilityZones:
      - "ap-southeast-1a"
      - "ap-southeast-1b"
      - "ap-southeast-1c"
      EnableLocalWriteForwarding: false
      PreferredMaintenanceWindow: "sun:14:18-sun:14:48"
      AutoMinorVersionUpgrade: false
      DBSubnetGroupName:
        Ref: "RDSDBSubnetGroup00genaipilotdatabaseprivate00FOLyi"
      DeletionProtection: true
      AllocatedStorage: 1
      ManageMasterUserPassword: false
      MasterUserSecret: {}
      MasterUsername: "WebsocketDBUser"
      ReadEndpoint: {}
      EnableIAMDatabaseAuthentication: false
      DBClusterParameterGroupName: "default.docdb5.0"
      BackupRetentionPeriod: 7
      EnableCloudwatchLogsExports:
      - "audit"
      - "profiler"
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRoleecca6ee08e95493ab76a74a3cde0600e001nxiA:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-ecca6ee0-8e95-493a-b76a-74a3cde0600e"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-test-genai-summariser-python312:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgtestgenaisummariserpython312rolehua3z5vc00IAw86"
      Users: []
  IAMRole00AWSReservedSSOAdministratorAccessDenyIAMa1beb60fb3a7157200Kmx2P:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/aws-reserved/sso.amazonaws.com/ap-southeast-1/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/job-function/SystemAdministrator"
      - "arn:aws:iam::aws:policy/AdministratorAccess"
      MaxSessionDuration: 43200
      RoleName: "AWSReservedSSO_AdministratorAccess_DenyIAM_a1beb60fb3a71572"
      Description: "System Administrator (Deny IAM)"
      Policies:
      - PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Resource: "*"
            Action:
            - "iam:AddUserToGroup"
            - "iam:ChangePassword"
            - "iam:CreateAccessKey"
            - "iam:CreateAccountAlias"
            - "iam:CreateGroup"
            - "iam:CreateLoginProfile"
            - "iam:CreateUser"
            - "iam:DeactivateMFADevice"
            - "iam:CreateVirtualMFADevice"
            - "iam:DeleteAccessKey"
            - "iam:DeleteAccountAlias"
            - "iam:DeleteGroup"
            - "iam:DeleteLoginProfile"
            - "iam:DeleteUser"
            - "iam:DeleteVirtualMFADevice"
            - "iam:EnableMFADevice"
            - "iam:RemoveUserFromGroup"
            - "iam:ResetServiceSpecificCredential"
            - "iam:ResyncMFADevice"
            - "iam:UpdateAccessKey"
            - "iam:UpdateAccountEmailAddress"
            - "iam:UpdateAccountName"
            - "iam:UpdateAccountPasswordPolicy"
            - "iam:UpdateUser"
            - "iam:DeleteUserPolicy"
            - "iam:DetachGroupPolicy"
            - "ec2:ReplaceNetworkAclEntry"
            - "ec2:ReplaceNetworkAclAssociation"
            - "ec2:DeleteNetworkAcl"
            - "ec2:DeleteNetworkAclEntry"
            - "ec2:CreateNetworkAcl"
            - "ec2:CreateNetworkAclEntry"
            - "ec2:ModifyVpcPeeringConnectionOptions"
            - "ec2:ModifyVpcTenancy"
            - "ec2:RejectVpcPeeringConnection"
            Effect: "Deny"
            Sid: "CustomDenyGuardRails"
          - Condition:
              IpAddress:
                aws:SourceIp:
                - "211.25.63.2/32"
                - "203.115.236.2/32"
                - "203.106.28.194/32"
            Resource: "*"
            Action: "*"
            Effect: "Allow"
            Sid: "WhitelistIPPrivilegeuser"
        PolicyName: "AwsSSOInlinePolicy"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Condition:
            StringEquals:
              SAML:aud: "https://signin.aws.amazon.com/saml"
          Action:
          - "sts:AssumeRoleWithSAML"
          - "sts:TagSession"
          Effect: "Allow"
          Principal:
            Federated: "arn:aws:iam::343218203122:saml-provider/AWSSSO_1a32e06b3a2c2a2a_DO_NOT_DELETE"
  LambdaEventSourceMapping00490e1e6a3d70429d8e6af8f9ed0c7ca8002KA02:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::EventSourceMapping"
    DeletionPolicy: "Retain"
    Properties:
      BatchSize: 1
      FunctionName:
        Fn::GetAtt:
        - "LambdaFunction00TOBEDELETEDtestfunctionsqs00IfKlX"
        - "Arn"
      ScalingConfig:
        MaximumConcurrency: 2
      Enabled: true
      EventSourceArn:
        Fn::GetAtt:
        - "SQSQueue00PRIORITYfifo00Ytp76"
        - "Arn"
      Tags: []
      FunctionResponseTypes:
      - "ReportBatchItemFailures"
      MaximumBatchingWindowInSeconds: 0
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole6c59f144022c464bbaffadb93a67cd3f00NgkNN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-6c59f144-022c-464b-baff-adb93a67cd3f"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:us-east-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:us-east-1:343218203122:log-group:/aws/lambda/sg-prod-genai-retrievedocs-sgmkr-361-v1:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgprodgenairetrievedocssgmkr361v1roleeak4zfkz00mfBGT"
      Users: []
  IAMRole00AmazonSageMakerServiceCatalogProductsLaunchRole006fuZm:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/AmazonSageMakerAdmin-ServiceCatalogProductsServiceRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "AmazonSageMakerServiceCatalogProductsLaunchRole"
      Description: "SageMaker role created from the SageMaker AWS Management Console.\
        \ This role has the permissions required to launch the Amazon SageMaker portfolio\
        \ of products from AWS ServiceCatalog."
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "servicecatalog.amazonaws.com"
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRolece99fdc27c234f63a5e19e50ff4cfa9100wJgX7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-ce99fdc2-7c23-4f63-a5e1-9e50ff4cfa91"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:us-east-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:us-east-1:343218203122:log-group:/aws/lambda/sg-prod-genai-retrievedocs-216-v1:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgprodgenairetrievedocs216v1rolejq8qbell00VTLw3"
      Users: []
  EC2SecurityGroup00sg0158898f4b43a0ae900nBPrb:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "For developer cli access to servers"
      GroupName: "GenAI-Pilot-Private-Cvpn-to-App"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00HMUI8"
      SecurityGroupIngress:
      - IpProtocol: "tcp"
        FromPort: 22
        SourceSecurityGroupId: "sg-0a6c63d92a738a24c"
        ToPort: 22
        SourceSecurityGroupOwnerId: "343218203122"
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "icmp"
        FromPort: -1
        ToPort: -1
      - IpProtocol: "icmp"
        FromPort: -1
        SourceSecurityGroupId: "sg-0a6c63d92a738a24c"
        ToPort: -1
        SourceSecurityGroupOwnerId: "343218203122"
      SecurityGroupEgress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
      Tags:
      - Value: "GenAI-Pilot-Private-Cvpn-to-App"
        Key: "Name"
  IAMRole00AWSServiceRoleForConfig00F2bVi:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/aws-service-role/config.amazonaws.com/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/aws-service-role/AWSConfigServiceRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "AWSServiceRoleForConfig"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "config.amazonaws.com"
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole010b2536c2684ce0be035f9d7ab9c14e00Mk8ka:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-010b2536-c268-4ce0-be03-5f9d7ab9c14e"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/TO_BE_DELETED-test_function_sqs:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00TOBEDELETEDtestfunctionsqsrolexqi663q100SDpvH"
      Users: []
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole2a7013cfab2a42ea8af923bee3774c25000bJD4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-2a7013cf-ab2a-42ea-8af9-23bee3774c25"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-prod-genai-deleteobject-s3:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
        - Resource:
          - "arn:aws:s3:::sg-prod-genai-summariser"
          - "arn:aws:s3:::sg-prod-genai-summariser/*"
          Action:
          - "s3:GetObject"
          - "s3:ListBucket"
          - "s3:PutObject"
          - "s3:DeleteObject"
          Effect: "Allow"
          Sid: "AllowS3Access"
      Roles:
      - Ref: "IAMRole00sgprodgenaideleteobjects3role5jyencc400qDeqO"
      Users: []
  EC2Subnet00subnet0d68b865e8a7e3cc000qmBpx:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Subnet"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00HMUI8"
      MapPublicIpOnLaunch: false
      EnableDns64: false
      AvailabilityZoneId: "apse1-az3"
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      CidrBlock: "10.25.71.112/28"
      Ipv6Native: false
      Tags:
      - Value: "GenAI-Dev-Database-Private-1c"
        Key: "Name"
  IAMRole00AWSServiceRoleForAPIGateway00MpZq5:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/aws-service-role/ops.apigateway.amazonaws.com/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/aws-service-role/APIGatewayServiceRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "AWSServiceRoleForAPIGateway"
      Description: "The Service Linked Role is used by Amazon API Gateway."
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "ops.apigateway.amazonaws.com"
  IAMRole00sgprodapigwapikeyauthorizerrole4e7fn10q001qPHt:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-f5f7ecc1-6d40-46de-a3db-864b0354a33a"
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaVPCAccessExecutionRole-c3e25113-a405-4f69-8cd2-0c5f7e1a588b"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-apigw-apikey-authorizer-role-4e7fn10q"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMRole00sgprodgenaisummariserv1rolene1k6vee00fpj4g:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-482e6e78-54be-4717-add5-8b11fcaf9466"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-summariser-v1-role-ne1k6vee"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMManagedPolicy00policyPublishLogtoCloudWatch00DDsmH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "Publish-Log-to-CloudWatch"
      Path: "/"
      Description: "Allows logs to be published to CloudWatch"
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "*"
          Action:
          - "logs:CreateLogGroup"
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          - "logs:DescribeLogGroups"
          - "logs:DescribeLogStreams"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00VPCFlowLogtoCloudWatch00NLDWk"
      Users: []
  EC2VPC00vpc0182b4cdff5ae990b00bQeb2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VPC"
    DeletionPolicy: "Retain"
    Properties:
      CidrBlock: "172.31.0.0/16"
      EnableDnsSupport: true
      InstanceTenancy: "default"
      EnableDnsHostnames: true
      Tags:
      - Value: "[DEFAULT]"
        Key: "Name"
  IAMRole00sgprodgenaideleteobjects3rolefrdptv4n00Pfyve:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-36017280-2f19-496d-a206-177a2efcca3e"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-deleteobject-s3-role-frdptv4n"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMRole00AWSServiceRoleForCloudTrail00ayOvD:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/aws-service-role/cloudtrail.amazonaws.com/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/aws-service-role/CloudTrailServiceRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "AWSServiceRoleForCloudTrail"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "cloudtrail.amazonaws.com"
  IAMRole00sgprodgenaicategoriser217v1roler1ajrw3a001WbPV:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-d7dfc5fb-5655-4801-a0d2-f1ad6f6e9984"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-categoriser-217-v1-role-r1ajrw3a"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  EC2Subnet00subnet0e7c29cffbb72373f00m6e4L:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Subnet"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00HMUI8"
      MapPublicIpOnLaunch: false
      EnableDns64: false
      AvailabilityZoneId: "apse1-az2"
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      CidrBlock: "10.25.71.16/28"
      Ipv6Native: false
      Tags:
      - Value: "GenAI-Dev-Public-1b (reserved)"
        Key: "Name"
  IAMRole00sgprodgenaisummarisersgmkr220v1role115c2d3q00XGLty:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-72c8fad6-7f40-4948-bc52-61bb9aca65a1"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-summariser-sgmkr-220-v1-role-115c2d3q"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  EC2Subnet00subnet040ea0b30fd89092a007hzuD:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Subnet"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00HMUI8"
      MapPublicIpOnLaunch: false
      EnableDns64: false
      AvailabilityZoneId: "apse1-az2"
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      CidrBlock: "10.25.71.48/28"
      Ipv6Native: false
      Tags:
      - Value: "GenAI-Dev-ECSAppLB-Private-1b"
        Key: "Name"
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRolef48634caf1f942bf96aeb34ac4f2aa0800T5T9r:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-f48634ca-f1f9-42bf-96ae-b34ac4f2aa08"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-test-genai-summariser-retrievetofrontend:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgtestgenaisummariserretrievetofrontendrole1bli1c8l000JVOr"
      Users: []
  KMSKey00c72534efc70440d4b4e20fe1b49a50d900VIJXL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::KMS::Key"
    DeletionPolicy: "Retain"
    Properties:
      Origin: "AWS_KMS"
      MultiRegion: false
      Description: "Default key that protects my ACM private keys when no other key\
        \ is defined"
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
        - Condition:
            StringEquals:
              kms:ViaService: "acm.ap-southeast-1.amazonaws.com"
              kms:CallerAccount: "343218203122"
            ForAllValues:StringEquals:
              kms:GrantOperations: "Decrypt"
            Bool:
              kms:GrantIsForAWSResource: "true"
          Resource: "*"
          Action: "kms:CreateGrant"
          Effect: "Allow"
          Principal:
            AWS: "*"
          Sid: "Allow creation of decryption grants"
        - Condition:
            StringEquals:
              kms:ViaService: "acm.ap-southeast-1.amazonaws.com"
              kms:CallerAccount: "343218203122"
            ForAllValues:StringEquals:
              kms:GrantOperations:
              - "Encrypt"
              - "ReEncryptFrom"
              - "ReEncryptTo"
            Bool:
              kms:GrantIsForAWSResource: "true"
          Resource: "*"
          Action: "kms:CreateGrant"
          Effect: "Allow"
          Principal:
            AWS: "*"
          Sid: "Allow creation of encryption grant"
        - Condition:
            StringEquals:
              kms:CallerAccount: "343218203122"
          Resource: "*"
          Action:
          - "kms:DescribeKey"
          - "kms:ListGrants"
          - "kms:RevokeGrant"
          - "kms:GetKeyPolicy"
          Effect: "Allow"
          Principal:
            AWS: "*"
          Sid: "Allowed operations for the key owner"
        - Condition:
            Bool:
              kms:ReEncryptOnSameKey: "false"
          Resource: "*"
          Action: "kms:ReEncrypt*"
          Effect: "Deny"
          Principal:
            AWS: "*"
          Sid: "Deny re-encryption to any other key"
        - Condition:
            StringEquals:
              kms:ViaService: "acm.ap-southeast-1.amazonaws.com"
              kms:CallerAccount: "343218203122"
          Resource: "*"
          Action: "kms:Decrypt"
          Effect: "Allow"
          Principal:
            AWS: "*"
          Sid: "Allow decrypt"
        Id: "auto-acm-4"
      KeySpec: "SYMMETRIC_DEFAULT"
      Enabled: true
      KeyUsage: "ENCRYPT_DECRYPT"
  KMSKey0045d69e941b784d41a034db0530da7852005Qx66:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::KMS::Key"
    DeletionPolicy: "Retain"
    Properties:
      Origin: "AWS_KMS"
      MultiRegion: false
      Description: "Default key that protects my Lambda functions when no other key\
        \ is defined"
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
        - Condition:
            StringEquals:
              kms:ViaService: "lambda.ap-southeast-1.amazonaws.com"
              kms:CallerAccount: "343218203122"
          Resource: "*"
          Action:
          - "kms:Encrypt"
          - "kms:Decrypt"
          - "kms:ReEncrypt*"
          - "kms:GenerateDataKey*"
          - "kms:CreateGrant"
          - "kms:DescribeKey"
          Effect: "Allow"
          Principal:
            AWS: "*"
          Sid: "Allow access through AWS Lambda for all principals in the account\
            \ that are authorized to use AWS Lambda"
        - Resource: "*"
          Action:
          - "kms:Describe*"
          - "kms:Get*"
          - "kms:List*"
          - "kms:RevokeGrant"
          Effect: "Allow"
          Principal:
            AWS: "arn:aws:iam::343218203122:root"
          Sid: "Allow direct access to key metadata to the account"
        Id: "auto-awslambda"
      KeySpec: "SYMMETRIC_DEFAULT"
      Enabled: true
      EnableKeyRotation: true
      KeyUsage: "ENCRYPT_DECRYPT"
      Tags: []
  KMSKey0051a5c08ff1b24e92b22b5784f7f0dc3300rv3Pv:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::KMS::Key"
    DeletionPolicy: "Retain"
    Properties:
      Origin: "AWS_KMS"
      MultiRegion: false
      Description: "Default key that protects my RDS database volumes when no other\
        \ key is defined"
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
        - Condition:
            StringEquals:
              kms:CallerAccount: "343218203122"
              kms:ViaService: "rds.ap-southeast-1.amazonaws.com"
          Resource: "*"
          Action:
          - "kms:Encrypt"
          - "kms:Decrypt"
          - "kms:ReEncrypt*"
          - "kms:GenerateDataKey*"
          - "kms:CreateGrant"
          - "kms:ListGrants"
          - "kms:DescribeKey"
          Effect: "Allow"
          Principal:
            AWS: "*"
          Sid: "Allow access through RDS for all principals in the account that are\
            \ authorized to use RDS"
        - Resource: "*"
          Action:
          - "kms:Describe*"
          - "kms:Get*"
          - "kms:List*"
          - "kms:RevokeGrant"
          Effect: "Allow"
          Principal:
            AWS: "arn:aws:iam::343218203122:root"
          Sid: "Allow direct access to key metadata to the account"
        Id: "auto-rds-2"
      KeySpec: "SYMMETRIC_DEFAULT"
      Enabled: true
      EnableKeyRotation: true
      KeyUsage: "ENCRYPT_DECRYPT"
      Tags: []
  EC2Volume00vol01bd16c2e811bb9d700kGh6g:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Volume"
    DeletionPolicy: "Retain"
    Properties:
      MultiAttachEnabled: false
      SnapshotId: "snap-0c8eab48745cf2897"
      VolumeType: "gp3"
      KmsKeyId: "arn:aws:kms:ap-southeast-1:343218203122:key/e0af6c3f-73fc-497e-863a-6754f0dce6b1"
      Encrypted: true
      Size: 50
      AutoEnableIO: false
      AvailabilityZone: "ap-southeast-1c"
      Throughput: 125
      Iops: 3000
      Tags:
      - Value: "essien-jumpserver-ebs"
        Key: "Name"
  IAMRole00AWSServiceRoleForServiceQuotas00K6QZ4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/aws-service-role/servicequotas.amazonaws.com/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/aws-service-role/ServiceQuotasServiceRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "AWSServiceRoleForServiceQuotas"
      Description: "A service-linked role is required for Service Quotas to access\
        \ your service limits."
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "servicequotas.amazonaws.com"
  EC2Instance00i0630337e785e424b300lykcA:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Instance"
    DeletionPolicy: "Retain"
    Properties:
      Tenancy: "default"
      SecurityGroups:
      - "GenAI-Pilot-Private-Tmicro-to-App"
      - "WebsocketServerSecurityGroup"
      - "GenAI-Pilot-Private-Cvpn-to-App"
      PrivateIpAddress: "10.25.71.180"
      BlockDeviceMappings:
      - Ebs:
          SnapshotId: "snap-01b44a4dc94c94fda"
          VolumeType: "gp3"
          KmsKeyId:
            Fn::GetAtt:
            - "KMSKey00e0af6c3f73fc497e863a6754f0dce6b100kSC3X"
            - "Arn"
          Encrypted: true
          Iops: 3000
          VolumeSize: 20
          DeleteOnTermination: false
        DeviceName: "/dev/xvda"
      IamInstanceProfile:
        Ref: "IAMInstanceProfile00ec2adminaccess00awY8x"
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00GtpLi"
      EbsOptimized: false
      Volumes:
      - VolumeId: "vol-045cae6da6d093ba7"
        Device: "/dev/xvda"
      NetworkInterfaces:
      - PrivateIpAddresses:
        - PrivateIpAddress: "10.25.71.180"
          Primary: true
        SecondaryPrivateIpAddressCount: 0
        DeviceIndex: "0"
        GroupSet:
        - Ref: "EC2SecurityGroup00sg07fd500f946aad8a200p0vJb"
        - Ref: "EC2SecurityGroup00sg07401c0c33946a24100DAGOP"
        - Ref: "EC2SecurityGroup00sg0158898f4b43a0ae900nBPrb"
        Ipv6Addresses: []
        SubnetId:
          Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00GtpLi"
        AssociatePublicIpAddress: false
        NetworkInterfaceId:
          Ref: "EC2NetworkInterface00eni0403053f58cf2839a00xUR7A"
        DeleteOnTermination: true
      ImageId: "ami-0d07675d294f17973"
      InstanceType: "t2.medium"
      Monitoring: false
      Tags:
      - Value: "ec2-jumpserver-shengkwan"
        Key: "Name"
      InstanceInitiatedShutdownBehavior: "stop"
      CpuOptions:
        ThreadsPerCore: 1
        CoreCount: 2
      AvailabilityZone: "ap-southeast-1b"
      PrivateDnsNameOptions:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      SecurityGroupIds:
      - "sg-07fd500f946aad8a2"
      - "sg-07401c0c33946a241"
      - "sg-0158898f4b43a0ae9"
      DisableApiTermination: false
      KeyName: "pilot-ssh-test-shengkwan-key-pair"
      SourceDestCheck: true
      PlacementGroupName: ""
      VpcId: "vpc-02790342fee4ebf9f"
      State:
        Code: "80"
        Name: "stopped"
      CreditSpecification:
        CPUCredits: "standard"
  IAMRole00troubleshootelbrole00mMb9r:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/troubleshoot-elb-policy"
      MaxSessionDuration: 3600
      RoleName: "troubleshoot-elb-role"
      Description: "Allows EC2 instances to call AWS services on your behalf."
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "ec2.amazonaws.com"
  IAMRole00sgprodgenaipresignedurls3220v1rolean3jv4ff00fGqbj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-bb4a4d8f-1ee0-465e-b7a1-8b882d958079"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-presignedurl-s3-220-v1-role-an3jv4ff"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  EC2Subnet00subnet060714d7ed3b1128b005stJu:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Subnet"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00HMUI8"
      MapPublicIpOnLaunch: false
      EnableDns64: false
      AvailabilityZoneId: "apse1-az3"
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      CidrBlock: "10.25.71.64/28"
      Ipv6Native: false
      Tags:
      - Value: "GenAI-Dev-ECSAppLB-Private-1c"
        Key: "Name"
  EC2Volume00vol0c5c3a52ca610e45500dA7Qp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Volume"
    DeletionPolicy: "Retain"
    Properties:
      MultiAttachEnabled: false
      SnapshotId: "snap-091bcb51d6f04afa9"
      VolumeType: "gp3"
      KmsKeyId: "arn:aws:kms:ap-southeast-1:343218203122:key/e0af6c3f-73fc-497e-863a-6754f0dce6b1"
      Encrypted: true
      Size: 20
      AutoEnableIO: false
      AvailabilityZone: "ap-southeast-1b"
      Throughput: 125
      Iops: 3000
      Tags:
      - Value: "nabil-jumpserver-EBS"
        Key: "Name"
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole38b65965cf4440649408702952468a6600vTu9X:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-38b65965-cf44-4064-9408-702952468a66"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-prod-genai-retrievedocs-sgmkr:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgprodgenairetrievedocssgmkrroletmpxjzvo007VP35"
      Users: []
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRolee1c6447b91fb4ebc902c98c99dcba29200hFTKZ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-e1c6447b-91fb-4ebc-902c-98c99dcba292"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/test-websocketDefault:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00testwebsocketDefaultrole99lxcmbj00ZyIxR"
      Users: []
  RDSDBInstance00sgprodgenaicourtcasesdb216v1100X9H2E:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::RDS::DBInstance"
    DeletionPolicy: "Retain"
    Properties:
      StorageEncrypted: true
      AssociatedRoles: []
      CertificateDetails: {}
      Port: "27017"
      DBClusterIdentifier:
        Ref: "RDSDBCluster00sgprodgenaicourtcasesdb216v100N3QVN"
      ProcessorFeatures: []
      StorageThroughput: 0
      PreferredBackupWindow: "00:00-00:30"
      MonitoringInterval: 0
      DBParameterGroupName: "default.docdb5.0"
      Endpoint: {}
      NetworkType: "IPV4"
      DedicatedLogVolume: false
      CopyTagsToSnapshot: false
      MultiAZ: false
      Engine: "docdb"
      Tags: []
      LicenseModel: "na"
      EngineVersion: "5.0.0"
      StorageType: "standard"
      KmsKeyId:
        Fn::GetAtt:
        - "KMSKey0051a5c08ff1b24e92b22b5784f7f0dc3300rv3Pv"
        - "Arn"
      DBInstanceClass: "db.t3.medium"
      AvailabilityZone: "ap-southeast-1b"
      OptionGroupName: "default:docdb-5-0"
      PreferredMaintenanceWindow: "mon:19:02-mon:19:32"
      EnablePerformanceInsights: false
      AutoMinorVersionUpgrade: true
      DBSubnetGroupName:
        Ref: "RDSDBSubnetGroup00genaipilotdatabaseprivate00FOLyi"
      DeletionProtection: false
      DBInstanceIdentifier: "sg-prod-genai-courtcasesdb-216-v1-1"
      AllocatedStorage: "1"
      CACertificateIdentifier: "rds-ca-rsa2048-g1"
      ManageMasterUserPassword: false
      MasterUserSecret: {}
      VPCSecurityGroups:
      - Fn::GetAtt:
        - "EC2SecurityGroup00sg075615342aa3e28b900dirPO"
        - "GroupId"
      - Fn::GetAtt:
        - "EC2SecurityGroup00sg02a57c92533299fd5002bQaE"
        - "GroupId"
      DBSecurityGroups: []
      MasterUsername: "Docdbadmin"
      EnableIAMDatabaseAuthentication: false
      BackupRetentionPeriod: 7
      PromotionTier: 1
      PubliclyAccessible: false
      EnableCloudwatchLogsExports:
      - "audit"
      - "profiler"
  IAMRole00sgprodgenaicategoriserrolesoncqz8c00HayD8:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/AmazonBedrockFullAccess"
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-80b083c0-722f-4531-a0c4-a78af6fcbd70"
      - "arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-categoriser-role-soncqz8c"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  LambdaFunction00sgtestgenaisummariserretrievetofrontend00yM0rs:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Function"
    DeletionPolicy: "Retain"
    Properties:
      MemorySize: 128
      Description: ""
      TracingConfig:
        Mode: "PassThrough"
      VpcConfig:
        SecurityGroupIds:
        - "sg-075615342aa3e28b9"
        - "sg-00dd21ae4b1e23f22"
        - "sg-02d1755cab861734f"
        SubnetIds:
        - Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00GtpLi"
        - Ref: "EC2Subnet00subnet0d1db15411089416b0025bgM"
        Ipv6AllowedForDualStack: false
      Timeout: 3
      RuntimeManagementConfig:
        UpdateRuntimeOn: "Auto"
      Handler: "lambda_function.lambda_handler"
      Code:
        SourceKMSKeyArn:
          Ref: "LambdaFunction00sgtestgenaisummariserretrievetofrontend00yM0rsCodeSourceKMSKeyArnPUQol"
        S3ObjectVersion:
          Ref: "LambdaFunction00sgtestgenaisummariserretrievetofrontend00yM0rsCodeS3ObjectVersionqVty4"
        S3Bucket:
          Ref: "LambdaFunction00sgtestgenaisummariserretrievetofrontend00yM0rsCodeS3BucketzWPFP"
        ZipFile:
          Ref: "LambdaFunction00sgtestgenaisummariserretrievetofrontend00yM0rsCodeZipFileJw5ZK"
        ImageUri:
          Ref: "LambdaFunction00sgtestgenaisummariserretrievetofrontend00yM0rsCodeImageUrivN0Y6"
        S3Key:
          Ref: "LambdaFunction00sgtestgenaisummariserretrievetofrontend00yM0rsCodeS3KeyPvadC"
      Role:
        Fn::GetAtt:
        - "IAMRole00sgtestgenaisummariserretrievetofrontendrolereppyiad005NSsR"
        - "Arn"
      FileSystemConfigs: []
      FunctionName: "sg-test-genai-summariser-retrievetofrontend"
      Runtime: "python3.12"
      PackageType: "Zip"
      LoggingConfig:
        LogFormat: "Text"
        LogGroup: "/aws/lambda/sg-test-genai-summariser-retrievetofrontend"
      RecursiveLoop: "Terminate"
      Environment:
        Variables:
          DB_USER: "summariser"
          DB_CLUSTER_URL: "sg-prod-genai-summariser-v1.cluster-czs8w0aayayu.ap-southeast-1.docdb.amazonaws.com"
          DB_PASSWORD: "summariser123"
      EphemeralStorage:
        Size: 512
      Layers:
      - "arn:aws:lambda:ap-southeast-1:343218203122:layer:pymongo:4"
      Architectures:
      - "x86_64"
  IAMRole00ec2adminaccess00uFD3f:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AmazonSageMaker-ExecutionPolicy-20240813T111543"
      - "arn:aws:iam::aws:policy/AmazonAPIGatewayInvokeFullAccess"
      - "arn:aws:iam::aws:policy/AdministratorAccess"
      MaxSessionDuration: 3600
      RoleName: "ec2-admin-access"
      Description: "Allows EC2 instances to call AWS services on your behalf."
      Policies:
      - PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Resource: "*"
            Action:
            - "ssm:DescribeAssociation"
            - "ssm:GetDeployablePatchSnapshotForInstance"
            - "ssm:GetDocument"
            - "ssm:DescribeDocument"
            - "ssm:GetManifest"
            - "ssm:GetParameter"
            - "ssm:GetParameters"
            - "ssm:ListAssociations"
            - "ssm:ListInstanceAssociations"
            - "ssm:PutInventory"
            - "ssm:PutComplianceItems"
            - "ssm:PutConfigurePackageResult"
            - "ssm:UpdateAssociationStatus"
            - "ssm:UpdateInstanceAssociationStatus"
            - "ssm:UpdateInstanceInformation"
            Effect: "Allow"
          - Resource: "*"
            Action:
            - "ssmmessages:CreateControlChannel"
            - "ssmmessages:CreateDataChannel"
            - "ssmmessages:OpenControlChannel"
            - "ssmmessages:OpenDataChannel"
            Effect: "Allow"
          - Resource: "*"
            Action:
            - "ec2messages:AcknowledgeMessage"
            - "ec2messages:DeleteMessage"
            - "ec2messages:FailMessage"
            - "ec2messages:GetEndpoint"
            - "ec2messages:GetMessages"
            - "ec2messages:SendReply"
            Effect: "Allow"
        PolicyName: "SSMAgent"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "ec2.amazonaws.com"
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole8541693f50fd4a609c4a47d70a4f284c00cAokC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-8541693f-50fd-4a60-9c4a-47d70a4f284c"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-test-async-output-retrieve:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
        - Resource:
          - "arn:aws:s3:::sg-test-async-bucket"
          - "arn:aws:s3:::sg-test-async-bucket/*"
          Action:
          - "s3:ListBucket"
          - "s3:DeleteObject"
          - "s3:PutObject"
          - "s3:GetObject"
          Effect: "Allow"
          Sid: "AllowS3Access"
      Roles:
      - Ref: "IAMRole00sgtestasyncoutputretrieverolezouh477p00H9HhV"
      Users: []
  IAMRole00testwebsocketsendMessageroless9l57uu00rIH6R:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-63e57394-b1db-4dcd-85dd-83fd9b825e5a"
      MaxSessionDuration: 3600
      RoleName: "test-websocket-sendMessage-role-ss9l57uu"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  NeptuneDBCluster00sgprodgenaiwebsocketdb00gf41k:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Neptune::DBCluster"
    DeletionPolicy: "Retain"
    Properties:
      StorageEncrypted: true
      EngineVersion: "5.0.0"
      KmsKeyId:
        Fn::GetAtt:
        - "KMSKey0051a5c08ff1b24e92b22b5784f7f0dc3300rv3Pv"
        - "Arn"
      AssociatedRoles: []
      AvailabilityZones:
      - "ap-southeast-1a"
      - "ap-southeast-1b"
      - "ap-southeast-1c"
      DBClusterIdentifier: "sg-prod-genai-websocketdb"
      PreferredMaintenanceWindow: "sun:14:18-sun:14:48"
      IamAuthEnabled: false
      DBSubnetGroupName: "genai-pilot-database-private"
      DeletionProtection: true
      PreferredBackupWindow: "00:00-00:30"
      DBPort: 27017
      VpcSecurityGroupIds:
      - "sg-02a57c92533299fd5"
      - "sg-075615342aa3e28b9"
      CopyTagsToSnapshot: false
      DBClusterParameterGroupName: "default.docdb5.0"
      BackupRetentionPeriod: 7
      Tags: []
      EnableCloudwatchLogsExports:
      - "audit"
      - "profiler"
  IAMManagedPolicy00policyserviceroleAWSLambdaVPCAccessExecutionRole5ff2e1b1eb974549ab080a3d9fedaf8200XuGmu:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaVPCAccessExecutionRole-5ff2e1b1-eb97-4549-ab08-0a3d9fedaf82"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "*"
          Action:
          - "ec2:CreateNetworkInterface"
          - "ec2:DeleteNetworkInterface"
          - "ec2:DescribeNetworkInterfaces"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgtestgenaisummariserasyncrole8n68333u00lQZqO"
      Users: []
  IAMRole00sgprodgenaisummarisersgmkr220v1rolezapzdzrg00wChd9:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-347f4bbc-b60e-42fe-9e63-5cdcfdfcd8b1"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-summariser-sgmkr-220-v1-role-zapzdzrg"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole736a36600f634b4f8c131cedba51f16f00dLSTK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-736a3660-0f63-4b4f-8c13-1cedba51f16f"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/hu:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00huroleulwtj7gx00vDHa3"
      Users: []
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRolece3cf32165604bb78f1b97031fec23b700oZB0W:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-ce3cf321-6560-4bb7-8f1b-97031fec23b7"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action:
          - "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-prod-genai-embedding-sgmkr:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
        - Resource:
          - "*"
          Action:
          - "sagemaker:InvokeEndpoint"
          - "sagemaker:InvokeEndpointAsync"
          - "sagemaker:InvokeEndpointWithResponseStream"
          Effect: "Allow"
          Sid: "AllowInvokeSagemakerEndpoint"
      Roles:
      - Ref: "IAMRole00sgprodgenaiembeddingsgmkrrolepybrwqsu00oF0oM"
      Users: []
  EC2NetworkInterface00eni0a79669b8bad1083a00qGM3j:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: ""
      PrivateIpAddress: "10.25.71.222"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.222"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-0ef00776c538db142"
      - "sg-07fd500f946aad8a2"
      - "sg-075615342aa3e28b9"
      - "sg-0158898f4b43a0ae9"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet0d1db15411089416b0025bgM"
      SourceDestCheck: true
      InterfaceType: "interface"
      Tags: []
  IAMRole00AmazonSageMakerCanvasEMRSExecutionAccess20240813T11153500VLcnA:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/AmazonSageMakerCanvasEMRServerlessExecutionRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "AmazonSageMakerCanvasEMRSExecutionAccess-20240813T111535"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Condition:
            StringEquals:
              aws:SourceAccount: "343218203122"
          Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "emr-serverless.amazonaws.com"
          Sid: "EMRServerlessTrustPolicy"
  NeptuneDBCluster00sgprodgenaisummariserv100cOXzE:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Neptune::DBCluster"
    DeletionPolicy: "Retain"
    Properties:
      StorageEncrypted: true
      EngineVersion: "5.0.0"
      KmsKeyId:
        Fn::GetAtt:
        - "KMSKey0051a5c08ff1b24e92b22b5784f7f0dc3300rv3Pv"
        - "Arn"
      AssociatedRoles: []
      AvailabilityZones:
      - "ap-southeast-1a"
      - "ap-southeast-1b"
      - "ap-southeast-1c"
      DBClusterIdentifier: "sg-prod-genai-summariser-v1"
      PreferredMaintenanceWindow: "mon:15:10-mon:15:40"
      IamAuthEnabled: false
      DBSubnetGroupName: "genai-pilot-database-private"
      DeletionProtection: true
      PreferredBackupWindow: "00:00-00:30"
      DBPort: 27017
      VpcSecurityGroupIds:
      - "sg-075615342aa3e28b9"
      - "sg-02a57c92533299fd5"
      CopyTagsToSnapshot: false
      DBClusterParameterGroupName: "default.docdb5.0"
      BackupRetentionPeriod: 7
      Tags: []
      EnableCloudwatchLogsExports:
      - "audit"
      - "profiler"
  IAMRole00testonlyrolenfg62mse00upNXc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-19fcf612-9ab3-4a56-9ea9-88d5ee03b9f5"
      MaxSessionDuration: 3600
      RoleName: "testonly-role-nfg62mse"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole89c8df0b587845b8acc1376dd39b3e3b00aOLp7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-89c8df0b-5878-45b8-acc1-376dd39b3e3b"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:us-east-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:us-east-1:343218203122:log-group:/aws/lambda/sg-prod-genai-embedding-sgmkr-216-v1:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgprodgenaiembeddingsgmkr216v1roleutpd3d7400crupG"
      Users: []
  IAMRole00AWSServiceRoleForClientVPNConnections005UvCh:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/aws-service-role/clientvpn-connections.amazonaws.com/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/aws-service-role/ClientVPNServiceConnectionsRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "AWSServiceRoleForClientVPNConnections"
      Description: "Service Linked Role for Client VPN connections"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "clientvpn-connections.amazonaws.com"
  IAMRole00sgprodgenaicategoriser217v1roleixsqitny00Bs6if:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-2b3af56c-fe83-4d17-8707-bf61ba2626dc"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-categoriser-217-v1-role-ixsqitny"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  KMSKey00e0af6c3f73fc497e863a6754f0dce6b100kSC3X:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::KMS::Key"
    DeletionPolicy: "Retain"
    Properties:
      Origin: "AWS_KMS"
      MultiRegion: false
      Description: "Default key that protects my EBS volumes when no other key is\
        \ defined"
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
        - Condition:
            StringEquals:
              kms:ViaService: "ec2.ap-southeast-1.amazonaws.com"
              kms:CallerAccount: "343218203122"
          Resource: "*"
          Action:
          - "kms:Encrypt"
          - "kms:Decrypt"
          - "kms:ReEncrypt*"
          - "kms:GenerateDataKey*"
          - "kms:CreateGrant"
          - "kms:DescribeKey"
          Effect: "Allow"
          Principal:
            AWS: "*"
          Sid: "Allow access through EBS for all principals in the account that are\
            \ authorized to use EBS"
        - Resource: "*"
          Action:
          - "kms:Describe*"
          - "kms:Get*"
          - "kms:List*"
          - "kms:RevokeGrant"
          Effect: "Allow"
          Principal:
            AWS: "arn:aws:iam::343218203122:root"
          Sid: "Allow direct access to key metadata to the account"
        Id: "auto-ebs-2"
      KeySpec: "SYMMETRIC_DEFAULT"
      Enabled: true
      EnableKeyRotation: true
      KeyUsage: "ENCRYPT_DECRYPT"
      Tags: []
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRoled7dfc5fb56554801a0d2f1ad6f6e99840072t6S:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-d7dfc5fb-5655-4801-a0d2-f1ad6f6e9984"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:us-east-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:us-east-1:343218203122:log-group:/aws/lambda/sg-prod-genai-categoriser-217-v1:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgprodgenaicategoriser217v1roler1ajrw3a001WbPV"
      Users: []
  IAMRole00AWSReservedSSOAWSSOCCDUGroup37f793de5b2fe96800HifC9:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/aws-reserved/sso.amazonaws.com/ap-southeast-1/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/AmazonGuardDutyFullAccess"
      - "arn:aws:iam::aws:policy/ReadOnlyAccess"
      MaxSessionDuration: 43200
      RoleName: "AWSReservedSSO_AWS_SOC-CDU_Group_37f793de5b2fe968"
      Description: "Dedicated for SOC & CDU team only"
      Policies:
      - PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Condition:
              IpAddress:
                aws:SourceIp:
                - "211.25.63.2/32"
                - "203.115.236.2/32"
                - "203.106.28.194/32"
            Resource: "*"
            Action: "*"
            Effect: "Allow"
            Sid: "WhitelistIPPrivilegeuser"
        PolicyName: "AwsSSOInlinePolicy"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Condition:
            StringEquals:
              SAML:aud: "https://signin.aws.amazon.com/saml"
          Action:
          - "sts:AssumeRoleWithSAML"
          - "sts:TagSession"
          Effect: "Allow"
          Principal:
            Federated: "arn:aws:iam::343218203122:saml-provider/AWSSSO_1a32e06b3a2c2a2a_DO_NOT_DELETE"
  IAMRole00AWSServiceRoleForElasticLoadBalancing00xSrtN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/aws-service-role/elasticloadbalancing.amazonaws.com/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/aws-service-role/AWSElasticLoadBalancingServiceRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "AWSServiceRoleForElasticLoadBalancing"
      Description: "Allows ELB to call AWS services on your behalf."
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "elasticloadbalancing.amazonaws.com"
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole1aaa6268de494369aff0f8c5237d3dd000SR0Xu:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-1aaa6268-de49-4369-aff0-f8c5237d3dd0"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-prod-genai-categoriser-v1:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgprodgenaicategoriserv1roleqfdkclgb00iAKmP"
      Users: []
  IAMManagedPolicy00policyserviceroleAmazonSageMakerExecutionPolicy20240813T11154300mnZqQ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AmazonSageMaker-ExecutionPolicy-20240813T111543"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource:
          - "arn:aws:s3:::*"
          Action:
          - "s3:GetObject"
          - "s3:PutObject"
          - "s3:DeleteObject"
          - "s3:ListBucket"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00ec2adminaccess00uFD3f"
      - Ref: "IAMRole00AmazonSageMakerExecutionRole20240813T11154300nu5Dd"
      Users: []
  EC2VolumeAttachment00vol0c5c3a52ca610e45500RAuNx:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VolumeAttachment"
    DeletionPolicy: "Retain"
    Properties:
      InstanceId: "i-0af21fb2531ca410d"
      VolumeId: "vol-0c5c3a52ca610e455"
      Device: "/dev/sda1"
  IAMManagedPolicy00policyserviceroleAmazonEventBridgeSchedulerExecutionPolicy8abf97efc72643308353d2e7b096ece700eCqjc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "Amazon-EventBridge-Scheduler-Execution-Policy-8abf97ef-c726-4330-8353-d2e7b096ece7"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource:
          - "arn:aws:lambda:ap-southeast-1:343218203122:function:StartEC2Instances:*"
          - "arn:aws:lambda:ap-southeast-1:343218203122:function:StartEC2Instances"
          Action:
          - "lambda:InvokeFunction"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00AmazonEventBridgeSchedulerLAMBDA51910dd79600WJ7la"
      Users: []
  IAMRole00AmazonSageMakerServiceCatalogProductsLambdaRole00JMZxZ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/service-role/AmazonSageMakerServiceCatalogProductsLambdaServiceRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "AmazonSageMakerServiceCatalogProductsLambdaRole"
      Description: "SageMaker role created from the SageMaker AWS Management Console.\
        \ This role will grant permissions required to use AWS Lambda within the Amazon\
        \ SageMaker portfolio of products."
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  RDSDBInstance00sgprodgenaiwebsocketdb00pmuAo:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::RDS::DBInstance"
    DeletionPolicy: "Retain"
    Properties:
      StorageEncrypted: true
      AssociatedRoles: []
      CertificateDetails: {}
      Port: "27017"
      DBClusterIdentifier:
        Ref: "RDSDBCluster00sgprodgenaiwebsocketdb00rL91m"
      ProcessorFeatures: []
      StorageThroughput: 0
      PreferredBackupWindow: "00:00-00:30"
      MonitoringInterval: 0
      DBParameterGroupName: "default.docdb5.0"
      Endpoint: {}
      NetworkType: "IPV4"
      DedicatedLogVolume: false
      CopyTagsToSnapshot: false
      MultiAZ: false
      Engine: "docdb"
      Tags: []
      LicenseModel: "na"
      EngineVersion: "5.0.0"
      StorageType: "standard"
      KmsKeyId:
        Fn::GetAtt:
        - "KMSKey0051a5c08ff1b24e92b22b5784f7f0dc3300rv3Pv"
        - "Arn"
      DBInstanceClass: "db.t3.medium"
      AvailabilityZone: "ap-southeast-1c"
      OptionGroupName: "default:docdb-5-0"
      PreferredMaintenanceWindow: "sat:19:02-sat:19:32"
      EnablePerformanceInsights: false
      AutoMinorVersionUpgrade: true
      DBSubnetGroupName:
        Ref: "RDSDBSubnetGroup00genaipilotdatabaseprivate00FOLyi"
      DeletionProtection: false
      DBInstanceIdentifier: "sg-prod-genai-websocketdb"
      AllocatedStorage: "1"
      CACertificateIdentifier: "rds-ca-rsa2048-g1"
      ManageMasterUserPassword: false
      MasterUserSecret: {}
      VPCSecurityGroups:
      - Fn::GetAtt:
        - "EC2SecurityGroup00sg075615342aa3e28b900dirPO"
        - "GroupId"
      - Fn::GetAtt:
        - "EC2SecurityGroup00sg02a57c92533299fd5002bQaE"
        - "GroupId"
      DBSecurityGroups: []
      MasterUsername: "WebsocketDBUser"
      EnableIAMDatabaseAuthentication: false
      BackupRetentionPeriod: 7
      PromotionTier: 1
      PubliclyAccessible: false
      EnableCloudwatchLogsExports:
      - "audit"
      - "profiler"
  KMSKey006bc3a8abda114488898ba20ec19dd7d800O08Ls:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::KMS::Key"
    DeletionPolicy: "Retain"
    Properties:
      Origin: "AWS_KMS"
      MultiRegion: false
      Description: "Default key that protects my SNS data when no other key is defined"
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
        - Condition:
            StringEquals:
              kms:ViaService: "sns.ap-southeast-1.amazonaws.com"
              kms:CallerAccount: "343218203122"
          Resource: "*"
          Action:
          - "kms:Decrypt"
          - "kms:GenerateDataKey*"
          - "kms:CreateGrant"
          - "kms:ListGrants"
          - "kms:DescribeKey"
          Effect: "Allow"
          Principal:
            AWS: "*"
          Sid: "Allow access through SNS for all principals in the account that are\
            \ authorized to use SNS"
        - Resource: "*"
          Action:
          - "kms:Describe*"
          - "kms:Get*"
          - "kms:List*"
          - "kms:RevokeGrant"
          Effect: "Allow"
          Principal:
            AWS: "arn:aws:iam::343218203122:root"
          Sid: "Allow direct access to key metadata to the account"
        - Condition:
            StringEquals:
              aws:SourceAccount: "343218203122"
            ArnLike:
              aws:SourceArn: "arn:*:sns:ap-southeast-1:343218203122:*"
          Resource: "*"
          Action: "kms:Decrypt"
          Effect: "Allow"
          Principal:
            Service: "sns.amazonaws.com"
          Sid: "Allow SNS to decrypt archived messages"
        Id: "auto-sns-2"
      KeySpec: "SYMMETRIC_DEFAULT"
      Enabled: true
      EnableKeyRotation: true
      KeyUsage: "ENCRYPT_DECRYPT"
      Tags: []
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRoleebdf6f444b7845a5a51f5cad7e3ec02a00G9HbR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-ebdf6f44-4b78-45a5-a51f-5cad7e3ec02a"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/TBD-dummy-lambda-python312:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00TBDdummylambdapython312rolebdh3shth00FpJCY"
      Users: []
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRolef95bf17baaad408bac014e390bff3baf00VEwfB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-f95bf17b-aaad-408b-ac01-4e390bff3baf"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/test-websocketDisconnect:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00testwebsocketDisconnectroletd27yqa100wluPW"
      Users: []
  IAMManagedPolicy00policyserviceroleAmazonSageMakerServiceCatalogProductsUseRole20240813T11151700cGkki:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AmazonSageMakerServiceCatalogProductsUseRole-20240813T111517"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:cloudformation:*:*:stack/sagemaker-*"
          Action:
          - "cloudformation:CreateChangeSet"
          - "cloudformation:CreateStack"
          - "cloudformation:DescribeChangeSet"
          - "cloudformation:DeleteChangeSet"
          - "cloudformation:DeleteStack"
          - "cloudformation:DescribeStacks"
          - "cloudformation:ExecuteChangeSet"
          - "cloudformation:SetStackPolicy"
          - "cloudformation:UpdateStack"
          Effect: "Allow"
        - Resource: "*"
          Action:
          - "cloudwatch:PutMetricData"
          Effect: "Allow"
        - Resource:
          - "arn:aws:codebuild:*:*:project/sagemaker-*"
          - "arn:aws:codebuild:*:*:build/sagemaker-*"
          Action:
          - "codebuild:BatchGetBuilds"
          - "codebuild:StartBuild"
          Effect: "Allow"
        - Resource: "arn:aws:codecommit:*:*:sagemaker-*"
          Action:
          - "codecommit:CancelUploadArchive"
          - "codecommit:GetBranch"
          - "codecommit:GetCommit"
          - "codecommit:GetUploadArchiveStatus"
          - "codecommit:UploadArchive"
          Effect: "Allow"
        - Resource: "arn:aws:codepipeline:*:*:sagemaker-*"
          Action:
          - "codepipeline:StartPipelineExecution"
          Effect: "Allow"
        - Resource: "*"
          Action:
          - "ec2:DescribeRouteTables"
          Effect: "Allow"
        - Resource: "*"
          Action:
          - "ecr:BatchCheckLayerAvailability"
          - "ecr:BatchGetImage"
          - "ecr:Describe*"
          - "ecr:GetAuthorizationToken"
          - "ecr:GetDownloadUrlForLayer"
          Effect: "Allow"
        - Resource:
          - "arn:aws:ecr:*:*:repository/sagemaker-*"
          Action:
          - "ecr:BatchDeleteImage"
          - "ecr:CompleteLayerUpload"
          - "ecr:CreateRepository"
          - "ecr:DeleteRepository"
          - "ecr:InitiateLayerUpload"
          - "ecr:PutImage"
          - "ecr:UploadLayerPart"
          Effect: "Allow"
        - Resource:
          - "arn:aws:events:*:*:rule/sagemaker-*"
          Action:
          - "events:DeleteRule"
          - "events:DescribeRule"
          - "events:PutRule"
          - "events:PutTargets"
          - "events:RemoveTargets"
          Effect: "Allow"
        - Resource: "arn:aws:firehose:*:*:deliverystream/sagemaker-*"
          Action:
          - "firehose:PutRecord"
          - "firehose:PutRecordBatch"
          Effect: "Allow"
        - Resource:
          - "arn:aws:glue:*:*:catalog"
          - "arn:aws:glue:*:*:database/default"
          - "arn:aws:glue:*:*:database/global_temp"
          - "arn:aws:glue:*:*:database/sagemaker-*"
          - "arn:aws:glue:*:*:table/sagemaker-*"
          - "arn:aws:glue:*:*:tableVersion/sagemaker-*"
          Action:
          - "glue:BatchCreatePartition"
          - "glue:BatchDeletePartition"
          - "glue:BatchDeleteTable"
          - "glue:BatchDeleteTableVersion"
          - "glue:BatchGetPartition"
          - "glue:CreateDatabase"
          - "glue:CreatePartition"
          - "glue:CreateTable"
          - "glue:DeletePartition"
          - "glue:DeleteTable"
          - "glue:DeleteTableVersion"
          - "glue:GetDatabase"
          - "glue:GetPartition"
          - "glue:GetPartitions"
          - "glue:GetTable"
          - "glue:GetTables"
          - "glue:GetTableVersion"
          - "glue:GetTableVersions"
          - "glue:SearchTables"
          - "glue:UpdatePartition"
          - "glue:UpdateTable"
          - "glue:GetUserDefinedFunctions"
          Effect: "Allow"
        - Resource:
          - "arn:aws:iam::*:role/service-role/AmazonSageMakerServiceCatalogProductsUse*"
          Action:
          - "iam:PassRole"
          Effect: "Allow"
        - Resource:
          - "arn:aws:lambda:*:*:function:sagemaker-*"
          Action:
          - "lambda:InvokeFunction"
          Effect: "Allow"
        - Resource: "*"
          Action:
          - "logs:CreateLogDelivery"
          - "logs:CreateLogGroup"
          - "logs:CreateLogStream"
          - "logs:DeleteLogDelivery"
          - "logs:Describe*"
          - "logs:GetLogDelivery"
          - "logs:GetLogEvents"
          - "logs:ListLogDeliveries"
          - "logs:PutLogEvents"
          - "logs:PutResourcePolicy"
          - "logs:UpdateLogDelivery"
          Effect: "Allow"
        - Resource:
          - "arn:aws:s3:::aws-glue-*"
          - "arn:aws:s3:::sagemaker-*"
          Action:
          - "s3:CreateBucket"
          - "s3:DeleteBucket"
          - "s3:GetBucketAcl"
          - "s3:GetBucketCors"
          - "s3:GetBucketLocation"
          - "s3:ListAllMyBuckets"
          - "s3:ListBucket"
          - "s3:ListBucketMultipartUploads"
          - "s3:PutBucketCors"
          - "s3:PutObjectAcl"
          Effect: "Allow"
        - Resource:
          - "arn:aws:s3:::aws-glue-*"
          - "arn:aws:s3:::sagemaker-*"
          Action:
          - "s3:AbortMultipartUpload"
          - "s3:DeleteObject"
          - "s3:GetObject"
          - "s3:GetObjectVersion"
          - "s3:PutObject"
          Effect: "Allow"
        - Action:
          - "sagemaker:*"
          Effect: "Allow"
          NotResource:
          - "arn:aws:sagemaker:*:*:domain/*"
          - "arn:aws:sagemaker:*:*:user-profile/*"
          - "arn:aws:sagemaker:*:*:app/*"
          - "arn:aws:sagemaker:*:*:flow-definition/*"
        - Resource:
          - "arn:aws:states:*:*:stateMachine:sagemaker-*"
          - "arn:aws:states:*:*:execution:sagemaker-*:*"
          Action:
          - "states:DescribeExecution"
          - "states:DescribeStateMachine"
          - "states:DescribeStateMachineForExecution"
          - "states:GetExecutionHistory"
          - "states:ListExecutions"
          - "states:ListTagsForResource"
          - "states:StartExecution"
          - "states:StopExecution"
          - "states:TagResource"
          - "states:UntagResource"
          - "states:UpdateStateMachine"
          Effect: "Allow"
        - Resource: "*"
          Action:
          - "states:ListStateMachines"
          Effect: "Allow"
        - Condition:
            StringEqualsIgnoreCase:
              aws:ResourceTag/sagemaker: "true"
          Resource: "arn:aws:codestar-connections:*:*:connection/*"
          Action:
          - "codestar-connections:UseConnection"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00AmazonSageMakerServiceCatalogProductsUseRole006ZG40"
      Users: []
  LambdaFunction00sgprodgenairetrievedocs00RA8w4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Function"
    DeletionPolicy: "Retain"
    Properties:
      MemorySize: 128
      Description: ""
      TracingConfig:
        Mode: "PassThrough"
      VpcConfig:
        SecurityGroupIds:
        - "sg-075615342aa3e28b9"
        SubnetIds:
        - Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00GtpLi"
        - Ref: "EC2Subnet00subnet0d1db15411089416b0025bgM"
        Ipv6AllowedForDualStack: false
      Timeout: 900
      RuntimeManagementConfig:
        UpdateRuntimeOn: "Auto"
      Handler: "lambda_function.lambda_handler"
      Code:
        SourceKMSKeyArn:
          Ref: "LambdaFunction00sgprodgenairetrievedocs00RA8w4CodeSourceKMSKeyArnfTSEy"
        S3ObjectVersion:
          Ref: "LambdaFunction00sgprodgenairetrievedocs00RA8w4CodeS3ObjectVersionDv7se"
        S3Bucket:
          Ref: "LambdaFunction00sgprodgenairetrievedocs00RA8w4CodeS3BuckettWzRL"
        ZipFile:
          Ref: "LambdaFunction00sgprodgenairetrievedocs00RA8w4CodeZipFileqcUZn"
        ImageUri:
          Ref: "LambdaFunction00sgprodgenairetrievedocs00RA8w4CodeImageUri8gvCI"
        S3Key:
          Ref: "LambdaFunction00sgprodgenairetrievedocs00RA8w4CodeS3KeywGSg0"
      Role:
        Fn::GetAtt:
        - "IAMRole00sgprodgenairetrievedocsrole0rugefme00IkDv4"
        - "Arn"
      FileSystemConfigs: []
      FunctionName: "sg-prod-genai-retrievedocs"
      Runtime: "python3.12"
      PackageType: "Zip"
      LoggingConfig:
        LogFormat: "Text"
        LogGroup: "/aws/lambda/sg-prod-genai-retrievedocs"
      RecursiveLoop: "Terminate"
      Environment:
        Variables:
          courtcsesdocdb_connectionstring: "mongodb://gpharith:harith12345@docdb-courtcases.cluster-ch4wg6weybfn.us-east-1.docdb.amazonaws.com:27017/?tls=true&tlsCAFile=global-bundle.pem&replicaSet=rs0&readPreference=secondaryPreferred&retryWrites=false"
      EphemeralStorage:
        Size: 512
      Layers:
      - "arn:aws:lambda:ap-southeast-1:580247275435:layer:LambdaInsightsExtension:53"
      - "arn:aws:lambda:ap-southeast-1:343218203122:layer:pymongo:4"
      - "arn:aws:lambda:ap-southeast-1:336392948345:layer:AWSSDKPandas-Python312:13"
      Architectures:
      - "x86_64"
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole495c3c74e32242948a43300168dd3e0e00YLFat:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-495c3c74-e322-4294-8a43-300168dd3e0e"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-prod-genai-summariser-sgmkr:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgprodgenaisummarisersgmkrrole59rxtb9s00LWVCf"
      Users: []
  KMSKey00c4fbae13f4c146d59a79d7ff74e25b7700lHRVN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::KMS::Key"
    DeletionPolicy: "Retain"
    Properties:
      Origin: "AWS_KMS"
      MultiRegion: false
      Description: "Default key that protects my EFS filesystems when no other key\
        \ is defined"
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
        - Condition:
            StringEquals:
              kms:ViaService: "elasticfilesystem.ap-southeast-1.amazonaws.com"
              kms:CallerAccount: "343218203122"
          Resource: "*"
          Action:
          - "kms:Encrypt"
          - "kms:Decrypt"
          - "kms:ReEncrypt*"
          - "kms:GenerateDataKey*"
          - "kms:CreateGrant"
          - "kms:DescribeKey"
          Effect: "Allow"
          Principal:
            AWS: "*"
          Sid: "Allow access to EFS for all principals in the account that are authorized\
            \ to use EFS"
        - Resource: "*"
          Action:
          - "kms:Describe*"
          - "kms:Get*"
          - "kms:List*"
          - "kms:RevokeGrant"
          Effect: "Allow"
          Principal:
            AWS: "arn:aws:iam::343218203122:root"
          Sid: "Allow direct access to key metadata to the account"
        Id: "auto-elasticfilesystem-1"
      KeySpec: "SYMMETRIC_DEFAULT"
      Enabled: true
      EnableKeyRotation: true
      KeyUsage: "ENCRYPT_DECRYPT"
      Tags: []
  IAMRole00testwebsocketDisconnectroletd27yqa100wluPW:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-f95bf17b-aaad-408b-ac01-4e390bff3baf"
      MaxSessionDuration: 3600
      RoleName: "test-websocketDisconnect-role-td27yqa1"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRolef5f7ecc16d4046dea3db864b0354a33a00LkT6A:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-f5f7ecc1-6d40-46de-a3db-864b0354a33a"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-prod-apigw-apikey-authorizer:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgprodapigwapikeyauthorizerrole4e7fn10q001qPHt"
      Users: []
  EC2Volume00vol025bc069a9af78b0f00iYSBP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Volume"
    DeletionPolicy: "Retain"
    Properties:
      MultiAttachEnabled: false
      SnapshotId: "snap-06269d3b382c49703"
      VolumeType: "gp3"
      KmsKeyId: "arn:aws:kms:ap-southeast-1:343218203122:key/e0af6c3f-73fc-497e-863a-6754f0dce6b1"
      Encrypted: true
      Size: 10
      AutoEnableIO: true
      AvailabilityZone: "ap-southeast-1b"
      Throughput: 125
      Iops: 3000
      Tags: []
  IAMManagedPolicy00policyserviceroleAWSLambdaVPCAccessExecutionRole624f0b52d06d4bf29634781caf0b34f300wHNeB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaVPCAccessExecutionRole-624f0b52-d06d-4bf2-9634-781caf0b34f3"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "*"
          Action:
          - "ec2:CreateNetworkInterface"
          - "ec2:DeleteNetworkInterface"
          - "ec2:DescribeNetworkInterfaces"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgtestgenaisummariserpython312rolehua3z5vc00IAw86"
      Users: []
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole93e015c8ba224a9799ab74a7c3b009ce00IKSIN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-93e015c8-ba22-4a97-99ab-74a7c3b009ce"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-test-async-output-generator:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
        - Resource:
          - "arn:aws:s3:::sg-test-async-bucket"
          - "arn:aws:s3:::sg-test-async-bucket/*"
          Action:
          - "s3:ListBucket"
          - "s3:DeleteObject"
          - "s3:PutObject"
          - "s3:GetObject"
          Effect: "Allow"
          Sid: "AllowS3Access"
      Roles:
      - Ref: "IAMRole00sgtestasyncoutputgeneratorrole0lwo40k100Oxkpv"
      Users: []
  IAMRole00sgprodgenairetrievedocssgmkr361v1rolegoambdsg00WEZyD:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-17bfe709-b6cf-4081-9b41-072558732006"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-retrievedocs-sgmkr-361-v1-role-goambdsg"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  EC2NetworkInterface00eni03ebb21c83a16a05500YTggn:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: ""
      PrivateIpAddress: "10.25.71.170"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.170"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-0a6c63d92a738a24c"
      - "sg-07fd500f946aad8a2"
      - "sg-0158898f4b43a0ae9"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00GtpLi"
      SourceDestCheck: true
      InterfaceType: "interface"
      Tags: []
  IAMRole00testwebsocketDefaultrole99lxcmbj00ZyIxR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-e1c6447b-91fb-4ebc-902c-98c99dcba292"
      MaxSessionDuration: 3600
      RoleName: "test-websocketDefault-role-99lxcmbj"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole967d1209002d4952a35c32410d5d96b000rfgtp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-967d1209-002d-4952-a35c-32410d5d96b0"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-wss-disconnect:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgwssdisconnectrolel31j5am600SUVmX"
      Users: []
  KMSKey009038aa065c47488da0882ef3f8bcb99b00yQ5k4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::KMS::Key"
    DeletionPolicy: "Retain"
    Properties:
      Origin: "AWS_KMS"
      MultiRegion: false
      Description: "Used to encrypt Lambda environment variables"
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
        - Resource: "*"
          Action: "kms:*"
          Effect: "Allow"
          Principal:
            AWS: "arn:aws:iam::343218203122:root"
          Sid: "Enable IAM User Permissions"
        - Resource: "*"
          Action:
          - "kms:Encrypt"
          - "kms:Decrypt"
          - "kms:ReEncrypt*"
          - "kms:GenerateDataKey*"
          - "kms:DescribeKey"
          Effect: "Allow"
          Principal:
            AWS:
            - "arn:aws:iam::343218203122:role/aws-reserved/sso.amazonaws.com/ap-southeast-1/AWSReservedSSO_GenAI_Admin_Access_37c71d1e8de0e9ae"
            - "arn:aws:iam::343218203122:role/service-role/sg-prod-genai-checkcredsdocdb-role-iwrpl7hp"
          Sid: "Allow use of the key"
        - Condition:
            Bool:
              kms:GrantIsForAWSResource: "true"
          Resource: "*"
          Action:
          - "kms:CreateGrant"
          - "kms:ListGrants"
          - "kms:RevokeGrant"
          Effect: "Allow"
          Principal:
            AWS:
            - "arn:aws:iam::343218203122:role/aws-reserved/sso.amazonaws.com/ap-southeast-1/AWSReservedSSO_GenAI_Admin_Access_37c71d1e8de0e9ae"
            - "arn:aws:iam::343218203122:role/service-role/sg-prod-genai-checkcredsdocdb-role-iwrpl7hp"
          Sid: "Allow attachment of persistent resources"
        Id: "key-consolepolicy-3"
      KeySpec: "SYMMETRIC_DEFAULT"
      Enabled: true
      EnableKeyRotation: true
      KeyUsage: "ENCRYPT_DECRYPT"
      Tags: []
  LambdaPermission00functionsgprodgenaideleteobjects300oXG0K:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Permission"
    DeletionPolicy: "Retain"
    Properties:
      FunctionName:
        Fn::GetAtt:
        - "LambdaFunction00sgprodgenaideleteobjects300UvJu4"
        - "Arn"
      Action: "lambda:InvokeFunction"
      SourceArn: "arn:aws:execute-api:ap-southeast-1:343218203122:5bz5602exb/*/*/deleteobject_s3"
      Principal: "apigateway.amazonaws.com"
  LambdaPermission00functionsgtestasyncoutputgenerator00RQy2x:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Permission"
    DeletionPolicy: "Retain"
    Properties:
      FunctionName:
        Fn::GetAtt:
        - "LambdaFunction00sgtestasyncoutputgenerator00F4igy"
        - "Arn"
      Action: "lambda:InvokeFunction"
      SourceArn: "arn:aws:execute-api:ap-southeast-1:343218203122:ip5o3ftxh4/*/POST/async_test"
      Principal: "apigateway.amazonaws.com"
  EC2NetworkInterface00eni037d41ab5199db37e00VgWYs:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: ""
      PrivateIpAddress: "10.25.71.29"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.29"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-07fd500f946aad8a2"
      - "sg-09b2b11bee0d39e7a"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet0e7c29cffbb72373f00m6e4L"
      SourceDestCheck: true
      InterfaceType: "interface"
      Tags: []
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole98bfad8480054bc2b03faf9a7391ed8000F6K5V:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-98bfad84-8005-4bc2-b03f-af9a7391ed80"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:us-east-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:us-east-1:343218203122:log-group:/aws/lambda/sg-prod-genai-deleteobject-s3-220-v1:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgprodgenaideleteobjects3220v1roleoo36c1ei00eJ9wA"
      Users: []
  IAMRole00AWSServiceRoleForGlobalAccelerator00nOHXb:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/aws-service-role/globalaccelerator.amazonaws.com/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/aws-service-role/AWSGlobalAcceleratorSLRPolicy"
      MaxSessionDuration: 3600
      RoleName: "AWSServiceRoleForGlobalAccelerator"
      Description: "Allows Global Accelerator to call AWS services on customer's behalf"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "globalaccelerator.amazonaws.com"
  IAMRole00AWSReservedSSOGenAIPOd7795b384ee337d800UftrY:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/aws-reserved/sso.amazonaws.com/ap-southeast-1/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/job-function/Billing"
      - "arn:aws:iam::aws:policy/AWSSupportAccess"
      - "arn:aws:iam::aws:policy/ReadOnlyAccess"
      - "arn:aws:iam::aws:policy/AWSTrustedAdvisorPriorityReadOnlyAccess"
      MaxSessionDuration: 43200
      RoleName: "AWSReservedSSO_GenAI_PO_d7795b384ee337d8"
      Policies:
      - PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Condition:
              IpAddress:
                aws:SourceIp:
                - "211.25.63.2/32"
                - "203.115.236.2/32"
                - "203.106.28.194/32"
            Resource: "*"
            Action: "*"
            Effect: "Allow"
            Sid: "WhitelistIPPrivilegeuser"
        PolicyName: "AwsSSOInlinePolicy"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Condition:
            StringEquals:
              SAML:aud: "https://signin.aws.amazon.com/saml"
          Action:
          - "sts:AssumeRoleWithSAML"
          - "sts:TagSession"
          Effect: "Allow"
          Principal:
            Federated: "arn:aws:iam::343218203122:saml-provider/AWSSSO_1a32e06b3a2c2a2a_DO_NOT_DELETE"
  IAMRole00AWSServiceRoleForOrganizations00w4L3d:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/aws-service-role/organizations.amazonaws.com/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/aws-service-role/AWSOrganizationsServiceTrustPolicy"
      MaxSessionDuration: 3600
      RoleName: "AWSServiceRoleForOrganizations"
      Description: "Service-linked role used by AWS Organizations to enable integration\
        \ of other AWS services with Organizations."
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "organizations.amazonaws.com"
  IAMRole00startstopinstanceslambda00YvdFJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      MaxSessionDuration: 3600
      RoleName: "start-stop-instances-lambda"
      Description: "to be attached to lambda function to start and stop ec2"
      Policies:
      - PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Resource: "arn:aws:logs:*:*:*"
            Action:
            - "logs:CreateLogGroup"
            - "logs:CreateLogStream"
            - "logs:PutLogEvents"
            Effect: "Allow"
          - Resource: "*"
            Action:
            - "ec2:Start*"
            - "ec2:Stop*"
            Effect: "Allow"
        PolicyName: "start-stop-ec2"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMRole00AWSGatewayRoleForSQS00Kwfk8:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/AmazonSQSFullAccess"
      - "arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
      MaxSessionDuration: 3600
      RoleName: "AWSGatewayRoleForSQS"
      Description: "Allows API Gateway to push logs to CloudWatch Logs and push message\
        \ to SQS"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "apigateway.amazonaws.com"
          Sid: ""
  LambdaPermission00functionsgprodgenaideleteobjects300mytRM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Permission"
    DeletionPolicy: "Retain"
    Properties:
      FunctionName:
        Fn::GetAtt:
        - "LambdaFunction00sgprodgenaideleteobjects300UvJu4"
        - "Arn"
      Action: "lambda:InvokeFunction"
      SourceArn: "arn:aws:execute-api:ap-southeast-1:343218203122:5nwb46kira/*/DELETE/deleteobject_s3"
      Principal: "apigateway.amazonaws.com"
  RDSDBSubnetGroup00genaipilotdatabaseprivate00FOLyi:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::RDS::DBSubnetGroup"
    DeletionPolicy: "Retain"
    Properties:
      DBSubnetGroupDescription: "GenAI One DB Private segment"
      SubnetIds:
      - Ref: "EC2Subnet00subnet048794c64c2e4427a00H739O"
      - Ref: "EC2Subnet00subnet0d68b865e8a7e3cc000qmBpx"
      DBSubnetGroupName: "genai-pilot-database-private"
  LambdaFunction00StartEC2Instances00MHqS9:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Function"
    DeletionPolicy: "Retain"
    Properties:
      MemorySize: 128
      Description: ""
      TracingConfig:
        Mode: "PassThrough"
      Timeout: 10
      RuntimeManagementConfig:
        UpdateRuntimeOn: "Auto"
      Handler: "lambda_function.lambda_handler"
      Code:
        SourceKMSKeyArn:
          Ref: "LambdaFunction00StartEC2Instances00MHqS9CodeSourceKMSKeyArnv4R4D"
        S3ObjectVersion:
          Ref: "LambdaFunction00StartEC2Instances00MHqS9CodeS3ObjectVersionIGXP2"
        S3Bucket:
          Ref: "LambdaFunction00StartEC2Instances00MHqS9CodeS3Bucket8HKLz"
        ZipFile:
          Ref: "LambdaFunction00StartEC2Instances00MHqS9CodeZipFileCQ8hj"
        ImageUri:
          Ref: "LambdaFunction00StartEC2Instances00MHqS9CodeImageUriaKCgd"
        S3Key:
          Ref: "LambdaFunction00StartEC2Instances00MHqS9CodeS3KeyEJtW5"
      Role:
        Fn::GetAtt:
        - "IAMRole00startstopinstanceslambda00YvdFJ"
        - "Arn"
      FileSystemConfigs: []
      FunctionName: "StartEC2Instances"
      Runtime: "python3.12"
      PackageType: "Zip"
      LoggingConfig:
        LogFormat: "Text"
        LogGroup: "/aws/lambda/StartEC2Instances"
      RecursiveLoop: "Terminate"
      EphemeralStorage:
        Size: 512
      Architectures:
      - "x86_64"
  EC2Instance00i020d34aa93d2d7e6f00zdPck:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Instance"
    DeletionPolicy: "Retain"
    Properties:
      Tenancy: "default"
      SecurityGroups:
      - "GenAI-Pilot-Private-Tmicro-to-App"
      - "akash-ec2-sg"
      PrivateIpAddress: "10.25.71.175"
      BlockDeviceMappings:
      - Ebs:
          SnapshotId: "snap-0cda8ec628a037291"
          VolumeType: "gp3"
          KmsKeyId:
            Fn::GetAtt:
            - "KMSKey00e0af6c3f73fc497e863a6754f0dce6b100kSC3X"
            - "Arn"
          Encrypted: true
          Iops: 3000
          VolumeSize: 20
          DeleteOnTermination: false
        DeviceName: "/dev/sda1"
      IamInstanceProfile:
        Ref: "IAMInstanceProfile00ec2adminaccess00awY8x"
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00GtpLi"
      EbsOptimized: true
      Volumes:
      - VolumeId: "vol-086aefbd878266b95"
        Device: "/dev/sda1"
      NetworkInterfaces:
      - PrivateIpAddresses:
        - PrivateIpAddress: "10.25.71.175"
          Primary: true
        SecondaryPrivateIpAddressCount: 0
        DeviceIndex: "0"
        GroupSet:
        - Ref: "EC2SecurityGroup00sg07fd500f946aad8a200p0vJb"
        - Ref: "EC2SecurityGroup00sg0fd865e5bd1a64a0700D9Mvv"
        Ipv6Addresses: []
        SubnetId:
          Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00GtpLi"
        AssociatePublicIpAddress: false
        NetworkInterfaceId:
          Ref: "EC2NetworkInterface00eni0c66dedac91dbb82800SHN00"
        DeleteOnTermination: true
      ImageId: "ami-0b748249d064044e8"
      InstanceType: "t3.large"
      Monitoring: false
      Tags:
      - Value: "ec2-jumpserver-akash"
        Key: "Name"
      InstanceInitiatedShutdownBehavior: "stop"
      CpuOptions:
        ThreadsPerCore: 2
        CoreCount: 1
      AvailabilityZone: "ap-southeast-1b"
      PrivateDnsNameOptions:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      SecurityGroupIds:
      - "sg-07fd500f946aad8a2"
      - "sg-0fd865e5bd1a64a07"
      DisableApiTermination: false
      KeyName: "akash-redhat-ec2-key"
      SourceDestCheck: true
      PlacementGroupName: ""
      VpcId: "vpc-02790342fee4ebf9f"
      State:
        Code: "80"
        Name: "stopped"
      CreditSpecification:
        CPUCredits: "unlimited"
  KMSKey003fbaf95f72ec461db5b84ce11e04575c00569wK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::KMS::Key"
    DeletionPolicy: "Retain"
    Properties:
      Origin: "AWS_KMS"
      MultiRegion: false
      Description: "Default key that protects my S3 objects when no other key is defined"
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
        - Condition:
            StringEquals:
              kms:ViaService: "s3.ap-southeast-1.amazonaws.com"
              kms:CallerAccount: "343218203122"
          Resource: "*"
          Action:
          - "kms:Encrypt"
          - "kms:Decrypt"
          - "kms:ReEncrypt*"
          - "kms:GenerateDataKey*"
          - "kms:DescribeKey"
          Effect: "Allow"
          Principal:
            AWS: "*"
          Sid: "Allow access through S3 for all principals in the account that are\
            \ authorized to use S3"
        - Resource: "*"
          Action:
          - "kms:Describe*"
          - "kms:Get*"
          - "kms:List*"
          Effect: "Allow"
          Principal:
            AWS: "arn:aws:iam::343218203122:root"
          Sid: "Allow direct access to key metadata to the account"
        Id: "auto-s3-2"
      KeySpec: "SYMMETRIC_DEFAULT"
      Enabled: true
      EnableKeyRotation: true
      KeyUsage: "ENCRYPT_DECRYPT"
      Tags: []
  RDSDBInstance00sgprodgenaisummariserv1200jTgn2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::RDS::DBInstance"
    DeletionPolicy: "Retain"
    Properties:
      StorageEncrypted: true
      AssociatedRoles: []
      CertificateDetails: {}
      Port: "27017"
      DBClusterIdentifier:
        Ref: "RDSDBCluster00sgprodgenaisummariserv100IE7gQ"
      ProcessorFeatures: []
      StorageThroughput: 0
      PreferredBackupWindow: "00:00-00:30"
      MonitoringInterval: 0
      DBParameterGroupName: "default.docdb5.0"
      Endpoint: {}
      NetworkType: "IPV4"
      DedicatedLogVolume: false
      CopyTagsToSnapshot: false
      MultiAZ: false
      Engine: "docdb"
      Tags: []
      LicenseModel: "na"
      EngineVersion: "5.0.0"
      StorageType: "standard"
      KmsKeyId:
        Fn::GetAtt:
        - "KMSKey0051a5c08ff1b24e92b22b5784f7f0dc3300rv3Pv"
        - "Arn"
      DBInstanceClass: "db.t3.medium"
      AvailabilityZone: "ap-southeast-1c"
      OptionGroupName: "default:docdb-5-0"
      PreferredMaintenanceWindow: "sat:21:16-sat:21:46"
      EnablePerformanceInsights: false
      AutoMinorVersionUpgrade: true
      DBSubnetGroupName:
        Ref: "RDSDBSubnetGroup00genaipilotdatabaseprivate00FOLyi"
      DeletionProtection: false
      DBInstanceIdentifier: "sg-prod-genai-summariser-v12"
      AllocatedStorage: "1"
      CACertificateIdentifier: "rds-ca-rsa2048-g1"
      ManageMasterUserPassword: false
      MasterUserSecret: {}
      VPCSecurityGroups:
      - Fn::GetAtt:
        - "EC2SecurityGroup00sg075615342aa3e28b900dirPO"
        - "GroupId"
      - Fn::GetAtt:
        - "EC2SecurityGroup00sg02a57c92533299fd5002bQaE"
        - "GroupId"
      DBSecurityGroups: []
      MasterUsername: "summariser"
      EnableIAMDatabaseAuthentication: false
      BackupRetentionPeriod: 7
      PromotionTier: 1
      PubliclyAccessible: false
      EnableCloudwatchLogsExports:
      - "audit"
      - "profiler"
  IAMInstanceProfile00AWSCloud9SSMInstanceProfile00WE02c:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::InstanceProfile"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/cloud9/"
      Roles:
      - Ref: "IAMRole00AWSCloud9SSMAccessRole00Aheps"
      InstanceProfileName: "AWSCloud9SSMInstanceProfile"
  SchedulerSchedule00stopec2instance00eCsYf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Scheduler::Schedule"
    DeletionPolicy: "Retain"
    Properties:
      GroupName: "default"
      ScheduleExpression: "cron(0 18 ? * 2-6 *)"
      Target:
        Arn:
          Fn::GetAtt:
          - "LambdaFunction00StopEC2Instances00PCSJx"
          - "Arn"
        RetryPolicy:
          MaximumEventAgeInSeconds: 86400
          MaximumRetryAttempts: 185
        RoleArn:
          Fn::GetAtt:
          - "IAMRole00AmazonEventBridgeSchedulerLAMBDA4f6da799a500etQgl"
          - "Arn"
      Description: "stop an ec2 instance"
      State: "DISABLED"
      FlexibleTimeWindow:
        Mode: "OFF"
      ScheduleExpressionTimezone: "Asia/Kuala_Lumpur"
      Name: "stop-ec2-instance"
  KMSAlias00aliasprodgenaidocdbauthdbkey005eDeJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::KMS::Alias"
    DeletionPolicy: "Retain"
    Properties:
      TargetKeyId:
        Ref: "KMSKey008638d8df896d4fe8a82af2fdb61ac87700BoUid"
      AliasName: "alias/prod-genai-docdb-authdb-key"
  EC2NetworkInterface00eni01f1da401b50eb80e00MzeKS:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: ""
      PrivateIpAddress: "10.25.71.173"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.173"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-07fd500f946aad8a2"
      - "sg-018c8a78c89c0d404"
      - "sg-02a57c92533299fd5"
      - "sg-0158898f4b43a0ae9"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00GtpLi"
      SourceDestCheck: true
      InterfaceType: "interface"
      Tags: []
  EC2SecurityGroup00sg09b2b11bee0d39e7a00gBxif:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "launch-wizard-9 created 2024-10-29T02:58:26.769Z"
      GroupName: "launch-wizard-9"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00HMUI8"
      SecurityGroupIngress:
      - CidrIp: "161.142.154.86/32"
        IpProtocol: "tcp"
        FromPort: 22
        ToPort: 22
      - CidrIp:
          Fn::GetAtt:
          - "EC2VPC00vpc02790342fee4ebf9f00HMUI8"
          - "CidrBlock"
        IpProtocol: "tcp"
        FromPort: 22
        ToPort: 22
      - CidrIp: "113.23.196.18/32"
        IpProtocol: "tcp"
        FromPort: 22
        ToPort: 22
      SecurityGroupEgress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole16a39c68a70444d7bb74a24e4f43438400MVQ4I:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-16a39c68-a704-44d7-bb74-a24e4f434384"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-test-genai-summariser-retrievetofrontend:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgtestgenaisummariserretrievetofrontendrolereppyiad005NSsR"
      Users: []
  EC2VolumeAttachment00vol025bc069a9af78b0f00YH6wO:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VolumeAttachment"
    DeletionPolicy: "Retain"
    Properties:
      InstanceId: "i-056aa8a8a3a7d7440"
      VolumeId: "vol-025bc069a9af78b0f"
      Device: "/dev/sda1"
  IAMRole00AmazonSageMakerServiceCatalogProductsGlueRole00oDz8H:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/service-role/AmazonSageMakerServiceCatalogProductsGlueServiceRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "AmazonSageMakerServiceCatalogProductsGlueRole"
      Description: "SageMaker role created from the SageMaker AWS Management Console.\
        \ This role will grant permissions required to use AWS Glue within the Amazon\
        \ SageMaker portfolio of products."
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "glue.amazonaws.com"
  LambdaFunction00sgprodgenais3triggertutorial004FiTW:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Function"
    DeletionPolicy: "Retain"
    Properties:
      MemorySize: 128
      Description: ""
      TracingConfig:
        Mode: "PassThrough"
      VpcConfig:
        SecurityGroupIds:
        - "sg-075615342aa3e28b9"
        SubnetIds:
        - Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00GtpLi"
        - Ref: "EC2Subnet00subnet0d1db15411089416b0025bgM"
        Ipv6AllowedForDualStack: false
      Timeout: 300
      RuntimeManagementConfig:
        UpdateRuntimeOn: "Auto"
      Handler: "lambda_function.lambda_handler"
      Code:
        SourceKMSKeyArn:
          Ref: "LambdaFunction00sgprodgenais3triggertutorial004FiTWCodeSourceKMSKeyArns9ybT"
        S3ObjectVersion:
          Ref: "LambdaFunction00sgprodgenais3triggertutorial004FiTWCodeS3ObjectVersion5R6nd"
        S3Bucket:
          Ref: "LambdaFunction00sgprodgenais3triggertutorial004FiTWCodeS3Bucketj68PG"
        ZipFile:
          Ref: "LambdaFunction00sgprodgenais3triggertutorial004FiTWCodeZipFileCiIps"
        ImageUri:
          Ref: "LambdaFunction00sgprodgenais3triggertutorial004FiTWCodeImageUriCBKEf"
        S3Key:
          Ref: "LambdaFunction00sgprodgenais3triggertutorial004FiTWCodeS3KeyDofqh"
      Role:
        Fn::GetAtt:
        - "IAMRole00lambdas3triggerroletest00wfwAj"
        - "Arn"
      FileSystemConfigs: []
      FunctionName: "sg-prod-genai-s3-trigger-tutorial"
      Runtime: "python3.12"
      PackageType: "Zip"
      LoggingConfig:
        LogFormat: "Text"
        LogGroup: "/aws/lambda/sg-prod-genai-s3-trigger-tutorial"
      RecursiveLoop: "Terminate"
      EphemeralStorage:
        Size: 512
      Layers:
      - "arn:aws:lambda:ap-southeast-1:580247275435:layer:LambdaInsightsExtension:53"
      Architectures:
      - "x86_64"
  IAMRole00AWSServiceRoleForTrustedAdvisor00Y0b6j:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/aws-service-role/trustedadvisor.amazonaws.com/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/aws-service-role/AWSTrustedAdvisorServiceRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "AWSServiceRoleForTrustedAdvisor"
      Description: "Access for the AWS Trusted Advisor Service to help reduce cost,\
        \ increase performance, and improve security of your AWS environment."
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "trustedadvisor.amazonaws.com"
  EC2VolumeAttachment00vol03616c082cedd037400YJqb7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VolumeAttachment"
    DeletionPolicy: "Retain"
    Properties:
      InstanceId: "i-0b2e07dbc66acf6c2"
      VolumeId: "vol-03616c082cedd0374"
      Device: "/dev/xvda"
  IAMRole00sgprodgenaisummariserroleu702de5o00p9Frs:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/AmazonSQSFullAccess"
      - "arn:aws:iam::aws:policy/AmazonSNSFullAccess"
      - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
      - "arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy"
      - "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess"
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-5c881dad-5b1a-44c0-8141-7df98c414d01"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-summariser-role-u702de5o"
      Policies:
      - PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Resource: "*"
            Action:
            - "bedrock:InvokeModel"
            - "bedrock:InvokeModelWithResponseStream"
            - "bedrock:ListFoundationModels"
            Effect: "Allow"
            Sid: "VisualEditor0"
        PolicyName: "BedrockModel"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMRole00sgprodgenairetrievedocssgmkrroletmpxjzvo007VP35:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-38b65965-cf44-4064-9408-702952468a66"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-retrievedocs-sgmkr-role-tmpxjzvo"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  LambdaVersion00functionsgprodgenairagsummariser1000W8WWn:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Version"
    DeletionPolicy: "Retain"
    Properties:
      CodeSha256: "c5161a567b8e2b91e3086cc95c33c634c6ca0d55839247d70df786ff26c7ed28"
      FunctionName:
        Ref: "LambdaFunction00sgprodgenairagsummariser00rFz1v"
      Description: ""
  EC2Volume00vol086aefbd878266b9500cuCK3:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Volume"
    DeletionPolicy: "Retain"
    Properties:
      MultiAttachEnabled: false
      SnapshotId: "snap-0cda8ec628a037291"
      VolumeType: "gp3"
      KmsKeyId: "arn:aws:kms:ap-southeast-1:343218203122:key/e0af6c3f-73fc-497e-863a-6754f0dce6b1"
      Encrypted: true
      Size: 20
      AutoEnableIO: false
      AvailabilityZone: "ap-southeast-1b"
      Throughput: 125
      Iops: 3000
      Tags: []
  LambdaFunction00testretrieves3metadata00bgeRM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Function"
    DeletionPolicy: "Retain"
    Properties:
      MemorySize: 128
      Description: ""
      TracingConfig:
        Mode: "PassThrough"
      VpcConfig:
        SecurityGroupIds:
        - "sg-02c2f03d3e7cd125f"
        SubnetIds:
        - Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00GtpLi"
        - Ref: "EC2Subnet00subnet0d1db15411089416b0025bgM"
        Ipv6AllowedForDualStack: false
      Timeout: 30
      RuntimeManagementConfig:
        UpdateRuntimeOn: "Auto"
      Handler: "lambda_function.lambda_handler"
      Code:
        SourceKMSKeyArn:
          Ref: "LambdaFunction00testretrieves3metadata00bgeRMCodeSourceKMSKeyArnHMaZL"
        S3ObjectVersion:
          Ref: "LambdaFunction00testretrieves3metadata00bgeRMCodeS3ObjectVersionEn8an"
        S3Bucket:
          Ref: "LambdaFunction00testretrieves3metadata00bgeRMCodeS3BucketZSEuJ"
        ZipFile:
          Ref: "LambdaFunction00testretrieves3metadata00bgeRMCodeZipFilepkJiE"
        ImageUri:
          Ref: "LambdaFunction00testretrieves3metadata00bgeRMCodeImageUritSiib"
        S3Key:
          Ref: "LambdaFunction00testretrieves3metadata00bgeRMCodeS3Key2FFW9"
      Role:
        Fn::GetAtt:
        - "IAMRole00sgprodgenaideleteobjects3role5jyencc400qDeqO"
        - "Arn"
      FileSystemConfigs: []
      FunctionName: "test-retrieve-s3-metadata"
      Runtime: "python3.12"
      PackageType: "Zip"
      LoggingConfig:
        LogFormat: "Text"
        LogGroup: "/aws/lambda/test-retrieve-s3-metadata"
      RecursiveLoop: "Terminate"
      EphemeralStorage:
        Size: 512
      Architectures:
      - "x86_64"
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole347f4bbcb60e42fe9e635cdcfdfcd8b100W4QKx:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-347f4bbc-b60e-42fe-9e63-5cdcfdfcd8b1"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-prod-genai-summariser-sgmkr-220-v1:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgprodgenaisummarisersgmkr220v1rolezapzdzrg00wChd9"
      Users: []
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRolee0a8e4fbc407415c880306cf210a2b5e003usw2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-e0a8e4fb-c407-415c-8803-06cf210a2b5e"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-wss-connect:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgwssconnectrolekkh69le700PXMQs"
      Users: []
  IAMRole00APIGatewayCloudwatchRole0046dtN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
      MaxSessionDuration: 3600
      RoleName: "APIGateway-Cloudwatch-Role"
      Description: "Allows API Gateway to push logs to CloudWatch Logs."
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "apigateway.amazonaws.com"
          Sid: ""
  IAMManagedPolicy00policyserviceroleAWSLambdaVPCAccessExecutionRole91c8e8dac0804ad29c4da76fdd6ece50005dtoD:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaVPCAccessExecutionRole-91c8e8da-c080-4ad2-9c4d-a76fdd6ece50"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "*"
          Action:
          - "ec2:CreateNetworkInterface"
          - "ec2:DeleteNetworkInterface"
          - "ec2:DescribeNetworkInterfaces"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00testingestrole0n1hok9900h7dCf"
      Users: []
  IAMRole00sgtestgenaisummariserdeletechatfunctionrolelle032db00h7ECd:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaVPCAccessExecutionRole-a9e27b70-8b6e-4438-a4db-d9df2f8b6d5f"
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-c65e1975-4b19-40dc-bc64-dcb9feb5da05"
      MaxSessionDuration: 3600
      RoleName: "sg-test-genai-summariser-deletechatfunction-role-lle032db"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMRole00AWSServiceRoleForFMS007cPif:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/aws-service-role/fms.amazonaws.com/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/aws-service-role/FMSServiceRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "AWSServiceRoleForFMS"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "fms.amazonaws.com"
  EC2SecurityGroup00sg0a6c63d92a738a24c00FjML8:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "CLI access to dev team"
      GroupName: "GenAI-Pilot-cvpn-SG"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00HMUI8"
      SecurityGroupIngress:
      - CidrIp:
          Fn::GetAtt:
          - "EC2VPC00vpc02790342fee4ebf9f00HMUI8"
          - "CidrBlock"
        IpProtocol: "tcp"
        FromPort: 22
        ToPort: 22
      - CidrIp:
          Fn::GetAtt:
          - "EC2VPC00vpc02790342fee4ebf9f00HMUI8"
          - "CidrBlock"
        IpProtocol: "tcp"
        FromPort: 443
        ToPort: 443
      - CidrIp:
          Fn::GetAtt:
          - "EC2VPC00vpc02790342fee4ebf9f00HMUI8"
          - "CidrBlock"
        IpProtocol: "icmp"
        FromPort: -1
        ToPort: -1
      SecurityGroupEgress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
      Tags:
      - Value: "GenAI-Pilot-cvpn-SG"
        Key: "Name"
  IAMRole00testingestrole0n1hok9900h7dCf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-86dc9dd0-0f0e-46ae-8f32-67dce78a0da4"
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaVPCAccessExecutionRole-91c8e8da-c080-4ad2-9c4d-a76fdd6ece50"
      MaxSessionDuration: 3600
      RoleName: "test-ingest-role-0n1hok99"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  EC2SecurityGroup00sg0ef00776c538db14200cp2bD:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "For connection to managed instances Private endpoints"
      GroupName: "GenAI-Pilot-Private-Internal-to-VPC"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00HMUI8"
      SecurityGroupIngress:
      - CidrIp:
          Fn::GetAtt:
          - "EC2VPC00vpc02790342fee4ebf9f00HMUI8"
          - "CidrBlock"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
      SecurityGroupEgress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
  IAMRole00AWSReservedSSOGenAIAdminAccess37c71d1e8de0e9ae00dsLM4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/aws-reserved/sso.amazonaws.com/ap-southeast-1/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/AmazonDocDBFullAccess"
      - "arn:aws:iam::aws:policy/IAMFullAccess"
      - "arn:aws:iam::aws:policy/AmazonSQSFullAccess"
      - "arn:aws:iam::aws:policy/AmazonSNSFullAccess"
      - "arn:aws:iam::aws:policy/AmazonEventBridgeSchedulerFullAccess"
      - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
      - "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess"
      - "arn:aws:iam::aws:policy/AmazonECS_FullAccess"
      - "arn:aws:iam::aws:policy/AmazonAPIGatewayAdministrator"
      MaxSessionDuration: 43200
      RoleName: "AWSReservedSSO_GenAI_Admin_Access_37c71d1e8de0e9ae"
      Description: "GenAI_Admin_Access (18 Permissions)"
      Policies:
      - PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Resource:
            - "*"
            - "*"
            - "*"
            - "*"
            - "*"
            - "*"
            - "*"
            - "*"
            - "*"
            - "*"
            - "*"
            - "*"
            - "*"
            - "*"
            - "*"
            - "*"
            - "*"
            - "*"
            - "*"
            - "*"
            Action:
            - "cloudtrail:*"
            - "codecommit:*"
            - "servicequotas:*"
            - "ecr:*"
            - "ec2:*"
            - "ec2-instance-connect:*"
            - "kms:*"
            - "lambda:*"
            - "s3-object-lambda:*"
            - "secretsmanager:*"
            - "cloudwatch:*"
            - "logs:*"
            - "elasticloadbalancing:*"
            - "ecs:*"
            - "vpc-lattice:*"
            - "vpc-lattice-svcs:*"
            - "trustedadvisor:*"
            - "support:*"
            - "docdb-elastic:*"
            - "bedrock:*"
            - "sagemaker:*"
            - "acm:ListCertificates"
            - "acm:DescribeCertificate"
            - "acm:ExportCertificate"
            - "acm:GetAccountConfiguration"
            - "acm:GetCertificate"
            - "acm:ListTagsForCertificate"
            - "sqs:*"
            - "sns:*"
            Effect: "Allow"
            Sid: "Statement1"
          - Resource: "*"
            Action:
            - "iam:AddUserToGroup"
            - "iam:ChangePassword"
            - "iam:CreateAccessKey"
            - "iam:CreateAccountAlias"
            - "iam:CreateGroup"
            - "iam:CreateLoginProfile"
            - "iam:CreateUser"
            - "iam:DeactivateMFADevice"
            - "iam:CreateVirtualMFADevice"
            - "iam:DeleteAccessKey"
            - "iam:DeleteAccountAlias"
            - "iam:DeleteGroup"
            - "iam:DeleteLoginProfile"
            - "iam:DeleteUser"
            - "iam:DeleteVirtualMFADevice"
            - "iam:EnableMFADevice"
            - "iam:RemoveUserFromGroup"
            - "iam:ResetServiceSpecificCredential"
            - "iam:ResyncMFADevice"
            - "iam:UpdateAccessKey"
            - "iam:UpdateAccountEmailAddress"
            - "iam:UpdateAccountName"
            - "iam:UpdateAccountPasswordPolicy"
            - "iam:UpdateUser"
            - "iam:DeleteUserPolicy"
            - "iam:DetachGroupPolicy"
            - "ec2:ReplaceNetworkAclEntry"
            - "ec2:ReplaceNetworkAclAssociation"
            - "ec2:DeleteNetworkAcl"
            - "ec2:DeleteNetworkAclEntry"
            - "ec2:CreateNetworkAcl"
            - "ec2:CreateNetworkAclEntry"
            - "ec2:ModifyVpcPeeringConnectionOptions"
            - "ec2:ModifyVpcTenancy"
            - "ec2:RejectVpcPeeringConnection"
            Effect: "Deny"
            Sid: "CustomDenyGuardRails"
          - Condition:
              IpAddress:
                aws:SourceIp:
                - "211.25.63.2/32"
                - "203.115.236.2/32"
                - "203.106.28.194/32"
            Resource: "*"
            Action: "*"
            Effect: "Allow"
            Sid: "WhitelistIPPrivilegeuser"
        PolicyName: "AwsSSOInlinePolicy"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Condition:
            StringEquals:
              SAML:aud: "https://signin.aws.amazon.com/saml"
          Action:
          - "sts:AssumeRoleWithSAML"
          - "sts:TagSession"
          Effect: "Allow"
          Principal:
            Federated: "arn:aws:iam::343218203122:saml-provider/AWSSSO_1a32e06b3a2c2a2a_DO_NOT_DELETE"
  IAMRole00AWSServiceRoleForAmazonElasticFileSystem00pSkm3:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/aws-service-role/elasticfilesystem.amazonaws.com/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/aws-service-role/AmazonElasticFileSystemServiceRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "AWSServiceRoleForAmazonElasticFileSystem"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "elasticfilesystem.amazonaws.com"
  KMSKey006d571b492fdc4063bb3bb07ff8439ad100AlCwV:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::KMS::Key"
    DeletionPolicy: "Retain"
    Properties:
      Origin: "AWS_KMS"
      MultiRegion: false
      Description: "Default key that protects my Cloud9 data when no other key is\
        \ defined"
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
        - Condition:
            StringEquals:
              kms:ViaService: "cloud9.ap-southeast-1.amazonaws.com"
              kms:CallerAccount: "343218203122"
          Resource: "*"
          Action:
          - "kms:Encrypt"
          - "kms:Decrypt"
          - "kms:ReEncrypt*"
          - "kms:GenerateDataKey*"
          - "kms:DescribeKey"
          Effect: "Allow"
          Principal:
            AWS: "*"
          Sid: "Allow access through Cloud9 for all principals in the account that\
            \ are authorized to use Cloud9"
        - Resource: "*"
          Action:
          - "kms:Describe*"
          - "kms:Get*"
          - "kms:List*"
          Effect: "Allow"
          Principal:
            AWS: "arn:aws:iam::343218203122:root"
          Sid: "Allow direct access to key metadata to the account"
        Id: "auto-cloud9-1"
      KeySpec: "SYMMETRIC_DEFAULT"
      Enabled: true
      EnableKeyRotation: true
      KeyUsage: "ENCRYPT_DECRYPT"
      Tags: []
  IAMRole00sgtestgenaisummariserretrievetofrontendrole1bli1c8l000JVOr:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-f48634ca-f1f9-42bf-96ae-b34ac4f2aa08"
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaVPCAccessExecutionRole-60f1b547-c14c-4b30-ba98-9b55c10f1109"
      MaxSessionDuration: 3600
      RoleName: "sg-test-genai-summariser-retrievetofrontend-role-1bli1c8l"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMRole00sgprodgenairetrievedocs216v1roleqqjc3kd200sT9DU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-a0b9c126-7e13-4645-b0bf-3fe8c922bf02"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-retrievedocs-216-v1-role-qqjc3kd2"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  SQSQueue00PRIORITYfifo00Ytp76:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::SQS::Queue"
    DeletionPolicy: "Retain"
    Properties:
      ReceiveMessageWaitTimeSeconds: 0
      SqsManagedSseEnabled: true
      FifoThroughputLimit: "perQueue"
      DelaySeconds: 0
      FifoQueue: true
      MessageRetentionPeriod: 86400
      MaximumMessageSize: 262144
      DeduplicationScope: "queue"
      VisibilityTimeout: 20
      ContentBasedDeduplication: true
      QueueName: "PRIORITY.fifo"
  IAMRole00OrganizationAccountAccessRole00B8Tqf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/AdministratorAccess"
      MaxSessionDuration: 3600
      RoleName: "OrganizationAccountAccessRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            AWS: "arn:aws:iam::438869773889:root"
  EC2SecurityGroup00sg03faa669e447f1310003dY15:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "rebekah-public-ec2-sg"
      GroupName: "rebekah-public-ec2-sg"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00HMUI8"
      SecurityGroupIngress:
      - IpProtocol: "-1"
        Description: "cVPN to Public"
        FromPort: -1
        SourceSecurityGroupId: "sg-0a6c63d92a738a24c"
        ToPort: -1
        SourceSecurityGroupOwnerId: "343218203122"
      SecurityGroupEgress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRolebb4a4d8f1ee0465eb7a18b882d95807900pZZqv:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-bb4a4d8f-1ee0-465e-b7a1-8b882d958079"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:us-east-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:us-east-1:343218203122:log-group:/aws/lambda/sg-prod-genai-presignedurl-s3-220-v1:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgprodgenaipresignedurls3220v1rolean3jv4ff00fGqbj"
      Users: []
  LambdaFunction00sgprodgenairetrievedocssgmkr00Fg4sm:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Function"
    DeletionPolicy: "Retain"
    Properties:
      MemorySize: 128
      Description: ""
      TracingConfig:
        Mode: "PassThrough"
      VpcConfig:
        SecurityGroupIds:
        - "sg-075615342aa3e28b9"
        SubnetIds:
        - Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00GtpLi"
        - Ref: "EC2Subnet00subnet0d1db15411089416b0025bgM"
        Ipv6AllowedForDualStack: false
      Timeout: 900
      RuntimeManagementConfig:
        UpdateRuntimeOn: "Auto"
      Handler: "lambda_function.lambda_handler"
      Code:
        SourceKMSKeyArn:
          Ref: "LambdaFunction00sgprodgenairetrievedocssgmkr00Fg4smCodeSourceKMSKeyArnGBQk2"
        S3ObjectVersion:
          Ref: "LambdaFunction00sgprodgenairetrievedocssgmkr00Fg4smCodeS3ObjectVersiondChG5"
        S3Bucket:
          Ref: "LambdaFunction00sgprodgenairetrievedocssgmkr00Fg4smCodeS3BuckethZZ6X"
        ZipFile:
          Ref: "LambdaFunction00sgprodgenairetrievedocssgmkr00Fg4smCodeZipFileJpVSD"
        ImageUri:
          Ref: "LambdaFunction00sgprodgenairetrievedocssgmkr00Fg4smCodeImageUriVCp86"
        S3Key:
          Ref: "LambdaFunction00sgprodgenairetrievedocssgmkr00Fg4smCodeS3Keybs16A"
      Role:
        Fn::GetAtt:
        - "IAMRole00sgprodgenairetrievedocssgmkrroletmpxjzvo007VP35"
        - "Arn"
      FileSystemConfigs: []
      FunctionName: "sg-prod-genai-retrievedocs-sgmkr"
      Runtime: "python3.12"
      PackageType: "Zip"
      LoggingConfig:
        LogFormat: "Text"
        LogGroup: "/aws/lambda/sg-prod-genai-retrievedocs-sgmkr"
      RecursiveLoop: "Terminate"
      Environment:
        Variables:
          courtcsesdocdb_connectionstring: "mongodb://Docdbadmin:Docdbadmin#.com@sg-prod-genai-courtcasesdb-216-v1.cluster-czs8w0aayayu.ap-southeast-1.docdb.amazonaws.com:27017/?tls=true&tlsCAFile=global-bundle.pem&replicaSet=rs0&readPreference=secondaryPreferred&retryWrites=false"
      EphemeralStorage:
        Size: 512
      Layers:
      - "arn:aws:lambda:ap-southeast-1:770693421928:layer:Klayers-p39-boto3:23"
      - "arn:aws:lambda:ap-southeast-1:343218203122:layer:pymongo:4"
      - "arn:aws:lambda:ap-southeast-1:336392948345:layer:AWSSDKPandas-Python312:13"
      Architectures:
      - "x86_64"
  IAMRole00AmazonEventBridgeSchedulerLAMBDA4f6da799a500etQgl:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/Amazon-EventBridge-Scheduler-Execution-Policy-5993931d-d2ea-467a-a09a-34ec895ab533"
      MaxSessionDuration: 3600
      RoleName: "Amazon_EventBridge_Scheduler_LAMBDA_4f6da799a5"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Condition:
            StringEquals:
              aws:SourceAccount: "343218203122"
          Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "scheduler.amazonaws.com"
  EC2Instance00i0b2e07dbc66acf6c200fSBch:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Instance"
    DeletionPolicy: "Retain"
    Properties:
      Tenancy: "default"
      SecurityGroups:
      - "GenAI-Pilot-Private-Tmicro-to-App"
      - "GenAI-Pilot-Private-Cvpn-to-App"
      PrivateIpAddress: "10.25.71.172"
      BlockDeviceMappings:
      - Ebs:
          SnapshotId: "snap-0a00914b732a105a7"
          VolumeType: "gp3"
          KmsKeyId:
            Fn::GetAtt:
            - "KMSKey00e0af6c3f73fc497e863a6754f0dce6b100kSC3X"
            - "Arn"
          Encrypted: true
          Iops: 3000
          VolumeSize: 100
          DeleteOnTermination: false
        DeviceName: "/dev/xvda"
      IamInstanceProfile:
        Ref: "IAMInstanceProfile00ec2adminaccess00awY8x"
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00GtpLi"
      EbsOptimized: false
      Volumes:
      - VolumeId: "vol-03616c082cedd0374"
        Device: "/dev/xvda"
      NetworkInterfaces:
      - PrivateIpAddresses:
        - PrivateIpAddress: "10.25.71.172"
          Primary: true
        SecondaryPrivateIpAddressCount: 0
        DeviceIndex: "0"
        GroupSet:
        - Ref: "EC2SecurityGroup00sg07fd500f946aad8a200p0vJb"
        - Ref: "EC2SecurityGroup00sg0158898f4b43a0ae900nBPrb"
        Ipv6Addresses: []
        SubnetId:
          Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00GtpLi"
        AssociatePublicIpAddress: false
        NetworkInterfaceId:
          Ref: "EC2NetworkInterface00eni0e26b9298bc1d4f2100ezwzR"
        DeleteOnTermination: true
      ImageId: "ami-0a065ed4926e5a2c4"
      InstanceType: "t2.xlarge"
      Monitoring: false
      Tags:
      - Value: "ec2-jumpserver-weiyan"
        Key: "Name"
      InstanceInitiatedShutdownBehavior: "stop"
      CpuOptions:
        ThreadsPerCore: 1
        CoreCount: 4
      AvailabilityZone: "ap-southeast-1b"
      PrivateDnsNameOptions:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      SecurityGroupIds:
      - "sg-07fd500f946aad8a2"
      - "sg-0158898f4b43a0ae9"
      DisableApiTermination: false
      KeyName: "build-img-keypair"
      SourceDestCheck: true
      PlacementGroupName: ""
      VpcId: "vpc-02790342fee4ebf9f"
      State:
        Code: "80"
        Name: "stopped"
      CreditSpecification:
        CPUCredits: "standard"
  IAMRole00sgprodgenairelevantdocs216v1roleyqpyi36c00PGchL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-a655d158-af28-42f9-80b5-a052107040e0"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-relevantdocs-216-v1-role-yqpyi36c"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMRole00sgprodgenaiembeddingsgmkrv1rolefuho1lhl00lN3bK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-79d9914b-8568-4cad-8fc1-ceec6054e5cf"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-embedding-sgmkr-v1-role-fuho1lhl"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  EC2NetworkInterface00eni0e26b9298bc1d4f2100ezwzR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::NetworkInterface"
    DeletionPolicy: "Retain"
    Properties:
      Description: ""
      PrivateIpAddress: "10.25.71.172"
      PrivateIpAddresses:
      - PrivateIpAddress: "10.25.71.172"
        Primary: true
      SecondaryPrivateIpAddressCount: 0
      Ipv6PrefixCount: 0
      Ipv4Prefixes: []
      Ipv4PrefixCount: 0
      GroupSet:
      - "sg-07fd500f946aad8a2"
      - "sg-0158898f4b43a0ae9"
      Ipv6Prefixes: []
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00GtpLi"
      SourceDestCheck: true
      InterfaceType: "interface"
      Tags: []
  IAMRole00ecsTaskExecutionRole00V8XGZ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
      - "arn:aws:iam::aws:policy/AmazonSSMFullAccess"
      - "arn:aws:iam::aws:policy/service-role/ROSAKMSProviderPolicy"
      - "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess"
      - "arn:aws:iam::aws:policy/SecretsManagerReadWrite"
      - "arn:aws:iam::aws:policy/AmazonElasticContainerRegistryPublicFullAccess"
      MaxSessionDuration: 3600
      RoleName: "ecsTaskExecutionRole"
      AssumeRolePolicyDocument:
        Version: "2008-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "ecs-tasks.amazonaws.com"
          Sid: ""
  KMSAlias00aliasprodgenailambdaenvvarkey00MWLjU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::KMS::Alias"
    DeletionPolicy: "Retain"
    Properties:
      TargetKeyId:
        Ref: "KMSKey009038aa065c47488da0882ef3f8bcb99b00yQ5k4"
      AliasName: "alias/prod-genai-lambda-env-var-key"
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole5c881dad5b1a44c081417df98c414d010012Gtq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-5c881dad-5b1a-44c0-8141-7df98c414d01"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-prod-genai-summariser:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgprodgenaisummariserroleu702de5o00p9Frs"
      Users: []
  LambdaFunction00testuploads300XYdXG:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Function"
    DeletionPolicy: "Retain"
    Properties:
      MemorySize: 128
      Description: ""
      TracingConfig:
        Mode: "PassThrough"
      VpcConfig:
        SecurityGroupIds:
        - "sg-02c2f03d3e7cd125f"
        SubnetIds:
        - Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00GtpLi"
        - Ref: "EC2Subnet00subnet0d1db15411089416b0025bgM"
        Ipv6AllowedForDualStack: false
      Timeout: 30
      RuntimeManagementConfig:
        UpdateRuntimeOn: "Auto"
      Handler: "lambda_function.lambda_handler"
      Code:
        SourceKMSKeyArn:
          Ref: "LambdaFunction00testuploads300XYdXGCodeSourceKMSKeyArn48FcV"
        S3ObjectVersion:
          Ref: "LambdaFunction00testuploads300XYdXGCodeS3ObjectVersionM9I4l"
        S3Bucket:
          Ref: "LambdaFunction00testuploads300XYdXGCodeS3Bucket1nqjc"
        ZipFile:
          Ref: "LambdaFunction00testuploads300XYdXGCodeZipFilekDD56"
        ImageUri:
          Ref: "LambdaFunction00testuploads300XYdXGCodeImageUriMGMe3"
        S3Key:
          Ref: "LambdaFunction00testuploads300XYdXGCodeS3KeyL8GXg"
      Role:
        Fn::GetAtt:
        - "IAMRole00sgprodgenaideleteobjects3role5jyencc400qDeqO"
        - "Arn"
      FileSystemConfigs: []
      FunctionName: "test-upload-s3"
      Runtime: "python3.12"
      PackageType: "Zip"
      LoggingConfig:
        LogFormat: "Text"
        LogGroup: "/aws/lambda/test-upload-s3"
      RecursiveLoop: "Terminate"
      EphemeralStorage:
        Size: 512
      Layers:
      - "arn:aws:lambda:ap-southeast-1:770693421928:layer:Klayers-p312-requests:10"
      Architectures:
      - "x86_64"
  IAMRole00AWSReservedSSOAWSVulnerabilityAdmind9358083f7ca994400DgmnO:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/aws-reserved/sso.amazonaws.com/ap-southeast-1/"
      MaxSessionDuration: 43200
      RoleName: "AWSReservedSSO_AWS_Vulnerability_Admin_d9358083f7ca9944"
      Policies:
      - PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Resource: "*"
            Action:
            - "inspector2:*"
            - "s3:*"
            - "lambda:*"
            - "s3-object-lambda:*"
            - "events:*"
            - "securityhub:*"
            - "kms:*"
            Effect: "Allow"
            Sid: "Statement1"
          - Condition:
              IpAddress:
                aws:SourceIp:
                - "211.25.63.2/32"
                - "203.115.236.2/32"
                - "203.106.28.194/32"
            Resource: "*"
            Action: "*"
            Effect: "Allow"
            Sid: "WhitelistIPPrivilegeuser"
        PolicyName: "AwsSSOInlinePolicy"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Condition:
            StringEquals:
              SAML:aud: "https://signin.aws.amazon.com/saml"
          Action:
          - "sts:AssumeRoleWithSAML"
          - "sts:TagSession"
          Effect: "Allow"
          Principal:
            Federated: "arn:aws:iam::343218203122:saml-provider/AWSSSO_1a32e06b3a2c2a2a_DO_NOT_DELETE"
  IAMRole00AmazonSagemakerCanvasForecastRole20240813T111535007uENV:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/service-role/AmazonSageMakerCanvasForecastAccess"
      MaxSessionDuration: 3600
      RoleName: "AmazonSagemakerCanvasForecastRole-20240813T111535"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "forecast.amazonaws.com"
  IAMRole00sgprodgenaiembedding216v1role13ykijed00jbwtn:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-808546fc-1962-4a87-af4a-a2b7f5e78fdf"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-embedding-216-v1-role-13ykijed"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMRole00huroleulwtj7gx00vDHa3:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-736a3660-0f63-4b4f-8c13-1cedba51f16f"
      MaxSessionDuration: 3600
      RoleName: "hu-role-ulwtj7gx"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMRole00sgprodgenairelevantdocsrolebnmvu3wq00DFezK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-dce4cdf9-3fc6-461d-b071-afc3476e2d57"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-relevantdocs-role-bnmvu3wq"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMRole00AmazonSageMakerServiceCatalogProductsUseRole006ZG40:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AmazonSageMakerServiceCatalogProductsUseRole-20240813T111517"
      MaxSessionDuration: 3600
      RoleName: "AmazonSageMakerServiceCatalogProductsUseRole"
      Description: "SageMaker role created from the SageMaker AWS Management Console.\
        \ This role has the permissions required to use the Amazon SageMaker portfolio\
        \ of products from AWS ServiceCatalog."
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service:
            - "lambda.amazonaws.com"
            - "glue.amazonaws.com"
            - "firehose.amazonaws.com"
            - "states.amazonaws.com"
            - "sagemaker.amazonaws.com"
            - "events.amazonaws.com"
            - "apigateway.amazonaws.com"
            - "codepipeline.amazonaws.com"
            - "cloudformation.amazonaws.com"
            - "codebuild.amazonaws.com"
  EC2VolumeAttachment00vol01bd16c2e811bb9d700frWgJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VolumeAttachment"
    DeletionPolicy: "Retain"
    Properties:
      InstanceId: "i-0e19ff01674e306d5"
      VolumeId: "vol-01bd16c2e811bb9d7"
      Device: "/dev/xvda"
  IAMRole00sgprodgenaicheckcredsdocdbroleiwrpl7hp00mNI5D:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-7e52c4cd-c145-45b2-85b0-97d29d27c811"
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaVPCAccessExecutionRole-4f735b8f-dc18-4bdc-b59d-ad745a2ed2e2"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-checkcredsdocdb-role-iwrpl7hp"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMRole00sgprodgenaiembeddingsgmkr216v1roleutpd3d7400crupG:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-89c8df0b-5878-45b8-acc1-376dd39b3e3b"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-embedding-sgmkr-216-v1-role-utpd3d74"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMRole00sgprodgenaiembeddingsgmkr216v1rolee8nktx3n00AQ6lc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-ff460d25-5383-4b3b-846c-86b27b72f7b1"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-embedding-sgmkr-216-v1-role-e8nktx3n"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  ECSTaskDefinition00taskdefinitiongenaipilot37006h2mQ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::TaskDefinition"
    DeletionPolicy: "Retain"
    Properties:
      TaskRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00V8XGZ"
        - "Arn"
      InferenceAccelerators: []
      Memory: "3072"
      PlacementConstraints: []
      Cpu: "1024"
      RequiresCompatibilities:
      - "FARGATE"
      NetworkMode: "awsvpc"
      EnableFaultInjection: false
      ExecutionRoleArn:
        Fn::GetAtt:
        - "IAMRole00ecsTaskExecutionRole00V8XGZ"
        - "Arn"
      RuntimePlatform:
        OperatingSystemFamily: "LINUX"
        CpuArchitecture: "X86_64"
      Volumes: []
      ContainerDefinitions:
      - Secrets: []
        Memory: 3072
        VolumesFrom: []
        Cpu: 1024
        EntryPoint: []
        DnsServers: []
        ReadonlyRootFilesystem: true
        Image: "343218203122.dkr.ecr.ap-southeast-1.amazonaws.com/genai-ecr:Prod-Frontend-Latest-V9"
        Essential: true
        LogConfiguration:
          SecretOptions: []
          Options:
            awslogs-group: "/ecs/genaipilot"
            awslogs-create-group: "true"
            awslogs-region: "ap-southeast-1"
            awslogs-stream-prefix: "ecs"
          LogDriver: "awslogs"
        ResourceRequirements: []
        EnvironmentFiles: []
        Name: "genaifrontend"
        DockerSecurityOptions: []
        SystemControls: []
        DnsSearchDomains: []
        CredentialSpecs: []
        Ulimits: []
        ExtraHosts: []
        MountPoints: []
        DependsOn: []
        DockerLabels: {}
        PortMappings:
        - ContainerPort: 8080
          AppProtocol: "http"
          Protocol: "tcp"
          HostPort: 8080
          Name: "genaifrontend-80-tcp"
        Command: []
        Environment: []
        Links: []
      Family: "genaipilot"
      Tags: []
  LambdaEventSourceMapping00090f9c1db21a44ac8abef9f59989c6f200BEDip:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::EventSourceMapping"
    DeletionPolicy: "Retain"
    Properties:
      BatchSize: 1
      FunctionName:
        Fn::GetAtt:
        - "LambdaFunction00TOBEDELETEDtestfunctionsqs00IfKlX"
        - "Arn"
      ScalingConfig:
        MaximumConcurrency: 2
      Enabled: true
      EventSourceArn:
        Fn::GetAtt:
        - "SQSQueue00teststandardqueue00hx0zm"
        - "Arn"
      Tags: []
      FunctionResponseTypes:
      - "ReportBatchItemFailures"
      MaximumBatchingWindowInSeconds: 0
  EC2Volume00vol03616c082cedd037400L1Rwo:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Volume"
    DeletionPolicy: "Retain"
    Properties:
      MultiAttachEnabled: false
      SnapshotId: "snap-0a00914b732a105a7"
      VolumeType: "gp3"
      KmsKeyId: "arn:aws:kms:ap-southeast-1:343218203122:key/e0af6c3f-73fc-497e-863a-6754f0dce6b1"
      Encrypted: true
      Size: 100
      AutoEnableIO: false
      AvailabilityZone: "ap-southeast-1b"
      Throughput: 125
      Iops: 3000
      Tags:
      - Value: "WeiYan"
        Key: "Name"
  IAMRole00sgprodgenaiembeddingsgmkrrolepybrwqsu00oF0oM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy"
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-ce3cf321-6560-4bb7-8f1b-97031fec23b7"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-embedding-sgmkr-role-pybrwqsu"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole2b0d223bd86b41949f3a37a580b9279100KAYnq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-2b0d223b-d86b-4194-9f3a-37a580b92791"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:us-east-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:us-east-1:343218203122:log-group:/aws/lambda/sg-prod-genai-presignedurl-s3-220-v1:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgprodgenaipresignedurls3220v1role5jlwsarb00MxbcN"
      Users: []
  LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00GQ5Hr:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/vpc/GenAI-Pilot-VPC-Flow-Log"
      DataProtectionPolicy: {}
  LambdaPermission00functionsgtestgenaisummariserretrievetofrontend00ftrrI:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Permission"
    DeletionPolicy: "Retain"
    Properties:
      FunctionName:
        Fn::GetAtt:
        - "LambdaFunction00sgtestgenaisummariserretrievetofrontend00yM0rs"
        - "Arn"
      Action: "lambda:InvokeFunction"
      SourceArn: "arn:aws:execute-api:ap-southeast-1:343218203122:5nwb46kira/*/GET/sg-test-genai-summariser-retrievetofrontend"
      Principal: "apigateway.amazonaws.com"
  LambdaPermission00functionsgtestasyncoutputretrieve00Uyots:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Permission"
    DeletionPolicy: "Retain"
    Properties:
      FunctionName:
        Fn::GetAtt:
        - "LambdaFunction00sgtestasyncoutputretrieve00bLo4B"
        - "Arn"
      Action: "lambda:InvokeFunction"
      SourceArn: "arn:aws:execute-api:ap-southeast-1:343218203122:ip5o3ftxh4/*/GET/async_retrieve"
      Principal: "apigateway.amazonaws.com"
  SchedulerSchedule00startec2instance00kSzBv:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Scheduler::Schedule"
    DeletionPolicy: "Retain"
    Properties:
      GroupName: "default"
      ScheduleExpression: "cron(0 8 ? * 2-6 *)"
      Target:
        Arn:
          Fn::GetAtt:
          - "LambdaFunction00StartEC2Instances00MHqS9"
          - "Arn"
        RetryPolicy:
          MaximumEventAgeInSeconds: 86400
          MaximumRetryAttempts: 185
        RoleArn:
          Fn::GetAtt:
          - "IAMRole00AmazonEventBridgeSchedulerLAMBDA51910dd79600WJ7la"
          - "Arn"
      Description: "start instances"
      State: "DISABLED"
      FlexibleTimeWindow:
        Mode: "OFF"
      ScheduleExpressionTimezone: "Asia/Kuala_Lumpur"
      Name: "start-ec2-instance"
  KMSKey00ad3b74c93b824e5bb58f761424dce7f000Skbxe:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::KMS::Key"
    DeletionPolicy: "Retain"
    Properties:
      Origin: "AWS_KMS"
      MultiRegion: false
      Description: "Default key that protects my Secrets Manager data when no other\
        \ key is defined"
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
        - Condition:
            StringEquals:
              kms:ViaService: "secretsmanager.ap-southeast-1.amazonaws.com"
              kms:CallerAccount: "343218203122"
          Resource: "*"
          Action:
          - "kms:Encrypt"
          - "kms:Decrypt"
          - "kms:ReEncrypt*"
          - "kms:CreateGrant"
          - "kms:DescribeKey"
          Effect: "Allow"
          Principal:
            AWS: "*"
          Sid: "Allow access through AWS Secrets Manager for all principals in the\
            \ account that are authorized to use AWS Secrets Manager"
        - Condition:
            StringEquals:
              kms:CallerAccount: "343218203122"
            StringLike:
              kms:ViaService: "secretsmanager.*.amazonaws.com"
          Resource: "*"
          Action: "kms:GenerateDataKey*"
          Effect: "Allow"
          Principal:
            AWS: "*"
          Sid: "Allow access through AWS Secrets Manager for all principals in the\
            \ account that are authorized to use AWS Secrets Manager"
        - Resource: "*"
          Action:
          - "kms:Describe*"
          - "kms:Get*"
          - "kms:List*"
          - "kms:RevokeGrant"
          Effect: "Allow"
          Principal:
            AWS: "arn:aws:iam::343218203122:root"
          Sid: "Allow direct access to key metadata to the account"
        Id: "auto-secretsmanager-2"
      KeySpec: "SYMMETRIC_DEFAULT"
      Enabled: true
      EnableKeyRotation: true
      KeyUsage: "ENCRYPT_DECRYPT"
      Tags: []
  IAMRole00AWSServiceRoleForSecurityHub00HnO23:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/aws-service-role/securityhub.amazonaws.com/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/aws-service-role/AWSSecurityHubServiceRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "AWSServiceRoleForSecurityHub"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "securityhub.amazonaws.com"
  RDSDBCluster00sgprodgenaicourtcasesdb216v100N3QVN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::RDS::DBCluster"
    DeletionPolicy: "Retain"
    Properties:
      StorageEncrypted: true
      AssociatedRoles: []
      EnableHttpEndpoint: false
      EngineMode: "provisioned"
      Port: 27017
      DBClusterIdentifier: "sg-prod-genai-courtcasesdb-216-v1"
      PreferredBackupWindow: "00:00-00:30"
      NetworkType: "IPV4"
      VpcSecurityGroupIds:
      - "sg-075615342aa3e28b9"
      - "sg-02a57c92533299fd5"
      CopyTagsToSnapshot: false
      Engine: "docdb"
      Tags: []
      EngineVersion: "5.0.0"
      StorageType: "aurora"
      KmsKeyId:
        Fn::GetAtt:
        - "KMSKey0051a5c08ff1b24e92b22b5784f7f0dc3300rv3Pv"
        - "Arn"
      AvailabilityZones:
      - "ap-southeast-1a"
      - "ap-southeast-1b"
      - "ap-southeast-1c"
      EnableLocalWriteForwarding: false
      PreferredMaintenanceWindow: "sat:17:40-sat:18:10"
      AutoMinorVersionUpgrade: false
      DBSubnetGroupName:
        Ref: "RDSDBSubnetGroup00genaipilotdatabaseprivate00FOLyi"
      DeletionProtection: true
      AllocatedStorage: 1
      ManageMasterUserPassword: false
      MasterUserSecret: {}
      MasterUsername: "Docdbadmin"
      ReadEndpoint: {}
      EnableIAMDatabaseAuthentication: false
      DBClusterParameterGroupName: "default.docdb5.0"
      BackupRetentionPeriod: 7
      EnableCloudwatchLogsExports:
      - "audit"
      - "profiler"
  IAMRole00sgprodgenairelevantdocssgmkrroleadfg7mbu00ABGCM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-dbb6cc3e-e9c5-4262-abc9-a402c2f40381"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-relevantdocs-sgmkr-role-adfg7mbu"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMRole00AWSReservedSSOSAUSecurityHubCSDTeam777cad720b10dd9000qL7ng:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/aws-reserved/sso.amazonaws.com/ap-southeast-1/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/SecurityAudit"
      - "arn:aws:iam::aws:policy/ReadOnlyAccess"
      - "arn:aws:iam::aws:policy/AWSSecurityHubFullAccess"
      - "arn:aws:iam::aws:policy/AWSMarketplaceSellerProductsReadOnly"
      - "arn:aws:iam::aws:policy/AWSMarketplaceRead-only"
      - "arn:aws:iam::aws:policy/job-function/SupportUser"
      MaxSessionDuration: 43200
      RoleName: "AWSReservedSSO_SAU_SecurityHub_CSD_Team_777cad720b10dd90"
      Description: "Security Hub group"
      Policies:
      - PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Condition:
              IpAddress:
                aws:SourceIp:
                - "211.25.63.2/32"
                - "203.115.236.2/32"
                - "203.106.28.194/32"
            Resource: "*"
            Action: "*"
            Effect: "Allow"
            Sid: "WhitelistIPPrivilegeuser"
        PolicyName: "AwsSSOInlinePolicy"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Condition:
            StringEquals:
              SAML:aud: "https://signin.aws.amazon.com/saml"
          Action:
          - "sts:AssumeRoleWithSAML"
          - "sts:TagSession"
          Effect: "Allow"
          Principal:
            Federated: "arn:aws:iam::343218203122:saml-provider/AWSSSO_1a32e06b3a2c2a2a_DO_NOT_DELETE"
  IAMRole00AWSServiceRoleForAmazonEMRServerless00jYJd9:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/aws-service-role/ops.emr-serverless.amazonaws.com/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/aws-service-role/AmazonEMRServerlessServiceRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "AWSServiceRoleForAmazonEMRServerless"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "ops.emr-serverless.amazonaws.com"
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRoleda83cadd73a94f6d8dffcc3788405fe000C3SYG:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-da83cadd-73a9-4f6d-8dff-cc3788405fe0"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-prod-genai-relevantdocs-216-v1:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgprodgenairelevantdocs216v1roleq5n41cwk00sEVxp"
      Users: []
  IAMRole00AWSServiceRoleForClientVPN006T55K:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/aws-service-role/clientvpn.amazonaws.com/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/aws-service-role/ClientVPNServiceRolePolicy"
      MaxSessionDuration: 3600
      RoleName: "AWSServiceRoleForClientVPN"
      Description: "Service Linked Role for Client VPN"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "clientvpn.amazonaws.com"
  LambdaFunction00sgprodgenaideleteobjects300UvJu4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Function"
    DeletionPolicy: "Retain"
    Properties:
      MemorySize: 128
      Description: ""
      TracingConfig:
        Mode: "PassThrough"
      VpcConfig:
        SecurityGroupIds:
        - "sg-02c2f03d3e7cd125f"
        SubnetIds:
        - Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00GtpLi"
        - Ref: "EC2Subnet00subnet0d1db15411089416b0025bgM"
        Ipv6AllowedForDualStack: false
      Timeout: 900
      RuntimeManagementConfig:
        UpdateRuntimeOn: "Auto"
      Handler: "lambda_function.lambda_handler"
      Code:
        SourceKMSKeyArn:
          Ref: "LambdaFunction00sgprodgenaideleteobjects300UvJu4CodeSourceKMSKeyArnfMUAo"
        S3ObjectVersion:
          Ref: "LambdaFunction00sgprodgenaideleteobjects300UvJu4CodeS3ObjectVersionqvjsy"
        S3Bucket:
          Ref: "LambdaFunction00sgprodgenaideleteobjects300UvJu4CodeS3BucketZMrqv"
        ZipFile:
          Ref: "LambdaFunction00sgprodgenaideleteobjects300UvJu4CodeZipFile8qunF"
        ImageUri:
          Ref: "LambdaFunction00sgprodgenaideleteobjects300UvJu4CodeImageUri4OoAb"
        S3Key:
          Ref: "LambdaFunction00sgprodgenaideleteobjects300UvJu4CodeS3KeyDHp8C"
      Role:
        Fn::GetAtt:
        - "IAMRole00sgprodgenaideleteobjects3role5jyencc400qDeqO"
        - "Arn"
      FileSystemConfigs: []
      FunctionName: "sg-prod-genai-deleteobject-s3"
      Runtime: "python3.12"
      PackageType: "Zip"
      LoggingConfig:
        LogFormat: "Text"
        LogGroup: "/aws/lambda/sg-prod-genai-deleteobject-s3"
      RecursiveLoop: "Terminate"
      EphemeralStorage:
        Size: 512
      Layers:
      - "arn:aws:lambda:ap-southeast-1:343218203122:layer:pymupdf:8"
      - "arn:aws:lambda:ap-southeast-1:580247275435:layer:LambdaInsightsExtension:53"
      Architectures:
      - "x86_64"
  EC2Instance00i0af21fb2531ca410d00f4MLz:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Instance"
    DeletionPolicy: "Retain"
    Properties:
      Tenancy: "default"
      SecurityGroups:
      - "GenAI-Pilot-Private-Tmicro-to-App"
      - "harith-ec2-sg"
      - "websocketDocDB"
      - "GenAI-Pilot-Private-Cvpn-to-App"
      PrivateIpAddress: "10.25.71.173"
      BlockDeviceMappings:
      - Ebs:
          SnapshotId: "snap-091bcb51d6f04afa9"
          VolumeType: "gp3"
          KmsKeyId:
            Fn::GetAtt:
            - "KMSKey00e0af6c3f73fc497e863a6754f0dce6b100kSC3X"
            - "Arn"
          Encrypted: true
          Iops: 3000
          VolumeSize: 20
          DeleteOnTermination: false
        DeviceName: "/dev/sda1"
      IamInstanceProfile:
        Ref: "IAMInstanceProfile00ec2adminaccess00awY8x"
      SubnetId:
        Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00GtpLi"
      EbsOptimized: true
      Volumes:
      - VolumeId: "vol-0c5c3a52ca610e455"
        Device: "/dev/sda1"
      NetworkInterfaces:
      - PrivateIpAddresses:
        - PrivateIpAddress: "10.25.71.173"
          Primary: true
        SecondaryPrivateIpAddressCount: 0
        DeviceIndex: "0"
        GroupSet:
        - Ref: "EC2SecurityGroup00sg07fd500f946aad8a200p0vJb"
        - Ref: "EC2SecurityGroup00sg018c8a78c89c0d40400HOaMM"
        - Ref: "EC2SecurityGroup00sg02a57c92533299fd5002bQaE"
        - Ref: "EC2SecurityGroup00sg0158898f4b43a0ae900nBPrb"
        Ipv6Addresses: []
        SubnetId:
          Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00GtpLi"
        AssociatePublicIpAddress: false
        NetworkInterfaceId:
          Ref: "EC2NetworkInterface00eni01f1da401b50eb80e00MzeKS"
        DeleteOnTermination: true
      ImageId: "ami-069abcf2c7dbce501"
      InstanceType: "t3.xlarge"
      Monitoring: false
      Tags:
      - Value: "ec2-jumpserver-nabil"
        Key: "Name"
      InstanceInitiatedShutdownBehavior: "stop"
      CpuOptions:
        ThreadsPerCore: 2
        CoreCount: 2
      AvailabilityZone: "ap-southeast-1b"
      PrivateDnsNameOptions:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      SecurityGroupIds:
      - "sg-07fd500f946aad8a2"
      - "sg-018c8a78c89c0d404"
      - "sg-02a57c92533299fd5"
      - "sg-0158898f4b43a0ae9"
      DisableApiTermination: false
      KeyName: "nabil-to-ec2pilot"
      SourceDestCheck: true
      PlacementGroupName: ""
      VpcId: "vpc-02790342fee4ebf9f"
      State:
        Code: "80"
        Name: "stopped"
      CreditSpecification:
        CPUCredits: "unlimited"
  IAMRole00sgprodgenairelevantdocsv1rolekqa8fjxd00c13SA:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-58c20211-8f38-49f0-84a5-1677bf626dcb"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-relevantdocs-v1-role-kqa8fjxd"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  EC2SecurityGroup00sg07401c0c33946a24100DAGOP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "Allows access to websocket server hosted in EC2 through port\
        \ 8000"
      GroupName: "WebsocketServerSecurityGroup"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00HMUI8"
      SecurityGroupIngress:
      - CidrIp: "211.25.63.2/32"
        IpProtocol: "tcp"
        FromPort: 8000
        ToPort: 8000
      - CidrIp: "10.25.71.180/32"
        IpProtocol: "tcp"
        FromPort: 8000
        ToPort: 8000
      SecurityGroupEgress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
  IAMRole00sgprodgenairetrievedocs216v1rolejq8qbell00VTLw3:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-ce99fdc2-7c23-4f63-a5e1-9e50ff4cfa91"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-retrievedocs-216-v1-role-jq8qbell"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMRole00sgtestgenaisummariserretrievetofrontendrolewko3izur00yoQOf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-dbb97032-5f9d-4666-89b6-df2f067143a1"
      MaxSessionDuration: 3600
      RoleName: "sg-test-genai-summariser-retrievetofrontend-role-wko3izur"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  LogsLogStream00FargateTelemetry105200h9qik:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1052"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogStream00FargateTelemetry104900CoY4c:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1049"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogGroup00awssagemakerEndpointsllama318binstruct2024082210232306200Loqe0:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/llama-3-1-8b-instruct-2024-08-22-10-23-23-062"
      DataProtectionPolicy: {}
  LogsLogStream00FargateTelemetry1020007S3mF:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1020"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogStream00291b11f92b7e3212d597996b6581386200eK6q6:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "291b11f92b7e3212d597996b65813862"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogStream002404f1364adaf8176d4a018e80a9f5b600k6qmw:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2404f1364adaf8176d4a018e80a9f5b6"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogStream00FargateTelemetry107600sJF6Q:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1076"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogGroup00awssagemakerEndpointsjumpstartdftllama318binstruct2024081604120800q7Zzq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-llama-3-1-8b-instruct-20240816-041208"
      DataProtectionPolicy: {}
  LogsLogStream0021859ec552ef92bce09c982789d966a100KCyDd:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "21859ec552ef92bce09c982789d966a1"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogGroup00ecsgenaitestfalaina00puanm:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/ecs/genai-test-falaina"
      DataProtectionPolicy: {}
  LogsLogStream000eb885ec4dfd107aabc97f9b850554c900WEbMS:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "0eb885ec4dfd107aabc97f9b850554c9"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogGroup00awssagemakerEndpointsllama318binstruct2024082016060069400EO2CC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/llama-3-1-8b-instruct-2024-08-20-16-06-00-694"
      DataProtectionPolicy: {}
  LogsLogStream001c4c36b0504f860cd0d994528a01fdb4007ppSN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1c4c36b0504f860cd0d994528a01fdb4"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogStream003407c478b9335e8b88fc85b84213dd1600ja8fp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "3407c478b9335e8b88fc85b84213dd16"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogGroup00awssagemakerEndpointsjumpstartdfthfsentencesimilarity2024082809295900AtWUR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-hf-sentencesimilarity-20240828-092959"
      DataProtectionPolicy: {}
  LogsLogStream00FargateTelemetry102200Fx6vl:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1022"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogStream00FargateTelemetry104100LjwwP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1041"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogStream00FargateTelemetry103800HtTQu:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1038"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogGroup00awssagemakerEndpointsllama318binstruct2024082206523204200bbo9n:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/llama-3-1-8b-instruct-2024-08-22-06-52-32-042"
      DataProtectionPolicy: {}
  LogsLogStream00183c49bc2cda6a645a0b3a14b0f7fa4400XaCJp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "183c49bc2cda6a645a0b3a14b0f7fa44"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogStream001e4180d20accc65bf8c274dc1552b667007vMif:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1e4180d20accc65bf8c274dc1552b667"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogGroup00awssagemakerEndpointsjumpstartdfthfsentencesimilarity2024082713235900WAOt4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-hf-sentencesimilarity-20240827-132359"
      DataProtectionPolicy: {}
  LogsLogStream00FargateTelemetry102300zjQ24:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1023"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogGroup00awslambdasgtestgenaisummariserpython31200IJcYM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-test-genai-summariser-python312"
      DataProtectionPolicy: {}
  LogsLogGroup00awssagemakerEndpointsjumpstartdftllama318binstruct2024082811335700MW7H1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-llama-3-1-8b-instruct-20240828-113357"
      DataProtectionPolicy: {}
  LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/apigateway/0u3tyeizfb/poc"
      DataProtectionPolicy: {}
  LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00hYDXx:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/DLQ-handler-sg-prod-genai-summariser"
      DataProtectionPolicy: {}
  LogsLogStream00FargateTelemetry107300eoxj4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1073"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogGroup00awssagemakerEndpointsllama318binstruct2024082017221649700R2RBT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/llama-3-1-8b-instruct-2024-08-20-17-22-16-497"
      DataProtectionPolicy: {}
  LogsLogStream000631239ede78c32d3788a2683bd07802007CHgp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "0631239ede78c32d3788a2683bd07802"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogGroup00awssagemakerEndpointsllama318binstruct2024082207502243400aFwoU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/llama-3-1-8b-instruct-2024-08-22-07-50-22-434"
      DataProtectionPolicy: {}
  LogsLogStream002531fcaed22a875e897ee7a3ff903b5500X7ghs:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2531fcaed22a875e897ee7a3ff903b55"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogGroup00awssagemakerEndpointsjumpstartdfthfsentencesimilarity20240830024401004kVKz:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-hf-sentencesimilarity-20240830-024401"
      DataProtectionPolicy: {}
  LambdaVersion00functionsgprodgenairagsummariser13002EpjX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Version"
    DeletionPolicy: "Retain"
    Properties:
      CodeSha256: "2adba7915b47c0ff69231265646ad4fe12b1b9b97a141f9a0db265cbcb1b285b"
      FunctionName: "sg-prod-genai-rag-summariser"
      Description: ""
  LogsLogGroup00awssagemakerEndpointsjumpstartdfthfsentencesimilarity2024081502424300RPk09:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-hf-sentencesimilarity-20240815-024243"
      DataProtectionPolicy: {}
  LogsLogGroup00awssagemakerEndpointsjumpstartdfthfsentencesimilarity2024082809221400AYIsz:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-hf-sentencesimilarity-20240828-092214"
      DataProtectionPolicy: {}
  LogsLogStream002024093005333500kGxK0:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024-09-30_05-33-35"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigatewaywelcome00pQu7a"
  LogsLogGroup00awssagemakerEndpointshfsentencesimilaritybgem32024091708162997900Pt2VB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/hf-sentencesimilarity-bge-m3-2024-09-17-08-16-29-979"
      DataProtectionPolicy: {}
  LogsLogStream0039f951c1cf5fdf6af7ff636867bd793c00aGgBu:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "39f951c1cf5fdf6af7ff636867bd793c"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogStream00388e80f6a029c91187016844f44fe85f00x6avD:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "388e80f6a029c91187016844f44fe85f"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogStream002327b1436dc225229a5a72d8a738dcc5008FcWW:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2327b1436dc225229a5a72d8a738dcc5"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb003DocG:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-genai-checkcredsdocdb"
      DataProtectionPolicy: {}
  LogsLogGroup00awslambdasgprodgenaicategoriser217v100QO6EK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-genai-categoriser-217-v1"
      DataProtectionPolicy: {}
  LogsLogStream0015ecd10eae0341e8ef936236394b28ec00wtrmf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "15ecd10eae0341e8ef936236394b28ec"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00Vkts3:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/vpc/GenAI-Pilot-VPC-Flow-Log"
      DataProtectionPolicy: {}
  LogsLogGroup00awslambdatestretrieves3metadata00eBEM3:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/test-retrieve-s3-metadata"
      DataProtectionPolicy: {}
  LogsLogStream00ClusterTelemetryGenAIPilotFargate007Ti7M:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ClusterTelemetry-GenAI-Pilot-Fargate"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LambdaVersion00functionsgprodgenairagsummariser1900Q0BEf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Version"
    DeletionPolicy: "Retain"
    Properties:
      CodeSha256: "565e3cb0849ac3cc3e2acc53eb1b13186e30f72aea6b2ace7c74eb19c37f862f"
      FunctionName: "sg-prod-genai-rag-summariser"
      Description: ""
  LogsLogStream00FargateTelemetry1074006V3Oo:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1074"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogStream00FargateTelemetry100500WWZqE:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1005"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogStream0012dbcd4280ab48add3110b59177ef6d500HUq5R:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "12dbcd4280ab48add3110b59177ef6d5"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogStream001d920b7c3fc19093d570eace0eda26d300xbPea:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1d920b7c3fc19093d570eace0eda26d3"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogGroup00awslambdasgprodgenaipresignedurls3005QrCC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-genai-presignedurl-s3"
      DataProtectionPolicy: {}
  LogsLogGroup00awslambdasgwssgetCategories00eV0ZF:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-wss-getCategories"
      DataProtectionPolicy: {}
  LogsLogGroup00awslambdasgprodapigwapikeyauthorizer004AqSH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-apigw-apikey-authorizer"
      DataProtectionPolicy: {}
  LogsLogStream00FargateTelemetry1072008K4Xe:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1072"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogStream0008a0a496cdb2120b637e94255d9bd68300cY3zL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "08a0a496cdb2120b637e94255d9bd683"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogGroup00awssagemakerEndpointsllama318binstruct2024082016371602200v45gM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/llama-3-1-8b-instruct-2024-08-20-16-37-16-022"
      DataProtectionPolicy: {}
  LogsLogStream00FargateTelemetry103900UN4WQ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1039"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogGroup00awssagemakerEndpointsjumpstartdftllama318binstruct2024081607141500O1dC0:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-llama-3-1-8b-instruct-20240816-071415"
      DataProtectionPolicy: {}
  LogsLogStream00FargateTelemetry102100pbWEc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1021"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogStream0022fbca6de8d655eccfbc537cefb7a1da00DH1Bn:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "22fbca6de8d655eccfbc537cefb7a1da"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogGroup00awssagemakerEndpointsjumpstartdfthfsentencesimilarity2024082808452000gYBzy:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-hf-sentencesimilarity-20240828-084520"
      DataProtectionPolicy: {}
  LogsLogStream00FargateTelemetry1078008at4W:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1078"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogStream00FargateTelemetry101700bTPZk:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1017"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogGroup00awssagemakerEndpointsjumpstartdfthfsentencesimilarity2024082808275700jEcia:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-hf-sentencesimilarity-20240828-082757"
      DataProtectionPolicy: {}
  LambdaVersion00functionsgprodgenairagsummariser12007LXZm:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Version"
    DeletionPolicy: "Retain"
    Properties:
      CodeSha256: "08fd962d9331f5bc91f8450616f34f05ebed6928fe9115c05516ba0a189954ee"
      FunctionName: "sg-prod-genai-rag-summariser"
      Description: ""
  LogsLogGroup00testwebsocket00PNCRR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "test-websocket"
      DataProtectionPolicy: {}
  LogsLogStream00FargateTelemetry1055007qlwy:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1055"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogStream00FargateTelemetry1006003ltsA:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1006"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogStream00FargateTelemetry106200e4Tyz:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1062"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogGroup00awslambdatests3behindnacl00kU7fe:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/test-s3-behind-nacl"
      DataProtectionPolicy: {}
  LogsLogStream001b05bec5d3b62a90d6f89295b87aa13400x9Tpx:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1b05bec5d3b62a90d6f89295b87aa134"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogStream0014663423467ec171613ea6e95650ed6800hGE4k:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "14663423467ec171613ea6e95650ed68"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogGroup00awslambdapocwebsocketdisconnect005XtGP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/poc-websocket-disconnect"
      DataProtectionPolicy: {}
  LogsLogGroup00awslambdasgwssconnect00vIM6q:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-wss-connect"
      DataProtectionPolicy: {}
  LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00fQ1dQ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/TO_BE_DELETED-test_function_sqs"
      DataProtectionPolicy: {}
  LogsLogStream0003380c093dc9d1e2284ad31eb244611000ivD0b:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "03380c093dc9d1e2284ad31eb2446110"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogGroup00awslambdapocwebsocketclient00jSF8V:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/poc-websocket-client"
      DataProtectionPolicy: {}
  LogsLogStream0039714862e855779c8b7ac73e50f0bc6b00MJA3U:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "39714862e855779c8b7ac73e50f0bc6b"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogStream001589c3368ffaffb37914397cbf1d072e000bKUS:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1589c3368ffaffb37914397cbf1d072e"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00bkuHS:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-test-genai-summariser-retrievetofrontend"
      DataProtectionPolicy: {}
  LogsLogStream00FargateTelemetry101800xrBM8:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1018"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogStream00FargateTelemetry103100vd0bM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1031"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogStream0014fe2b8dd2b6bd1415fb18420cfe156600meDEl:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "14fe2b8dd2b6bd1415fb18420cfe1566"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogStream0006215159bceeceb08a38c708b8d3cc7900ElzI6:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "06215159bceeceb08a38c708b8d3cc79"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogGroup00awssagemakerEndpointsllama318binstruct2024082306151625000lGEra:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/llama-3-1-8b-instruct-2024-08-23-06-15-16-250"
      DataProtectionPolicy: {}
  LogsLogGroup00awsapigatewaywelcome00pQu7a:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/apigateway/welcome"
      DataProtectionPolicy: {}
  LogsLogGroup00awslambdasgwssdisconnect00cxCjh:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-wss-disconnect"
      DataProtectionPolicy: {}
  LogsLogStream00FargateTelemetry10800is5Wx:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-108"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogGroup00awssagemakerEndpointsllama318binstruct2024082303283939100b6LLc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/llama-3-1-8b-instruct-2024-08-23-03-28-39-391"
      DataProtectionPolicy: {}
  LogsLogGroup00awslambdasgprodgenairagsummariser00x9di9:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-genai-rag-summariser"
      DataProtectionPolicy: {}
  LogsLogStream00FargateTelemetry100100Ceph3:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1001"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogStream002024092807305300QsyB7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024-09-28_07-30-53"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigatewaywelcome00pQu7a"
  LogsLogGroup00awslambdapocwebsocketdefault00QMuQs:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/poc-websocket-default"
      DataProtectionPolicy: {}
  LogsLogGroup00awslambdatestwebsocketConnect00SARMa:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/test-websocketConnect"
      DataProtectionPolicy: {}
  LogsLogStream001debd410c0cc33438648235b76b6ee8f00wYRSg:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1debd410c0cc33438648235b76b6ee8f"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogStream00132a2adac6cc260462bd92c61a18765800zFWOs:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "132a2adac6cc260462bd92c61a187658"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogGroup00awslambdaSecretsManagergenaiprodauthdbv2autorotate00hIe5O:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/SecretsManagergenai-prod-authdbv2-auto-rotate"
      DataProtectionPolicy: {}
  LogsLogStream00FargateTelemetry10300vUmMD:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-103"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogGroup00awslambdasgprodgenaiembeddingsgmkr00vMxVu:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-genai-embedding-sgmkr"
      DataProtectionPolicy: {}
  LogsLogStream00FargateTelemetry109300Z00qP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1093"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogStream00357a0faa6ecd8bb7d82da1fb7d39e45300nLx1Z:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "357a0faa6ecd8bb7d82da1fb7d39e453"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogStream00FargateTelemetry1067005l1ci:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1067"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogGroup00awslambdasgprodgenaideleteobjects300tDUld:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-genai-deleteobject-s3"
      DataProtectionPolicy: {}
  LambdaVersion00functionsgprodgenairagsummariser220030G1F:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Version"
    DeletionPolicy: "Retain"
    Properties:
      CodeSha256: "5b17ffd8dc726ca80798bf5d24edee4f2a7defe7dc23b1068a0016f25acb910b"
      FunctionName: "sg-prod-genai-rag-summariser"
      Description: ""
  LambdaVersion00functionsgprodgenairagsummariser2100LWqnN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Version"
    DeletionPolicy: "Retain"
    Properties:
      CodeSha256: "987271d3e381b7ba51a0264cf4557d8248336849ff07c17997c383ef380cd2a6"
      FunctionName: "sg-prod-genai-rag-summariser"
      Description: ""
  LogsLogStream00FargateTelemetry103400nDtKy:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1034"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogStream003795513c0ac0ca6ce2ed7084a5a4dc5500jgWrt:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "3795513c0ac0ca6ce2ed7084a5a4dc55"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogGroup00awssagemakerEndpointsjumpstartdftllama318binstruct2024081408024000sOkbi:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-llama-3-1-8b-instruct-20240814-080240"
      DataProtectionPolicy: {}
  LogsLogStream00FargateTelemetry1086000s5wp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1086"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogStream00FargateTelemetry106400uiBlF:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1064"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogStream00FargateTelemetry102400zZWLj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1024"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LambdaVersion00functionsgtestgenaisummariserretrievetofrontend100UOail:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Version"
    DeletionPolicy: "Retain"
    Properties:
      FunctionName: "sg-test-genai-summariser-retrievetofrontend"
      Description: "V2"
      RuntimePolicy:
        UpdateRuntimeOn: "Auto"
      CodeSha256: "/f7CRq1Uk9elN2u+Q/i0EqvO2/VXRx/c/i45EG7FZ48="
  LogsLogGroup00awssagemakerstudio00BeC3H:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/studio"
      DataProtectionPolicy: {}
  LogsLogGroup00awssagemakerEndpointsllama318binstruct2024082116214806700YzbsU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/llama-3-1-8b-instruct-2024-08-21-16-21-48-067"
      DataProtectionPolicy: {}
  LambdaVersion00functionsgprodgenairagsummariser200mRQSA:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Version"
    DeletionPolicy: "Retain"
    Properties:
      CodeSha256: "4c555de70565dc7ed7439d95e223c6520c92eb838549e1e516bbe398d7967c00"
      FunctionName: "sg-prod-genai-rag-summariser"
      Description: ""
  LogsLogGroup00awssagemakerEndpointshfsentencesimilaritybgem32024081604164019200IzNHf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/hf-sentencesimilarity-bge-m3-2024-08-16-04-16-40-192"
      DataProtectionPolicy: {}
  LambdaVersion00functionsgprodgenairagsummariser400mHQPT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Version"
    DeletionPolicy: "Retain"
    Properties:
      CodeSha256: "f1105cf03aa512494f9491b5a7675e2ee5e21b04d6b18e73bc638ee6fd8d424d"
      FunctionName: "sg-prod-genai-rag-summariser"
      Description: ""
  LogsLogGroup00ecsgenaipilot00ZxzJx:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/ecs/genaipilot"
      DataProtectionPolicy: {}
  LogsLogStream0005708a0bc628308e002d8a9ddc11519000vY8RF:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "05708a0bc628308e002d8a9ddc115190"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogGroup00awslambdasgtestasyncoutputretrieve00GME5M:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-test-async-output-retrieve"
      DataProtectionPolicy: {}
  LogsLogGroup00awslambdahelloworld00awaYL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/hello-world"
      DataProtectionPolicy: {}
  LogsLogGroup00awslambdaTBDdummylambdapython31200UB6v5:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/TBD-dummy-lambda-python312"
      DataProtectionPolicy: {}
  LogsLogGroup00awssagemakerEndpointsjumpstartdfthfsentencesimilarity2024081404134200nGUGK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-hf-sentencesimilarity-20240814-041342"
      DataProtectionPolicy: {}
  LogsLogGroup00awssagemakerEndpointsjumpstartdfthfsentencesimilarity2024081403283700YKEIA:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-hf-sentencesimilarity-20240814-032837"
      DataProtectionPolicy: {}
  LogsLogGroup00awslambdatestuploads300psXNJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/test-upload-s3"
      DataProtectionPolicy: {}
  LogsLogGroup00awslambdapocwebsocketsendMessageSQS00tfCTy:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/poc-websocket-sendMessageSQS"
      DataProtectionPolicy: {}
  LogsLogStream00FargateTelemetry106500PVhbr:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1065"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LambdaVersion00functionsgprodgenairagsummariser1600j6A0p:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Version"
    DeletionPolicy: "Retain"
    Properties:
      CodeSha256: "34d384ef09b7a7c53fded624539c40630a5820f06890bca7c8d6cca7c8a2dbd7"
      FunctionName: "sg-prod-genai-rag-summariser"
      Description: ""
  LogsLogStream001db49d9237ca2607ee6398fa30ffb04a00cByz3:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1db49d9237ca2607ee6398fa30ffb04a"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogGroup00awssagemakerEndpointsjumpstartdftllama318binstruct2024081303261300pxsMl:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-llama-3-1-8b-instruct-20240813-032613"
      DataProtectionPolicy: {}
  LogsLogGroup00awslambdasgprodgenaisummariser004qQRB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-genai-summariser"
      DataProtectionPolicy: {}
  LogsLogStream00FargateTelemetry105300zKKIx:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1053"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogStream001772cae1b84aadde33e7543fb4b5bc2e00FAYrh:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1772cae1b84aadde33e7543fb4b5bc2e"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogStream00FargateTelemetry102900pGOTj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1029"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogStream00FargateTelemetry106000InhUe:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1060"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogGroup00awssagemakerEndpointsjumpstartdfthfsentencesimilarity2024083002254000UEcj2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-hf-sentencesimilarity-20240830-022540"
      DataProtectionPolicy: {}
  LogsLogStream00FargateTelemetry108700IJpYs:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1087"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogGroup00awssagemakerEndpointsjumpstartdfthfsentencesimilarity2024082803192400isNCH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-hf-sentencesimilarity-20240828-031924"
      DataProtectionPolicy: {}
  LogsLogGroup00awssagemakerEndpointsllama318binstruct2024082201251476800o4ocU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/llama-3-1-8b-instruct-2024-08-22-01-25-14-768"
      DataProtectionPolicy: {}
  LambdaVersion00functionsgprodgenairagsummariser6004VfSM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Version"
    DeletionPolicy: "Retain"
    Properties:
      CodeSha256: "5ec8f5ab313e4c167f1d38a984ffed696723f0553aaf4d22109198c8e854d876"
      FunctionName: "sg-prod-genai-rag-summariser"
      Description: ""
  LogsLogStream0037271254eb6bb1d7f5c688de92c052ee00GXOGH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "37271254eb6bb1d7f5c688de92c052ee"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogStream002248a20affc1ddd396ed7d20605212e80070TtC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2248a20affc1ddd396ed7d20605212e8"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogGroup00awssagemakerEndpointsllama318binstruct2024081606531794700CNK85:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/llama-3-1-8b-instruct-2024-08-16-06-53-17-947"
      DataProtectionPolicy: {}
  LogsLogStream00FargateTelemetry108100NMVSl:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1081"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogStream001569f33184a72533979e0d1d9f9e99fa00l9cVy:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1569f33184a72533979e0d1d9f9e99fa"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogStream00FargateTelemetry104200Y4y53:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1042"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogStream00FargateTelemetry10700kpHOj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-107"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogGroup00awscvpnsession00Xhj5n:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "INFREQUENT_ACCESS"
      RetentionInDays: 14
      LogGroupName: "/aws/cvpn/session"
      DataProtectionPolicy: {}
  LogsLogGroup00awslambdapocwebsocketconnect003TASV:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/poc-websocket-connect"
      DataProtectionPolicy: {}
  LogsLogStream003a6e39f451db564edd677cb74c4d7ca900KQWWq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "3a6e39f451db564edd677cb74c4d7ca9"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogGroup00awssagemakerEndpointsllama318binstruct2024082302510776700pBNic:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/llama-3-1-8b-instruct-2024-08-23-02-51-07-767"
      DataProtectionPolicy: {}
  LogsLogStream00FargateTelemetry1091008w4C2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1091"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogStream001810faf10b3e5bb3dda3945a8776c79e00O5iuI:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1810faf10b3e5bb3dda3945a8776c79e"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogGroup00awssagemakerEndpointsllama318binstruct2024081307522753800ypoGb:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/llama-3-1-8b-instruct-2024-08-13-07-52-27-538"
      DataProtectionPolicy: {}
  LogsLogStream00247c5651e176ef27f26a4624b6cc8ee300kDw87:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "247c5651e176ef27f26a4624b6cc8ee3"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogGroup00awssagemakerEndpointsllama318binstruct2024081603495561600IfprI:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/llama-3-1-8b-instruct-2024-08-16-03-49-55-616"
      DataProtectionPolicy: {}
  LogsLogStream00FargateTelemetry101600n8zCu:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1016"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogStream0027b41feabca0a5f4d069b30d981c1a4800QQ4y4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "27b41feabca0a5f4d069b30d981c1a48"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogStream00FargateTelemetry102700fEQ2V:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1027"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LambdaVersion00functionsgprodgenairagsummariser1500GzKgK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Version"
    DeletionPolicy: "Retain"
    Properties:
      CodeSha256: "9f1e029865102d41b672a6786f99dca3372164a33e13f78c380086b2de613043"
      FunctionName: "sg-prod-genai-rag-summariser"
      Description: ""
  LogsLogGroup00awslambdapocwebsocketbroadcast00fYVSx:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/poc-websocket-broadcast"
      DataProtectionPolicy: {}
  LogsLogGroup00awslambdasgtestasyncoutputgenerator003NoWR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-test-async-output-generator"
      DataProtectionPolicy: {}
  LogsLogGroup00awssagemakerEndpointsllama318binstruct00lCKnA:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/llama3-1-8b-instruct"
      DataProtectionPolicy: {}
  LogsLogGroup00testpublicrestapi00wib2u:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "test-public-rest-api"
      DataProtectionPolicy: {}
  LogsLogStream000759008121673c9da9be160a5a399a8900phR9z:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "0759008121673c9da9be160a5a399a89"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00bTS1t:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-test-genai-summariser-deletechatfunction"
      DataProtectionPolicy: {}
  LogsLogGroup00awslambdaStartEC2Instances00XxmJz:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/StartEC2Instances"
      DataProtectionPolicy: {}
  LogsLogStream00cvpnendpoint03fd081ad28a64f66apsoutheast120241210RQDptBHpvLwY00nvgDE:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "cvpn-endpoint-03fd081ad28a64f66-ap-southeast-1-2024/12/10-RQDptBHpvLwY"
      LogGroupName:
        Ref: "LogsLogGroup00awscvpnsession00Xhj5n"
  LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp1004eBka:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "API-Gateway-Execution-Logs_5nwb46kira/prod-mvp1"
      DataProtectionPolicy: {}
  LogsLogStream000b76fce51816b44a15f5e384f51981880083TCD:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "0b76fce51816b44a15f5e384f5198188"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogStream003b5845bf0da7f45d13250a5895334ce200TsmQ8:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "3b5845bf0da7f45d13250a5895334ce2"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogGroup00awssagemakerEndpointshfsentencesimilaritybgem32024091708245113400rc4Dy:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/hf-sentencesimilarity-bge-m3-2024-09-17-08-24-51-134"
      DataProtectionPolicy: {}
  LogsLogStream002c926a7c8526bb536f5e819958e745e500XzJL4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2c926a7c8526bb536f5e819958e745e5"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogStream003d589a232da4a6e76a3204d23681a30f00nnTAe:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "3d589a232da4a6e76a3204d23681a30f"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LambdaVersion00functionpocwebsocketsendMessageSQS100Py0xT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Version"
    DeletionPolicy: "Retain"
    Properties:
      FunctionName: "poc-websocket-sendMessageSQS"
      Description: "Using AWS Websocket API Gateway"
      RuntimePolicy:
        UpdateRuntimeOn: "Auto"
      CodeSha256: "q7SJaydVf0PwW3iUSuXdh8/7/NROH/KHy3E9Vjke5mY="
  LogsLogStream0015f40a2d86cdc774597005a6a8851e5900ZuSJL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "15f40a2d86cdc774597005a6a8851e59"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogGroup00ecsdevcontainernodejs2000spCAd:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/ecs/devcontainer-nodejs20"
      DataProtectionPolicy: {}
  LambdaVersion00functionpocwebsocketsendMessageSQS200PimgI:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Version"
    DeletionPolicy: "Retain"
    Properties:
      FunctionName: "poc-websocket-sendMessageSQS"
      Description: "Using FastAPI"
      RuntimePolicy:
        UpdateRuntimeOn: "Auto"
      CodeSha256: "yEs6I4wo4PA+J7aGfLDDiQxSRlWrdhgghuqUFeE/jf4="
  LogsLogStream00FargateTelemetry1002003mWUj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1002"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogStream001504add2649fe3c7e0466bd428e617de00JjdVT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1504add2649fe3c7e0466bd428e617de"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogGroup00awslambdacheckpythonversion003PjSc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/check-python-version"
      DataProtectionPolicy: {}
  LogsLogGroup00awslambdapocwebsocketsendmessage00eWNRP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/poc-websocket-send-message"
      DataProtectionPolicy: {}
  LogsLogStream002f0e77900220d51303eeb1860318c3cc006kb1F:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2f0e77900220d51303eeb1860318c3cc"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogGroup00awssagemakerEndpointsjumpstartdfthfsentencesimilarity2024081408520700xjH5E:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-hf-sentencesimilarity-20240814-085207"
      DataProtectionPolicy: {}
  LogsLogGroup00awssagemakerEndpointsjumpstartdftllama318binstruct2024081308372700ZVElu:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-llama-3-1-8b-instruct-20240813-083727"
      DataProtectionPolicy: {}
  LogsLogStream000c057f98a8217998d2bcb01346356114007Rh4v:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "0c057f98a8217998d2bcb01346356114"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogGroup00awslambdaStopEC2Instances00hOdBE:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/StopEC2Instances"
      DataProtectionPolicy: {}
  LogsLogStream00FargateTelemetry107100rr51A:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1071"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogStream00FargateTelemetry103000jS06u:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1030"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogGroup00awslambdatestpocwebsocketclient00CarTS:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/test-poc-websocket-client"
      DataProtectionPolicy: {}
  LogsLogStream001bd9fc7c4f27fcc4c0bc588685105d0800r0e5G:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1bd9fc7c4f27fcc4c0bc588685105d08"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogStream00FargateTelemetry104300aopwA:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1043"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogGroup00awslambdasgprodgenais3triggertutorial00wUiTu:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-genai-s3-trigger-tutorial"
      DataProtectionPolicy: {}
  LogsLogGroup00awssagemakerEndpointshfsentencesimilaritybgem32024090504234917900xLzo2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/hf-sentencesimilarity-bge-m3-2024-09-05-04-23-49-179"
      DataProtectionPolicy: {}
  LogsLogStream00315b9d8fa2b60b8710d2aae953554b3200CGKuB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "315b9d8fa2b60b8710d2aae953554b32"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00RBjqs"
  LogsLogGroup00awssagemakerNotebookInstances00Iqcow:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/NotebookInstances"
      DataProtectionPolicy: {}
  LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      RetentionInDays: 1
      LogGroupName: "/aws/ecs/containerinsights/GenAI-Pilot-Fargate/performance"
      DataProtectionPolicy: {}
  LogsLogStream00FargateTelemetry108500xSTOC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1085"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00b32Ms"
  LogsLogStream0020240828LATESTa0b9cef1ec3d44b2ae49f7bd002130c500ckfFW:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/28/[$LATEST]a0b9cef1ec3d44b2ae49f7bd002130c5"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser00dsJC0"
  LogsLogStream0020241004LATEST0bd00ac6b75449b4a4cfe5735adb2d9100wWykX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]0bd00ac6b75449b4a4cfe5735adb2d91"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS00AkCZp"
  LogsLogStream0020240929LATESTdeca265c2af84352838d2813e61af32900N5W9A:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/29/[$LATEST]deca265c2af84352838d2813e61af329"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendmessage00Y4dYS"
  LogsLogStream0020240812LATESTbc06ee371a174dfe98a4cf7262c43e6b00bCxA1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/12/[$LATEST]bc06ee371a174dfe98a4cf7262c43e6b"
      LogGroupName: "/aws/lambda/sg-wss-connect"
  LogsLogStream0020241002LATESTd78b99cc1000438699853972d39d883a00pt2FO:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/02/[$LATEST]d78b99cc1000438699853972d39d883a"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendmessage00Y4dYS"
  LogsLogStream00FargateTelemetry108100M7L5R:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1081"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00tAuko"
  LogsLogStream00FargateTelemetry107600A7Fcq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1076"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00tAuko"
  LogsLogStream0020240923LATESTf5d7b2de20364d66bc9343706d4d73cb00XqJwR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/23/[$LATEST]f5d7b2de20364d66bc9343706d4d73cb"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00Rs0Pk"
  LogsLogStream00eni00228eb4db19aba33all00Pv2Xi:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-00228eb4db19aba33-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00WPfyW"
  LogsLogStream00sgprodgenaideleteobjects373xdCK2FXYXd5ZUypmxYkUVls00Fd7oL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/73xdCK2FXYXd5ZUypmxYkUVls"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream00sgprodgenaideleteobjects30zlv3ahIn6Fkz6cSCXrGpYTsQ00CeD59:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/0zlv3ahIn6Fkz6cSCXrGpYTsQ"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream00sgprodgenaideleteobjects315ZpsXVjLS7bbukWU4GYI5jDq00yEwO2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/15ZpsXVjLS7bbukWU4GYI5jDq"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream001c4c36b0504f860cd0d994528a01fdb400fv2f3:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1c4c36b0504f860cd0d994528a01fdb4"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00Vy92E"
  LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs0090zsx:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/TO_BE_DELETED-test_function_sqs"
      DataProtectionPolicy: {}
  LogsLogStream005bz5602exbprodmvp120241206095300I6gfn:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "5bz5602exb_prod-mvp1-2024-12-06-09-53"
      LogGroupName:
        Ref: "LogsLogGroup00testpublicrestapi00r2i1l"
  LogsLogStream00sgprodgenaideleteobjects35VN0jpouZRuXlR6m4IaAaSzrN00t6ZGZ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/5VN0jpouZRuXlR6m4IaAaSzrN"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream002de57f06ce5011d698dd51fc084a3aae00soLRB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2de57f06ce5011d698dd51fc084a3aae"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00YeXG9"
  LogsLogStream0020241001LATESTc279ea3245ad45a6a59bf5c99299998e00LhSX5:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]c279ea3245ad45a6a59bf5c99299998e"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00WE31l"
  LogsLogStream0020240905LATESTb186bd236aa041478750b094fdd09c6900y3upr:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/05/[$LATEST]b186bd236aa041478750b094fdd09c69"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls300bVcyB"
  LogsLogStream0020241011LATESTc98bde974b0a4a19b8c7de1be2b5d068000q2Te:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/11/[$LATEST]c98bde974b0a4a19b8c7de1be2b5d068"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00WE31l"
  LogsLogStream0020241009LATESTa47f57cb32ae43748d5492dfb6d6777800Vw52r:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/09/[$LATEST]a47f57cb32ae43748d5492dfb6d67778"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300QGMeb"
  LogsLogGroup00awslambdapocwebsocketdisconnect006MSOU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/poc-websocket-disconnect"
      DataProtectionPolicy: {}
  LogsLogStream00cvpnendpoint03fd081ad28a64f66apsoutheast120241210RQDptBHpvLwY00aGXQZ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "cvpn-endpoint-03fd081ad28a64f66-ap-southeast-1-2024/12/10-RQDptBHpvLwY"
      LogGroupName:
        Ref: "LogsLogGroup00awscvpnsession00AzLse"
  LogsLogStream0020241128LATESTb848a68941a045079b095134eda30ce200ZLWbB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/11/28/[$LATEST]b848a68941a045079b095134eda30ce2"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStartEC2Instances00vtQG3"
  LogsLogStream0020240909LATEST57592eb168234800a12cbfafb4aa4f5e00N9k3q:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]57592eb168234800a12cbfafb4aa4f5e"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs0090zsx"
  LogsLogStream00sgprodgenaideleteobjects31XKN2eMDOFYsqZ0TnlKTmafcm000oJ8a:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/1XKN2eMDOFYsqZ0TnlKTmafcm"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream00AllTraffici0e1a8a07b9ecec2c100E1iJf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-0e1a8a07b9ecec2c1"
      LogGroupName: "/aws/sagemaker/Endpoints/llama-3-1-8b-instruct-2024-08-22-06-52-32-042"
  LogsLogGroup00ecsgenaipilot00rGncw:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/ecs/genaipilot"
      DataProtectionPolicy: {}
  LogsLogStream0020240912LATEST73dfa8a1c87244c0b5a8e20e298f1fca00NYrqf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/12/[$LATEST]73dfa8a1c87244c0b5a8e20e298f1fca"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00T3TF0"
  LogsLogStream0020241001LATEST21423202574b4e3a91ed3517a5921cfa00oYR77:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]21423202574b4e3a91ed3517a5921cfa"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect001jUqa"
  LogsLogStream00AllTraffici0a74a88070ffb10f400gaqx1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-0a74a88070ffb10f4"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointsjumpstartdftllama318binstruct2024081308372700lq5Oh"
  LogsLogGroup00awssagemakerEndpointsjumpstartdfthfsentencesimilarity2024082809221400aWdQ5:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-hf-sentencesimilarity-20240828-092214"
      DataProtectionPolicy: {}
  LogsLogStream00sgprodgenaideleteobjects32YtLTE2Uz1OpgEOSFH1vnY6BO00zgjOJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/2YtLTE2Uz1OpgEOSFH1vnY6BO"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream0001535b97cfa2f2c5278e1641f55433f500vxAEX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "01535b97cfa2f2c5278e1641f55433f5"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100iOCET"
  LogsLogStream00ecsgenaifrontend2aa02a7fa8b940ff964da2845f64ce8a00Mdc80:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/2aa02a7fa8b940ff964da2845f64ce8a"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00rGncw"
  LogsLogStream00ClusterTelemetryGenAIPilotFargate00yGQQf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ClusterTelemetry-GenAI-Pilot-Fargate"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00tAuko"
  LogsLogStream00ecsgenaifrontend35d19d2815104a09acb892ac2429fb4200W4mnG:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/35d19d2815104a09acb892ac2429fb42"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00rGncw"
  LogsLogGroup00awslambdaStopEC2Instances006NYIU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/StopEC2Instances"
      DataProtectionPolicy: {}
  LogsLogStream0020240821LATESTc53f402448674f7eb33769baa3b7085900X3Afb:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/21/[$LATEST]c53f402448674f7eb33769baa3b70859"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenais3triggertutorial00Sly17"
  LogsLogStream000038ae71f61070a620cd6ccf4d8bb0f500AGQvb:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "0038ae71f61070a620cd6ccf4d8bb0f5"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100iOCET"
  LogsLogStream00sgprodgenaideleteobjects31IyJ36NmnCiInLujkznOgXNke00ztMI7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/1IyJ36NmnCiInLujkznOgXNke"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream0020241002LATEST867131aae46c4d5bb803012b24d4ef8100PBMjH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/02/[$LATEST]867131aae46c4d5bb803012b24d4ef81"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00Rs0Pk"
  LogsLogStream0020241018LATESTaf6cf4a027ce4cda90ec148d328ea88d00yczP3:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/18/[$LATEST]af6cf4a027ce4cda90ec148d328ea88d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenais3triggertutorial00Sly17"
  LogsLogStream0020241014LATESTbbaad39fc0b64c08a5616e7e2f3da67800Da3tQ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/14/[$LATEST]bbaad39fc0b64c08a5616e7e2f3da678"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00WE31l"
  LogsLogStream0020241004LATESTe125b47490c34f3fa3a3d48f9b4bdd2700xXmIj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]e125b47490c34f3fa3a3d48f9b4bdd27"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect006MSOU"
  LogsLogStream0020241009LATESTeae7eed7b23645fea3df8974c007520b00M1kLq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/09/[$LATEST]eae7eed7b23645fea3df8974c007520b"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser00sw3Ga"
  LogsLogStream0020240909LATEST52129be42c3b408fbd65f25700e44b0600nbZIv:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]52129be42c3b408fbd65f25700e44b06"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs0090zsx"
  LogsLogStream00sgprodgenaideleteobjects30KzdWZ5k9h3eKJYJ1pP0NxR6800A3Pxy:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/0KzdWZ5k9h3eKJYJ1pP0NxR68"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream0020240822LATESTdb593910158d475d9ff76a33aa0db04d00gT4xA:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/22/[$LATEST]db593910158d475d9ff76a33aa0db04d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdatests3behindnacl00noMmX"
  LogsLogStream00sgprodgenaideleteobjects30izWfP4trT5fQOBjzZRajmYGM00Yr1c4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/0izWfP4trT5fQOBjzZRajmYGM"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogGroup00awslambdainsights00IIAli:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda-insights"
      DataProtectionPolicy: {}
  LogsLogStream0020240905LATEST3cddbf88059c4f80a5981f7d092a366700FS4CT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/05/[$LATEST]3cddbf88059c4f80a5981f7d092a3667"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestasyncoutputretrieve00XRCBd"
  LogsLogStream00eni014c9509801e65b38all00b5ZkL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-014c9509801e65b38-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00WPfyW"
  LogsLogStream001772cae1b84aadde33e7543fb4b5bc2e004tcAN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1772cae1b84aadde33e7543fb4b5bc2e"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00Vy92E"
  LogsLogStream00sgprodgenaideleteobjects37B8Hr6Lds2unkfkUMUFsgph2400nh88L:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/7B8Hr6Lds2unkfkUMUFsgph24"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream0039f951c1cf5fdf6af7ff636867bd793c006KzBp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "39f951c1cf5fdf6af7ff636867bd793c"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00Vy92E"
  LogsLogStream003016cd21170ba20069fb6ca852d4246100IZs4l:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "3016cd21170ba20069fb6ca852d42461"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00YeXG9"
  LogsLogStream0020241008LATEST292c84b0b61344568c3d0c916ad1052800cfHNN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/08/[$LATEST]292c84b0b61344568c3d0c916ad10528"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdefault00KGcdh"
  LogsLogStream00sgprodgenaideleteobjects33gSWLzEr8xrA2bSdnWXYRRtYx00VPzJt:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/3gSWLzEr8xrA2bSdnWXYRRtYx"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream0020240909LATEST06c057e39bed4ae7915cd8b847a4faa000Naf14:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]06c057e39bed4ae7915cd8b847a4faa0"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs0090zsx"
  LogsLogStream0020241203LATEST4fa0225d406d4d54ba54b51319d6e53200JV3h6:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/03/[$LATEST]4fa0225d406d4d54ba54b51319d6e532"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStopEC2Instances006NYIU"
  LogsLogStream0020241004LATEST0a39d817be424235a3f81ee847a753a400c6H0B:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]0a39d817be424235a3f81ee847a753a4"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS00AkCZp"
  LogsLogStream0021859ec552ef92bce09c982789d966a1007041R:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "21859ec552ef92bce09c982789d966a1"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00Vy92E"
  LogsLogStream0020240928LATESTcb6520aecc5d4757a1dcfbc497a15c3f00BU8ls:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]cb6520aecc5d4757a1dcfbc497a15c3f"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdefault00KGcdh"
  LogsLogStream00ecsgenaifalainafrontend1e9697a543944276995471df3fc39ad000HTVeR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genai-falaina-frontend/1e9697a543944276995471df3fc39ad0"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaitestfalaina00TuLP2"
  LogsLogStream0020241003LATEST6287e9b9ff4744eba76cadb532bbfe2d007VuYn:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/03/[$LATEST]6287e9b9ff4744eba76cadb532bbfe2d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect006MSOU"
  LogsLogGroup00awssagemakerEndpointsllama318binstruct2024081603495561600rjeCA:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/llama-3-1-8b-instruct-2024-08-16-03-49-55-616"
      DataProtectionPolicy: {}
  LogsLogStream0020240813LATEST89c5a7c7f82c4a24b133a4589592e5d500CReG5:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/13/[$LATEST]89c5a7c7f82c4a24b133a4589592e5d5"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgwssgetCategories007uWzg"
  LogsLogStream0020241001LATEST98da60683cb34cd3a1540ed2ec19fddf00oATlR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]98da60683cb34cd3a1540ed2ec19fddf"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00WE31l"
  LogsLogStream0020240929LATEST1ea1d0df8466461e9a7cbcade77aceb900jnIRH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/29/[$LATEST]1ea1d0df8466461e9a7cbcade77aceb9"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdefault00KGcdh"
  LogsLogStream00eni00b27c5a7c228c333all00RTwYC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-00b27c5a7c228c333-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00WPfyW"
  LogsLogStream0020241206LATESTe136d23f9677412ea61a0d30444188bb00nwxra:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/06/[$LATEST]e136d23f9677412ea61a0d30444188bb"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStartEC2Instances00vtQG3"
  LogsLogStream0020241010LATEST1e12a08d880048018d1c854885d6e0a700IrFp2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/10/[$LATEST]1e12a08d880048018d1c854885d6e0a7"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00WE31l"
  LogsLogStream0020240928LATESTf5e7578ac7b143868d216ef6d8e33eff00W8WCX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]f5e7578ac7b143868d216ef6d8e33eff"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00BMMvZ"
  LogsLogStream0020240909LATESTdaf889abcb6041a9aae09f1364634ac000uyfYu:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]daf889abcb6041a9aae09f1364634ac0"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs0090zsx"
  LogsLogStream0020241002LATEST8b4f0fc1db3b441eaaaae616d7075a4a00F7XgH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/02/[$LATEST]8b4f0fc1db3b441eaaaae616d7075a4a"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00WE31l"
  LogsLogStream0020241008LATEST71b533e6d93c46948f124c54e097b37800hsi42:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/08/[$LATEST]71b533e6d93c46948f124c54e097b378"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser00sw3Ga"
  LogsLogStream002327b1436dc225229a5a72d8a738dcc500tOuEV:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2327b1436dc225229a5a72d8a738dcc5"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00Vy92E"
  LogsLogStream0020240827LATEST3ea63e169c5f4481978ce2278332836400tN9pT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/27/[$LATEST]3ea63e169c5f4481978ce22783328364"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls300bVcyB"
  LogsLogStream0020240828LATEST91174260d69748888d3102bb08e55b4500HHWSN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/28/[$LATEST]91174260d69748888d3102bb08e55b45"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser00dsJC0"
  LogsLogStream0020241009LATEST464e48d79fc2479790b41abf2d75823600jS7mP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/09/[$LATEST]464e48d79fc2479790b41abf2d758236"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser00sw3Ga"
  LogsLogStream0020241009LATEST54ad2a57696a4c5181c2292f348f654000YgbPN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/09/[$LATEST]54ad2a57696a4c5181c2292f348f6540"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300QGMeb"
  LogsLogStream0020241002LATESTc303bdddfa4e4a73bce1bcb23bbcdec400caojM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/02/[$LATEST]c303bdddfa4e4a73bce1bcb23bbcdec4"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00WE31l"
  LogsLogGroup00awssagemakerEndpointsllama318binstruct2024082306151625000fMYBI:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/llama-3-1-8b-instruct-2024-08-23-06-15-16-250"
      DataProtectionPolicy: {}
  LogsLogStream00sgprodgenaideleteobjects31dXLpt86i3RgbYQ99lRSF2Sjx00qfzfL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/1dXLpt86i3RgbYQ99lRSF2Sjx"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream0020240917LATESTe157c1bad3244a6a8f16a9cd3668d48000VX50m:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/17/[$LATEST]e157c1bad3244a6a8f16a9cd3668d480"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00T3TF0"
  LogsLogStream0020240930LATEST4715cab244164829a215fbf065c2d48d00OHgCy:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]4715cab244164829a215fbf065c2d48d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00BMMvZ"
  LogsLogStream0020240928LATESTe853f8b8dd684fb8a78266a6826f641300mBAzF:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]e853f8b8dd684fb8a78266a6826f6413"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00BMMvZ"
  LogsLogStream0020241010LATESTbffbc4b982414789a770b5bffa4c1f6700NAGqg:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/10/[$LATEST]bffbc4b982414789a770b5bffa4c1f67"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser00sw3Ga"
  LogsLogStream00AllTraffici0f17fccf755cd8c7000rwr8p:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-0f17fccf755cd8c70"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointsllama318binstruct2024081603495561600rjeCA"
  LogsLogGroup00awslambdasgwssgetCategories007uWzg:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-wss-getCategories"
      DataProtectionPolicy: {}
  LogsLogGroup00awssagemakerEndpointsjumpstartdftllama318binstruct2024082816471600sZaG9:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-llama-3-1-8b-instruct-20240828-164716"
      DataProtectionPolicy: {}
  LogsLogStream0020241112LATESTe7de982c789d462bb36ea3a034cd6fdc00IIRsC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/11/12/[$LATEST]e7de982c789d462bb36ea3a034cd6fdc"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStartEC2Instances00vtQG3"
  LogsLogStream0020241013LATEST5910930b26c64206a9971ea76cf20252003rzYF:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/13/[$LATEST]5910930b26c64206a9971ea76cf20252"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00WE31l"
  LogsLogStream00FargateTelemetry106500QmtIz:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1065"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00tAuko"
  LogsLogStream0027b128f60bb79cedc13a74f4640388ad00NvKrx:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "27b128f60bb79cedc13a74f4640388ad"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100iOCET"
  LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00WE31l:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-test-genai-summariser-deletechatfunction"
      DataProtectionPolicy: {}
  LogsLogStream0020240909LATESTc641fe0bc04b477c90ab65f887bc1c6b002mOjs:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]c641fe0bc04b477c90ab65f887bc1c6b"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs0090zsx"
  LogsLogGroup00awslambdapocwebsocketsendmessage00Y4dYS:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/poc-websocket-send-message"
      DataProtectionPolicy: {}
  LogsLogStream0020240929LATEST9efba9dc750f4484808e3d568b96e76200wA1LH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/29/[$LATEST]9efba9dc750f4484808e3d568b96e762"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect001jUqa"
  LogsLogStream005bz5602exbprodmvp120241206095200T654a:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "5bz5602exb_prod-mvp1-2024-12-06-09-52"
      LogGroupName:
        Ref: "LogsLogGroup00testpublicrestapi00r2i1l"
  LogsLogStream0020240909LATESTb1622b23606f47cc876a6ab68929259b00hRKE1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]b1622b23606f47cc876a6ab68929259b"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs0090zsx"
  LogsLogStream00AllTraffici028fbb9099a11050e001NX12:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-028fbb9099a11050e"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointshfsentencesimilaritybgem320240917082451134003RZaw"
  LogsLogStream001098f23f14a9b16d597e47491615a40b00usqhF:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1098f23f14a9b16d597e47491615a40b"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00YeXG9"
  LogsLogStream0020241008LATESTf11c2021119f416dba62811d695c8efd00hAZqy:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/08/[$LATEST]f11c2021119f416dba62811d695c8efd"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser00sw3Ga"
  LogsLogStream00AllTraffici06bad30d01c1ec25100Xm3HJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-06bad30d01c1ec251"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointsllama318binstruct2024081404314195000EBt40"
  LogsLogGroup00awsvpcflowdefaultvpc00F8RVy:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "INFREQUENT_ACCESS"
      RetentionInDays: 7
      LogGroupName: "/aws/vpcflow/default-vpc"
      Tags:
      - Value: "GenAI-Prod-Default-VPC"
        Key: "Name"
      DataProtectionPolicy: {}
  LogsLogStream0020241010LATESTa768573f0677461faaa5c81c4b49a70100czzZm:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/10/[$LATEST]a768573f0677461faaa5c81c4b49a701"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300QGMeb"
  LogsLogStream0020241001LATESTcb87cbee72924d639291d77db1700fa900sONnN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]cb87cbee72924d639291d77db1700fa9"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect001jUqa"
  LogsLogStream00FargateTelemetry107400eRg8h:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1074"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00tAuko"
  LogsLogStream0020241009LATEST060294258b8646cd8ce187dfb62f502c00igPXb:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/09/[$LATEST]060294258b8646cd8ce187dfb62f502c"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketclient00kGBQk"
  LogsLogStream00sgprodgenaideleteobjects34gHZVGkBfbLS1lctEd81t8XzL00kfkVb:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/4gHZVGkBfbLS1lctEd81t8XzL"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream00AllTraffici078f81831708559540043fNS:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-078f8183170855954"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointsjumpstartdfthfsentencesimilarity2024082809221400aWdQ5"
  LogsLogGroup00awssagemakerEndpointshfsentencesimilaritybgem32024091708162997900vsKYe:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/hf-sentencesimilarity-bge-m3-2024-09-17-08-16-29-979"
      DataProtectionPolicy: {}
  LogsLogStream0020240905LATEST718c6906869f4af291ae70564f02426700gT8ip:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/05/[$LATEST]718c6906869f4af291ae70564f024267"
      LogGroupName: "/aws/lambda/sg-test-async-output-generator"
  LogsLogStream0020241011LATEST0a501a933cb14d62a835ce6f0c479d1800WsP4F:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/11/[$LATEST]0a501a933cb14d62a835ce6f0c479d18"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00WE31l"
  LogsLogStream00AllTraffici06b91f8707475e9c1datalog00Qi8XC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-06b91f8707475e9c1/data-log"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointsllama318binstruct2024082306151625000fMYBI"
  LogsLogStream0020241011LATEST4d60256e670346a191217b06f2d6a0c700E8E5a:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/11/[$LATEST]4d60256e670346a191217b06f2d6a0c7"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300QGMeb"
  LogsLogStream0020241001LATEST18f474d5aec6452db66eecb06437a2e200LoLgv:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]18f474d5aec6452db66eecb06437a2e2"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect001jUqa"
  LogsLogStream0020241009LATESTf3725f17201a42b7a50812f0afac11ca003Wvi4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/09/[$LATEST]f3725f17201a42b7a50812f0afac11ca"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300QGMeb"
  LogsLogStream0020241121LATEST1dcfc84ebe72449bba2406a3bf87894e004erwh:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/11/21/[$LATEST]1dcfc84ebe72449bba2406a3bf87894e"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStopEC2Instances006NYIU"
  LogsLogStream0020240822LATESTad7a9981de744d68b30085870814f3ca00H9JLZ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/22/[$LATEST]ad7a9981de744d68b30085870814f3ca"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdatests3behindnacl00noMmX"
  LogsLogStream0020240827LATESTbc1c1974967f45a0a5d95a158494362100FTeqH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/27/[$LATEST]bc1c1974967f45a0a5d95a1584943621"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls300bVcyB"
  LogsLogStream0020240930LATESTe3056590ca994d93a149cc0b7024ebea00CiZlj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]e3056590ca994d93a149cc0b7024ebea"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00BMMvZ"
  LogsLogGroup00awslambdasgprodgenaideleteobjects300QGMeb:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-genai-deleteobject-s3"
      DataProtectionPolicy: {}
  LogsLogStream00AllTraffici047b829826e4609b300l2OF7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-047b829826e4609b3"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointsllama318binstruct2024082303283939100NQuyp"
  LogsLogGroup00awssagemakerEndpointsllama318binstruct2024081404314195000EBt40:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/llama-3-1-8b-instruct-2024-08-14-04-31-41-950"
      DataProtectionPolicy: {}
  LogsLogStream0020240930LATEST9fa01b8ed38a4dea8dbf9b05afbc3f8e00YTzbY:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]9fa01b8ed38a4dea8dbf9b05afbc3f8e"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect006MSOU"
  LogsLogStream0020241001LATESTe40778dd44bc4a33be56586b41bbbb2600f77RY:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]e40778dd44bc4a33be56586b41bbbb26"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00WE31l"
  LogsLogStream00sgprodgenaideleteobjects30xubPj6HGXiszOWOFFl64DBhP00aDQT3:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/0xubPj6HGXiszOWOFFl64DBhP"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream001b05bec5d3b62a90d6f89295b87aa13400tdz9g:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1b05bec5d3b62a90d6f89295b87aa134"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00Vy92E"
  LogsLogStream0020241115LATEST2f3127632afe4ed389e9a617691a153600bVGKD:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/11/15/[$LATEST]2f3127632afe4ed389e9a617691a1536"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStopEC2Instances006NYIU"
  LogsLogStream0020240828LATEST70c570ffb4cb4a2d93a0053d1882699000Ixmky:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/28/[$LATEST]70c570ffb4cb4a2d93a0053d18826990"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser00dsJC0"
  LogsLogStream0020240830LATEST5dd7555196e04136b09d3989f8f491e700afzqw:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/30/[$LATEST]5dd7555196e04136b09d3989f8f491e7"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser00dsJC0"
  LogsLogStream0019a23bd8003616360726a8f2d0057fc1007Uxwj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "19a23bd8003616360726a8f2d0057fc1"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100iOCET"
  LogsLogStream0020241001LATESTb18d5dd71f7d4b49a2eb862fee5e23e1000ifVW:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]b18d5dd71f7d4b49a2eb862fee5e23e1"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect001jUqa"
  LogsLogGroup00awssagemakerEndpointsllama318binstruct2024082116214806700gIRT0:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/llama-3-1-8b-instruct-2024-08-21-16-21-48-067"
      DataProtectionPolicy: {}
  LogsLogStream0020240906LATEST9ed3fde641a44bf9baeec2834795ae8d00aUYut:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/06/[$LATEST]9ed3fde641a44bf9baeec2834795ae8d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls300bVcyB"
  LogsLogStream0020241001LATESTa6356aafda8e4dad8e5e407a289af948004IBXZ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]a6356aafda8e4dad8e5e407a289af948"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect001jUqa"
  LogsLogGroup00awslambdasgprodgenaiembeddingsgmkr00iCYnt:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-genai-embedding-sgmkr"
      DataProtectionPolicy: {}
  LogsLogStream00222e1f9cfbc8dc916521050e0c6a53c700vCM9w:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "222e1f9cfbc8dc916521050e0c6a53c7"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100iOCET"
  LogsLogStream00ecsgenaifrontend07b59adc2b4d4b7e820be377baa650c100PHAuk:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/07b59adc2b4d4b7e820be377baa650c1"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00rGncw"
  LogsLogStream0020241001LATEST63d254966fa94c97ab48016d69bf811f005im6X:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]63d254966fa94c97ab48016d69bf811f"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00WE31l"
  LogsLogStream00sgprodgenaideleteobjects30T60JfpCxukAZxpMg37jCoG2b00DeUGw:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/0T60JfpCxukAZxpMg37jCoG2b"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream000c27616f5883c01529679e1bc06b2a7100EPpVU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "0c27616f5883c01529679e1bc06b2a71"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00YeXG9"
  LogsLogStream00eni00845fde09b1e5266all00QWf13:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-00845fde09b1e5266-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00WPfyW"
  LogsLogStream0020240821LATESTf4a8753575544bffa18daacc2513c51400mRmWa:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/21/[$LATEST]f4a8753575544bffa18daacc2513c514"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenais3triggertutorial00Sly17"
  LogsLogStream0020240830LATEST0d07eaff10414da4ae5a936e5b3f79b100k0ZRB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/30/[$LATEST]0d07eaff10414da4ae5a936e5b3f79b1"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser00dsJC0"
  LogsLogStream0020241004LATEST054b790b6b5e453b9aa9b09388863b60008RTNw:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]054b790b6b5e453b9aa9b09388863b60"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS00AkCZp"
  LogsLogStream002dd921b94190ada70a0d0e6714594d8a00XUICM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2dd921b94190ada70a0d0e6714594d8a"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100iOCET"
  LogsLogStream0020240821LATEST77b24b2b3ed14a419a63ef58389b925200yfSfV:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/21/[$LATEST]77b24b2b3ed14a419a63ef58389b9252"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenais3triggertutorial00Sly17"
  LogsLogStream001504add2649fe3c7e0466bd428e617de00JSWBC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1504add2649fe3c7e0466bd428e617de"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00Vy92E"
  LogsLogStream00ecsgenaifrontend51d0ce5892264ddd88bf56843872bd6200feBJX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/51d0ce5892264ddd88bf56843872bd62"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00rGncw"
  LogsLogStream00sgprodgenaideleteobjects33akx9LfQYijWT3Hlyxxwlck7i00pjTxQ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/3akx9LfQYijWT3Hlyxxwlck7i"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogGroup00awslambdapocwebsocketdefault00KGcdh:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/poc-websocket-default"
      DataProtectionPolicy: {}
  LogsLogStream0020241015LATEST4cb8eb98cb8348e99149f67d437a4b4500En5Zy:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/15/[$LATEST]4cb8eb98cb8348e99149f67d437a4b45"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00WE31l"
  LogsLogStream00sgprodgenaideleteobjects347X2w0wMupiUaJDCMoZcRm1oJ00yDwAK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/47X2w0wMupiUaJDCMoZcRm1oJ"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream0020241115LATESTd0a7574c690b4c50bbf8287d39bad41c00Vxt9Y:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/11/15/[$LATEST]d0a7574c690b4c50bbf8287d39bad41c"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStartEC2Instances00vtQG3"
  LogsLogStream0020241211LATESTcde4c4c0e42c47a0b0a8e1979490816300EXFXr:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/11/[$LATEST]cde4c4c0e42c47a0b0a8e19794908163"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdatestretrieves3metadata006tCEU"
  LogsLogGroup00awslambdapocwebsocketconnect001jUqa:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/poc-websocket-connect"
      DataProtectionPolicy: {}
  LogsLogGroup00awslambdasgprodgenairagsummariser00sw3Ga:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-genai-rag-summariser"
      DataProtectionPolicy: {}
  LogsLogStream0020241008LATESTf45114905229469b9b9a57d4f68d52ab00cbi5f:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/08/[$LATEST]f45114905229469b9b9a57d4f68d52ab"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketclient00kGBQk"
  LogsLogStream002d44327cf6337fa43f0d5922e8fc2a7700BnxrZ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2d44327cf6337fa43f0d5922e8fc2a77"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100iOCET"
  LogsLogStream0020240821LATEST636f0d40040e4da1b84aabdafdadbcef003fw4U:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/21/[$LATEST]636f0d40040e4da1b84aabdafdadbcef"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenais3triggertutorial00Sly17"
  LogsLogStream0020240830LATEST0c9de0b6c50a4d46a8c41024ec2b065200DeMSm:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/30/[$LATEST]0c9de0b6c50a4d46a8c41024ec2b0652"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser00dsJC0"
  LogsLogStream0020240821LATEST11bd2e7555ac40a498b5516dcae5543100dIyzj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/21/[$LATEST]11bd2e7555ac40a498b5516dcae55431"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenais3triggertutorial00Sly17"
  LogsLogStream00ecsgenaifrontend0b0402de90fd41a6aa81254963d74bc400qWxVG:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/0b0402de90fd41a6aa81254963d74bc4"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00rGncw"
  LogsLogStream00sgprodgenaideleteobjects34GnmcdYdEzYiOqCVnucAGpcyT00G9GNk:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/4GnmcdYdEzYiOqCVnucAGpcyT"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream00FargateTelemetry106400AX4Ym:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1064"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00tAuko"
  LogsLogStream0020240904LATEST37539e5fc0f8472189db10726e3a807b001XYZF:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/04/[$LATEST]37539e5fc0f8472189db10726e3a807b"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300QGMeb"
  LogsLogStream00AllTraffici0835074300dab2670datalog00Q3aiP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-0835074300dab2670/data-log"
      LogGroupName: "/aws/sagemaker/Endpoints/hf-sentencesimilarity-bge-m3-2024-08-16-04-16-40-192"
  LogsLogStream0020240813LATEST37d6f6cee8b5466d94936178437ffcb8006ugvM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/13/[$LATEST]37d6f6cee8b5466d94936178437ffcb8"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgwssgetCategories007uWzg"
  LogsLogGroup00awslambdapocwebsocketbroadcast00ejAg5:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/poc-websocket-broadcast"
      DataProtectionPolicy: {}
  LogsLogStream0020240904LATEST54f94c286bc74dacb80bb02113006fd100yEvJq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/04/[$LATEST]54f94c286bc74dacb80bb02113006fd1"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00T3TF0"
  LogsLogStream000631239ede78c32d3788a2683bd0780200bUhWX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "0631239ede78c32d3788a2683bd07802"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00Vy92E"
  LogsLogGroup00awslambdaStartEC2Instances00vtQG3:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/StartEC2Instances"
      DataProtectionPolicy: {}
  LogsLogStream0039ad3f2f49965eead64ab82150c6aa4b009sbOL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "39ad3f2f49965eead64ab82150c6aa4b"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100iOCET"
  LogsLogStream00sgprodgenaideleteobjects378AOZY0QryM345287m0W5K5In00NC90C:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/78AOZY0QryM345287m0W5K5In"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream0020240927LATEST38bae9fa500746ef8b4f1fd982ec5d0200fTkTj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/27/[$LATEST]38bae9fa500746ef8b4f1fd982ec5d02"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00Rs0Pk"
  LogsLogStream00eni0157b804091e19126all003kgKK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-0157b804091e19126-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00WPfyW"
  LogsLogStream0020240909LATESTc95a2db2c7974896a3c0097fef09a56300BYGCY:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]c95a2db2c7974896a3c0097fef09a563"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs0090zsx"
  LogsLogStream0020240913LATEST71928d793e0744d28e289c23ac220d7200EPeZH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/13/[$LATEST]71928d793e0744d28e289c23ac220d72"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00T3TF0"
  LogsLogStream00sgprodgenaideleteobjects31UBnbPwIYEstgJa9zE5TVuqvO00hK5AG:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/1UBnbPwIYEstgJa9zE5TVuqvO"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream0020240930LATEST0b251029c3fc4383a1e2e92c58d7109f00OVm2R:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]0b251029c3fc4383a1e2e92c58d7109f"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls300bVcyB"
  LogsLogStream00sgprodgenaideleteobjects32ZjnjzTmmEbyEvEh1TUuSBrDu00hN4O8:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/2ZjnjzTmmEbyEvEh1TUuSBrDu"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream0020240912LATEST17dfef50e5c542b99fdd98949e104bec008AbJH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/12/[$LATEST]17dfef50e5c542b99fdd98949e104bec"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00T3TF0"
  LogsLogStream0020240917LATEST3a16ebe6a3594ba59e3618457ff5225c00eGNbt:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/17/[$LATEST]3a16ebe6a3594ba59e3618457ff5225c"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00T3TF0"
  LogsLogStream0020240929LATEST47db8be5a1924343bc9bb68ae114cf1a00f7TK1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/29/[$LATEST]47db8be5a1924343bc9bb68ae114cf1a"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendmessage00Y4dYS"
  LogsLogGroup00awslambdaSecretsManagergenaiprodauthdbv2autorotate00advFX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/SecretsManagergenai-prod-authdbv2-auto-rotate"
      DataProtectionPolicy: {}
  LogsLogStream0020240929LATESTab1b1b0da51149f790eec275ac482d9700z0gmB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/29/[$LATEST]ab1b1b0da51149f790eec275ac482d97"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect001jUqa"
  LogsLogStream000559380ccf209120a1cb417b9e856ecc00IuB7Z:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "0559380ccf209120a1cb417b9e856ecc"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100iOCET"
  LogsLogGroup00awslambdasgprodgenais3triggertutorial00Sly17:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-genai-s3-trigger-tutorial"
      DataProtectionPolicy: {}
  LogsLogStream0020241211LATEST33de218f50e6465b997205be882d127500TdaMh:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/11/[$LATEST]33de218f50e6465b997205be882d1275"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdatestretrieves3metadata006tCEU"
  LogsLogStream00eni013e2aec90397986eall00isKan:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-013e2aec90397986e-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00WPfyW"
  LogsLogStream0020240830LATEST705ed6b5f95f4d5281a38bab08a69ac200z54V0:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/30/[$LATEST]705ed6b5f95f4d5281a38bab08a69ac2"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser00dsJC0"
  LogsLogStream00sgprodgenaideleteobjects36RwT5yYeEss3lOcRVXdsGMaRb00yBopZ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/6RwT5yYeEss3lOcRVXdsGMaRb"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogGroup00awslambdatests3behindnacl00noMmX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/test-s3-behind-nacl"
      DataProtectionPolicy: {}
  LogsLogStream0020241003LATEST2c15265365d74b418861ef324940ca5b00oHrQF:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/03/[$LATEST]2c15265365d74b418861ef324940ca5b"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect001jUqa"
  LogsLogStream0020241006LATEST221d15a1abd84575a8d0e833f6b80a7d00LWWWX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/06/[$LATEST]221d15a1abd84575a8d0e833f6b80a7d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect006MSOU"
  LogsLogStream0020240928LATEST8e4ec80b37a544bb97aea8fc768daaae00XHLaE:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]8e4ec80b37a544bb97aea8fc768daaae"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect006MSOU"
  LogsLogStream00sgprodgenaideleteobjects31Nda7UXp8Tdamhy6xiMRL4b3e00hh7DD:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/1Nda7UXp8Tdamhy6xiMRL4b3e"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream0020241001LATEST41d53dc8bf554434aa788fbd5a42e76200cqeq5:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]41d53dc8bf554434aa788fbd5a42e762"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect001jUqa"
  LogsLogStream0020241004LATEST02ab7daf0c3e41e19b440e334c5c256c00ofCfN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]02ab7daf0c3e41e19b440e334c5c256c"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS00AkCZp"
  LogsLogStream00205153586b3ab53c134bd14b032518e000ZUV6w:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "205153586b3ab53c134bd14b032518e0"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00YeXG9"
  LogsLogStream0020241122LATEST86caf01e6d0244449f4a4bdac06188f400YArQ8:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/11/22/[$LATEST]86caf01e6d0244449f4a4bdac06188f4"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStopEC2Instances006NYIU"
  LogsLogStream0020241011LATESTbf430261b0b84bb89c3401bf78ef9d7200f3QM7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/11/[$LATEST]bf430261b0b84bb89c3401bf78ef9d72"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00WE31l"
  LogsLogStream0018ddce3e5605b4845c394518e12d9d8c00qb5Fr:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "18ddce3e5605b4845c394518e12d9d8c"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100iOCET"
  LogsLogStream0020241212LATEST17941be816774010ab3a9360477b8d8500WcA51:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/12/[$LATEST]17941be816774010ab3a9360477b8d85"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaSecretsManagergenaiprodauthdbv2autorotate00advFX"
  LogsLogStream0020241004LATEST0c76ed674a334b338c2ceea9c5dfb14300dSVMd:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]0c76ed674a334b338c2ceea9c5dfb143"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS00AkCZp"
  LogsLogStream0011390e0c7c7de096f472bd8a2c1b07ae00RQBf1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "11390e0c7c7de096f472bd8a2c1b07ae"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00YeXG9"
  LogsLogGroup00awssagemakerEndpointsllama318binstruct2024082303283939100NQuyp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/llama-3-1-8b-instruct-2024-08-23-03-28-39-391"
      DataProtectionPolicy: {}
  LogsLogStream00sgprodgenaideleteobjects35JX2l6FZHlXEP2fFTuUww7rHm00dOiZ0:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/5JX2l6FZHlXEP2fFTuUww7rHm"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream0020240827LATEST3ac416c03db94aa1b6fdec122058f62400C3cbr:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/27/[$LATEST]3ac416c03db94aa1b6fdec122058f624"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenais3triggertutorial00Sly17"
  LogsLogStream0027a2366ec0a6ad2dabb23a9891ac380900ocdB6:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "27a2366ec0a6ad2dabb23a9891ac3809"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100iOCET"
  LogsLogGroup00awssagemakerEndpointsjumpstartdftllama318binstruct2024081308372700lq5Oh:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-llama-3-1-8b-instruct-20240813-083727"
      DataProtectionPolicy: {}
  LogsLogStream00sgprodgenaideleteobjects318AE1OI7CLI1bE2nex3uyAIQ100OyMnA:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/18AE1OI7CLI1bE2nex3uyAIQ1"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream00sgprodgenaideleteobjects33XpGIef0qoJW9FEWZJBo3TGX500I5ONw:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/3XpGIef0qoJW9FEWZJBo3TGX5"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogGroup00awssagemakerEndpointshfsentencesimilaritybgem320240917082451134003RZaw:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/hf-sentencesimilarity-bge-m3-2024-09-17-08-24-51-134"
      DataProtectionPolicy: {}
  LogsLogStream0020241212LATESTa5c747d0e5ee4613b3e18954cda13ad600ew9bP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/12/[$LATEST]a5c747d0e5ee4613b3e18954cda13ad6"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStartEC2Instances00vtQG3"
  LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00WPfyW:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/vpc/GenAI-Pilot-VPC-Flow-Log"
      DataProtectionPolicy: {}
  LogsLogStream00sgprodgenaideleteobjects34jXjrkuLwoar1TBFxt7u8FDBr00ZvQYd:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/4jXjrkuLwoar1TBFxt7u8FDBr"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream00sgprodgenaideleteobjects32ynfvNhTWSAxGwbks6zlCSePR00QM0d5:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/2ynfvNhTWSAxGwbks6zlCSePR"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream0020240909LATEST2836b66356164f83a3cda61d4ecef31800gB4mh:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]2836b66356164f83a3cda61d4ecef318"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs0090zsx"
  LogsLogStream0020240929LATEST28c69ac263ca4366bb6cc32e7c28a76000t8Buq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/29/[$LATEST]28c69ac263ca4366bb6cc32e7c28a760"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect006MSOU"
  LogsLogStream00sgprodgenaideleteobjects36WtFDc7oIVzyYNyYsH0QftKwb00v93Ch:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/6WtFDc7oIVzyYNyYsH0QftKwb"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00Rs0Pk:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/DLQ-handler-sg-prod-genai-summariser"
      DataProtectionPolicy: {}
  LogsLogStream00sgprodgenaideleteobjects34o0kK2YwOGxtVsgcbXumkkeuB00COTYq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/4o0kK2YwOGxtVsgcbXumkkeuB"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream00ecsgenaifrontend27b1f868f3854f03946888c55a60602500WzGik:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/27b1f868f3854f03946888c55a606025"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00rGncw"
  LogsLogStream0020240912LATEST1841ba7daaf04143a924e2819e3eb46100OXaZU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/12/[$LATEST]1841ba7daaf04143a924e2819e3eb461"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00T3TF0"
  LogsLogStream0020241009LATEST1b359843ff254a02b6df332b460b25b000ZMRs2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/09/[$LATEST]1b359843ff254a02b6df332b460b25b0"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketclient00kGBQk"
  LogsLogStream00sgprodgenaideleteobjects365NhFf10TcnUbJAdBzDCvKTPy00OQQUi:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/65NhFf10TcnUbJAdBzDCvKTPy"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream002404f1364adaf8176d4a018e80a9f5b6000AEtP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2404f1364adaf8176d4a018e80a9f5b6"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00Vy92E"
  LogsLogStream0020241007LATEST6209316b4f214fe4b56b771db6318bf900bXlAM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/07/[$LATEST]6209316b4f214fe4b56b771db6318bf9"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect006MSOU"
  LogsLogStream00AllTraffici0c5912e6285917e9700H690f:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-0c5912e6285917e97"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-hf-sentencesimilarity-20240814-032837"
  LogsLogGroup00awslambdatestretrieves3metadata006tCEU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/test-retrieve-s3-metadata"
      DataProtectionPolicy: {}
  LogsLogStream00ecsgenaifrontend4b11ff723208471b921c101740e5fb2c00haqIW:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/4b11ff723208471b921c101740e5fb2c"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00rGncw"
  LogsLogStream00sgprodgenaideleteobjects359ljBtUTbuXTc3mzCpw5vCwfS00bAlK2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/59ljBtUTbuXTc3mzCpw5vCwfS"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream0020241212LATEST094d3beb425343ff8afbbdf98867c26200tFDlp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/12/[$LATEST]094d3beb425343ff8afbbdf98867c262"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStopEC2Instances006NYIU"
  LogsLogStream0025169d7363df145c8550ccd2ffb262c800ZlZak:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "25169d7363df145c8550ccd2ffb262c8"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100iOCET"
  LogsLogStream0020240912LATESTd903a262706f40359dc0e5235446669a00Lv5hm:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/12/[$LATEST]d903a262706f40359dc0e5235446669a"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00T3TF0"
  LogsLogStream001ab9f515f32788693cc3e4a6d03edb1700GTj7X:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1ab9f515f32788693cc3e4a6d03edb17"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00YeXG9"
  LogsLogStream0020241008LATEST185eb84ab8314f9f83687bd9f29a079b00Hl435:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/08/[$LATEST]185eb84ab8314f9f83687bd9f29a079b"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketclient00kGBQk"
  LogsLogGroup00testwebsocket00YeXG9:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "test-websocket"
      DataProtectionPolicy: {}
  LogsLogStream00sgprodgenaideleteobjects37dPkPIRtmp8KhCMDf5jHH77GK00MxgTM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/7dPkPIRtmp8KhCMDf5jHH77GK"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream0020240929LATESTa4768ada23f64471822f8228a32cff6a00bxjhm:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/29/[$LATEST]a4768ada23f64471822f8228a32cff6a"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendmessage00Y4dYS"
  LogsLogStream0020241211LATEST28f0111e10694e9aa854c93e70977a4f00J0YlG:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/11/[$LATEST]28f0111e10694e9aa854c93e70977a4f"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdatestretrieves3metadata006tCEU"
  LogsLogStream00ecsgenaifrontend208bcd3d240a4874a98b5015e39807b200DhyVk:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/208bcd3d240a4874a98b5015e39807b2"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00rGncw"
  LogsLogStream00sgprodgenaideleteobjects357igNPO9BleMfxKsBhJwk6xtg008k9NM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/57igNPO9BleMfxKsBhJwk6xtg"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream0020240820LATEST65ffd89ee4954dd7b3998da82ff663f600stlin:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/20/[$LATEST]65ffd89ee4954dd7b3998da82ff663f6"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenais3triggertutorial00Sly17"
  LogsLogStream0020241004LATEST0e88876d16634d74b0b6b3c30983f47e003y8Zz:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]0e88876d16634d74b0b6b3c30983f47e"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS00AkCZp"
  LogsLogStream00FargateTelemetry103300qdUIZ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1033"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00tAuko"
  LogsLogStream0020240909LATESTbaab54f48aac41a8b48ef9b87f86125c00S9WWr:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]baab54f48aac41a8b48ef9b87f86125c"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs0090zsx"
  LogsLogStream002db5beea17bf7f1f371206b21ba24bca0084RN2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2db5beea17bf7f1f371206b21ba24bca"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100iOCET"
  LogsLogStream0020240928LATEST478077f6599b4608a616874d1af71a1000TYnz0:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]478077f6599b4608a616874d1af71a10"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect001jUqa"
  LogsLogStream0020240928LATEST99f0ed50760c413589c6269eb47cadee00bCIua:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]99f0ed50760c413589c6269eb47cadee"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00BMMvZ"
  LogsLogStream0020240928LATEST0ffed9657fb342d4bfe32f7bd834b4e200LVx8M:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]0ffed9657fb342d4bfe32f7bd834b4e2"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdatestwebsocketConnect00JT4ZT"
  LogsLogGroup00awslambdapocwebsocketsendMessageSQS00AkCZp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/poc-websocket-sendMessageSQS"
      DataProtectionPolicy: {}
  LogsLogGroup00awssagemakerEndpointshfsentencesimilaritybgem32024090403402960200iNcPH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/hf-sentencesimilarity-bge-m3-2024-09-04-03-40-29-602"
      DataProtectionPolicy: {}
  LogsLogStream0020241001LATEST0f91b694535447309c36f32bcb6f0a7700aTjyu:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]0f91b694535447309c36f32bcb6f0a77"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect006MSOU"
  LogsLogGroup00awslambdasgtestasyncoutputretrieve00XRCBd:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-test-async-output-retrieve"
      DataProtectionPolicy: {}
  LogsLogGroup00awslambdatestwebsocketConnect00JT4ZT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/test-websocketConnect"
      DataProtectionPolicy: {}
  LogsLogStream0020240928LATEST806ec6cbe61a48939e2113fc2e678b0d00gmAYB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]806ec6cbe61a48939e2113fc2e678b0d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00BMMvZ"
  LogsLogGroup00awslambdasgprodgenaipresignedurls300bVcyB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-genai-presignedurl-s3"
      DataProtectionPolicy: {}
  LogsLogStream0008a0a496cdb2120b637e94255d9bd68300n7oK0:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "08a0a496cdb2120b637e94255d9bd683"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00Vy92E"
  LogsLogStream0020240830LATEST1542e5dd21b240d9a81deeabc97e2dfd005oSn3:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/30/[$LATEST]1542e5dd21b240d9a81deeabc97e2dfd"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser00dsJC0"
  LogsLogStream00sgprodgenaideleteobjects30zJd53taQwH4p4GB9TyV3hJUe00MI4wc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/0zJd53taQwH4p4GB9TyV3hJUe"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogGroup00awscvpnsession00AzLse:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "INFREQUENT_ACCESS"
      RetentionInDays: 14
      LogGroupName: "/aws/cvpn/session"
      DataProtectionPolicy: {}
  LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00BMMvZ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-test-genai-summariser-retrievetofrontend"
      DataProtectionPolicy: {}
  LogsLogGroup00ecsgenaitestfalaina00TuLP2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/ecs/genai-test-falaina"
      DataProtectionPolicy: {}
  LogsLogStream00eni00141ecd180df1218all00DYeVc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-00141ecd180df1218-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00WPfyW"
  LogsLogStream0020241211LATEST5f3fa17a85ea4ba9adb53d4eb9f412a0004JtSN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/11/[$LATEST]5f3fa17a85ea4ba9adb53d4eb9f412a0"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdatestretrieves3metadata006tCEU"
  LogsLogStream00sgprodgenaideleteobjects3714AVkcx2DaQicOoYEYPRtxcU00GGJVu:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/714AVkcx2DaQicOoYEYPRtxcU"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream0020240929LATEST06cfbf75c0c044b1b2f5f683b396261e00JZrKA:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/29/[$LATEST]06cfbf75c0c044b1b2f5f683b396261e"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketbroadcast00ejAg5"
  LogsLogStream00sgprodgenaideleteobjects37YGgUSXIMApjoeOnBSjJ1XL0I00pAkY9:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/7YGgUSXIMApjoeOnBSjJ1XL0I"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream0020241211LATEST9206b4237e584435a7e191bcc896928500G394k:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/11/[$LATEST]9206b4237e584435a7e191bcc8969285"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStartEC2Instances00vtQG3"
  LogsLogStream0020240929LATEST8f60f35a7c9e40ef96270450e321470600vttsY:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/29/[$LATEST]8f60f35a7c9e40ef96270450e3214706"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendmessage00Y4dYS"
  LogsLogStream00sgprodgenaideleteobjects34ZHuVr9kMp9nehxo7rpjZzega00Lyu1a:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/4ZHuVr9kMp9nehxo7rpjZzega"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream00eni0089b82c15e116ee8all0090oPb:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-0089b82c15e116ee8-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00WPfyW"
  LogsLogStream0020240821LATEST038cc75b9ce94846a31f7e197175b32d00qunDf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/21/[$LATEST]038cc75b9ce94846a31f7e197175b32d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenais3triggertutorial00Sly17"
  LogsLogStream0020241001LATESTa272a2bf563c446fbd1086de3e9525e900FNism:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]a272a2bf563c446fbd1086de3e9525e9"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect001jUqa"
  LogsLogStream0020240925LATEST0fdfe1fc6fca4791ba3de3e219b584cd00aJkLP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/25/[$LATEST]0fdfe1fc6fca4791ba3de3e219b584cd"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00T3TF0"
  LogsLogStream0020241205LATESTae1c6c73758548938a481d6b1b2cb0d4006jUfW:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/05/[$LATEST]ae1c6c73758548938a481d6b1b2cb0d4"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStartEC2Instances00vtQG3"
  LogsLogStream0020240909LATESTa5ff3f1acd454b4391d911271c2d0b0e00LKMCd:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]a5ff3f1acd454b4391d911271c2d0b0e"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs0090zsx"
  LogsLogStream0020241211LATEST842288484d6f45359a0f1943cc90be50006h9Ns:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/11/[$LATEST]842288484d6f45359a0f1943cc90be50"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodapigwapikeyauthorizer00sYMiU"
  LogsLogStream00eni01108417634392849all00NzU18:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-01108417634392849-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00WPfyW"
  LogsLogStream00sgprodgenaideleteobjects36ltLlCaSHL6V4Vrw42k1q5HIX00CwMJf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/6ltLlCaSHL6V4Vrw42k1q5HIX"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream0020241007LATESTc81009bfe7f240bdad9259f28ac2ca4f00gZH55:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/07/[$LATEST]c81009bfe7f240bdad9259f28ac2ca4f"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect006MSOU"
  LogsLogStream0020241001LATESTb8d5285d86334f16869b54bfe00b55b200YAejv:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]b8d5285d86334f16869b54bfe00b55b2"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00WE31l"
  LogsLogStream00sgprodgenaideleteobjects33TO1XFm6OEITkdVkHH26Oepxg00KQiKR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/3TO1XFm6OEITkdVkHH26Oepxg"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream0020240904LATEST70ed3a72f1b44aa78c88a40d6537225b00Q341y:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/04/[$LATEST]70ed3a72f1b44aa78c88a40d6537225b"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00T3TF0"
  LogsLogStream00ecsgenaifalainafrontendee32662c9cbc4bc59d644495b2026e5f00bTOQN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genai-falaina-frontend/ee32662c9cbc4bc59d644495b2026e5f"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaitestfalaina00TuLP2"
  LogsLogStream00AllTraffici0ca4eb04745d2e05100YCcw7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-0ca4eb04745d2e051"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointshfsentencesimilaritybgem32024091708162997900vsKYe"
  LogsLogStream0020240928LATESTb5bc9383ff68422dace0e0830ac8d98c00DGwoQ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]b5bc9383ff68422dace0e0830ac8d98c"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00BMMvZ"
  LogsLogStream00sgprodgenaideleteobjects33gZY2QlyloTO0CGvJCu84THKi00zn1Ye:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/3gZY2QlyloTO0CGvJCu84THKi"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogGroup00testpublicrestapi00r2i1l:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "test-public-rest-api"
      DataProtectionPolicy: {}
  LogsLogStream00ecsgenaifrontend1e140a707c004c1da6c1acc4bdea945d005F3ah:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/1e140a707c004c1da6c1acc4bdea945d"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00rGncw"
  LogsLogStream0020241002LATESTfb3dccc26f9b43dd8e425a232139349400c15BU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/02/[$LATEST]fb3dccc26f9b43dd8e425a2321393494"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00WE31l"
  LogsLogStream0020240930LATEST5d979e3df3e049ec879d9f3ced1902f900hLMRr:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]5d979e3df3e049ec879d9f3ced1902f9"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls300bVcyB"
  LogsLogStream00FargateTelemetry1049003Rn4N:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1049"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00tAuko"
  LogsLogGroup00awslambdasgprodgenaisummariser00dsJC0:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-genai-summariser"
      DataProtectionPolicy: {}
  LogsLogStream0020240814LATEST0f1607f08d8e493993d35515a4a2966000tcjpd:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/14/[$LATEST]0f1607f08d8e493993d35515a4a29660"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaiembeddingsgmkr00iCYnt"
  LogsLogStream00ecsgenaifrontend20afab8406354532be19356a2e55d358009OYsL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/20afab8406354532be19356a2e55d358"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00rGncw"
  LogsLogStream0020240928LATEST18d3235562cc47f0b3ce8c98d7ba883200jldTB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]18d3235562cc47f0b3ce8c98d7ba8832"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00BMMvZ"
  LogsLogStream0020240904LATESTf49ef91c9a694c559670849c6ba05f9100fqCwg:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/04/[$LATEST]f49ef91c9a694c559670849c6ba05f91"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00T3TF0"
  LogsLogStream00sgprodgenaideleteobjects32ReUyUXu1SXikMHxS95D39BTS00hJAsA:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/2ReUyUXu1SXikMHxS95D39BTS"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream0020240909LATEST2ed5e94753584ad58e917ba4cd1cf19800dSb71:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]2ed5e94753584ad58e917ba4cd1cf198"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs0090zsx"
  LogsLogStream00FargateTelemetry101700YT9d0:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1017"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00tAuko"
  LogsLogStream0020241112LATESTe415f00df8f74030ae5493b2f7dbca8f00wuFK4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/11/12/[$LATEST]e415f00df8f74030ae5493b2f7dbca8f"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStopEC2Instances006NYIU"
  LogsLogStream00eni00d8354b1cac7c803all00SJW63:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-00d8354b1cac7c803-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00WPfyW"
  LogsLogStream0020240929LATESTb9392c84b7554c749aab26bd57f6830200aGqZQ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/29/[$LATEST]b9392c84b7554c749aab26bd57f68302"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdefault00KGcdh"
  LogsLogStream0020240929LATEST1b49b51276e14e77a73efb92f52498c900zkizu:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/29/[$LATEST]1b49b51276e14e77a73efb92f52498c9"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00BMMvZ"
  LogsLogStream0020241008LATEST991e08de860048ed973399d2bf5510b100QlMs8:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/08/[$LATEST]991e08de860048ed973399d2bf5510b1"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser00sw3Ga"
  LogsLogStream0020240929LATESTeb032f45b6024799a3e0d77fa4b34120007symX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/29/[$LATEST]eb032f45b6024799a3e0d77fa4b34120"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendmessage00Y4dYS"
  LogsLogStream0020241001LATESTedd18de68e3f419a8f1af9cf0bf0070c00XoXaR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]edd18de68e3f419a8f1af9cf0bf0070c"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect001jUqa"
  LogsLogStream0020241009LATEST1425a0653bdf46378b040df2d894a8a0004pHTq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/09/[$LATEST]1425a0653bdf46378b040df2d894a8a0"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300QGMeb"
  LogsLogStream0020240905LATESTa3c5b653b4a240d59f83540d1c72170500hzIaC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/05/[$LATEST]a3c5b653b4a240d59f83540d1c721705"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestasyncoutputretrieve00XRCBd"
  LogsLogStream0020241001LATEST1e6b1cbafaf04344a8b4a204a36c2bbb00uGgU9:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]1e6b1cbafaf04344a8b4a204a36c2bbb"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect001jUqa"
  LogsLogStream0020241001LATESTaa29828a690643d58ff90088fba80c1c00qWLTi:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]aa29828a690643d58ff90088fba80c1c"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect001jUqa"
  LogsLogStream0003e0e576b53f0b86d53fbdb168283c3900Z13rc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "03e0e576b53f0b86d53fbdb168283c39"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00YeXG9"
  LogsLogStream0020241004LATEST0a018736bb0a482e9e7ee556172e676000tsRnJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]0a018736bb0a482e9e7ee556172e6760"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS00AkCZp"
  LogsLogGroup00awssagemakerEndpointsjumpstartdfthfsentencesimilarity2024082809590200tKfIc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-hf-sentencesimilarity-20240828-095902"
      DataProtectionPolicy: {}
  LogsLogStream00sgprodgenaideleteobjects36YyayrV4lfUb6sN9a9x3BPQlK00qwR9D:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/6YyayrV4lfUb6sN9a9x3BPQlK"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream0037271254eb6bb1d7f5c688de92c052ee00rdBkE:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "37271254eb6bb1d7f5c688de92c052ee"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00Vy92E"
  LogsLogStream002d25e106d822a74027e0d656f4d3706700VclU7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2d25e106d822a74027e0d656f4d37067"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00YeXG9"
  LogsLogStream00sgprodgenaideleteobjects32nE5wYrivur4n0HWcJMjIkTu800xQHq1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/2nE5wYrivur4n0HWcJMjIkTu8"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00tAuko:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      RetentionInDays: 1
      LogGroupName: "/aws/ecs/containerinsights/GenAI-Pilot-Fargate/performance"
      DataProtectionPolicy: {}
  LogsLogStream001d9e5338ac7d382f8fd0301728ce6f4700OIIEc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1d9e5338ac7d382f8fd0301728ce6f47"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00YeXG9"
  LogsLogStream0020240822LATESTc1a1b96db4a74030bea2f474872f0d0e00MTKb8:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/22/[$LATEST]c1a1b96db4a74030bea2f474872f0d0e"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdatests3behindnacl00noMmX"
  LogsLogStream0020240822LATEST12f704bb1461471e8558895382a59a4500k5yA6:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/22/[$LATEST]12f704bb1461471e8558895382a59a45"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdatests3behindnacl00noMmX"
  LogsLogStream0020241001LATEST3b926fcd564d439697a45c2e0f9f5dd600aml9K:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]3b926fcd564d439697a45c2e0f9f5dd6"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00Rs0Pk"
  LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00T3TF0:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-genai-checkcredsdocdb"
      DataProtectionPolicy: {}
  LogsLogStream0027487a075bc9f5bd1febd08918e5fc2300iAY2y:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "27487a075bc9f5bd1febd08918e5fc23"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00YeXG9"
  LogsLogStream00eni0021624e920852815all00yGtAW:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-0021624e920852815-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00WPfyW"
  LogsLogStream0020240924LATEST53c9ac4b4eea4626a556d1a60b85436f00kjwjX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/24/[$LATEST]53c9ac4b4eea4626a556d1a60b85436f"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenais3triggertutorial00Sly17"
  LogsLogStream0020241006LATESTd28c05a494244095ae17a9052ce651a100yzDQg:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/06/[$LATEST]d28c05a494244095ae17a9052ce651a1"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect006MSOU"
  LogsLogStream00sgprodgenaideleteobjects31oZMtSAFO98Vg5Vu1E5xu57Jn00utJ22:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/1oZMtSAFO98Vg5Vu1E5xu57Jn"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream00296d82b4634af3ccd80c177b1bfe894700xriNa:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "296d82b4634af3ccd80c177b1bfe8947"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100iOCET"
  LogsLogStream0020240913LATEST2b08247899fd495ea81b920ff140d99800hrFnd:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/13/[$LATEST]2b08247899fd495ea81b920ff140d998"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00T3TF0"
  LogsLogStream000984f7dead3475b1aebdf4cfe7f95efe00hfEK9:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "0984f7dead3475b1aebdf4cfe7f95efe"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100iOCET"
  LogsLogStream0012a60463947e0617bcad452141fa6a7400e5YYN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "12a60463947e0617bcad452141fa6a74"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100iOCET"
  LogsLogStream00075d8e7c12f0749852e11be95060294400iLoIL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "075d8e7c12f0749852e11be950602944"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00YeXG9"
  LogsLogStream00ecsgenaifrontend5c4be9946c934e859bb3e9f1db4a68db007S0oC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/5c4be9946c934e859bb3e9f1db4a68db"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00rGncw"
  LogsLogStream00eni0024f002abfb1d954all00Z2svT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-0024f002abfb1d954-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00WPfyW"
  LogsLogStream00sgprodgenaideleteobjects30GvJfsdxHSXRUpOvfg7LgGKuq00hhFCl:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/0GvJfsdxHSXRUpOvfg7LgGKuq"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream0020240923LATESTfc0a587c33a240c68210f2955610867f00vtf7S:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/23/[$LATEST]fc0a587c33a240c68210f2955610867f"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00Rs0Pk"
  LogsLogStream0020241004LATEST053430b83def4d1f9e618edc13163a2000hqZS4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]053430b83def4d1f9e618edc13163a20"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS00AkCZp"
  LogsLogStream0020241001LATEST0e409cb66db14f259dcdfd7de7ce96fb00bOrjC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]0e409cb66db14f259dcdfd7de7ce96fb"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect001jUqa"
  LogsLogStream0020241001LATEST2ce464123a6f4089b3863297b14c94df00WMqGj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]2ce464123a6f4089b3863297b14c94df"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect001jUqa"
  LogsLogStream002024101110be1711a776e7418e8fe62f86b9316f9b00bXk13:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/11/[10]be1711a776e7418e8fe62f86b9316f9b"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser00sw3Ga"
  LogsLogStream0020241008LATEST4c15d837635c416f8bdd10725136b22700xfJfq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/08/[$LATEST]4c15d837635c416f8bdd10725136b227"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketclient00kGBQk"
  LogsLogStream0020241004LATESTbfcb1b6527e445d590e1469792edf62b00OD2Gn:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]bfcb1b6527e445d590e1469792edf62b"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser00sw3Ga"
  LogsLogStream00eni001b6ec99c178f82dall00fgur7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-001b6ec99c178f82d-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00WPfyW"
  LogsLogStream0020240902LATEST7894e948d1ba45d5b6be6b5ad336bd5c00JfTJ5:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/02/[$LATEST]7894e948d1ba45d5b6be6b5ad336bd5c"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300QGMeb"
  LogsLogStream0020241008LATEST2524a6112bdb462d905b06acb4fa1ed6000KisI:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/08/[$LATEST]2524a6112bdb462d905b06acb4fa1ed6"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00WE31l"
  LogsLogStream0020240909LATESTe0f65bbacb9b4154a28505632cc6dfa200BuNDS:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]e0f65bbacb9b4154a28505632cc6dfa2"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs0090zsx"
  LogsLogStream0020241010LATESTf07d86c2c23746059ce900244a25d32000F2HjZ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/10/[$LATEST]f07d86c2c23746059ce900244a25d320"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300QGMeb"
  LogsLogStream0020241004LATEST0d14afe7dc194b34b763cc13243cbea700u6CmO:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]0d14afe7dc194b34b763cc13243cbea7"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS00AkCZp"
  LogsLogStream0020240930LATESTf78de0e2b0de427a81303c46db3d424600Ph2sX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]f78de0e2b0de427a81303c46db3d4246"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketbroadcast00ejAg5"
  LogsLogStream0020241007LATEST7903a590e2bc4eac88c5c9c1c500297900dSc3H:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/07/[$LATEST]7903a590e2bc4eac88c5c9c1c5002979"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser00sw3Ga"
  LogsLogStream0020240822LATEST8d4ec3beb84343ef9ab04ba92a5adca400egJyv:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/22/[$LATEST]8d4ec3beb84343ef9ab04ba92a5adca4"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdatests3behindnacl00noMmX"
  LogsLogStream000b76fce51816b44a15f5e384f519818800cNXd2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "0b76fce51816b44a15f5e384f5198188"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00Vy92E"
  LogsLogStream0020240928LATEST9e8ff967525541ef9eba677d81dd19af00dURow:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]9e8ff967525541ef9eba677d81dd19af"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls300bVcyB"
  LogsLogStream00sgprodgenaideleteobjects37gX4RGv5ZKFVOdZKRXbJ9CPxA00DFdfy:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/7gX4RGv5ZKFVOdZKRXbJ9CPxA"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream0020241206LATESTc530a82134b141868d6b577ce0804f6a00H8aTX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/06/[$LATEST]c530a82134b141868d6b577ce0804f6a"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStopEC2Instances006NYIU"
  LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100iOCET:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "API-Gateway-Execution-Logs_5nwb46kira/prod-mvp1"
      DataProtectionPolicy: {}
  LogsLogStream0020240929LATEST9e412e6f993a43c79ae63936bc6910f600cXFMZ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/29/[$LATEST]9e412e6f993a43c79ae63936bc6910f6"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketbroadcast00ejAg5"
  LogsLogGroup00awsapigateway0u3tyeizfbpoc00Vy92E:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/apigateway/0u3tyeizfb/poc"
      DataProtectionPolicy: {}
  LogsLogStream00sgprodgenaideleteobjects35pWI7RxitO6VQhZlT1jpFAUPR00OMeiW:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/5pWI7RxitO6VQhZlT1jpFAUPR"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogGroup00awslambdasgprodapigwapikeyauthorizer00sYMiU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-apigw-apikey-authorizer"
      DataProtectionPolicy: {}
  LogsLogStream0020240829LATEST4e3c67e60251496987beccfcb971afa600zpzUq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/29/[$LATEST]4e3c67e60251496987beccfcb971afa6"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser00dsJC0"
  LogsLogStream00sgprodgenaideleteobjects33qbXV1lZWONEngGkM1PPB4S6p00DzQQ4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/3qbXV1lZWONEngGkM1PPB4S6p"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream0005708a0bc628308e002d8a9ddc11519000EXFGU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "05708a0bc628308e002d8a9ddc115190"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00Vy92E"
  LogsLogStream00ecsgenaifrontend62953bf6f8564f6c9f384a6565c633f500pHswT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/62953bf6f8564f6c9f384a6565c633f5"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00rGncw"
  LogsLogGroup00awslambdapocwebsocketclient00kGBQk:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/poc-websocket-client"
      DataProtectionPolicy: {}
  LogsLogStream00ecsgenaifalainafrontend4cc412ed5ceb441dbf9ef7329fc79ecb00f6RwH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genai-falaina-frontend/4cc412ed5ceb441dbf9ef7329fc79ecb"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaitestfalaina00TuLP2"
  LogsLogStream0020240930LATESTc54b0985ec04470c90a17132d36b618100EJ1wz:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]c54b0985ec04470c90a17132d36b6181"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00BMMvZ"
  LogsLogStream00sgprodgenaideleteobjects35IXfr2Gi8qKgToTt2q4KsoXL700IUVG2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/5IXfr2Gi8qKgToTt2q4KsoXL7"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00IIAli"
  LogsLogStream0020241001LATESTe2cac9eb208b48b8ba65e01c7d68e54f00FJa1f:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]e2cac9eb208b48b8ba65e01c7d68e54f"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00Rs0Pk"
  LogsLogStream0020240929LATEST075c7cc10f6a4e25afcc5fabe5d6c41400ITCni:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/29/[$LATEST]075c7cc10f6a4e25afcc5fabe5d6c414"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendmessage00Y4dYS"
  LogsLogStream00AllTraffici0b75e1c47ba8bb797009xeYf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-0b75e1c47ba8bb797"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointsllama318binstruct2024082116214806700gIRT0"
  LogsLogStream0020241002LATEST3d8a13da3b2c4ab683ba52cd58c4c26700jWBM6:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/02/[$LATEST]3d8a13da3b2c4ab683ba52cd58c4c267"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00Rs0Pk"
  LogsLogStream00AllTraffici07cdcd5c6871ce1f100m7SCz:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-07cdcd5c6871ce1f1"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointshfsentencesimilaritybgem32024091708162997900vsKYe"
  LogsLogStream00FargateTelemetry103800tuPvA:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1038"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00tAuko"
  LogsLogStream0020240925LATEST19bce0508ece4453b775f9916021a75600V3IKC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/25/[$LATEST]19bce0508ece4453b775f9916021a756"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00Rs0Pk"
  LogsLogStream0020240902LATEST5db511e1ecb241c4a632ca26fc5cb790008phY7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/02/[$LATEST]5db511e1ecb241c4a632ca26fc5cb790"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls300bVcyB"
  LogsLogStream0020240830LATESTa88dddbb809d44a784a5e14913fdcbaf00kZLKT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/30/[$LATEST]a88dddbb809d44a784a5e14913fdcbaf"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenais3triggertutorial00r22TK"
  LogsLogStream0020240828LATEST08f38e946b0e4ac6ba243ac9c9b3ab0f00po4wP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/28/[$LATEST]08f38e946b0e4ac6ba243ac9c9b3ab0f"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser00FBI0u"
  LogsLogStream0020241008LATEST41ca8c696480436cbfc43d216e0378e600OIkaP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/08/[$LATEST]41ca8c696480436cbfc43d216e0378e6"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser004QaGP"
  LogsLogStream000e0a3c7e139cc939d95307a079235ce7001yQw2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "0e0a3c7e139cc939d95307a079235ce7"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00DywBR"
  LogsLogStream0020241004LATEST069882df82014a029a3519503116f31f00SL6kd:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]069882df82014a029a3519503116f31f"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS002E2A5"
  LogsLogStream0020240812LATESTc025b4a77e5d4195978608d4f21a60f600sBePE:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/12/[$LATEST]c025b4a77e5d4195978608d4f21a60f6"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgwssdisconnect00zhvRD"
  LogsLogStream00ecsgenaifrontend4cd8282b7b9243dba0b7b0141790618d00qRN4Z:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/4cd8282b7b9243dba0b7b0141790618d"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00nsK0P"
  LogsLogStream00eni01072a5b495b8d925all000w981:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-01072a5b495b8d925-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog002G9ka"
  LogsLogStream00ecsgenaifrontend21109bb0ec17438c8a5d14bb983becac00sbcTA:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/21109bb0ec17438c8a5d14bb983becac"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00nsK0P"
  LogsLogStream00AllTraffici0b61c6b0a6a694d1d00OHbDj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-0b61c6b0a6a694d1d"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointsjumpstartdfthfsentencesimilarity2024082808275700hIF8I"
  LogsLogStream00ecsdevcontainernodejs203915f048c0084472a688974522d298b200ReVzH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/devcontainer-nodejs20/3915f048c0084472a688974522d298b2"
      LogGroupName:
        Ref: "LogsLogGroup00ecsdevcontainernodejs20008STYN"
  LogsLogStream00FargateTelemetry109100R2UwF:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1091"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00ChV7w"
  LogsLogStream0020241001LATEST7aa11d673ed3457cb1aeb01ff293f04000vpTDY:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]7aa11d673ed3457cb1aeb01ff293f040"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00S7eF7"
  LogsLogStream0020240905LATEST5410b5c35e21432b9e554801083c0fe90037AoG:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/05/[$LATEST]5410b5c35e21432b9e554801083c0fe9"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestasyncoutputgenerator00GvluI"
  LogsLogStream002ac057fd0dccf86d43ffd2920d4be313007yaMt:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2ac057fd0dccf86d43ffd2920d4be313"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100ITuEV"
  LogsLogGroup00awssagemakerEndpointsjumpstartdfthfsentencesimilarity2024082808275700hIF8I:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-hf-sentencesimilarity-20240828-082757"
      DataProtectionPolicy: {}
  LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00WeCZ5:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-genai-checkcredsdocdb"
      DataProtectionPolicy: {}
  LogsLogStream0020240821LATESTf9808aaa784641638975113cc746375000Ny3TO:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/21/[$LATEST]f9808aaa784641638975113cc7463750"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenais3triggertutorial00r22TK"
  LogsLogStream0020240928LATEST2ef22373ce5f469f9b7d9afc97826d2700LPdIe:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]2ef22373ce5f469f9b7d9afc97826d27"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00DhXrh"
  LogsLogStream00ecsgenaifrontend72e3674ca4ff41dda0f9c06499e75d5f00nHeBI:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/72e3674ca4ff41dda0f9c06499e75d5f"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00nsK0P"
  LogsLogGroup00awssagemakerEndpointsjumpstartdfthfsentencesimilarity2024083002440100wya1h:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-hf-sentencesimilarity-20240830-024401"
      DataProtectionPolicy: {}
  LogsLogStream00FargateTelemetry10240051XqB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1024"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00ChV7w"
  LogsLogStream0020240912LATEST9eb053f11e01409d9046015c76a4005d00OFYCD:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/12/[$LATEST]9eb053f11e01409d9046015c76a4005d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00WeCZ5"
  LogsLogStream0020241010LATEST28f60e765ca24ae5ad83380dd4617d2600oOxW9:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/10/[$LATEST]28f60e765ca24ae5ad83380dd4617d26"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser004QaGP"
  LogsLogStream0020240928LATESTc1d3b1849d16426aac606ad949ae479500rfvbo:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]c1d3b1849d16426aac606ad949ae4795"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00DhXrh"
  LogsLogStream0020241004LATEST02cfea620c4b463783485ed3386d42eb00qA4YL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]02cfea620c4b463783485ed3386d42eb"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS002E2A5"
  LogsLogGroup00awsapigatewaywelcome00az5tj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/apigateway/welcome"
      DataProtectionPolicy: {}
  LogsLogStream0020fd5c6a83fe374a3da43b163f4b89e900LdqAC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "20fd5c6a83fe374a3da43b163f4b89e9"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100ITuEV"
  LogsLogStream00eni002f657e0870f06fball00oV2MM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-002f657e0870f06fb-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog002G9ka"
  LogsLogStream00eni010b7b8991f1f049call001HBf6:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-010b7b8991f1f049c-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog002G9ka"
  LogsLogStream0020240923LATEST0c839b4680f44224b4d46bac7b15a96200eVwhg:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/23/[$LATEST]0c839b4680f44224b4d46bac7b15a962"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00S7eF7"
  LogsLogStream0020240909LATEST1d103b44027d4f93aab9dabbb2e321c900cnPPy:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]1d103b44027d4f93aab9dabbb2e321c9"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00rJhT4"
  LogsLogStream0017aea636d45c28fc2d49f18671d4af8800qqYh5:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "17aea636d45c28fc2d49f18671d4af88"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100ITuEV"
  LogsLogStream002319a709532bef742b2c9081296088f4004imyR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2319a709532bef742b2c9081296088f4"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00DywBR"
  LogsLogGroup00awslambdainsights00jSDBl:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda-insights"
      DataProtectionPolicy: {}
  LogsLogStream0020240930LATESTc367eec612ce40afaf65e7afafb9492300rurVD:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]c367eec612ce40afaf65e7afafb94923"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00DhXrh"
  LogsLogStream0020241008LATESTb11c05d4d72342c7aaab8dd177278dff00R9xm7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/08/[$LATEST]b11c05d4d72342c7aaab8dd177278dff"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300f2CTg"
  LogsLogStream0020240815LATEST809aaacb9ca941c39bd98507e2f2fb8e00LRLBH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/15/[$LATEST]809aaacb9ca941c39bd98507e2f2fb8e"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaiembeddingsgmkr00IWphN"
  LogsLogStream000c84683f7bad325b65b165254facbbac00LpCA8:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "0c84683f7bad325b65b165254facbbac"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00DywBR"
  LogsLogStream00FargateTelemetry102200hG5Hn:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1022"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00ChV7w"
  LogsLogStream0020241009LATESTf37cdc4d751c492e83f18e76cbe778c8008xMKC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/09/[$LATEST]f37cdc4d751c492e83f18e76cbe778c8"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300f2CTg"
  LogsLogStream0020241009LATESTaaba662b8d7a4f25b9ed663c8138d696005NjwF:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/09/[$LATEST]aaba662b8d7a4f25b9ed663c8138d696"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect0094HmR"
  LogsLogStream00AllTraffici06b327adebcb200aa00KR1Nb:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-06b327adebcb200aa"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointsjumpstartdfthfsentencesimilarity2024081408520700LVg4r"
  LogsLogStream0020241004LATEST036258b935ae427988ef97269123ecbf00jJ9L6:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]036258b935ae427988ef97269123ecbf"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS002E2A5"
  LogsLogStream0020240823LATEST6d94a603d1fa4a249877fddb48ecf68200Cp8ZT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/23/[$LATEST]6d94a603d1fa4a249877fddb48ecf682"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenais3triggertutorial00r22TK"
  LogsLogStream002f1104c90c3c3278963b47596029dcfe00s6XCC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2f1104c90c3c3278963b47596029dcfe"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00DywBR"
  LogsLogStream0020240828LATEST89e88e054d0b466a9ed7f11955e5f3ac00G98GA:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/28/[$LATEST]89e88e054d0b466a9ed7f11955e5f3ac"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser00FBI0u"
  LogsLogStream0020241210LATEST030470b9527f47189ae1845c6e6e0e4a007Y7AL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/10/[$LATEST]030470b9527f47189ae1845c6e6e0e4a"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStartEC2Instances00k4aCT"
  LogsLogStream0020240830LATEST12e24444d7a04790ab2b2fdc09c2761500Zbj2X:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/30/[$LATEST]12e24444d7a04790ab2b2fdc09c27615"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser00FBI0u"
  LogsLogStream00AllTraffici0f323f9b9b2afa6e0006ZKjN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-0f323f9b9b2afa6e0"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointsllama318binstruct2024082302510776700PlezX"
  LogsLogStream0020241009LATEST00f7f0cc1532432d91bcbdbae5b822e200y1dct:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/09/[$LATEST]00f7f0cc1532432d91bcbdbae5b822e2"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser004QaGP"
  LogsLogStream0020241004LATEST08f8f5b551e14ba3affca5522ce21e9200uojvn:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]08f8f5b551e14ba3affca5522ce21e92"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS002E2A5"
  LogsLogStream00AllTraffici036b3cac1935ddb76001OIEE:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-036b3cac1935ddb76"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointshfsentencesimilaritybgem32024090504234917900hbapZ"
  LogsLogGroup00awssagemakerEndpointshfsentencesimilaritybgem32024090504234917900hbapZ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/hf-sentencesimilarity-bge-m3-2024-09-05-04-23-49-179"
      DataProtectionPolicy: {}
  LogsLogStream0020241004LATEST043033cd4e3f4b1384f5f32ecf9c567700xlBK8:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]043033cd4e3f4b1384f5f32ecf9c5677"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS002E2A5"
  LogsLogStream0020240906LATEST9d35b1f0c8b84166a69e950d78e2c2be00CJuew:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/06/[$LATEST]9d35b1f0c8b84166a69e950d78e2c2be"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls300Tuj93"
  LogsLogStream001cfce58961bf737acee70e243d67b5ac00v8tOX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1cfce58961bf737acee70e243d67b5ac"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100ITuEV"
  LogsLogStream0020241001LATEST7a07bae48e7949d8b465d33313cad72400hCZJL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]7a07bae48e7949d8b465d33313cad724"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00EZXY8"
  LogsLogGroup00awssagemakerEndpointsjumpstartdfthfsentencesimilarity2024081408520700LVg4r:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-hf-sentencesimilarity-20240814-085207"
      DataProtectionPolicy: {}
  LogsLogStream0020241010LATEST27f7bc399ca34ad9b648e008f34bf38400f3DRa:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/10/[$LATEST]27f7bc399ca34ad9b648e008f34bf384"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser004QaGP"
  LogsLogStream0020240928LATEST2246d1b8a41743b4aa21b3887ce386d600945AN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]2246d1b8a41743b4aa21b3887ce386d6"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect0094HmR"
  LogsLogStream0020240914LATEST42864eab0ba64009b3e452e3e9907dd800QdR1U:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/14/[$LATEST]42864eab0ba64009b3e452e3e9907dd8"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00WeCZ5"
  LogsLogStream0020240930LATEST1b80dd3db7a54422b8bb128d5689f84900Rhq7r:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]1b80dd3db7a54422b8bb128d5689f849"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00DhXrh"
  LogsLogGroup00awssagemakerEndpointsllama318binstruct2024082302510776700PlezX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/llama-3-1-8b-instruct-2024-08-23-02-51-07-767"
      DataProtectionPolicy: {}
  LogsLogStream0020241120LATEST5b1d4511dd0f4e8c97bc30052a9ed60500HJQ7b:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/11/20/[$LATEST]5b1d4511dd0f4e8c97bc30052a9ed605"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStopEC2Instances00IqIr7"
  LogsLogStream0008565c2172e043fc7f79d6cd6e14ba0500ca1Sq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "08565c2172e043fc7f79d6cd6e14ba05"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100ITuEV"
  LogsLogStream0020241010LATESTfaf110a5e5c44ab9b63a95c386fc599000G1CbV:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/10/[$LATEST]faf110a5e5c44ab9b63a95c386fc5990"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser004QaGP"
  LogsLogStream0020241003LATEST99d4a490664e4de1ab6924744c7d45aa00JDEW1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/03/[$LATEST]99d4a490664e4de1ab6924744c7d45aa"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendmessage00gHeot"
  LogsLogStream0012dbcd4280ab48add3110b59177ef6d500lOafw:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "12dbcd4280ab48add3110b59177ef6d5"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00A4GeI"
  LogsLogStream002024092807305300VGJpP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024-09-28_07-30-53"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigatewaywelcome00az5tj"
  LogsLogStream0020241211LATESTcafc58b3477c4429b58511d939d566e100g1peJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/11/[$LATEST]cafc58b3477c4429b58511d939d566e1"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdatestuploads300oCAAw"
  LogsLogStream00ecsgenaifrontend60254b3c61ca441ebbc3b68e308199bb00aDKsA:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/60254b3c61ca441ebbc3b68e308199bb"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00nsK0P"
  LogsLogStream0020240830LATEST08b44b83451f4e96b4826705db556f4200ipdiN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/30/[$LATEST]08b44b83451f4e96b4826705db556f42"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser00FBI0u"
  LogsLogStream0020240930LATEST8b551d0ebaa14f2d91a25ed8bdb0432a00X7Vzx:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]8b551d0ebaa14f2d91a25ed8bdb0432a"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00DhXrh"
  LogsLogGroup00awssagemakerEndpointsjumpstartdfthfsentencesimilarity2024082803192400fTtHH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-hf-sentencesimilarity-20240828-031924"
      DataProtectionPolicy: {}
  LogsLogStream0020240928LATESTb05c92ccf5044390b5c1b6fe34f610cd00k3E08:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]b05c92ccf5044390b5c1b6fe34f610cd"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls300Tuj93"
  LogsLogStream0020240905LATESTb3418de5fbda4a868b37147205cb7a9d00K2pfc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/05/[$LATEST]b3418de5fbda4a868b37147205cb7a9d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestasyncoutputgenerator00GvluI"
  LogsLogStream0020240912LATESTad6f15e211884f9eb6fb609ca43d5ead008WGwO:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/12/[$LATEST]ad6f15e211884f9eb6fb609ca43d5ead"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00WeCZ5"
  LogsLogStream0020240820LATEST00cf73f5f32f49ee8ab96105f372cec500CPH6q:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/20/[$LATEST]00cf73f5f32f49ee8ab96105f372cec5"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenais3triggertutorial00r22TK"
  LogsLogStream0020241008LATESTc6d0f3c8021648b5b6f703a7e0079c5a00DS4li:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/08/[$LATEST]c6d0f3c8021648b5b6f703a7e0079c5a"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser004QaGP"
  LogsLogStream00sgprodgenaideleteobjects36ltLlCaSHL6V4Vrw42k1q5HIX0023qUH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/6ltLlCaSHL6V4Vrw42k1q5HIX"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00jSDBl"
  LogsLogStream00ecsgenaifrontend4c35cfd2723e4b9db52b7c8d1866152700CYsX4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/4c35cfd2723e4b9db52b7c8d18661527"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00nsK0P"
  LogsLogStream0020241001LATEST05e641e08a624bdc80c0eae8d4cefb0500MOTOH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]05e641e08a624bdc80c0eae8d4cefb05"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00EZXY8"
  LogsLogStream0020241008LATEST984d340c0c9f44e2a13ff724064f11a100uQA1s:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/08/[$LATEST]984d340c0c9f44e2a13ff724064f11a1"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect0094HmR"
  LogsLogGroup00awslambdasgprodgenaiembeddingsgmkr00IWphN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-genai-embedding-sgmkr"
      DataProtectionPolicy: {}
  LogsLogStream0020241007LATEST1b18bc530fef47638cc2213ca161d4d200i8CQ1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/07/[$LATEST]1b18bc530fef47638cc2213ca161d4d2"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect0094HmR"
  LogsLogStream0006bcbe88d62e090861ff03dc676fb12100nQZgV:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "06bcbe88d62e090861ff03dc676fb121"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100ITuEV"
  LogsLogStream0020240815LATEST77a2c430cfc74e7db008acdea3def8cb00m6n8Y:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/15/[$LATEST]77a2c430cfc74e7db008acdea3def8cb"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaiembeddingsgmkr00IWphN"
  LogsLogGroup00awslambdatestuploads300oCAAw:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/test-upload-s3"
      DataProtectionPolicy: {}
  LogsLogStream0020240822LATEST8d8a7e278cc04c328fc4f9455daa456e00u4dwN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/22/[$LATEST]8d8a7e278cc04c328fc4f9455daa456e"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdatests3behindnacl00Ii7wV"
  LogsLogStream0020240930LATESTd75e2d02d756493c8231a7eb86b482ec009Fchx:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]d75e2d02d756493c8231a7eb86b482ec"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdefault00VZG0R"
  LogsLogStream00FargateTelemetry1089008UM4Y:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1089"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00ChV7w"
  LogsLogStream0020241004LATEST0782fa29794949fba6f1cbe4d274729e00Lz9Jc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]0782fa29794949fba6f1cbe4d274729e"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS002E2A5"
  LogsLogGroup00awssagemakerEndpointsllama318binstruct20240820163716022000G1J0:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/llama-3-1-8b-instruct-2024-08-20-16-37-16-022"
      DataProtectionPolicy: {}
  LogsLogStream0020240909LATESTfa232dc5827a4d18adb5d322c6124a8a00bOUuR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]fa232dc5827a4d18adb5d322c6124a8a"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00rJhT4"
  LogsLogGroup00awslambdatestpocwebsocketclient0046KFb:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/test-poc-websocket-client"
      DataProtectionPolicy: {}
  LogsLogGroup00ecsgenaipilot00nsK0P:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/ecs/genaipilot"
      DataProtectionPolicy: {}
  LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00DhXrh:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-test-genai-summariser-retrievetofrontend"
      DataProtectionPolicy: {}
  LogsLogGroup00awslambdasgwssdisconnect00zhvRD:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-wss-disconnect"
      DataProtectionPolicy: {}
  LogsLogStream0020240829LATESTce397a2e1a3144fb8645d0aaf3aefda300BNxwQ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/29/[$LATEST]ce397a2e1a3144fb8645d0aaf3aefda3"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser00FBI0u"
  LogsLogGroup00awssagemakerEndpointsjumpstartdftllama318binstruct2024082816471600b2YBW:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-llama-3-1-8b-instruct-20240828-164716"
      DataProtectionPolicy: {}
  LogsLogStream00eni006644337a584cc34all00EZYpZ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-006644337a584cc34-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog002G9ka"
  LogsLogStream00ecsgenaifrontend4fd1159e56ab43d6b90ea6f9b5a181ab00Yi09X:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/4fd1159e56ab43d6b90ea6f9b5a181ab"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00nsK0P"
  LogsLogStream0020240805LATESTf1e0378da77d480c997783b49d58894600hWoEg:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/05/[$LATEST]f1e0378da77d480c997783b49d588946"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicategoriser217v100x94qz"
  LogsLogStream000c057f98a8217998d2bcb0134635611400EroLR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "0c057f98a8217998d2bcb01346356114"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00A4GeI"
  LogsLogStream0020240917LATEST454a6dfbf7b94ef1a9afe2bfcf96b45100N2eJC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/17/[$LATEST]454a6dfbf7b94ef1a9afe2bfcf96b451"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00WeCZ5"
  LogsLogStream0020241009LATEST51423d03ee0042c297046220c2f4ee2c00ShwHt:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/09/[$LATEST]51423d03ee0042c297046220c2f4ee2c"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketclient00Y3YZl"
  LogsLogStream00183c49bc2cda6a645a0b3a14b0f7fa4400cSiui:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "183c49bc2cda6a645a0b3a14b0f7fa44"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00A4GeI"
  LogsLogStream0020240913LATEST7cf9f44f2582426db1694f9adf08617b00dvldi:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/13/[$LATEST]7cf9f44f2582426db1694f9adf08617b"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00WeCZ5"
  LogsLogStream00FargateTelemetry104400W09vP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1044"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00ChV7w"
  LogsLogStream0020240929LATESTb8e838bdb6bc44898c89d158196b1b6800ezXF1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/29/[$LATEST]b8e838bdb6bc44898c89d158196b1b68"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect00zBj1w"
  LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100ITuEV:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "API-Gateway-Execution-Logs_5nwb46kira/prod-mvp1"
      DataProtectionPolicy: {}
  LogsLogStream0020241001LATEST7f58f3825bf545f79cd2d32a5ca6bbe900OcFKJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]7f58f3825bf545f79cd2d32a5ca6bbe9"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect00zBj1w"
  LogsLogStream0020240814LATEST08bbcbf4f286404a999155394c9efc36002qtsl:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/14/[$LATEST]08bbcbf4f286404a999155394c9efc36"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaiembeddingsgmkr00IWphN"
  LogsLogStream0020241010LATEST3cf35253d08345e7b1194b7b4c9e225d006QnVL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/10/[$LATEST]3cf35253d08345e7b1194b7b4c9e225d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser004QaGP"
  LogsLogStream0020241015LATEST400014b5d52744b98200238b07c1175500pAqt2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/15/[$LATEST]400014b5d52744b98200238b07c11755"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00EZXY8"
  LogsLogStream0020240928LATESTe2d83711b66f465fb375ca75f6dc20a600gC7lR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]e2d83711b66f465fb375ca75f6dc20a6"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect0094HmR"
  LogsLogStream0020241006LATEST6da2300c09f94fdc9c209009fc17eaba00CvJbl:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/06/[$LATEST]6da2300c09f94fdc9c209009fc17eaba"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect0094HmR"
  LogsLogStream00eni00472acc501685539all00lTrOU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-00472acc501685539-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog002G9ka"
  LogsLogGroup00awslambdaStopEC2Instances00IqIr7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/StopEC2Instances"
      DataProtectionPolicy: {}
  LogsLogStream000e3d6e0110f2408a1fff080655b89a3100pw3nU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "0e3d6e0110f2408a1fff080655b89a31"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00DywBR"
  LogsLogGroup00awslambdasgprodgenaipresignedurls300Tuj93:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-genai-presignedurl-s3"
      DataProtectionPolicy: {}
  LogsLogStream00ecsgenaifrontend00debe816ffc4e5e9c4af5a6ad655c5500TOGvT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/00debe816ffc4e5e9c4af5a6ad655c55"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00nsK0P"
  LogsLogStream00sgprodgenaideleteobjects30xubPj6HGXiszOWOFFl64DBhP00b3sVi:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/0xubPj6HGXiszOWOFFl64DBhP"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00jSDBl"
  LogsLogStream0020240914LATEST7716dc12ca6b41edaf1090a8729b4a9700jeNfL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/14/[$LATEST]7716dc12ca6b41edaf1090a8729b4a97"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00WeCZ5"
  LogsLogStream0020241004LATEST46bc99884b3540359fe301548eead8c600CnMAe:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]46bc99884b3540359fe301548eead8c6"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect0094HmR"
  LogsLogStream0020240822LATEST5be21505614446c6bfad61ce8709d48700SFvZ2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/22/[$LATEST]5be21505614446c6bfad61ce8709d487"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdatests3behindnacl00Ii7wV"
  LogsLogStream0020241008LATESTefa41de60ed048458e8015e8ba82698a00hAIcW:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/08/[$LATEST]efa41de60ed048458e8015e8ba82698a"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser004QaGP"
  LogsLogStream0020241010LATEST03c7638a99034d15b3b9a5e0d532e10100C1xEs:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/10/[$LATEST]03c7638a99034d15b3b9a5e0d532e101"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser004QaGP"
  LogsLogStream0020240909LATEST1a4b233a76454df8bd98f1e5b9dc1ca900TNVIK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]1a4b233a76454df8bd98f1e5b9dc1ca9"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00rJhT4"
  LogsLogStream0020240827LATESTb1adb2b9760346c7bf089793df9ee9a00034RiB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/27/[$LATEST]b1adb2b9760346c7bf089793df9ee9a0"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls300Tuj93"
  LogsLogStream0020241209LATESTf8fa83cc4ef44b64a27a0ebca40ceaca009Ol4G:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/09/[$LATEST]f8fa83cc4ef44b64a27a0ebca40ceaca"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdatestretrieves3metadata00QVlYU"
  LogsLogStream0020240909LATEST7efa70e9d74f4a87a0d367f8b572ae31003kxjF:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]7efa70e9d74f4a87a0d367f8b572ae31"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00rJhT4"
  LogsLogGroup00awsvpcGenAIPilotVPCFlowLog002G9ka:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/vpc/GenAI-Pilot-VPC-Flow-Log"
      DataProtectionPolicy: {}
  LogsLogGroup00awslambdasgtestasyncoutputgenerator00GvluI:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-test-async-output-generator"
      DataProtectionPolicy: {}
  LogsLogStream0020241009LATESTc8c2508d08fc4564a945559d5f943df400hKonr:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/09/[$LATEST]c8c2508d08fc4564a945559d5f943df4"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300f2CTg"
  LogsLogStream00sgprodgenaideleteobjects30zlv3ahIn6Fkz6cSCXrGpYTsQ00oxxdE:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/0zlv3ahIn6Fkz6cSCXrGpYTsQ"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00jSDBl"
  LogsLogStream0020240925LATEST6f81619aea2e4583934bb05d0702a0fb00rn9B9:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/25/[$LATEST]6f81619aea2e4583934bb05d0702a0fb"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00S7eF7"
  LogsLogGroup00awslambdapocwebsocketdisconnect0094HmR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/poc-websocket-disconnect"
      DataProtectionPolicy: {}
  LogsLogStream00sgprodgenaideleteobjects34o0kK2YwOGxtVsgcbXumkkeuB00DN3sJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/4o0kK2YwOGxtVsgcbXumkkeuB"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00jSDBl"
  LogsLogStream0020241002LATESTa0e17ad889e24bf9b5d86af61f8695da00R7Xoj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/02/[$LATEST]a0e17ad889e24bf9b5d86af61f8695da"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect00zBj1w"
  LogsLogStream00FargateTelemetry103100VVPYN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1031"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00ChV7w"
  LogsLogGroup00awssagemakerEndpointsllama318binstruct2024081307522753800MLLLv:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/llama-3-1-8b-instruct-2024-08-13-07-52-27-538"
      DataProtectionPolicy: {}
  LogsLogStream0020240909LATESTf1f8448fd0cc4a28ad6027f21e3f5f7900iSOGr:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]f1f8448fd0cc4a28ad6027f21e3f5f79"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00rJhT4"
  LogsLogStream0020240917LATESTad3ae7dc13944ae58d2854e94b75d8ef00MxzsE:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/17/[$LATEST]ad3ae7dc13944ae58d2854e94b75d8ef"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00WeCZ5"
  LogsLogStream0020240909LATEST0ffe1ad8843c4645a81151ef6a339d1600ZCwnO:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]0ffe1ad8843c4645a81151ef6a339d16"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00rJhT4"
  LogsLogStream0020240812LATEST504c125890244d87a80cbac3d8b6d03000a4nsj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/12/[$LATEST]504c125890244d87a80cbac3d8b6d030"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgwssgetCategories00vBYZP"
  LogsLogStream0020240814LATEST2d1f14c5c18041779b35b0fac37a3fa900aTSLa:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/14/[$LATEST]2d1f14c5c18041779b35b0fac37a3fa9"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaiembeddingsgmkr00IWphN"
  LogsLogStream00eni00250e1c3f579834dall00ucgfP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-00250e1c3f579834d-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog002G9ka"
  LogsLogStream0020240919LATEST1a077d779e21435eba3ecf053a46fcb000ldRkM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/19/[$LATEST]1a077d779e21435eba3ecf053a46fcb0"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserpython31200yjdvk"
  LogsLogStream0020240930LATEST03dc052740f447cd870814582c7c07fe00wu6zK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]03dc052740f447cd870814582c7c07fe"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls300Tuj93"
  LogsLogGroup00awssagemakerNotebookInstances00MSjL8:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/NotebookInstances"
      DataProtectionPolicy: {}
  LogsLogStream00llmdeploymentjupyterlog00DByjR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "llm-deployment/jupyter.log"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerNotebookInstances00MSjL8"
  LogsLogStream0020241004LATEST019088bcbfc446c9a32e387f84023c6400dmgKL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]019088bcbfc446c9a32e387f84023c64"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS002E2A5"
  LogsLogStream0020240923LATEST6128631f47c248baa3260d056bf8f51700tSGuW:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/23/[$LATEST]6128631f47c248baa3260d056bf8f517"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00S7eF7"
  LogsLogStream0020240919LATESTd8b8f2523af5456382fe6d429f5a75c700x9igf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/19/[$LATEST]d8b8f2523af5456382fe6d429f5a75c7"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserpython31200yjdvk"
  LogsLogStream001810faf10b3e5bb3dda3945a8776c79e005TJ8c:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1810faf10b3e5bb3dda3945a8776c79e"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00A4GeI"
  LogsLogStream00AllTraffici0496de067f382d2cb00oYiPj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-0496de067f382d2cb"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointsllama318binstruct2024081307522753800MLLLv"
  LogsLogStream00sgprodgenaideleteobjects373xdCK2FXYXd5ZUypmxYkUVls001hcd0:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/73xdCK2FXYXd5ZUypmxYkUVls"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00jSDBl"
  LogsLogStream0020241211LATEST3dbfd1e22e7a4f0486cf5c5c3248515d00M4iNT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/11/[$LATEST]3dbfd1e22e7a4f0486cf5c5c3248515d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdatestuploads300oCAAw"
  LogsLogGroup00awslambdapocwebsocketdefault00VZG0R:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/poc-websocket-default"
      DataProtectionPolicy: {}
  LogsLogStream0020241004LATEST0152c10116ae4a499cdac80730c8aa7e00HJUfS:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]0152c10116ae4a499cdac80730c8aa7e"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS002E2A5"
  LogsLogStream0020240909LATESTefb9459e8c874222b8f1f7dc12267ef400gQXKz:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]efb9459e8c874222b8f1f7dc12267ef4"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00rJhT4"
  LogsLogStream0020241001LATESTa01a892bfa97475e9c55f17ffce0f45a00XXmd5:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]a01a892bfa97475e9c55f17ffce0f45a"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect00zBj1w"
  LogsLogStream00eni01486be1c3a302fa4all00kQU5B:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-01486be1c3a302fa4-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog002G9ka"
  LogsLogStream0020241129LATEST502aa06428724df39bbdfc92b406282400FWxLj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/11/29/[$LATEST]502aa06428724df39bbdfc92b4062824"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStartEC2Instances00k4aCT"
  LogsLogStream0020240821LATESTf77e8ff23e8e4dbf952f4c1ea101c12600qxgq8:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/21/[$LATEST]f77e8ff23e8e4dbf952f4c1ea101c126"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenais3triggertutorial00r22TK"
  LogsLogStream0020240927LATEST1a15ed115bb74433873b6f753429ab2f00hvdq0:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/27/[$LATEST]1a15ed115bb74433873b6f753429ab2f"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00S7eF7"
  LogsLogStream0020240902LATESTfae1b59160b34c54abd6eb47b8e5ae47008gw6o:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/02/[$LATEST]fae1b59160b34c54abd6eb47b8e5ae47"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls300Tuj93"
  LogsLogStream00eni0066703ce301c21efall00R9yVt:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-0066703ce301c21ef-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog002G9ka"
  LogsLogStream00FargateTelemetry106200AWiyc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1062"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00ChV7w"
  LogsLogStream0020241009LATEST66b285ab8ce94f2f965dd712386fffbb00KDIvL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/09/[$LATEST]66b285ab8ce94f2f965dd712386fffbb"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect0094HmR"
  LogsLogStream0020240925LATEST6ba7b4cb1994465f98eda13654b1fbca00F3cDK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/25/[$LATEST]6ba7b4cb1994465f98eda13654b1fbca"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00S7eF7"
  LogsLogStream0020240912LATEST94565f6276af46bea529f1ff86c3e2ee007YVKT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/12/[$LATEST]94565f6276af46bea529f1ff86c3e2ee"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00WeCZ5"
  LogsLogStream00sgprodgenaideleteobjects32ReUyUXu1SXikMHxS95D39BTS00ssZMX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/2ReUyUXu1SXikMHxS95D39BTS"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00jSDBl"
  LogsLogStream0020241008LATEST738cf536f83742e783e6723db4ca7a6500SwN9P:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/08/[$LATEST]738cf536f83742e783e6723db4ca7a65"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser004QaGP"
  LogsLogStream0020241202LATEST0a6cca0c4dcf460481796b62d4f5ba8500C7Wdz:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/02/[$LATEST]0a6cca0c4dcf460481796b62d4f5ba85"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStopEC2Instances00IqIr7"
  LogsLogStream0020241008LATEST22a9178b6f1745fb8bddd6476532c82000aX1iG:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/08/[$LATEST]22a9178b6f1745fb8bddd6476532c820"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketclient00Y3YZl"
  LogsLogStream00sgprodgenaideleteobjects357igNPO9BleMfxKsBhJwk6xtg00fMMP1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/57igNPO9BleMfxKsBhJwk6xtg"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00jSDBl"
  LogsLogGroup00awssagemakerEndpointsjumpstartdfthfsentencesimilarity2024082713235900nnRnR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-hf-sentencesimilarity-20240827-132359"
      DataProtectionPolicy: {}
  LogsLogStream0020241001LATEST474b9ab6e4364158a896974d29f6e2df00YHoIM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]474b9ab6e4364158a896974d29f6e2df"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect00zBj1w"
  LogsLogStream0020241001LATEST475a4e16a7914d4b9a5056b0b670e0bd00n1LSc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]475a4e16a7914d4b9a5056b0b670e0bd"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect0094HmR"
  LogsLogStream0020241002LATESTc6c175bea11a43bbb61e9f50a05fae4500JNwZG:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/02/[$LATEST]c6c175bea11a43bbb61e9f50a05fae45"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect0094HmR"
  LogsLogStream00sgprodgenaideleteobjects365NhFf10TcnUbJAdBzDCvKTPy00P6Jte:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/65NhFf10TcnUbJAdBzDCvKTPy"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00jSDBl"
  LogsLogStream0020240909LATEST136f0ddf190e485b8250026390631b12005mHA7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]136f0ddf190e485b8250026390631b12"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00rJhT4"
  LogsLogStream00AllTraffici0fc21816b5c60af3d0083Y2u:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-0fc21816b5c60af3d"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointsjumpstartdfthfsentencesimilarity2024082803192400fTtHH"
  LogsLogStream00ecsgenaifrontend5667d36819664215a332602ccd4b785700kvV6D:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/5667d36819664215a332602ccd4b7857"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00nsK0P"
  LogsLogStream0020241004LATEST028d6e4575844e06995d5407101d1b0c007KcNR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]028d6e4575844e06995d5407101d1b0c"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS002E2A5"
  LogsLogStream0020240928LATEST35fa8b9e6bf642f0a7eab2a10e99decb00irgOw:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]35fa8b9e6bf642f0a7eab2a10e99decb"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect00zBj1w"
  LogsLogStream0020240930LATEST064ee2d9ba644a9a86b4da542c622c4500ayiGR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]064ee2d9ba644a9a86b4da542c622c45"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls300Tuj93"
  LogsLogStream0020241212LATESTf0d31ae316494820a911b82b05e7793b00GzvlS:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/12/[$LATEST]f0d31ae316494820a911b82b05e7793b"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaSecretsManagergenaiprodauthdbv2autorotate002uS2h"
  LogsLogStream0020240909LATESTdee899c2d89e4219b93309877a9a96ae00CLTNF:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]dee899c2d89e4219b93309877a9a96ae"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00rJhT4"
  LogsLogStream00FargateTelemetry108500lzuao:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1085"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00ChV7w"
  LogsLogStream0020240828LATESTd67cfb28db4f45f9a1f360d54f1d709d00ZvF5X:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/28/[$LATEST]d67cfb28db4f45f9a1f360d54f1d709d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser00FBI0u"
  LogsLogStream00eni00ad0f5dea7abdd85all00P8nK4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-00ad0f5dea7abdd85-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog002G9ka"
  LogsLogStream0020241209LATEST700df9c51e2449339dd57c5f2f2ae4d700WEFdh:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/09/[$LATEST]700df9c51e2449339dd57c5f2f2ae4d7"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdatestuploads300oCAAw"
  LogsLogGroup00awssagemakerEndpointshfsentencesimilaritybgem32024091708162997900YH0TE:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/hf-sentencesimilarity-bge-m3-2024-09-17-08-16-29-979"
      DataProtectionPolicy: {}
  LogsLogStream00AllTraffici0d64ced2e043dad0100m0ilx:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-0d64ced2e043dad01"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointsjumpstartdfthfsentencesimilarity2024082713235900nnRnR"
  LogsLogStream00eni00acf161d99ffeb54all00fX1oW:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-00acf161d99ffeb54-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog002G9ka"
  LogsLogStream00FargateTelemetry1086003malz:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1086"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00ChV7w"
  LogsLogStream0024d5528996bf7093bcc5d579bcfd3de300nenIR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "24d5528996bf7093bcc5d579bcfd3de3"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100ITuEV"
  LogsLogStream0020241013LATESTa94bffe52f6d46d580e7df10dfbbbd8100wKCYD:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/13/[$LATEST]a94bffe52f6d46d580e7df10dfbbbd81"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00EZXY8"
  LogsLogStream0020241211LATEST3c5c4ccebdaf4e388ec0afd01e11b72f00cTHT9:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/11/[$LATEST]3c5c4ccebdaf4e388ec0afd01e11b72f"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaSecretsManagergenaiprodauthdbv2autorotate002uS2h"
  LogsLogStream0020240830LATEST1f120fe37f7c4eb6a01d6cdbe844ead2006GfLe:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/30/[$LATEST]1f120fe37f7c4eb6a01d6cdbe844ead2"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser00FBI0u"
  LogsLogStream0020240930LATEST09c236c77dbe4cc5be914089a4b6665d00XFrYg:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]09c236c77dbe4cc5be914089a4b6665d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketbroadcast00mjMbA"
  LogsLogStream0020240909LATESTe935702c0e9c4e3f938e3e3f3f4d551600kVrI6:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]e935702c0e9c4e3f938e3e3f3f4d5516"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00rJhT4"
  LogsLogGroup00awslambdapocwebsocketsendMessageSQS002E2A5:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/poc-websocket-sendMessageSQS"
      DataProtectionPolicy: {}
  LogsLogStream0020241209LATESTf9b185e6caf6468582ffb76289214d0800JdNpy:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/09/[$LATEST]f9b185e6caf6468582ffb76289214d08"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStopEC2Instances00IqIr7"
  LogsLogStream003abab66dcc43cde6816197fc73f9e2b400QPZDu:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "3abab66dcc43cde6816197fc73f9e2b4"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100ITuEV"
  LogsLogStream0020240913LATEST5347f59beec440c5b0d0afe97311510600vTejL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/13/[$LATEST]5347f59beec440c5b0d0afe973115106"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00WeCZ5"
  LogsLogStream0020240821LATESTa165d4253f42407289967e3c8a19b0f2008MJXi:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/21/[$LATEST]a165d4253f42407289967e3c8a19b0f2"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenais3triggertutorial00r22TK"
  LogsLogStream0020240821LATEST726c4e8df00f454493d684a8fe95f4fa00PfLbI:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/21/[$LATEST]726c4e8df00f454493d684a8fe95f4fa"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenais3triggertutorial00r22TK"
  LogsLogStream0020241008LATEST8199137fd9054cce8259c3ae65610ed7006dSmu:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/08/[$LATEST]8199137fd9054cce8259c3ae65610ed7"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdatestpocwebsocketclient0046KFb"
  LogsLogStream0020240830LATEST19d71a00fa414a68832603f56662cd4e00bSi5U:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/30/[$LATEST]19d71a00fa414a68832603f56662cd4e"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser00FBI0u"
  LogsLogStream00AllTraffici0f72b7fed2bfc0acb000ScGI:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-0f72b7fed2bfc0acb"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointsjumpstartdfthfsentencesimilarity2024081502424300CJ9Ug"
  LogsLogGroup00awslambdapocwebsocketbroadcast00mjMbA:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/poc-websocket-broadcast"
      DataProtectionPolicy: {}
  LogsLogStream0020240923LATESTe000333fb6fd4e42b2d72fe65eb6cf6000YYFs2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/23/[$LATEST]e000333fb6fd4e42b2d72fe65eb6cf60"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00S7eF7"
  LogsLogStream0020240914LATESTfef7662a93454517afecf5584c5080c000puZXZ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/14/[$LATEST]fef7662a93454517afecf5584c5080c0"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00WeCZ5"
  LogsLogStream001a8f3f397a3fb8640b9b75ec29f4959b00GznPV:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1a8f3f397a3fb8640b9b75ec29f4959b"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00DywBR"
  LogsLogGroup00awslambdaSecretsManagergenaiprodauthdbv2autorotate002uS2h:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/SecretsManagergenai-prod-authdbv2-auto-rotate"
      DataProtectionPolicy: {}
  LogsLogStream001878f23512e1fba25dfa1872569c5334005LU49:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1878f23512e1fba25dfa1872569c5334"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00DywBR"
  LogsLogGroup00awssagemakerEndpointsllama318binstruct2024082207502243400FS9kt:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/llama-3-1-8b-instruct-2024-08-22-07-50-22-434"
      DataProtectionPolicy: {}
  LogsLogStream000b9c4a520d14e81723cefa3fbaae4f82003Uyoa:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "0b9c4a520d14e81723cefa3fbaae4f82"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100ITuEV"
  LogsLogStream0020240909LATESTe195786b691f488d9c44785507e40d4000KAPaj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]e195786b691f488d9c44785507e40d40"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00rJhT4"
  LogsLogStream0020241008LATEST50d83272de224d12879719897323837b00vKDzH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/08/[$LATEST]50d83272de224d12879719897323837b"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300f2CTg"
  LogsLogStream0020241001LATESTd6ab32c8e1cf47ecacc8ecbc8c4aa47000nihID:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]d6ab32c8e1cf47ecacc8ecbc8c4aa470"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00EZXY8"
  LogsLogStream00AllTraffici0397f5fa6cb51f3a600Kc8SH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-0397f5fa6cb51f3a6"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointshfsentencesimilaritybgem32024091708162997900YH0TE"
  LogsLogGroup00awssagemakerEndpointsjumpstartdfthfsentencesimilarity2024081502424300CJ9Ug:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-hf-sentencesimilarity-20240815-024243"
      DataProtectionPolicy: {}
  LogsLogStream0020240911LATESTcf50e152f8b241998f77e4922405e6ba00qER0w:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/11/[$LATEST]cf50e152f8b241998f77e4922405e6ba"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls300Tuj93"
  LogsLogStream0020240927LATEST2f2987539738470baa647007bc258590009OEp5:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/27/[$LATEST]2f2987539738470baa647007bc258590"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00S7eF7"
  LogsLogStream0020241004LATEST0da1e88bfaff4bb795928e0e39e8ea91008fAbl:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]0da1e88bfaff4bb795928e0e39e8ea91"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS002E2A5"
  LogsLogStream0020240909LATESTdc285ac8391644e197711c158c79fcac00yJZZI:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]dc285ac8391644e197711c158c79fcac"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00rJhT4"
  LogsLogStream0020241211LATEST144fc59d05e0434b859f5eafb872fa5e00T5CBj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/11/[$LATEST]144fc59d05e0434b859f5eafb872fa5e"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdatestretrieves3metadata00QVlYU"
  LogsLogStream0020240930LATEST3c1bb3898aaf419ba321d77430a9853a00FHwPe:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]3c1bb3898aaf419ba321d77430a9853a"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00DhXrh"
  LogsLogStream001bc5c6d4a34d932a4ceef472781d270800toGtC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1bc5c6d4a34d932a4ceef472781d2708"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00DywBR"
  LogsLogGroup00awslambdasgtestgenaisummariserpython31200yjdvk:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-test-genai-summariser-python312"
      DataProtectionPolicy: {}
  LogsLogStream0020240904LATESTf0c8be1efa33460ca9e5bea99377ace800SrFsL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/04/[$LATEST]f0c8be1efa33460ca9e5bea99377ace8"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00WeCZ5"
  LogsLogGroup00awslambdatests3behindnacl00Ii7wV:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/test-s3-behind-nacl"
      DataProtectionPolicy: {}
  LogsLogStream0020240904LATEST21fa4f81254a4c979bde10a40cf5d15500VnN2t:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/04/[$LATEST]21fa4f81254a4c979bde10a40cf5d155"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300f2CTg"
  LogsLogStream0020240930LATEST14a9affed55140368f12bbdbd63fcfec00HMvrS:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]14a9affed55140368f12bbdbd63fcfec"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00DhXrh"
  LogsLogStream0013984ac07c24536aec85b718571c19c200MBkgN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "13984ac07c24536aec85b718571c19c2"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100ITuEV"
  LogsLogStream0020240830LATEST362f3ea0736c4e298fcf189bab1436d3006jHRb:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/30/[$LATEST]362f3ea0736c4e298fcf189bab1436d3"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser00FBI0u"
  LogsLogGroup00awslambdapocwebsocketsendmessage00gHeot:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/poc-websocket-send-message"
      DataProtectionPolicy: {}
  LogsLogStream0020241118LATEST7a5537d50790475ca000e4a405c5ad5e00MkjVD:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/11/18/[$LATEST]7a5537d50790475ca000e4a405c5ad5e"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStartEC2Instances00k4aCT"
  LogsLogGroup00awslambdapocwebsocketconnect00zBj1w:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/poc-websocket-connect"
      DataProtectionPolicy: {}
  LogsLogStream0020240815LATEST9ec47f29e6c14e3288e57e1cc516d92b00je101:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/15/[$LATEST]9ec47f29e6c14e3288e57e1cc516d92b"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaiembeddingsgmkr00IWphN"
  LogsLogStream0020240928LATEST9b4868e9fb3542c39965dd6d9bff0cb500M2bbJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]9b4868e9fb3542c39965dd6d9bff0cb5"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00DhXrh"
  LogsLogStream0020240828LATEST4258cf24b0ba4a42a6d3ee13be968aa5004LSmq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/28/[$LATEST]4258cf24b0ba4a42a6d3ee13be968aa5"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser00FBI0u"
  LogsLogStream00ecsgenaifalainafrontend508b7d38378c4ab5b99801a10887233200NbWQU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genai-falaina-frontend/508b7d38378c4ab5b99801a108872332"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaitestfalaina00LnMrX"
  LogsLogStream0020241211LATEST4f368bfcbfda4569ad3addf81495aa1300eISQx:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/11/[$LATEST]4f368bfcbfda4569ad3addf81495aa13"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdatestretrieves3metadata00QVlYU"
  LogsLogStream00ecsgenaifrontend1e8e5029d7cd40969d3be02fa773eb6e00iSTMi:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/1e8e5029d7cd40969d3be02fa773eb6e"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00nsK0P"
  LogsLogGroup00awsapigateway0u3tyeizfbpoc00A4GeI:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/apigateway/0u3tyeizfb/poc"
      DataProtectionPolicy: {}
  LogsLogStream0020240905LATEST416211a98ac74f3d8faff4bd83a6590200ddqV6:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/05/[$LATEST]416211a98ac74f3d8faff4bd83a65902"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestasyncoutputgenerator00GvluI"
  LogsLogGroup00awslambdasgprodgenais3triggertutorial00r22TK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-genai-s3-trigger-tutorial"
      DataProtectionPolicy: {}
  LogsLogStream00FargateTelemetry1027004cEW3:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1027"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00ChV7w"
  LogsLogStream0020241008LATEST3c4aa3e9c4624194a4a99516207cc66b00Gk59M:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/08/[$LATEST]3c4aa3e9c4624194a4a99516207cc66b"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300f2CTg"
  LogsLogStream0020241002LATEST75d1e1a527e340538db66ca98c28e47100fPxAe:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/02/[$LATEST]75d1e1a527e340538db66ca98c28e471"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00S7eF7"
  LogsLogStream00sgprodgenaideleteobjects34jXjrkuLwoar1TBFxt7u8FDBr005DbTt:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/4jXjrkuLwoar1TBFxt7u8FDBr"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00jSDBl"
  LogsLogStream0020240909LATESTc0b51d769fe649cf943182fad4e4443900ReKTh:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]c0b51d769fe649cf943182fad4e44439"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00rJhT4"
  LogsLogStream0020240923LATEST09cb0ca96c5c49d29d3c784f18f3fd1500QPy9s:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/23/[$LATEST]09cb0ca96c5c49d29d3c784f18f3fd15"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenais3triggertutorial00r22TK"
  LogsLogStream002531fcaed22a875e897ee7a3ff903b5500CKOlc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2531fcaed22a875e897ee7a3ff903b55"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00A4GeI"
  LogsLogGroup00awslambdasgprodgenairagsummariser004QaGP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-genai-rag-summariser"
      DataProtectionPolicy: {}
  LogsLogStream00AllTraffici09a9ae42c623c849d00Vw2u8:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-09a9ae42c623c849d"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointsllama318binstruct20240820163716022000G1J0"
  LogsLogStream0020241001LATEST56696424c0994713b57eeca2cbc0294100hXIKk:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]56696424c0994713b57eeca2cbc02941"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect00zBj1w"
  LogsLogStream00ecsgenaifrontend437c1d6b2cd44c60b127efa09ee0192c00NiZ0g:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/437c1d6b2cd44c60b127efa09ee0192c"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00nsK0P"
  LogsLogStream00sgprodgenaideleteobjects32YtLTE2Uz1OpgEOSFH1vnY6BO00kqQD3:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/2YtLTE2Uz1OpgEOSFH1vnY6BO"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00jSDBl"
  LogsLogStream0020241010LATEST42997aaac5cc48f9a94794096db3ee8200qu7XG:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/10/[$LATEST]42997aaac5cc48f9a94794096db3ee82"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00EZXY8"
  LogsLogStream0020241010LATEST8487d4b082cc43fdb136f8d2cfa3c46900oKwIU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/10/[$LATEST]8487d4b082cc43fdb136f8d2cfa3c469"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser004QaGP"
  LogsLogStream0020241008LATEST4e7f621bddbc47c9a76176638a3d71ea00gI63a:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/08/[$LATEST]4e7f621bddbc47c9a76176638a3d71ea"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300f2CTg"
  LogsLogStream0020241004LATEST02a7414beeb14370b554037aca6587cf00AMqUl:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]02a7414beeb14370b554037aca6587cf"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS002E2A5"
  LogsLogStream0020240814LATESTc354158514c742d6bcb66bb93b83193d00SnU5w:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/14/[$LATEST]c354158514c742d6bcb66bb93b83193d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaiembeddingsgmkr00IWphN"
  LogsLogStream0020241108LATEST9f497c61124448238f2bcf85588a423f00E2JmN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/11/08/[$LATEST]9f497c61124448238f2bcf85588a423f"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStartEC2Instances00k4aCT"
  LogsLogStream0020241001LATEST03e9403c77db4d76a1a0cc45968e8f8200L654o:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]03e9403c77db4d76a1a0cc45968e8f82"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00EZXY8"
  LogsLogGroup00awslambdaStartEC2Instances00k4aCT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/StartEC2Instances"
      DataProtectionPolicy: {}
  LogsLogStream00eni0136c68eabca8ebcfall00dWJ2A:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-0136c68eabca8ebcf-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog002G9ka"
  LogsLogStream0020240909LATEST43e3800fc42c4ce0a1b2e49ede69fcb900QfqFq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]43e3800fc42c4ce0a1b2e49ede69fcb9"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00rJhT4"
  LogsLogStream0020240828LATEST6f5d08692f0a4da297f5387b1e721d0200bLTpo:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/28/[$LATEST]6f5d08692f0a4da297f5387b1e721d02"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser00FBI0u"
  LogsLogStream0020240909LATESTafefb7b018194b3297bae84396bb2fc300HjzaP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]afefb7b018194b3297bae84396bb2fc3"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00rJhT4"
  LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00rJhT4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/TO_BE_DELETED-test_function_sqs"
      DataProtectionPolicy: {}
  LogsLogStream0020241011100d0733e945a3426f8ea61524eec54d3000bOACu:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/11/[10]0d0733e945a3426f8ea61524eec54d30"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser004QaGP"
  LogsLogStream00315b9d8fa2b60b8710d2aae953554b3200CRStL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "315b9d8fa2b60b8710d2aae953554b32"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00A4GeI"
  LogsLogStream00AllTraffici0334097a1801a33ee00IGafw:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-0334097a1801a33ee"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointsllama318binstruct2024082207502243400FS9kt"
  LogsLogStream00FargateTelemetry100500Xd4mj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1005"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00ChV7w"
  LogsLogStream00094de3b21a0bcea5fb412b58561a8bf000S9ec5:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "094de3b21a0bcea5fb412b58561a8bf0"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100ITuEV"
  LogsLogStream0020240909LATESTca770c37559842ee83e792abe4c478a9004eOJu:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]ca770c37559842ee83e792abe4c478a9"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00rJhT4"
  LogsLogGroup00awslambdasgprodgenaisummariser00FBI0u:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-genai-summariser"
      DataProtectionPolicy: {}
  LogsLogStream00ecsgenaifrontend3b6307a25f3d4e598a78e2a482a5347c00S3FDp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/3b6307a25f3d4e598a78e2a482a5347c"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00nsK0P"
  LogsLogStream0020240930LATEST5ef4843560304235aa081228d7c16da100LmnRI:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]5ef4843560304235aa081228d7c16da1"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00DhXrh"
  LogsLogStream00AllTraffici0fab2597b429b223a00LiINp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-0fab2597b429b223a"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointsjumpstartdfthfsentencesimilarity2024083002440100wya1h"
  LogsLogStream0020241011109a5ab1e146d54a49997aa18893757b9700fzkjj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/11/[10]9a5ab1e146d54a49997aa18893757b97"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser004QaGP"
  LogsLogStream0020240928LATEST4a3c1c879f4a414aa9f1af15c7732a910086EEv:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]4a3c1c879f4a414aa9f1af15c7732a91"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect00zBj1w"
  LogsLogStream0020240910LATEST636c55cb725a433cb044031ddef0897100lNhHy:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/10/[$LATEST]636c55cb725a433cb044031ddef08971"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls300Tuj93"
  LogsLogGroup00awssagemakerEndpointshfsentencesimilaritybgem32024081604164019200aFg9v:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/hf-sentencesimilarity-bge-m3-2024-08-16-04-16-40-192"
      DataProtectionPolicy: {}
  LogsLogStream00FargateTelemetry103900swBFi:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1039"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00ChV7w"
  LogsLogStream0020241119LATEST1a5b2aa78f6f4f519d1f23be9ba491ae00yoxP2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/11/19/[$LATEST]1a5b2aa78f6f4f519d1f23be9ba491ae"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStopEC2Instances00IqIr7"
  LogsLogStream0020240830LATEST73867bf4e8b0481094e8ab1c65e8f96700VMiwA:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/30/[$LATEST]73867bf4e8b0481094e8ab1c65e8f967"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser00FBI0u"
  LogsLogStream00ecsgenaifrontend38d4b7f9542a4b9b917e1f571be013d000OSAKX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/38d4b7f9542a4b9b917e1f571be013d0"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00nsK0P"
  LogsLogStream00sgprodgenaideleteobjects37B8Hr6Lds2unkfkUMUFsgph2400lwwWn:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/7B8Hr6Lds2unkfkUMUFsgph24"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00jSDBl"
  LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00S7eF7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/DLQ-handler-sg-prod-genai-summariser"
      DataProtectionPolicy: {}
  LogsLogStream0020241008LATEST3a47cdbffca046ca9c4e46992a30b52c00VHSjf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/08/[$LATEST]3a47cdbffca046ca9c4e46992a30b52c"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser004QaGP"
  LogsLogStream0020241001LATEST625175414f44451baf6bf4432dc9c05f00AUdTJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]625175414f44451baf6bf4432dc9c05f"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect0094HmR"
  LogsLogStream0020240930LATEST2bf0b26606e94f079f6b7f50d1a6257b00yNPOx:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]2bf0b26606e94f079f6b7f50d1a6257b"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00DhXrh"
  LogsLogStream0020240912LATEST31a0b42a1ba24921a480522d541af80100WeuOz:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/12/[$LATEST]31a0b42a1ba24921a480522d541af801"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00WeCZ5"
  LogsLogStream0020240928LATEST750dd7351de74dfeb5e481c6da65f6ae0042pnR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]750dd7351de74dfeb5e481c6da65f6ae"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00DhXrh"
  LogsLogStream0020241015LATESTf5d3330d32354bad85aa6c153c21b1ff00inmUv:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/15/[$LATEST]f5d3330d32354bad85aa6c153c21b1ff"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00EZXY8"
  LogsLogStream0020240907LATEST8de2518858e64f28a6de454154cd8a3000J70qt:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/07/[$LATEST]8de2518858e64f28a6de454154cd8a30"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestasyncoutputgenerator00GvluI"
  LogsLogGroup00awslambdasgwssgetCategories00vBYZP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-wss-getCategories"
      DataProtectionPolicy: {}
  LogsLogStream00ecsgenaifrontend6028905ce2194e418de42d7bbbbee98e00C9PQZ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/6028905ce2194e418de42d7bbbbee98e"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00nsK0P"
  LogsLogStream00291b11f92b7e3212d597996b6581386200ZCxNO:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "291b11f92b7e3212d597996b65813862"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00A4GeI"
  LogsLogStream0020241007LATEST2bb5b5319bfd4127bfa3088f276d3f64002gPSp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/07/[$LATEST]2bb5b5319bfd4127bfa3088f276d3f64"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser004QaGP"
  LogsLogGroup00awslambdatestretrieves3metadata00QVlYU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/test-retrieve-s3-metadata"
      DataProtectionPolicy: {}
  LogsLogStream0020240928LATEST0a78d8ecbcc943b182a56a066ae08c6500EUZ1Z:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]0a78d8ecbcc943b182a56a066ae08c65"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00DhXrh"
  LogsLogStream0020241002LATEST2673e6bd776143a2906981e3fb799ed100VSbtv:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/02/[$LATEST]2673e6bd776143a2906981e3fb799ed1"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser004QaGP"
  LogsLogStream0020241125LATEST215d16456dfd49d9afd8bfd6ac3e129e003Eji2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/11/25/[$LATEST]215d16456dfd49d9afd8bfd6ac3e129e"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStartEC2Instances00k4aCT"
  LogsLogStream0020240909LATESTe29b7aa0ed62408fb918ac341c6a01f400NExcS:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]e29b7aa0ed62408fb918ac341c6a01f4"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00rJhT4"
  LogsLogStream0020240930LATESTce847f3fac7e47ee9ac5ec1131bacfeb00ej8c5:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]ce847f3fac7e47ee9ac5ec1131bacfeb"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect0094HmR"
  LogsLogStream00sgprodgenaideleteobjects33XpGIef0qoJW9FEWZJBo3TGX500SOMfw:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/3XpGIef0qoJW9FEWZJBo3TGX5"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00jSDBl"
  LogsLogStream0020241011LATEST2fd2c0601bf644e0a9cc081d1e8ea13d00uFfTI:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/11/[$LATEST]2fd2c0601bf644e0a9cc081d1e8ea13d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300f2CTg"
  LogsLogStream00eni002c4d0a5a46578deall00ya7P8:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-002c4d0a5a46578de-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog002G9ka"
  LogsLogStream00eni00cc572895392ba98all001Z4zy:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-00cc572895392ba98-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog002G9ka"
  LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00EZXY8:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-test-genai-summariser-deletechatfunction"
      DataProtectionPolicy: {}
  LogsLogStream00sgprodgenaideleteobjects30izWfP4trT5fQOBjzZRajmYGM0084F9I:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/0izWfP4trT5fQOBjzZRajmYGM"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00jSDBl"
  LogsLogStream0020240909LATEST5c43e1b4641e42f7b30626558a636d8700SqIxW:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]5c43e1b4641e42f7b30626558a636d87"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00rJhT4"
  LogsLogStream0020241009LATEST3624338e90ad4188b3dc21627b2370d2002fIku:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/09/[$LATEST]3624338e90ad4188b3dc21627b2370d2"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser004QaGP"
  LogsLogStream0020240926LATESTe499690395b64ca2a0c44ed4edc3d10500jnwMB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/26/[$LATEST]e499690395b64ca2a0c44ed4edc3d105"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00S7eF7"
  LogsLogStream0020240911LATESTf41b55e40b1347a58708b70e8f64b7a500vuGOk:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/11/[$LATEST]f41b55e40b1347a58708b70e8f64b7a5"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls300Tuj93"
  LogsLogStream00AllTraffici0835074300dab267000fQp2t:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-0835074300dab2670"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointshfsentencesimilaritybgem32024081604164019200aFg9v"
  LogsLogStream0020241001LATEST4100180aae734dea94753a444af0716700mZmrb:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]4100180aae734dea94753a444af07167"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect00zBj1w"
  LogsLogStream0020241004LATEST062a45580c7f43d3818c37b31fe0118e00J9I88:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]062a45580c7f43d3818c37b31fe0118e"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS002E2A5"
  LogsLogStream0020240822LATEST4f6a82c8218e4506bbd7eab0f65217a900aoJmt:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/22/[$LATEST]4f6a82c8218e4506bbd7eab0f65217a9"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdatests3behindnacl00Ii7wV"
  LogsLogStream000efdb7a77d7b47c4113160b16e32c2f400qRcb6:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "0efdb7a77d7b47c4113160b16e32c2f4"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00DywBR"
  LogsLogStream0020240828LATEST03ec000340a745438245efafb4410d0500LThse:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/28/[$LATEST]03ec000340a745438245efafb4410d05"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser00FBI0u"
  LogsLogStream0020241006LATEST52df45b72330456f8001190a4db14cb600eLjky:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/06/[$LATEST]52df45b72330456f8001190a4db14cb6"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect0094HmR"
  LogsLogGroup00awslambdasgprodgenaideleteobjects300f2CTg:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-genai-deleteobject-s3"
      DataProtectionPolicy: {}
  LogsLogGroup00ecsdevcontainernodejs20008STYN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/ecs/devcontainer-nodejs20"
      DataProtectionPolicy: {}
  LogsLogStream0020241009LATEST88423d0186484fe1a07f1580594d89c300SDjul:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/09/[$LATEST]88423d0186484fe1a07f1580594d89c3"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser004QaGP"
  LogsLogStream0020241008LATEST19ab6866494f437ebdfa54683c50413800mJQDg:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/08/[$LATEST]19ab6866494f437ebdfa54683c504138"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser004QaGP"
  LogsLogGroup00testwebsocket00DywBR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "test-websocket"
      DataProtectionPolicy: {}
  LogsLogStream00eni00c43afc867ed2ac8all00jlfdl:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-00c43afc867ed2ac8-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog002G9ka"
  LogsLogStream0020240904LATESTfbb0e7352bc043a4a6607cb6d5e5240b00IoaAS:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/04/[$LATEST]fbb0e7352bc043a4a6607cb6d5e5240b"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls300Tuj93"
  LogsLogStream00eni0041dc7a49a04889call00ey02I:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-0041dc7a49a04889c-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog002G9ka"
  LogsLogStream0020240928LATEST235fab82c3f74053ba724837ac4135fa00SYKKr:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]235fab82c3f74053ba724837ac4135fa"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00DhXrh"
  LogsLogStream0020241001LATEST86eade0353874f69952567fa7c563ca000uUeDI:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]86eade0353874f69952567fa7c563ca0"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00S7eF7"
  LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00ChV7w:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      RetentionInDays: 1
      LogGroupName: "/aws/ecs/containerinsights/GenAI-Pilot-Fargate/performance"
      DataProtectionPolicy: {}
  LogsLogGroup00awslambdapocwebsocketclient00Y3YZl:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/poc-websocket-client"
      DataProtectionPolicy: {}
  LogsLogStream0020240813LATESTf49b26d3206c4f948acf30e577c18fac00HBTos:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/13/[$LATEST]f49b26d3206c4f948acf30e577c18fac"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgwssgetCategories00vBYZP"
  LogsLogStream0020240911LATEST37c820053ef64d01be53826cf4ae833300b924u:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/11/[$LATEST]37c820053ef64d01be53826cf4ae8333"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300f2CTg"
  LogsLogGroup00awslambdasgprodgenaicategoriser217v100x94qz:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-genai-categoriser-217-v1"
      DataProtectionPolicy: {}
  LogsLogGroup00ecsgenaitestfalaina00LnMrX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/ecs/genai-test-falaina"
      DataProtectionPolicy: {}
  LogsLogStream0020240930LATEST1ceff9d7fed94af59087bfbfbe1da4fb00085E7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]1ceff9d7fed94af59087bfbfbe1da4fb"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00DhXrh"
  LogsLogStream0020240930LATEST0d99f7b87a4b4d0287cd3b69201233f900AiVUa:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]0d99f7b87a4b4d0287cd3b69201233f9"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls300Tuj93"
  LogsLogStream0020241209LATESTcddbdebbd2044cdcb899e4eb3a4e740d00DA1Tt:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/09/[$LATEST]cddbdebbd2044cdcb899e4eb3a4e740d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdatestretrieves3metadata00QVlYU"
  LogsLogStream00AllTraffici08c54f254e61d887600YkTfR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-08c54f254e61d8876"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointsjumpstartdftllama318binstruct2024082816471600b2YBW"
  LogsLogStream0020240923LATEST595b893193404cb886d6c357288d91fc00J426X:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/23/[$LATEST]595b893193404cb886d6c357288d91fc"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00S7eF7"
  LogsLogStream00ecsgenaifrontend069e424c0fa34cf7898e377e62f0184f00plSA8:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/069e424c0fa34cf7898e377e62f0184f"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00nsK0P"
  LogsLogStream0020240909LATEST001f5944f6cd4b34927097f0e214fe0b00vHhNo:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]001f5944f6cd4b34927097f0e214fe0b"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00nzrNX"
  LogsLogStream0020241010LATEST84abbdd52ba44d25819e6d96994bf206003gtEz:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/10/[$LATEST]84abbdd52ba44d25819e6d96994bf206"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300yysP6"
  LogsLogStream0020240919LATEST8e58bd315c0543018d653d7501911da4004RYMc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/19/[$LATEST]8e58bd315c0543018d653d7501911da4"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserpython31200rEFDS"
  LogsLogGroup00ecsgenaitestfalaina00u3NsQ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/ecs/genai-test-falaina"
      DataProtectionPolicy: {}
  LogsLogStream0020241001LATEST2bc1da47127e4c95b3448980f1816d9000FwWVn:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]2bc1da47127e4c95b3448980f1816d90"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00lougt"
  LogsLogStream0020241211LATEST0a227b93deed455a99875898e8ec60c300JZpF7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/11/[$LATEST]0a227b93deed455a99875898e8ec60c3"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaSecretsManagergenaiprodauthdbv2autorotate00GEcgV"
  LogsLogStream0020241004LATEST0b736ad578b24ad0adb2bb7b58d95fcc00U5D0O:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]0b736ad578b24ad0adb2bb7b58d95fcc"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS00U5oAY"
  LogsLogStream0020241001LATESTf87a8a50ef4c4b928137e6fc5370b60300P78zJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]f87a8a50ef4c4b928137e6fc5370b603"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect00rxIns"
  LogsLogStream0020241004LATEST027f57abeecc4fe4944695d4cc77306c00shX5f:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]027f57abeecc4fe4944695d4cc77306c"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS00U5oAY"
  LogsLogStream0020240906LATESTa024c9a36b1e407ca1d069a108d9357a00bHxkl:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/06/[$LATEST]a024c9a36b1e407ca1d069a108d9357a"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls3007EPvz"
  LogsLogStream0020240928LATEST51bd831794274aeab6c711c6c591c0ed0019c3j:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]51bd831794274aeab6c711c6c591c0ed"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00lmGzm"
  LogsLogStream0020240928LATEST49fc2e5f60e84253a4f8fef983392f4600db7xK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]49fc2e5f60e84253a4f8fef983392f46"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls3007EPvz"
  LogsLogStream00263893d281748260ccdb0d7de242756f0078PE0:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "263893d281748260ccdb0d7de242756f"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00YXzVq"
  LogsLogGroup00awslambdapocwebsocketsendmessage003aJRL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/poc-websocket-send-message"
      DataProtectionPolicy: {}
  LogsLogStream00ecsdevcontainernodejs20b7ea8353fd0b4173adcef596ba2f5c0300rrFS9:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/devcontainer-nodejs20/b7ea8353fd0b4173adcef596ba2f5c03"
      LogGroupName:
        Ref: "LogsLogGroup00ecsdevcontainernodejs2000ilPgk"
  LogsLogStream0020240929LATEST05c0337b985d499598e3f7078731d9b300BT0hh:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/29/[$LATEST]05c0337b985d499598e3f7078731d9b3"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendmessage003aJRL"
  LogsLogStream0020240905LATEST4c7a66ec852e4a51872ef1b9d6d3ec8f00WNIyZ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/05/[$LATEST]4c7a66ec852e4a51872ef1b9d6d3ec8f"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300yysP6"
  LogsLogStream0020240912LATEST82052f7243d342b7918c88ed4c0efe8a00dYMn9:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/12/[$LATEST]82052f7243d342b7918c88ed4c0efe8a"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00wFhbQ"
  LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00uFbwB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      RetentionInDays: 1
      LogGroupName: "/aws/ecs/containerinsights/GenAI-Pilot-Fargate/performance"
      DataProtectionPolicy: {}
  LogsLogStream0020240822LATESTc627cb46415046048fa139ca4ed0292000H5CR9:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/22/[$LATEST]c627cb46415046048fa139ca4ed02920"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdatests3behindnacl00QJdeB"
  LogsLogStream0020240830LATEST49fab815544e48268232309058ab807c00TEQfu:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/30/[$LATEST]49fab815544e48268232309058ab807c"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser003jUM2"
  LogsLogGroup00awssagemakerEndpointsjumpstartdftllama318binstruct2024082811335700jH0DE:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-llama-3-1-8b-instruct-20240828-113357"
      DataProtectionPolicy: {}
  LogsLogStream0020240827LATESTd09379da065c48ce9c0c69017f7d8775000WqkB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/27/[$LATEST]d09379da065c48ce9c0c69017f7d8775"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls3007EPvz"
  LogsLogStream002248a20affc1ddd396ed7d20605212e800ZHOsr:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2248a20affc1ddd396ed7d20605212e8"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00NZEvy"
  LogsLogGroup00awsapigatewaywelcome00WpsaO:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/apigateway/welcome"
      DataProtectionPolicy: {}
  LogsLogStream00ecsgenaifrontend09f33b22bd7048809f5ddc03f29b698000LmHO5:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/09f33b22bd7048809f5ddc03f29b6980"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00sHG8H"
  LogsLogStream0020241004LATEST01b999c61cb74d0a94cc4df9c2599106008XSqC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]01b999c61cb74d0a94cc4df9c2599106"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS00U5oAY"
  LogsLogStream000dfc958e877a0807de6a2163788aec1c00jL8nc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "0dfc958e877a0807de6a2163788aec1c"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100JqWVy"
  LogsLogStream0020241002LATEST4870f426784147b88a7d754abca302ea00sBiAP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/02/[$LATEST]4870f426784147b88a7d754abca302ea"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00lougt"
  LogsLogStream00sgprodgenaideleteobjects30zJd53taQwH4p4GB9TyV3hJUe00N63Dk:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/0zJd53taQwH4p4GB9TyV3hJUe"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00TzcCv"
  LogsLogStream0020240829LATEST68ffc9c267204246b017d57ff24b30e800OjO9R:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/29/[$LATEST]68ffc9c267204246b017d57ff24b30e8"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser003jUM2"
  LogsLogStream0020241211LATEST4fb109ff07cf42bfbbed6bac72b07add00JW9j8:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/11/[$LATEST]4fb109ff07cf42bfbbed6bac72b07add"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStopEC2Instances00RxrSp"
  LogsLogStream0020240917LATEST2eb8baaf022048afbf6133c57b6b05cc006jKuK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/17/[$LATEST]2eb8baaf022048afbf6133c57b6b05cc"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00wFhbQ"
  LogsLogStream0020241009LATESTf5470c2fc78b450390c0564799a378fa004zoCT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/09/[$LATEST]f5470c2fc78b450390c0564799a378fa"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketclient004UHPI"
  LogsLogStream00AllTraffici03da4cb617689a33b00GTU4P:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-03da4cb617689a33b"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointsjumpstartdftllama318binstruct2024082811335700jH0DE"
  LogsLogStream0020240906LATEST601d0367742b453583c845be0de2cafb00CYxjw:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/06/[$LATEST]601d0367742b453583c845be0de2cafb"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls3007EPvz"
  LogsLogStream0020241001LATEST429464a943414ce0bdf323f47c23b8fe00tBN79:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]429464a943414ce0bdf323f47c23b8fe"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00Dyqzr"
  LogsLogStream000eb885ec4dfd107aabc97f9b850554c900b8Mik:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "0eb885ec4dfd107aabc97f9b850554c9"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00NZEvy"
  LogsLogStream002c771c9905e01c55445dce202fa1ee5c00jomLa:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2c771c9905e01c55445dce202fa1ee5c"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00YXzVq"
  LogsLogStream0020240926LATEST56575824d3be4402bf6bba334158c56000OvMfh:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/26/[$LATEST]56575824d3be4402bf6bba334158c560"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00lougt"
  LogsLogStream0020241010LATEST6af130a1335f4c56b3f2d239f00cf39800XKlNU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/10/[$LATEST]6af130a1335f4c56b3f2d239f00cf398"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser00Ow1kn"
  LogsLogStream0020240909LATEST1b9a35ce858f4c779056fe3def2c9b4500uavRZ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]1b9a35ce858f4c779056fe3def2c9b45"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00nzrNX"
  LogsLogStream0020240829LATESTc6053d3b9130452fb47b0d2d4b610bdb00A07xN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/29/[$LATEST]c6053d3b9130452fb47b0d2d4b610bdb"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser003jUM2"
  LogsLogGroup00ecsgenaipilot00sHG8H:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/ecs/genaipilot"
      DataProtectionPolicy: {}
  LogsLogStream0020240910LATEST840266b6ebfc4ac2a2d51797ef62d3e1003afQH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/10/[$LATEST]840266b6ebfc4ac2a2d51797ef62d3e1"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls3007EPvz"
  LogsLogStream0020241004LATEST258a24fb298c4d33bf81414ff19c0f8c006Sjb9:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]258a24fb298c4d33bf81414ff19c0f8c"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser00Ow1kn"
  LogsLogGroup00awslambdaSecretsManagergenaiprodauthdbv2autorotate00GEcgV:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/SecretsManagergenai-prod-authdbv2-auto-rotate"
      DataProtectionPolicy: {}
  LogsLogStream0029e8178e6b63ae8f5ee2e187c117ab7100uMcKX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "29e8178e6b63ae8f5ee2e187c117ab71"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00YXzVq"
  LogsLogStream002024093005333500oXn1H:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024-09-30_05-33-35"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigatewaywelcome00WpsaO"
  LogsLogStream0020240917LATEST2dce5c9f2f48474d9ba8a368e3f5e6d800UUkfc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/17/[$LATEST]2dce5c9f2f48474d9ba8a368e3f5e6d8"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00wFhbQ"
  LogsLogStream0020241119LATESTf3d72fa1e9bb4ccfae71c29404c7f06300h7AZ8:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/11/19/[$LATEST]f3d72fa1e9bb4ccfae71c29404c7f063"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStartEC2Instances00A0lOC"
  LogsLogStream00FargateTelemetry102900NegLA:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1029"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00uFbwB"
  LogsLogStream0020240928LATEST0d1c591d596d4d25b635a76f53ca985900kZSch:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]0d1c591d596d4d25b635a76f53ca9859"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00lmGzm"
  LogsLogStream0020241105LATESTaecd5478217d41508960bd5c1bb0142a00me7NK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/11/05/[$LATEST]aecd5478217d41508960bd5c1bb0142a"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenais3triggertutorial00j0pfP"
  LogsLogStream00eni012b958c9c8265c75all00foIqy:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-012b958c9c8265c75-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00aAnuf"
  LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00lougt:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/DLQ-handler-sg-prod-genai-summariser"
      DataProtectionPolicy: {}
  LogsLogStream00eni001aa75a6943d5198all0010tAS:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-001aa75a6943d5198-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00aAnuf"
  LogsLogStream00ecsgenaifrontend5fb327d6d25d45c9b77260e36e79948100IjdcN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/5fb327d6d25d45c9b77260e36e799481"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00sHG8H"
  LogsLogStream0020240930LATEST1ce1627c88214c4e80e8136b1912d6d700v3mYJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]1ce1627c88214c4e80e8136b1912d6d7"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00lmGzm"
  LogsLogStream0020241004LATEST0bca0e897ade46b9b07b2164ff1abafd00jXfmS:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]0bca0e897ade46b9b07b2164ff1abafd"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS00U5oAY"
  LogsLogStream0020241010LATEST2c130abf3dff47a9a6a2da68e513011c009BqWt:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/10/[$LATEST]2c130abf3dff47a9a6a2da68e513011c"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300yysP6"
  LogsLogStream0020241008LATEST8f2bd52c69ab4c609051d1c9d03d188500yyYf3:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/08/[$LATEST]8f2bd52c69ab4c609051d1c9d03d1885"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser00Ow1kn"
  LogsLogStream0020240904LATESTd497c831d40541b2bc82c1819dacb08900PMXcx:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/04/[$LATEST]d497c831d40541b2bc82c1819dacb089"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300yysP6"
  LogsLogGroup00awslambdapocwebsocketdisconnect00ezS7q:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/poc-websocket-disconnect"
      DataProtectionPolicy: {}
  LogsLogStream0020241004LATEST05e0838557fd4fdb826d3d3b3fe3106400L4EdG:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]05e0838557fd4fdb826d3d3b3fe31064"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS00U5oAY"
  LogsLogStream0020241004LATEST06e767a23d4a4ecc9007c0a1ed08e642002p3ca:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]06e767a23d4a4ecc9007c0a1ed08e642"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS00U5oAY"
  LogsLogStream00357a0faa6ecd8bb7d82da1fb7d39e45300mvUaI:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "357a0faa6ecd8bb7d82da1fb7d39e453"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00NZEvy"
  LogsLogStream00FargateTelemetry105300eMjGU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1053"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00uFbwB"
  LogsLogStream0020240929LATESTdc616971f849499fb511be34c44daebe008Ywro:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/29/[$LATEST]dc616971f849499fb511be34c44daebe"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect00rxIns"
  LogsLogStream0020240830LATEST685c6e3e9d3342cdaa92820336ff29ec00mpEMl:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/30/[$LATEST]685c6e3e9d3342cdaa92820336ff29ec"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenais3triggertutorial00j0pfP"
  LogsLogStream0020240830LATEST189c7436153f4b46b5168fd4609cf30800TpCYu:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/30/[$LATEST]189c7436153f4b46b5168fd4609cf308"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser003jUM2"
  LogsLogStream00eni00eac7703d746cb35all00bzAvm:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-00eac7703d746cb35-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00aAnuf"
  LogsLogStream0020240927LATEST2de409a4e6d744da968360c364994ea100eXVTq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/27/[$LATEST]2de409a4e6d744da968360c364994ea1"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls3007EPvz"
  LogsLogStream0020240909LATEST596aeb0f9291495aaad5c3920cddd40800ctj5V:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]596aeb0f9291495aaad5c3920cddd408"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00nzrNX"
  LogsLogStream00eni000f5a9b858830277all00wu0Sf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-000f5a9b858830277-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00aAnuf"
  LogsLogStream0020240828LATEST12790ac1611d460bac0e5f067aa2f9f200Jgzb9:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/28/[$LATEST]12790ac1611d460bac0e5f067aa2f9f2"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser003jUM2"
  LogsLogGroup00awslambdasgwssconnect00bnz9B:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-wss-connect"
      DataProtectionPolicy: {}
  LogsLogStream0020240929LATEST34a8340991eb4d53b1753210aa268fc300Nh84V:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/29/[$LATEST]34a8340991eb4d53b1753210aa268fc3"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendmessage003aJRL"
  LogsLogStream0020240827LATESTe8698a4de41e49618f1600ccc31ce7d400EFypj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/27/[$LATEST]e8698a4de41e49618f1600ccc31ce7d4"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls3007EPvz"
  LogsLogStream00ecsgenaifrontend21a1a23a3f7d4ee8bc68d5ee3f02894f00MmRDj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/21a1a23a3f7d4ee8bc68d5ee3f02894f"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00sHG8H"
  LogsLogStream0020240925LATEST6425b9037b244b7787d453f3a6f1632f00lUuJF:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/25/[$LATEST]6425b9037b244b7787d453f3a6f1632f"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserpython31200rEFDS"
  LogsLogStream00ecsgenaifalainafrontendaa2a1fbf4542499bae906481a54b776d00PKRzp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genai-falaina-frontend/aa2a1fbf4542499bae906481a54b776d"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaitestfalaina00u3NsQ"
  LogsLogStream00sgprodgenaideleteobjects33gZY2QlyloTO0CGvJCu84THKi00YOzP8:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/3gZY2QlyloTO0CGvJCu84THKi"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00TzcCv"
  LogsLogStream0014f2d81b70a1a9ed65fd9fad69587a6200yt5XH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "14f2d81b70a1a9ed65fd9fad69587a62"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00YXzVq"
  LogsLogStream0020241010LATEST31e2818d45b443218b5df130f353723d00IJ3DY:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/10/[$LATEST]31e2818d45b443218b5df130f353723d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser00Ow1kn"
  LogsLogStream0020241114LATESTdcfc7074a9334c39a6796bce6f4b684e002Owqq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/11/14/[$LATEST]dcfc7074a9334c39a6796bce6f4b684e"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStartEC2Instances00A0lOC"
  LogsLogStream0020240830LATESTad8b789490214f5ba6f1e37da8015ab200tY0LU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/30/[$LATEST]ad8b789490214f5ba6f1e37da8015ab2"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenais3triggertutorial00j0pfP"
  LogsLogStream0008ae998bd2e3b0bc0a72713f41297fd50045Yl4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "08ae998bd2e3b0bc0a72713f41297fd5"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00YXzVq"
  LogsLogStream0020241011LATEST2337cdb46d074c219a5e5ddf2ee03d4300vXuOr:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/11/[$LATEST]2337cdb46d074c219a5e5ddf2ee03d43"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00Dyqzr"
  LogsLogStream0020241009LATESTc22e107bf1e64ce291d496cbef2c2425005Ipyz:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/09/[$LATEST]c22e107bf1e64ce291d496cbef2c2425"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketclient004UHPI"
  LogsLogStream0020240812LATEST0004d786b0414c049b7bc9c2f45f35fe00eL0ZF:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/12/[$LATEST]0004d786b0414c049b7bc9c2f45f35fe"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgwssconnect00bnz9B"
  LogsLogStream00FargateTelemetry102300EPjqm:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1023"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00uFbwB"
  LogsLogGroup00awslambdatestuploads300jmiPM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/test-upload-s3"
      DataProtectionPolicy: {}
  LogsLogStream00sgprodgenaideleteobjects30T60JfpCxukAZxpMg37jCoG2b00SPWVz:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/0T60JfpCxukAZxpMg37jCoG2b"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00TzcCv"
  LogsLogStream00ecsgenaifrontend2934207f374344cc9500ffcfcf97c0e3009mEnx:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/2934207f374344cc9500ffcfcf97c0e3"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00sHG8H"
  LogsLogStream0020241121LATESTb35d664ad39f43a592140fce3559b39c00yXe1h:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/11/21/[$LATEST]b35d664ad39f43a592140fce3559b39c"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStartEC2Instances00A0lOC"
  LogsLogStream00ecsgenaifrontend6e7e462252bb4a7abd63465b2499488800oI7Kt:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/6e7e462252bb4a7abd63465b24994888"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00sHG8H"
  LogsLogStream0020240909LATEST41429cceff734022905225e3932334d200aCao9:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]41429cceff734022905225e3932334d2"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00nzrNX"
  LogsLogStream0020240909LATEST85a1f5ffb21f47e9a1890d761554d49d00KmKu2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]85a1f5ffb21f47e9a1890d761554d49d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00nzrNX"
  LogsLogStream0020240929LATESTbdf80d42dde041dda092cfe32bef19ae00q9S8S:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/29/[$LATEST]bdf80d42dde041dda092cfe32bef19ae"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect00rxIns"
  LogsLogStream0020240928LATESTa0fa361b4aef4284867e28850ce64e0b00iUsvm:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]a0fa361b4aef4284867e28850ce64e0b"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect00ezS7q"
  LogsLogStream0032d390e1cae81723563c891228787e7a00efPUU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "32d390e1cae81723563c891228787e7a"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100JqWVy"
  LogsLogStream00ecsgenaifrontend2913047b1c1947aba3d81647f722b41900g7Iz5:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/2913047b1c1947aba3d81647f722b419"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00sHG8H"
  LogsLogStream0020241211LATEST625aca8a5584491786e483658f3ec2a100bkEQv:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/11/[$LATEST]625aca8a5584491786e483658f3ec2a1"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdatestretrieves3metadata00Y60lp"
  LogsLogStream0020240812LATEST932980a952c54f709bca88431e82d83900lw5vJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/12/[$LATEST]932980a952c54f709bca88431e82d839"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgwssgetCategories002aIyX"
  LogsLogGroup00awslambdasgprodgenairagsummariser00Ow1kn:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-genai-rag-summariser"
      DataProtectionPolicy: {}
  LogsLogStream003457cdd267b501eaeb331dda155d71c000Ph7eT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "3457cdd267b501eaeb331dda155d71c0"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100JqWVy"
  LogsLogStream0020240930LATEST63d2e371746844e781348c09014e30a30023t7z:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]63d2e371746844e781348c09014e30a3"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls3007EPvz"
  LogsLogStream0020240928LATEST982fc5f4bf3b48378d0ec57117602bcc0071MwQ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]982fc5f4bf3b48378d0ec57117602bcc"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00lmGzm"
  LogsLogStream001919d7ff6ae7c5d6c8231069a8ac237500RzBiU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1919d7ff6ae7c5d6c8231069a8ac2375"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100JqWVy"
  LogsLogStream0020240917LATESTc26e1bec88ac413db5088f87cc906c9700lLto8:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/17/[$LATEST]c26e1bec88ac413db5088f87cc906c97"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00wFhbQ"
  LogsLogGroup00awslambdainsights00TzcCv:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda-insights"
      DataProtectionPolicy: {}
  LogsLogStream0020241009LATEST22ce2e97943d4765b21428e580bb7c2800kubtD:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/09/[$LATEST]22ce2e97943d4765b21428e580bb7c28"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300yysP6"
  LogsLogStream002aeb960520f4531d3b993425bfb8f96e0071hrl:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2aeb960520f4531d3b993425bfb8f96e"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100JqWVy"
  LogsLogStream0020240815LATEST116c749ee1b54e2f80f3200eb3d57e7800BMirI:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/15/[$LATEST]116c749ee1b54e2f80f3200eb3d57e78"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaiembeddingsgmkr00A9Req"
  LogsLogStream0020241001LATEST3713f5950c194fb4a44f93a94f10d76d00d05ju:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]3713f5950c194fb4a44f93a94f10d76d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect00rxIns"
  LogsLogStream0020241001LATEST7e55e323d03047f8b3c952e77271db9100hwx0f:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]7e55e323d03047f8b3c952e77271db91"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect00ezS7q"
  LogsLogStream0020241007LATEST859f553eceae40ffab41943654122bf300rW6aS:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/07/[$LATEST]859f553eceae40ffab41943654122bf3"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect00ezS7q"
  LogsLogStream0020240928LATEST2d0ebf0bf29c4f7b938a88f80b089bbd0067fcs:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]2d0ebf0bf29c4f7b938a88f80b089bbd"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00lmGzm"
  LogsLogStream0020240828LATEST593c8223d593470bb1f863c4557186cb00M0GBI:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/28/[$LATEST]593c8223d593470bb1f863c4557186cb"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser003jUM2"
  LogsLogStream0020241010LATESTcf7d1c7ab23b4c0991fa49431c9b581f00gXD4k:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/10/[$LATEST]cf7d1c7ab23b4c0991fa49431c9b581f"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser00Ow1kn"
  LogsLogStream0020241002LATEST7b19e6e886df4eeca5e7f718ceadaea600ZuANB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/02/[$LATEST]7b19e6e886df4eeca5e7f718ceadaea6"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdefault00BiMQU"
  LogsLogStream0020241129LATEST3a4ef26a1bae48988711c5c7744514f900G80Wm:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/11/29/[$LATEST]3a4ef26a1bae48988711c5c7744514f9"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStopEC2Instances00RxrSp"
  LogsLogStream0020241011109755058155754bcdbbe039bf9c40c9fe000lsJk:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/11/[10]9755058155754bcdbbe039bf9c40c9fe"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser00Ow1kn"
  LogsLogStream003d589a232da4a6e76a3204d23681a30f00tpVMF:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "3d589a232da4a6e76a3204d23681a30f"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00NZEvy"
  LogsLogGroup00awslambdacheckpythonversion0091asJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/check-python-version"
      DataProtectionPolicy: {}
  LogsLogStream0020241001LATEST475c5b91838c46ceb87235215e26d02b00iGAkQ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]475c5b91838c46ceb87235215e26d02b"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00lougt"
  LogsLogStream00eni0025ca6664c63c276all00hgRdZ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-0025ca6664c63c276-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00aAnuf"
  LogsLogStream0020240928LATESTda14b70855854b1a997c61122ca39d2d00MmLxg:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]da14b70855854b1a997c61122ca39d2d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00lmGzm"
  LogsLogStream0020240928LATEST1861d3c9d9b644c0901cb3edfbf0c1ca00aODhv:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]1861d3c9d9b644c0901cb3edfbf0c1ca"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00lmGzm"
  LogsLogStream0020240913LATEST345586c4ab094ea9826f17ee079e5d0900g4Y7O:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/13/[$LATEST]345586c4ab094ea9826f17ee079e5d09"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00wFhbQ"
  LogsLogStream0020241122LATEST24d8e5ea464d4039b0d340f73dfe3cdc00UeevX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/11/22/[$LATEST]24d8e5ea464d4039b0d340f73dfe3cdc"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStopEC2Instances00RxrSp"
  LogsLogStream0020241107LATEST9ffa07f7e5f546b1a237e5710e0a1eee00C3Vph:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/11/07/[$LATEST]9ffa07f7e5f546b1a237e5710e0a1eee"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStopEC2Instances00RxrSp"
  LogsLogStream0020240929LATESTe1f9b7bf84bf4760b02e6c691ec91c4a00Lwd9u:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/29/[$LATEST]e1f9b7bf84bf4760b02e6c691ec91c4a"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendmessage003aJRL"
  LogsLogStream0020241010LATEST3a3761b493774281a7d868ff6dc1efdf00wUT10:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/10/[$LATEST]3a3761b493774281a7d868ff6dc1efdf"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser00Ow1kn"
  LogsLogStream0020241001LATEST73d7e39d238c435aab7a55120f93a06b00DrX8v:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]73d7e39d238c435aab7a55120f93a06b"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect00rxIns"
  LogsLogStream00AllTraffici0b182c4dc1b403b1000jmNPF:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-0b182c4dc1b403b10"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointsllama318binstruct2024081606531794700QZ8dL"
  LogsLogStream0020240812LATEST99b96a0919a04417aff036abf40d21d600sL2YM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/12/[$LATEST]99b96a0919a04417aff036abf40d21d6"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgwssgetCategories002aIyX"
  LogsLogStream0020240821LATEST9f29f8fdabd147418da6a096b67af980003Gz4t:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/21/[$LATEST]9f29f8fdabd147418da6a096b67af980"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenais3triggertutorial00j0pfP"
  LogsLogStream0020241009LATEST40e7e320b0c14dd8a622e3fd0cdbff5800WipNf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/09/[$LATEST]40e7e320b0c14dd8a622e3fd0cdbff58"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser00Ow1kn"
  LogsLogStream0014663423467ec171613ea6e95650ed68000PK4W:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "14663423467ec171613ea6e95650ed68"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00NZEvy"
  LogsLogStream0020240912LATEST60865a50879a4a06a748006958c921ef00Qz9w0:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/12/[$LATEST]60865a50879a4a06a748006958c921ef"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00wFhbQ"
  LogsLogStream0020240923LATESTc4f0fe09d8d648eb93227940a959318400LWmKt:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/23/[$LATEST]c4f0fe09d8d648eb93227940a9593184"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00lougt"
  LogsLogStream0020240827LATESTa96dc3b3c5b64f03991a1bfcf9aa3bde00n5Vyr:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/27/[$LATEST]a96dc3b3c5b64f03991a1bfcf9aa3bde"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls3007EPvz"
  LogsLogStream0020240904LATESTfaaea50815c94ee283ab5d1f92e451b500AytTH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/04/[$LATEST]faaea50815c94ee283ab5d1f92e451b5"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00wFhbQ"
  LogsLogStream0020240919LATESTfa0fc6564bcb4cb2b65af8afa8b4194900P4qj9:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/19/[$LATEST]fa0fc6564bcb4cb2b65af8afa8b41949"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserpython31200rEFDS"
  LogsLogStream00AllTraffici088469755fbe8645d00P64Om:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-088469755fbe8645d"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointsjumpstartdfthfsentencesimilarity2024082808452000SdOBW"
  LogsLogStream00033964266e2d37581f5c62ac0302587b00UX1eJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "033964266e2d37581f5c62ac0302587b"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100JqWVy"
  LogsLogStream0020240911LATEST851904d113ce4eaeb3f321bf5bda6789002lRpo:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/11/[$LATEST]851904d113ce4eaeb3f321bf5bda6789"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls3007EPvz"
  LogsLogStream0020241008LATEST48f1cce28a3e4b7fa2f46dc654cc61e500tXPCc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/08/[$LATEST]48f1cce28a3e4b7fa2f46dc654cc61e5"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300yysP6"
  LogsLogStream00eni00953b482cf4712b7all00Qo3ZD:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-00953b482cf4712b7-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00aAnuf"
  LogsLogStream00eni00a48d3999ce17929all003AML7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-00a48d3999ce17929-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00aAnuf"
  LogsLogStream0020241213LATESTf7fb1de4f1e0424d8ea0b88844379cda00Ht6wO:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/13/[$LATEST]f7fb1de4f1e0424d8ea0b88844379cda"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStopEC2Instances00RxrSp"
  LogsLogStream00AllTraffici028a5dd98b14b290e00q0Dq6:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-028a5dd98b14b290e"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointsjumpstartdftllama318binstruct2024081604120800gfmIm"
  LogsLogStream00FargateTelemetry108700eHoZG:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1087"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00uFbwB"
  LogsLogStream0020240822LATEST92e129ed93f04171828b718b3030b728005KGu7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/22/[$LATEST]92e129ed93f04171828b718b3030b728"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdatests3behindnacl00QJdeB"
  LogsLogStream00sgprodgenaideleteobjects30GvJfsdxHSXRUpOvfg7LgGKuq00eqsfd:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/0GvJfsdxHSXRUpOvfg7LgGKuq"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00TzcCv"
  LogsLogStream00324050f7d6d282e3087f6e4d424d8fd100mry4L:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "324050f7d6d282e3087f6e4d424d8fd1"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100JqWVy"
  LogsLogStream0020241004LATEST02f40d7acc8448fd85b60e753ff5195500BgQ2W:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]02f40d7acc8448fd85b60e753ff51955"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS00U5oAY"
  LogsLogGroup00awslambdapocwebsocketconnect00rxIns:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/poc-websocket-connect"
      DataProtectionPolicy: {}
  LogsLogStream0020240929LATEST439a739958b54da6ad7056c0bc62a84f00oSZst:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/29/[$LATEST]439a739958b54da6ad7056c0bc62a84f"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendmessage003aJRL"
  LogsLogStream0020240812LATEST169766d7eb264755a29a92fd28f94a6800C3ZeD:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/12/[$LATEST]169766d7eb264755a29a92fd28f94a68"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgwssdisconnect000vc3D"
  LogsLogStream0020240926LATESTe7a65377d4d44e87845c57d93400835d00P1wNS:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/26/[$LATEST]e7a65377d4d44e87845c57d93400835d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00lougt"
  LogsLogStream0020240830LATEST7447c03c299342249c595ee31c1597ed00wfesu:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/30/[$LATEST]7447c03c299342249c595ee31c1597ed"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser003jUM2"
  LogsLogStream0020240909LATEST0fb627c7c58045c5afcbfa56bd16893900O7bUc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]0fb627c7c58045c5afcbfa56bd168939"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00nzrNX"
  LogsLogStream0020241009LATESTad35dd9d0c5c4aebb14007216736f7b100kpJTp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/09/[$LATEST]ad35dd9d0c5c4aebb14007216736f7b1"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300yysP6"
  LogsLogStream00eni000ff248070b0e553all00eOV5v:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-000ff248070b0e553-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00aAnuf"
  LogsLogStream0020241011LATESTfc9d635ad8564629940cb090bb88784600sjhlL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/11/[$LATEST]fc9d635ad8564629940cb090bb887846"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00Dyqzr"
  LogsLogGroup00awslambdasgprodgenais3triggertutorial00j0pfP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-genai-s3-trigger-tutorial"
      DataProtectionPolicy: {}
  LogsLogStream0020241202LATEST96b7af62a1b54a17a1439ddcaddfbb5900G5ZLx:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/02/[$LATEST]96b7af62a1b54a17a1439ddcaddfbb59"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStartEC2Instances00A0lOC"
  LogsLogStream0020241004LATEST0d76a8f951d34c9591272401a0e1ebdd00o1og2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]0d76a8f951d34c9591272401a0e1ebdd"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS00U5oAY"
  LogsLogStream0020240923LATEST6889d23f97ab49849a80fb27afb4a03800Szoz4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/23/[$LATEST]6889d23f97ab49849a80fb27afb4a038"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00lougt"
  LogsLogStream0020240929LATEST274d82a476404cbb9c653914c4c0588f00bACxS:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/29/[$LATEST]274d82a476404cbb9c653914c4c0588f"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect00ezS7q"
  LogsLogStream001751857b8eb56d62270bdec2138afb4700TOUd0:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1751857b8eb56d62270bdec2138afb47"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00YXzVq"
  LogsLogStream0020241002LATEST27b40cccdc5f47dabd3b278c5ae71328009PryW:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/02/[$LATEST]27b40cccdc5f47dabd3b278c5ae71328"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00lougt"
  LogsLogStream0020241126LATESTd9efae9a790d4282a907a629158af3e900qn1aq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/11/26/[$LATEST]d9efae9a790d4282a907a629158af3e9"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStartEC2Instances00A0lOC"
  LogsLogStream0020241001LATESTe6d52f8de99b4e8aa0ee2428da9ad5e900B7mIZ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]e6d52f8de99b4e8aa0ee2428da9ad5e9"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect00ezS7q"
  LogsLogGroup00awslambdaStopEC2Instances00RxrSp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/StopEC2Instances"
      DataProtectionPolicy: {}
  LogsLogGroup00awslambdaTBDdummylambdapython31200hgkWO:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/TBD-dummy-lambda-python312"
      DataProtectionPolicy: {}
  LogsLogStream00FargateTelemetry103400pHOuW:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1034"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00uFbwB"
  LogsLogStream0020241009LATEST252d0b72b7334e9299a899ed8582357d00HVtLo:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/09/[$LATEST]252d0b72b7334e9299a899ed8582357d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser00Ow1kn"
  LogsLogStream00ecsgenaifrontend05b42c52f0144de6ac99f9ef4e33f2f600sxPE2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/05b42c52f0144de6ac99f9ef4e33f2f6"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00sHG8H"
  LogsLogStream0020240828LATESTa45f8a2be3ff4842bfab4259b44fcdf600QmyZi:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/28/[$LATEST]a45f8a2be3ff4842bfab4259b44fcdf6"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser003jUM2"
  LogsLogStream00sgprodgenaideleteobjects31UBnbPwIYEstgJa9zE5TVuqvO00tkl4j:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/1UBnbPwIYEstgJa9zE5TVuqvO"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00TzcCv"
  LogsLogStream000dff0d92a3821b02bc6531dfcf48085100BgCOi:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "0dff0d92a3821b02bc6531dfcf480851"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00YXzVq"
  LogsLogStream0020240929LATEST8d24f44fb57f496baac69a95bc789c1800vX4Pv:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/29/[$LATEST]8d24f44fb57f496baac69a95bc789c18"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendmessage003aJRL"
  LogsLogStream0020240909LATEST7d11f71ba71b4753bba92e44aecca0b400pkNyx:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]7d11f71ba71b4753bba92e44aecca0b4"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00nzrNX"
  LogsLogStream0020240925LATEST494ba1c53d344bfe8ea92b588a5705b800Jlxye:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/25/[$LATEST]494ba1c53d344bfe8ea92b588a5705b8"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00lougt"
  LogsLogGroup00awsapigateway0u3tyeizfbpoc00NZEvy:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/apigateway/0u3tyeizfb/poc"
      DataProtectionPolicy: {}
  LogsLogStream0020240828LATEST28dc0f222bee4f998e09f910d9102f7900mrgVj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/28/[$LATEST]28dc0f222bee4f998e09f910d9102f79"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser003jUM2"
  LogsLogStream0020241006LATEST553be8092aa042b1a7a7e0619a43ae3a000Fwqu:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/06/[$LATEST]553be8092aa042b1a7a7e0619a43ae3a"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect00ezS7q"
  LogsLogStream001b804fb785cd6aec0f204fce0f6a7c1200nuPcy:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1b804fb785cd6aec0f204fce0f6a7c12"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00YXzVq"
  LogsLogStream0020240930LATEST8d16a4d63df4454e9b1f6dbd8325e6d200YFBgh:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]8d16a4d63df4454e9b1f6dbd8325e6d2"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenais3triggertutorial00j0pfP"
  LogsLogStream00ecsgenaifalainafrontend0eefcd0cf6704c7b837892d8515cc6cf00da5GK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genai-falaina-frontend/0eefcd0cf6704c7b837892d8515cc6cf"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaitestfalaina00u3NsQ"
  LogsLogStream0020240830LATEST811be8302e7d40df86ed455a7997b6bc00mMbTx:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/30/[$LATEST]811be8302e7d40df86ed455a7997b6bc"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser003jUM2"
  LogsLogStream00eni00e8daf8cd44cc486all00vx9jt:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-00e8daf8cd44cc486-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00aAnuf"
  LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00aAnuf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/vpc/GenAI-Pilot-VPC-Flow-Log"
      DataProtectionPolicy: {}
  LogsLogStream0020241004LATEST082843a59b2a460383ba31b164d69e1900Ooqil:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]082843a59b2a460383ba31b164d69e19"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS00U5oAY"
  LogsLogGroup00awslambdaStartEC2Instances00A0lOC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/StartEC2Instances"
      DataProtectionPolicy: {}
  LogsLogStream0020241008LATEST5eae5f11ea5343c894e1b34a64b2325900gP7Ph:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/08/[$LATEST]5eae5f11ea5343c894e1b34a64b23259"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300yysP6"
  LogsLogGroup00awslambdasgprodgenaipresignedurls3007EPvz:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-genai-presignedurl-s3"
      DataProtectionPolicy: {}
  LogsLogStream0020240830LATEST89fab8a8c35f42739e826200596d714b00QgVaa:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/30/[$LATEST]89fab8a8c35f42739e826200596d714b"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser003jUM2"
  LogsLogGroup00awslambdapocwebsocketdefault00BiMQU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/poc-websocket-default"
      DataProtectionPolicy: {}
  LogsLogStream0020240930LATEST9abd0ef8501b44a1a3d97877ad79b8d700BdlYh:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]9abd0ef8501b44a1a3d97877ad79b8d7"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect00rxIns"
  LogsLogStream0020240911LATEST504b292a0fc14f6a89c6ea254666430d00SfzDo:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/11/[$LATEST]504b292a0fc14f6a89c6ea254666430d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300yysP6"
  LogsLogStream0020240928LATESTd8debbb89f4c42de857b7840db63a72d00SiAWB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]d8debbb89f4c42de857b7840db63a72d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00lmGzm"
  LogsLogStream0020240909LATESTce96940f3ac7455d9ac0377b409c07d900NqdDh:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]ce96940f3ac7455d9ac0377b409c07d9"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00nzrNX"
  LogsLogStream0020240928LATEST3a5e8e25923e48a49fa0cc3044cb213600f3J8M:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]3a5e8e25923e48a49fa0cc3044cb2136"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00lmGzm"
  LogsLogStream0020241007LATESTf9946303f41442b3a05beb36ecdc84fa00RSpiJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/07/[$LATEST]f9946303f41442b3a05beb36ecdc84fa"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect00ezS7q"
  LogsLogStream00FargateTelemetry106000PaPCJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1060"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00uFbwB"
  LogsLogStream0020241009LATESTb361af2b11e94f7aa9e5546907a6a47800HDiOw:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/09/[$LATEST]b361af2b11e94f7aa9e5546907a6a478"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300yysP6"
  LogsLogStream0020240929LATEST7d7d9d61bf874d3f83cbc26f20814e0b00WQYzf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/29/[$LATEST]7d7d9d61bf874d3f83cbc26f20814e0b"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect00rxIns"
  LogsLogStream00sgprodgenaideleteobjects35pWI7RxitO6VQhZlT1jpFAUPR00tT5gs:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/5pWI7RxitO6VQhZlT1jpFAUPR"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00TzcCv"
  LogsLogStream00AllTraffici0cfab27e3a13990be00q1qeu:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-0cfab27e3a13990be"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointsllama318binstruct2024082201251476800TALyM"
  LogsLogStream00ecsgenaifalainafrontend1d57b131c2324b8c85f42b8ff201e71d00nu5YA:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genai-falaina-frontend/1d57b131c2324b8c85f42b8ff201e71d"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaitestfalaina00u3NsQ"
  LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00wFhbQ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-genai-checkcredsdocdb"
      DataProtectionPolicy: {}
  LogsLogGroup00awssagemakerEndpointsllama318binstruct2024081606531794700QZ8dL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/llama-3-1-8b-instruct-2024-08-16-06-53-17-947"
      DataProtectionPolicy: {}
  LogsLogStream0020241111LATESTf179d167e8a5459c994965ab486ea9f100w1lqh:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/11/11/[$LATEST]f179d167e8a5459c994965ab486ea9f1"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStartEC2Instances00A0lOC"
  LogsLogStream0020240912LATEST4a9a92a5653d44fea5d14aaa2f0373cf00MCfgB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/12/[$LATEST]4a9a92a5653d44fea5d14aaa2f0373cf"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00wFhbQ"
  LogsLogStream0015859488cc83cd90b564a2e4c19a2a6c00uhwFJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "15859488cc83cd90b564a2e4c19a2a6c"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00YXzVq"
  LogsLogStream0020240928LATESTda11d07a812548668e0846b82c9df81b00X1i91:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]da11d07a812548668e0846b82c9df81b"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00lmGzm"
  LogsLogStream0020240929LATEST8f4e0f7225f6453d9e70492ea93fcf59005HDSU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/29/[$LATEST]8f4e0f7225f6453d9e70492ea93fcf59"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendmessage003aJRL"
  LogsLogStream00sgprodgenaideleteobjects359ljBtUTbuXTc3mzCpw5vCwfS00etEqM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/59ljBtUTbuXTc3mzCpw5vCwfS"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00TzcCv"
  LogsLogStream00eni008b6136a6144a1f5all00ZYYxX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-008b6136a6144a1f5-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00aAnuf"
  LogsLogStream0020240928LATEST12494bb5093c447c80182b21732aa41c001YHqi:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]12494bb5093c447c80182b21732aa41c"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls3007EPvz"
  LogsLogStream0020241004LATEST00a861263daf4b389fff25df54b48dd600lfcIG:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]00a861263daf4b389fff25df54b48dd6"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS00U5oAY"
  LogsLogStream001590da3712746e895fac3de2a384010900W5dFO:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1590da3712746e895fac3de2a3840109"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00YXzVq"
  LogsLogStream0020240913LATEST59fa8e26732141199c637ea1f8f5e3f900FPjWg:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/13/[$LATEST]59fa8e26732141199c637ea1f8f5e3f9"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00wFhbQ"
  LogsLogStream0020240928LATEST40e114d5a0f0467789a81c8b698dc9da00I5Cbf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]40e114d5a0f0467789a81c8b698dc9da"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls3007EPvz"
  LogsLogStream0020240830LATEST0dec49e2bfa94ec3914f7d3394e890b800VYfyf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/30/[$LATEST]0dec49e2bfa94ec3914f7d3394e890b8"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser003jUM2"
  LogsLogStream0020240828LATESTd50cfba7d6234b7c94d44e936a4b459500d5f9C:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/28/[$LATEST]d50cfba7d6234b7c94d44e936a4b4595"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser003jUM2"
  LogsLogStream0020240814LATESTd5f6b0fab4f7416a87484b260d31b73000YHfV1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/14/[$LATEST]d5f6b0fab4f7416a87484b260d31b730"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaiembeddingsgmkr00A9Req"
  LogsLogStream0020241011LATEST234ae71d37b948b8b37752e0eb6f4b0600S1QI1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/11/[$LATEST]234ae71d37b948b8b37752e0eb6f4b06"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300yysP6"
  LogsLogGroup00awssagemakerEndpointsjumpstartdftllama318binstruct2024081604120800gfmIm:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-llama-3-1-8b-instruct-20240816-041208"
      DataProtectionPolicy: {}
  LogsLogStream0020241002LATEST5a911ee07773499b936567b423545a0700VFJ76:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/02/[$LATEST]5a911ee07773499b936567b423545a07"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00Dyqzr"
  LogsLogStream00logstreamcreatedbyawstovalidatelogdeliverysubscriptions00kPnEB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "log_stream_created_by_aws_to_validate_log_delivery_subscriptions"
      LogGroupName:
        Ref: "LogsLogGroup00testpublicrestapi00sIXTf"
  LogsLogStream0020241113LATEST5a316986405a44fe8804faf91b3039dd00cqX0a:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/11/13/[$LATEST]5a316986405a44fe8804faf91b3039dd"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStartEC2Instances00A0lOC"
  LogsLogStream00eni00c2d5959024473d4all00U4GwF:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-00c2d5959024473d4-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00aAnuf"
  LogsLogStream0020240925LATESTf23220e9aa87434f9c86b15e0446b1af00rOt7c:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/25/[$LATEST]f23220e9aa87434f9c86b15e0446b1af"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00lougt"
  LogsLogStream0020241001LATESTd74055ed51824db681d852232b37d16d00w66Ch:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]d74055ed51824db681d852232b37d16d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00lougt"
  LogsLogStream0020241209LATEST0ffe4e7c7ccb4bc09fa373eb50e9dc9100J1kpK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/09/[$LATEST]0ffe4e7c7ccb4bc09fa373eb50e9dc91"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdatestuploads300jmiPM"
  LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100JqWVy:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "API-Gateway-Execution-Logs_5nwb46kira/prod-mvp1"
      DataProtectionPolicy: {}
  LogsLogStream0020240919LATESTbd5dfca2c48140c7b31d187bfff1ebd500xfHNm:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/19/[$LATEST]bd5dfca2c48140c7b31d187bfff1ebd5"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTBDdummylambdapython31200hgkWO"
  LogsLogStream00eni0101a0a742e119f49all00dGIrH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-0101a0a742e119f49-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00aAnuf"
  LogsLogStream00FargateTelemetry1042000JjvZ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1042"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00uFbwB"
  LogsLogStream0020241008LATESTcf83508658074639a71a75209235df0e00RCQvW:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/08/[$LATEST]cf83508658074639a71a75209235df0e"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300yysP6"
  LogsLogStream0020241108LATEST061ab2d58e4f4b73a5584100cb9ea1a000mH38n:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/11/08/[$LATEST]061ab2d58e4f4b73a5584100cb9ea1a0"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStopEC2Instances00RxrSp"
  LogsLogGroup00awslambdasgprodgenaideleteobjects300yysP6:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-genai-deleteobject-s3"
      DataProtectionPolicy: {}
  LogsLogStream0020240923LATEST0231dcb89ef541b3a34d823b7e2312ec00llZXC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/23/[$LATEST]0231dcb89ef541b3a34d823b7e2312ec"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00lougt"
  LogsLogStream00388e80f6a029c91187016844f44fe85f00UvtWR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "388e80f6a029c91187016844f44fe85f"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00NZEvy"
  LogsLogStream00ecsgenaifrontend384c9b3bf23c4adeb4810060b9e3abea00HnlWw:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/384c9b3bf23c4adeb4810060b9e3abea"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00sHG8H"
  LogsLogStream00sgprodgenaideleteobjects31Nda7UXp8Tdamhy6xiMRL4b3e00e6mW8:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/1Nda7UXp8Tdamhy6xiMRL4b3e"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00TzcCv"
  LogsLogStream00132a2adac6cc260462bd92c61a18765800h12jo:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "132a2adac6cc260462bd92c61a187658"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00NZEvy"
  LogsLogStream00sgprodgenaideleteobjects36RwT5yYeEss3lOcRVXdsGMaRb00uIw7K:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/6RwT5yYeEss3lOcRVXdsGMaRb"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00TzcCv"
  LogsLogGroup00awssagemakerEndpointsllama318binstruct2024082201251476800TALyM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/llama-3-1-8b-instruct-2024-08-22-01-25-14-768"
      DataProtectionPolicy: {}
  LogsLogGroup00ecsdevcontainernodejs2000ilPgk:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/ecs/devcontainer-nodejs20"
      DataProtectionPolicy: {}
  LogsLogStream0020241212LATESTf46d7082270e48219d425ff08fe8318000F5FfQ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/12/[$LATEST]f46d7082270e48219d425ff08fe83180"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdatestretrieves3metadata00Y60lp"
  LogsLogStream0020240813LATESTa27d12d2904b43fd801efe20198a10c600Bnn9k:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/13/[$LATEST]a27d12d2904b43fd801efe20198a10c6"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgwssconnect00bnz9B"
  LogsLogStream0020241004LATEST0c6a6b59b54d4a36901c5e97e4a3976200yX5kJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]0c6a6b59b54d4a36901c5e97e4a39762"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS00U5oAY"
  LogsLogStream0020240909LATESTad85b5ae9d6a4e3c8fba08d935c889bb00mMf9z:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]ad85b5ae9d6a4e3c8fba08d935c889bb"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00nzrNX"
  LogsLogStream00FargateTelemetry100600ZNUyV:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1006"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00uFbwB"
  LogsLogStream0020240927LATESTe1514f53df74453587e54e87e4b32562008AgCj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/27/[$LATEST]e1514f53df74453587e54e87e4b32562"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00lougt"
  LogsLogStream0020241011LATESTc8e4ddac17654dfe9f701fea3035103400ReHcp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/11/[$LATEST]c8e4ddac17654dfe9f701fea30351034"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00Dyqzr"
  LogsLogStream000f5155e4aa99f6ef0603641bc756a7a400rWK5Q:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "0f5155e4aa99f6ef0603641bc756a7a4"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100JqWVy"
  LogsLogStream00132fa6fb4cecd7c840b3f6233f48ea6500WDoPS:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "132fa6fb4cecd7c840b3f6233f48ea65"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100JqWVy"
  LogsLogStream0020241008LATEST657797f1416e4756a51e5c96ad50172800jGe1P:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/08/[$LATEST]657797f1416e4756a51e5c96ad501728"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketclient004UHPI"
  LogsLogStream0020241111LATEST5451f0da569748d78bf9626f8039414d005B73k:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/11/11/[$LATEST]5451f0da569748d78bf9626f8039414d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStopEC2Instances00RxrSp"
  LogsLogGroup00awssagemakerEndpointsjumpstartdfthfsentencesimilarity2024082809590200uOQoe:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-hf-sentencesimilarity-20240828-095902"
      DataProtectionPolicy: {}
  LogsLogStream0020241001LATESTe8a539ba50164f2e8e80f32ae08ad86900mJANq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]e8a539ba50164f2e8e80f32ae08ad869"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect00rxIns"
  LogsLogGroup00awssagemakerEndpointsllama318binstruct00yKKy1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/llama3-1-8b-instruct"
      DataProtectionPolicy: {}
  LogsLogStream0020241001LATESTc3512f0bcc68461abf4b90ad718104b500FF3t4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]c3512f0bcc68461abf4b90ad718104b5"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect00rxIns"
  LogsLogStream003a6e39f451db564edd677cb74c4d7ca900s8OvH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "3a6e39f451db564edd677cb74c4d7ca9"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00NZEvy"
  LogsLogStream00eni00b135084b1aa516fall00ZE2bp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-00b135084b1aa516f-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00aAnuf"
  LogsLogStream0020240821LATEST86e02e747f0c4c6587c3246a6f56c73a00PrPvU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/21/[$LATEST]86e02e747f0c4c6587c3246a6f56c73a"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenais3triggertutorial00j0pfP"
  LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00lmGzm:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-test-genai-summariser-retrievetofrontend"
      DataProtectionPolicy: {}
  LogsLogStream0020240928LATEST978aa5b8f5bd4c1e96dd29bfb1a0917600pXCDI:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]978aa5b8f5bd4c1e96dd29bfb1a09176"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00lmGzm"
  LogsLogStream0020240928LATEST1579e6664b204e5f90d0fdb2727918d0003GipT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]1579e6664b204e5f90d0fdb2727918d0"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00lmGzm"
  LogsLogStream00sgprodgenaideleteobjects31dXLpt86i3RgbYQ99lRSF2Sjx00cR6kd:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/1dXLpt86i3RgbYQ99lRSF2Sjx"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00TzcCv"
  LogsLogStream0020240928LATEST64c25470e33a4ebab41b039daa16b1eb00xL0Zf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]64c25470e33a4ebab41b039daa16b1eb"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00lmGzm"
  LogsLogStream0020241004LATESTa4e813a627a64b0a9c364f022a58bceb00NysdY:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]a4e813a627a64b0a9c364f022a58bceb"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect00ezS7q"
  LogsLogStream0020240923LATEST840b7d9478d34dab932f78768fa4d1fe00GxSvL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/23/[$LATEST]840b7d9478d34dab932f78768fa4d1fe"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00lougt"
  LogsLogStream0020240821LATESTf896989e368043c4927fe8367866e27200wpMKA:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/21/[$LATEST]f896989e368043c4927fe8367866e272"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenais3triggertutorial00j0pfP"
  LogsLogStream0020241001LATESTbe197811c95c4284b0401df61de8a84900XzvL2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]be197811c95c4284b0401df61de8a849"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect00rxIns"
  LogsLogStream00sgprodgenaideleteobjects36WtFDc7oIVzyYNyYsH0QftKwb00fonyr:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/6WtFDc7oIVzyYNyYsH0QftKwb"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00TzcCv"
  LogsLogStream00ecsgenaifrontend2b44ec975cd04d1db324d06a1b141fdf00C7dGS:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/2b44ec975cd04d1db324d06a1b141fdf"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00sHG8H"
  LogsLogStream0020240927LATESTf3eba20842434bfaac7c73459b20525b00BCUZG:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/27/[$LATEST]f3eba20842434bfaac7c73459b20525b"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00lougt"
  LogsLogGroup00awslambdatests3behindnacl00QJdeB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/test-s3-behind-nacl"
      DataProtectionPolicy: {}
  LogsLogStream00eni0098f3c36b927df29all009zLXr:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-0098f3c36b927df29-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00aAnuf"
  LogsLogStream0020240910LATEST75e29a380a25441a86d6f5b85dae312f00f6GaY:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/10/[$LATEST]75e29a380a25441a86d6f5b85dae312f"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls3007EPvz"
  LogsLogStream0020241209LATEST2402728c458143aaae0f6f2a0d55344000lO3Oj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/09/[$LATEST]2402728c458143aaae0f6f2a0d553440"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdatestretrieves3metadata00Y60lp"
  LogsLogStream0020240923LATESTc9a38cded4ab478ab396d48ea29699e700uuPgG:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/23/[$LATEST]c9a38cded4ab478ab396d48ea29699e7"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00lougt"
  LogsLogStream0020240923LATESTb2d01cb9a0c740f9b2f90f593548e6f100apYYi:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/23/[$LATEST]b2d01cb9a0c740f9b2f90f593548e6f1"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00lougt"
  LogsLogStream0020241015LATESTc454cae5f1344fde803b031ce63e723000B18Rg:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/15/[$LATEST]c454cae5f1344fde803b031ce63e7230"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00Dyqzr"
  LogsLogStream00ecsgenaifrontend59dbd5ad928a47fd907cc2ed93ef6278007H6jG:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/59dbd5ad928a47fd907cc2ed93ef6278"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00sHG8H"
  LogsLogStream0020241004LATEST6c7f8ce6380e41b89a602758568cad7e00lUFDw:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]6c7f8ce6380e41b89a602758568cad7e"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect00ezS7q"
  LogsLogStream0020241013LATEST59c9016b260e4afa8567950f36e5273600FUo5M:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/13/[$LATEST]59c9016b260e4afa8567950f36e52736"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00Dyqzr"
  LogsLogStream0020241008LATEST57e49d7fed79480d94e88ec6c23aa1bb00xYbJW:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/08/[$LATEST]57e49d7fed79480d94e88ec6c23aa1bb"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser00Ow1kn"
  LogsLogStream0020241001LATEST1c415510c8e14b129f1d8859e0fb5c67000qOnI:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]1c415510c8e14b129f1d8859e0fb5c67"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00Dyqzr"
  LogsLogStream00eni009547dc462a0f3d1all00iA0SU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-009547dc462a0f3d1-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00aAnuf"
  LogsLogStream0020240929LATEST9fc27b66ef564ec8a5fcbe0eedd1735c00B7Lhp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/29/[$LATEST]9fc27b66ef564ec8a5fcbe0eedd1735c"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendmessage003aJRL"
  LogsLogStream00eni00002c9baeafa5c42all00MRbJV:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-00002c9baeafa5c42-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00aAnuf"
  LogsLogStream00AllTraffici0a6cab188b5a0972200bXoGd:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-0a6cab188b5a09722"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointshfsentencesimilaritybgem320240917081629979000u4gB"
  LogsLogStream0020241010LATEST700f192c5af54990968229df6275cd61000gmcC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/10/[$LATEST]700f192c5af54990968229df6275cd61"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300yysP6"
  LogsLogStream0020241001LATESTb79b3017a91f4e888b3f92b65610c41300Qy5hQ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]b79b3017a91f4e888b3f92b65610c413"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect00rxIns"
  LogsLogStream0020240813LATESTf00bf197ed984310914f8db94cc2c2e4006HpOz:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/13/[$LATEST]f00bf197ed984310914f8db94cc2c2e4"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgwssdisconnect000vc3D"
  LogsLogStream0020240914LATEST06b065c3aa1c44bd9a847f69290c933c00SSrqL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/14/[$LATEST]06b065c3aa1c44bd9a847f69290c933c"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00wFhbQ"
  LogsLogStream00eni0052f5e86de26f9fball00yDZlJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-0052f5e86de26f9fb-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00aAnuf"
  LogsLogStream00sgprodgenaideleteobjects315ZpsXVjLS7bbukWU4GYI5jDq00wnDOg:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/15ZpsXVjLS7bbukWU4GYI5jDq"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00TzcCv"
  LogsLogGroup00awslambdasgwssgetCategories002aIyX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-wss-getCategories"
      DataProtectionPolicy: {}
  LogsLogStream0020240905LATEST1b98b4acec8341a18e93bb747998a1f000IsglH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/05/[$LATEST]1b98b4acec8341a18e93bb747998a1f0"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls3007EPvz"
  LogsLogStream0020241015LATEST4330f6d34e90425eb5af95c7e4f4c7b4008bmqN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/15/[$LATEST]4330f6d34e90425eb5af95c7e4f4c7b4"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00Dyqzr"
  LogsLogStream001cf2c41d746e73c601e5f2eaa22f512800qSMHh:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1cf2c41d746e73c601e5f2eaa22f5128"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100JqWVy"
  LogsLogStream001dbf531af17aa2d5143af0cb91f38e7e00EXN6s:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1dbf531af17aa2d5143af0cb91f38e7e"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00YXzVq"
  LogsLogStream0024307b133b0ee5631f1ab4759cd03fc000BgZWD:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "24307b133b0ee5631f1ab4759cd03fc0"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100JqWVy"
  LogsLogStream0015ecd10eae0341e8ef936236394b28ec00ZJp2y:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "15ecd10eae0341e8ef936236394b28ec"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00NZEvy"
  LogsLogStream0020241004LATESTf294c933b7ea42eb84e2b65e071e4eb300YFXiJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]f294c933b7ea42eb84e2b65e071e4eb3"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect00ezS7q"
  LogsLogStream00ecsgenaifalainafrontend2ee06d3c899246ea8bf9e5ba8485dff1000w6yd:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genai-falaina-frontend/2ee06d3c899246ea8bf9e5ba8485dff1"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaitestfalaina00u3NsQ"
  LogsLogStream00eni013d8a5ab73457614all00wNwFv:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-013d8a5ab73457614-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00aAnuf"
  LogsLogStream0020241004LATEST0ae6ed4f4bd3478cb437a65ab640cd9c00WGh1s:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]0ae6ed4f4bd3478cb437a65ab640cd9c"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS00U5oAY"
  LogsLogStream0020241211LATESTafa6faf6c0f54ffbbdb69e697cedee8000uKElI:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/11/[$LATEST]afa6faf6c0f54ffbbdb69e697cedee80"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdatestretrieves3metadata00Y60lp"
  LogsLogStream0020241015LATEST07dd067e6bd047119df1085baa11d78f00hsirs:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/15/[$LATEST]07dd067e6bd047119df1085baa11d78f"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketclient004UHPI"
  LogsLogStream0020240928LATEST3b61df5b97d14c468e8e52e3fc35666600K7Q4k:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]3b61df5b97d14c468e8e52e3fc356666"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls3007EPvz"
  LogsLogStream003407c478b9335e8b88fc85b84213dd16007IAfH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "3407c478b9335e8b88fc85b84213dd16"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00NZEvy"
  LogsLogStream002b78b5c91795e278bcf748ffb764fa5e004XVCq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2b78b5c91795e278bcf748ffb764fa5e"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00YXzVq"
  LogsLogStream0020241002LATEST897ec2b1a19949a0928ba5c1677bcd7000WZQKx:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/02/[$LATEST]897ec2b1a19949a0928ba5c1677bcd70"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect00ezS7q"
  LogsLogStream0020241008LATEST591473392cad4ba2a453671e4bacc60b004S9cD:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/08/[$LATEST]591473392cad4ba2a453671e4bacc60b"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300yysP6"
  LogsLogStream0020241204LATEST21974da6a1c34e03bd497a164fe1522800gT1O4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/04/[$LATEST]21974da6a1c34e03bd497a164fe15228"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStopEC2Instances00RxrSp"
  LogsLogGroup00awssagemakerEndpointsjumpstartdftllama318binstruct2024082816471600p0vm2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-llama-3-1-8b-instruct-20240828-164716"
      DataProtectionPolicy: {}
  LogsLogStream00FargateTelemetry1021001DJke:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1021"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00uFbwB"
  LogsLogStream0020240905LATEST607f6769c6bb44aea364ff7454320e0000PElet:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/05/[$LATEST]607f6769c6bb44aea364ff7454320e00"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls3007EPvz"
  LogsLogStream00FargateTelemetry103000uYJK1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1030"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00uFbwB"
  LogsLogStream00eni01420cdaa50041b7ball00U2suL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-01420cdaa50041b7b-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00aAnuf"
  LogsLogStream0020241001LATEST1ab15f44db4841aa8d7b427e65b7178c00h9hqR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]1ab15f44db4841aa8d7b427e65b7178c"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser00Ow1kn"
  LogsLogStream00282ce9f6146d767802a379b508a1540d00AuD4Y:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "282ce9f6146d767802a379b508a1540d"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00YXzVq"
  LogsLogStream0020240905LATEST7c9758a5cfcd4a88bf15ec6eac23c9c800r0OSe:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/05/[$LATEST]7c9758a5cfcd4a88bf15ec6eac23c9c8"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls3007EPvz"
  LogsLogStream0020241211LATESTa21384fde7344ed49159ab1144264cbc00MIneW:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/11/[$LATEST]a21384fde7344ed49159ab1144264cbc"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaSecretsManagergenaiprodauthdbv2autorotate00GEcgV"
  LogsLogStream0020240909LATEST810d4638159648bcb5fc55e0c100cdab001w3Xa:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]810d4638159648bcb5fc55e0c100cdab"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00nzrNX"
  LogsLogStream0020240821LATESTff2ca9a393db4ef5af11e7f5e8d50a9500i3QLs:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/21/[$LATEST]ff2ca9a393db4ef5af11e7f5e8d50a95"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenais3triggertutorial00j0pfP"
  LogsLogStream0020240814LATEST7736d39531fd4813b4348460ebac1fd700IesN2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/14/[$LATEST]7736d39531fd4813b4348460ebac1fd7"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaiembeddingsgmkr00A9Req"
  LogsLogStream0020241009LATESTfb1e067ecce442bf85e36cf79b19f3d600d5OBL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/09/[$LATEST]fb1e067ecce442bf85e36cf79b19f3d6"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketclient004UHPI"
  LogsLogStream0006215159bceeceb08a38c708b8d3cc7900SJ9zy:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "06215159bceeceb08a38c708b8d3cc79"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00NZEvy"
  LogsLogStream0020240928LATEST4a27d28b4ba44f9bb2a2c4c2b677820500BQkqm:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]4a27d28b4ba44f9bb2a2c4c2b6778205"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00lmGzm"
  LogsLogStream0020241002LATESTb28fccc05bf74c269f2710bba68afe9d00Ekuim:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/02/[$LATEST]b28fccc05bf74c269f2710bba68afe9d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00lougt"
  LogsLogStream000a30c4e85b1af5fa0653eb284ddc5b1500EAGwj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "0a30c4e85b1af5fa0653eb284ddc5b15"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00YXzVq"
  LogsLogStream0020241009LATESTf51ea05ba23c4ebfa02dfefbee50609600j8reI:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/09/[$LATEST]f51ea05ba23c4ebfa02dfefbee506096"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser00Ow1kn"
  LogsLogStream00sgprodgenaideleteobjects37YGgUSXIMApjoeOnBSjJ1XL0I00wv02r:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/7YGgUSXIMApjoeOnBSjJ1XL0I"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00TzcCv"
  LogsLogStream0003faf99a665a7f4a1cccf412ca437e3a006FGHz:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "03faf99a665a7f4a1cccf412ca437e3a"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00YXzVq"
  LogsLogStream0020241004LATEST3bdf82f7fe3044efa5927c7701c2330c00hRHG2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]3bdf82f7fe3044efa5927c7701c2330c"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect00ezS7q"
  LogsLogStream0020241004LATEST862a9245fb404031a2a0a9e485479f8c007TNxK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]862a9245fb404031a2a0a9e485479f8c"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect00ezS7q"
  LogsLogStream0020241014LATEST7c6a655d9a5f4c9bb6affd972f1f051e006y6Gp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/14/[$LATEST]7c6a655d9a5f4c9bb6affd972f1f051e"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00Dyqzr"
  LogsLogStream0020240930LATEST5e58131143df41f6955ea979aa2797fa00IQaP4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]5e58131143df41f6955ea979aa2797fa"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00lmGzm"
  LogsLogStream0020240829LATEST12d350f572eb4d52a2a3591e292fe5e9003cv90:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/29/[$LATEST]12d350f572eb4d52a2a3591e292fe5e9"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser003jUM2"
  LogsLogStream00sgprodgenaideleteobjects318AE1OI7CLI1bE2nex3uyAIQ100AXVVi:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/18AE1OI7CLI1bE2nex3uyAIQ1"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00TzcCv"
  LogsLogStream001ea0267d181d65a81607bad675e2e0730089U4o:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1ea0267d181d65a81607bad675e2e073"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100JqWVy"
  LogsLogStream00ecsgenaifrontend1cc403390fbc4487b9da5cb22b0d05d800SzvKd:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/1cc403390fbc4487b9da5cb22b0d05d8"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00sHG8H"
  LogsLogStream0020241205LATEST369883bb0267459abc515d660cf82eb900JpIXx:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/05/[$LATEST]369883bb0267459abc515d660cf82eb9"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStopEC2Instances00RxrSp"
  LogsLogStream0020241211LATEST137e3b5312b347948a4ae63860b7c0dd00Pi2gf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/11/[$LATEST]137e3b5312b347948a4ae63860b7c0dd"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdatestretrieves3metadata00Y60lp"
  LogsLogStream00ecsgenaifalainafrontend718be08d5e4f4bf4878cefde3477113000QHTYw:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genai-falaina-frontend/718be08d5e4f4bf4878cefde34771130"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaitestfalaina00u3NsQ"
  LogsLogStream0020241004LATEST046aebd7db434b4688b6801c2827347a00b9n4k:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]046aebd7db434b4688b6801c2827347a"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS00U5oAY"
  LogsLogStream0020240909LATESTde1c8f6920b54cd494802beb45b88eb000nAR6r:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]de1c8f6920b54cd494802beb45b88eb0"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00nzrNX"
  LogsLogStream0020241002LATEST5960ac37e6f44d66adc2c2029ea8101c00Um92l:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/02/[$LATEST]5960ac37e6f44d66adc2c2029ea8101c"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00Dyqzr"
  LogsLogStream00AllTraffici09fcaad5299ae2b2900L0bxs:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-09fcaad5299ae2b29"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointsjumpstartdftllama318binstruct2024082816471600p0vm2"
  LogsLogGroup00awslambdapocwebsocketsendMessageSQS00U5oAY:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/poc-websocket-sendMessageSQS"
      DataProtectionPolicy: {}
  LogsLogStream00FargateTelemetry10800ZEEOg:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-108"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00uFbwB"
  LogsLogStream0020240917LATESTdadf901636264f20b31f761ad17bfd5d00g6HOm:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/17/[$LATEST]dadf901636264f20b31f761ad17bfd5d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00wFhbQ"
  LogsLogStream00AllTraffici0d33cceb339e3ff8a00oDaNU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-0d33cceb339e3ff8a"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointshfsentencesimilaritybgem320240917081629979000u4gB"
  LogsLogStream0020241213LATEST6e4e1935cf0943dead9ea93ac62bcbd100RCfzK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/13/[$LATEST]6e4e1935cf0943dead9ea93ac62bcbd1"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStartEC2Instances00A0lOC"
  LogsLogStream00FargateTelemetry104100iYqwj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1041"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00uFbwB"
  LogsLogStream00sgprodgenaideleteobjects32ZjnjzTmmEbyEvEh1TUuSBrDu007le4y:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/2ZjnjzTmmEbyEvEh1TUuSBrDu"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00TzcCv"
  LogsLogStream0020240909LATESTb8b8cb01bc194842bf9f6807068ee3e9002zb5O:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]b8b8cb01bc194842bf9f6807068ee3e9"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00nzrNX"
  LogsLogStream0020240830LATEST45ab4821fb7c43afb76d93efdfa1eb4d00lSJH5:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/30/[$LATEST]45ab4821fb7c43afb76d93efdfa1eb4d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser003jUM2"
  LogsLogStream0020241002LATESTd17fd3cd27244e7e8d40f18ee08b265600wobG7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/02/[$LATEST]d17fd3cd27244e7e8d40f18ee08b2656"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect00rxIns"
  LogsLogStream0020240928LATEST25cbe70dc1324cc2b7b823a6f865f0bb00omb3O:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]25cbe70dc1324cc2b7b823a6f865f0bb"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls3007EPvz"
  LogsLogStream0020241002LATESTfa467626c1584e738d0493ceada0d32600OligQ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/02/[$LATEST]fa467626c1584e738d0493ceada0d326"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser00Ow1kn"
  LogsLogStream0020241004LATEST000bdbac7db747658799000f6bdb8b8c00pcy5r:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]000bdbac7db747658799000f6bdb8b8c"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect00ezS7q"
  LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00nzrNX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/TO_BE_DELETED-test_function_sqs"
      DataProtectionPolicy: {}
  LogsLogStream0020241006LATEST4c1884ad881f4416b151531d5dee081300fHOhJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/06/[$LATEST]4c1884ad881f4416b151531d5dee0813"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect00ezS7q"
  LogsLogStream0020241001LATESTcd880e81cb024c93bb125926187d784d00W9RM2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]cd880e81cb024c93bb125926187d784d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect00rxIns"
  LogsLogStream0020240930LATEST6df509216e6a41a4b8faa0d8a27ef79000FRq3Z:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]6df509216e6a41a4b8faa0d8a27ef790"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00lmGzm"
  LogsLogStream0039714862e855779c8b7ac73e50f0bc6b000iMLI:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "39714862e855779c8b7ac73e50f0bc6b"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00NZEvy"
  LogsLogGroup00awslambdatestretrieves3metadata00Y60lp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/test-retrieve-s3-metadata"
      DataProtectionPolicy: {}
  LogsLogStream0020241010LATESTd076b9dfa01c4c409d17fed73e6e66e000dH1Jk:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/10/[$LATEST]d076b9dfa01c4c409d17fed73e6e66e0"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser00Ow1kn"
  LogsLogStream0020240911LATEST824858f8849841f988ed12eaaeb587c300HOqjs:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/11/[$LATEST]824858f8849841f988ed12eaaeb587c3"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdacheckpythonversion0091asJ"
  LogsLogStream0020241127LATESTa3ca3ec4e358446ab2929d32f6f9226700DlG6j:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/11/27/[$LATEST]a3ca3ec4e358446ab2929d32f6f92267"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStopEC2Instances00RxrSp"
  LogsLogStream0020240905LATEST0520664c11314b8abf4a4158adbd848a001uwRh:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/05/[$LATEST]0520664c11314b8abf4a4158adbd848a"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls3007EPvz"
  LogsLogGroup00awssagemakerEndpointshfsentencesimilaritybgem320240917081629979000u4gB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/hf-sentencesimilarity-bge-m3-2024-09-17-08-16-29-979"
      DataProtectionPolicy: {}
  LogsLogStream0020241010LATESTdd29b1c9a6ab451590b8736b4a570a0f00esfoS:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/10/[$LATEST]dd29b1c9a6ab451590b8736b4a570a0f"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300yysP6"
  LogsLogStream00AllTraffici0ee8627aef856342400IlWNh:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-0ee8627aef8563424"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointsjumpstartdfthfsentencesimilarity2024082809590200uOQoe"
  LogsLogStream0020240927LATEST90dc678de8924e2e89f2ce816d8e98f800W9TmL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/27/[$LATEST]90dc678de8924e2e89f2ce816d8e98f8"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00lougt"
  LogsLogGroup00testwebsocket00YXzVq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "test-websocket"
      DataProtectionPolicy: {}
  LogsLogStream00ecsgenaifrontend25fdc3c47970431485ca2ad9bd4010e5002Lo08:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/25fdc3c47970431485ca2ad9bd4010e5"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00sHG8H"
  LogsLogStream00ecsgenaifalainafrontendc49e9e107c064c908f839c9cf071806700UAmIg:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genai-falaina-frontend/c49e9e107c064c908f839c9cf0718067"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaitestfalaina00u3NsQ"
  LogsLogStream0025f60a851729c44e14fba990df02e69b00QFstH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "25f60a851729c44e14fba990df02e69b"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00YXzVq"
  LogsLogStream0020241004LATEST10abf3cd0a9344deb9d08ba17b1787ed00DJQZo:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]10abf3cd0a9344deb9d08ba17b1787ed"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS00U5oAY"
  LogsLogStream0020241122LATEST53847afa77db489c8f50d2dcf80ab1d900HmhMD:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/11/22/[$LATEST]53847afa77db489c8f50d2dcf80ab1d9"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStartEC2Instances00A0lOC"
  LogsLogStream00AllTraffici0c345d63e44224cb600rvICx:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-0c345d63e44224cb6"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointshfsentencesimilaritybgem320240917081629979000u4gB"
  LogsLogStream00sgprodgenaideleteobjects33gSWLzEr8xrA2bSdnWXYRRtYx006yHRp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/3gSWLzEr8xrA2bSdnWXYRRtYx"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00TzcCv"
  LogsLogStream0020240821LATEST201550b74d5b463084f3c6d5b015eb9a005MctC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/21/[$LATEST]201550b74d5b463084f3c6d5b015eb9a"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenais3triggertutorial00j0pfP"
  LogsLogStream0020240927LATEST432c07bd0ad940658fe1f7e51dded66d00EGXJJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/27/[$LATEST]432c07bd0ad940658fe1f7e51dded66d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00lougt"
  LogsLogStream0020241127LATESTea23cf71293545e885829f1f5572b371007DpZ1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/11/27/[$LATEST]ea23cf71293545e885829f1f5572b371"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStartEC2Instances00A0lOC"
  LogsLogStream002e19eb40afaadc8b7c807d55386f9f7d005zb3A:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2e19eb40afaadc8b7c807d55386f9f7d"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp100JqWVy"
  LogsLogStream0020240830LATEST15f9420d31d4421d80873b70ec6a9e23005UJRn:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/30/[$LATEST]15f9420d31d4421d80873b70ec6a9e23"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser003jUM2"
  LogsLogStream00sgprodgenaideleteobjects31XKN2eMDOFYsqZ0TnlKTmafcm00LikRy:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/1XKN2eMDOFYsqZ0TnlKTmafcm"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00TzcCv"
  LogsLogGroup00awslambdapocwebsocketclient004UHPI:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/poc-websocket-client"
      DataProtectionPolicy: {}
  LogsLogStream0020241004LATEST1090fa9c51024242b65d8267736cc85d00XRBRP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]1090fa9c51024242b65d8267736cc85d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS00U5oAY"
  LogsLogStream0020241114LATEST21f4695f6d204d83b2852db81fae93c700SsXWM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/11/14/[$LATEST]21f4695f6d204d83b2852db81fae93c7"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStopEC2Instances00RxrSp"
  LogsLogGroup00awslambdasgwssdisconnect000vc3D:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-wss-disconnect"
      DataProtectionPolicy: {}
  LogsLogStream0020240929LATEST652b450186e84e26b69ec3624151a49c00vPCJ7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/29/[$LATEST]652b450186e84e26b69ec3624151a49c"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendmessage003aJRL"
  LogsLogStream0020241004LATEST0ce0106cb2b34aab9607981f4dac1f4400wgU2m:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]0ce0106cb2b34aab9607981f4dac1f44"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS00U5oAY"
  LogsLogStream0020240905LATEST3aad39c952e941b5acbbc6ec944e7feb00russM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/05/[$LATEST]3aad39c952e941b5acbbc6ec944e7feb"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls3007EPvz"
  LogsLogStream00ecsgenaifrontend5988bd8ab5be480baae0c331878ff95f005EmIt:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/5988bd8ab5be480baae0c331878ff95f"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00sHG8H"
  LogsLogStream00AllTraffici0048ad82e3a724f5a00THjiB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-0048ad82e3a724f5a"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointsllama318binstruct00yKKy1"
  LogsLogStream00ecsgenaifalainafrontend42bb75bfa2fd42168fa2511340c9045f002mKP7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genai-falaina-frontend/42bb75bfa2fd42168fa2511340c9045f"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaitestfalaina00u3NsQ"
  LogsLogStream00FargateTelemetry104300TAtlI:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1043"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00uFbwB"
  LogsLogGroup00awssagemakerEndpointsllama318binstruct2024082017221649700AHsdV:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/llama-3-1-8b-instruct-2024-08-20-17-22-16-497"
      DataProtectionPolicy: {}
  LogsLogStream00AllTraffici028798309e5721a4400hOKlO:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-028798309e5721a44"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointsllama318binstruct2024082017221649700AHsdV"
  LogsLogStream00AllTraffici0c3c6ac7e45a37c1500qJg9B:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-0c3c6ac7e45a37c15"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointshfsentencesimilaritybgem320240917081629979000u4gB"
  LogsLogStream0020240821LATESTfb746862f89f49949a7dfa557389f50c00BW5PK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/21/[$LATEST]fb746862f89f49949a7dfa557389f50c"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenais3triggertutorial00j0pfP"
  LogsLogStream001bd9fc7c4f27fcc4c0bc588685105d0800YwzBt:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1bd9fc7c4f27fcc4c0bc588685105d08"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00NZEvy"
  LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00Dyqzr:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-test-genai-summariser-deletechatfunction"
      DataProtectionPolicy: {}
  LogsLogGroup00testpublicrestapi00sIXTf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "test-public-rest-api"
      DataProtectionPolicy: {}
  LogsLogStream00ecsgenaifalainafrontend30ae9c2ace8b4684bff8a69db6b2d3ac00ol21J:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genai-falaina-frontend/30ae9c2ace8b4684bff8a69db6b2d3ac"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaitestfalaina00u3NsQ"
  LogsLogStream0020240930LATEST9dfd0c62df2f432cba620bbf2ac3cf5800tyJ6L:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]9dfd0c62df2f432cba620bbf2ac3cf58"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00lmGzm"
  LogsLogStream00sgprodgenaideleteobjects31IyJ36NmnCiInLujkznOgXNke00VINXE:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/1IyJ36NmnCiInLujkznOgXNke"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00TzcCv"
  LogsLogStream0020241004LATEST036df5b7f4be4c56a923c2f8114c71c300YJ2hb:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]036df5b7f4be4c56a923c2f8114c71c3"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS00U5oAY"
  LogsLogStream00FargateTelemetry107300lbSMV:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1073"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00uFbwB"
  LogsLogStream0020240827LATEST51081de91e7d4c0ca43f94c01104346c00ZGadX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/27/[$LATEST]51081de91e7d4c0ca43f94c01104346c"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls3007EPvz"
  LogsLogStream0020240829LATEST8165ff1b177249dcb7d4d80717277591007Mlv6:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/29/[$LATEST]8165ff1b177249dcb7d4d80717277591"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser003jUM2"
  LogsLogGroup00awslambdasgtestgenaisummariserpython31200rEFDS:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-test-genai-summariser-python312"
      DataProtectionPolicy: {}
  LogsLogStream00FargateTelemetry107800q9ide:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1078"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00uFbwB"
  LogsLogStream0020240904LATEST63ad16e8146f4ffa9d8bdbcbaed0a08e00J1BFl:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/04/[$LATEST]63ad16e8146f4ffa9d8bdbcbaed0a08e"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00wFhbQ"
  LogsLogStream002f0e77900220d51303eeb1860318c3cc000Ws90:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2f0e77900220d51303eeb1860318c3cc"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00NZEvy"
  LogsLogStream0020241011LATEST1451d8ea6d23497e821866a31e6eca8700WivI8:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/11/[$LATEST]1451d8ea6d23497e821866a31e6eca87"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00Dyqzr"
  LogsLogStream0020241001LATESTf7dfc9ac3e664840bd273f07c0d6d88d00zuttr:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]f7dfc9ac3e664840bd273f07c0d6d88d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect00rxIns"
  LogsLogStream0020241011LATEST50197b4826dc4b749b191d0c986faecc00zjBDD:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/11/[$LATEST]50197b4826dc4b749b191d0c986faecc"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00Dyqzr"
  LogsLogStream00sgprodgenaideleteobjects33TO1XFm6OEITkdVkHH26Oepxg00SMk6b:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/3TO1XFm6OEITkdVkHH26Oepxg"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights00TzcCv"
  LogsLogStream00247c5651e176ef27f26a4624b6cc8ee300PXwoy:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "247c5651e176ef27f26a4624b6cc8ee3"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00NZEvy"
  LogsLogStream0020241011LATEST6205ae76498a4b28b39b8daeca3bc455007dg9Y:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/11/[$LATEST]6205ae76498a4b28b39b8daeca3bc455"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00Dyqzr"
  LogsLogGroup00awslambdasgprodgenaisummariser003jUM2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-genai-summariser"
      DataProtectionPolicy: {}
  LogsLogStream0020241008LATESTa567bb61324c4f7a956d2c2bf6f2f36200oefCc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/08/[$LATEST]a567bb61324c4f7a956d2c2bf6f2f362"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300yysP6"
  LogsLogStream0020241209LATESTfaf611aa46324c7fa912cd1e95daf92800eqXrY:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/09/[$LATEST]faf611aa46324c7fa912cd1e95daf928"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStartEC2Instances00A0lOC"
  LogsLogStream0020241001LATESTc363eb7e62774ab8ab657b91efc5cdc300DLf9f:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]c363eb7e62774ab8ab657b91efc5cdc3"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect00rxIns"
  LogsLogStream00AllTraffici08bf53b638d4ef43d004Btf0:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-08bf53b638d4ef43d"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointshfsentencesimilaritybgem320240917081629979000u4gB"
  LogsLogGroup00awssagemakerEndpointsjumpstartdfthfsentencesimilarity2024082808452000SdOBW:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-hf-sentencesimilarity-20240828-084520"
      DataProtectionPolicy: {}
  LogsLogStream0003c628d52860ffa8f0a35527ce71d44f00hwLcp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "03c628d52860ffa8f0a35527ce71d44f"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00YXzVq"
  LogsLogStream0020240917LATESTeb64601eedd64aa5bb8a813b9998f07c008g1Un:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/17/[$LATEST]eb64601eedd64aa5bb8a813b9998f07c"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb00wFhbQ"
  LogsLogStream0020241002LATEST80762197f9c5400c8b3b30818c98958b00x77Py:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/02/[$LATEST]80762197f9c5400c8b3b30818c98958b"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00Dyqzr"
  LogsLogGroup00awslambdasgprodgenaiembeddingsgmkr00A9Req:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-genai-embedding-sgmkr"
      DataProtectionPolicy: {}
  LogsLogStream00FargateTelemetry100100APAis:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1001"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00uFbwB"
  LogsLogStream00eni007b1552e23babdd8all00eUq5q:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-007b1552e23babdd8-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00aAnuf"
  LambdaFunction00sgprodgenairagsummariser00nex8VCodeSourceKMSKeyArnSt3jn:
    NoEcho: "true"
    Type: "String"
    Description: "Value of write only property Code/SourceKMSKeyArn of resource LambdaFunction00sgprodgenairagsummariser00nex8V."
  LambdaFunction00sgprodgenairagsummariser00nex8VCodeZipFileGjscD:
    NoEcho: "true"
    Type: "String"
    Description: "(Node.js and Python) The source code of your Lambda function. If\
      \ you include your function source inline with this parameter, CFN places it\
      \ in a file named ``index`` and zips it to create a [deployment package](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html).\
      \ This zip file cannot exceed 4MB. For the ``Handler`` property, the first part\
      \ of the handler identifier must be ``index``. For example, ``index.handler``.\n\
      \  For JSON, you must escape quotes and special characters such as newline (``\\\
      n``) with a backslash.\n If you specify a function that interacts with an AWS\
      \ CloudFormation custom resource, you don't have to write your own functions\
      \ to send responses to the custom resource that invoked the function. AWS CloudFormation\
      \ provides a response module ([cfn-response](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-lambda-function-code-cfnresponsemodule.html))\
      \ that simplifies sending responses. See [Using Lambda with CloudFormation](https://docs.aws.amazon.com/lambda/latest/dg/services-cloudformation.html)\
      \ for details."
  LambdaFunction00TOBEDELETEDtestfunctionsqs00AXzehCodeImageUriKlbm1:
    NoEcho: "true"
    Type: "String"
    Description: "URI of a [container image](https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html)\
      \ in the Amazon ECR registry."
  LambdaFunction00TOBEDELETEDtestfunctionsqs00AXzehCodeS3Bucketbzzz6:
    NoEcho: "true"
    Type: "String"
    Description: "An Amazon S3 bucket in the same AWS-Region as your function. The\
      \ bucket can be in a different AWS-account."
  LambdaFunction00sgprodgenairagsummariser00nex8VCodeS3ObjectVersionkEzpz:
    NoEcho: "true"
    Type: "String"
    Description: "For versioned objects, the version of the deployment package object\
      \ to use."
  LambdaFunction00DLQhandlersgprodgenaisummariser001QS1vCodeS3ObjectVersion24HYc:
    NoEcho: "true"
    Type: "String"
    Description: "For versioned objects, the version of the deployment package object\
      \ to use."
  LambdaFunction00sgprodgenairagsummariser00nex8VCodeS3Bucketsodqm:
    NoEcho: "true"
    Type: "String"
    Description: "An Amazon S3 bucket in the same AWS-Region as your function. The\
      \ bucket can be in a different AWS-account."
  LambdaFunction00TOBEDELETEDtestfunctionsqs00AXzehCodeZipFileWZtwG:
    NoEcho: "true"
    Type: "String"
    Description: "(Node.js and Python) The source code of your Lambda function. If\
      \ you include your function source inline with this parameter, CFN places it\
      \ in a file named ``index`` and zips it to create a [deployment package](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html).\
      \ This zip file cannot exceed 4MB. For the ``Handler`` property, the first part\
      \ of the handler identifier must be ``index``. For example, ``index.handler``.\n\
      \  For JSON, you must escape quotes and special characters such as newline (``\\\
      n``) with a backslash.\n If you specify a function that interacts with an AWS\
      \ CloudFormation custom resource, you don't have to write your own functions\
      \ to send responses to the custom resource that invoked the function. AWS CloudFormation\
      \ provides a response module ([cfn-response](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-lambda-function-code-cfnresponsemodule.html))\
      \ that simplifies sending responses. See [Using Lambda with CloudFormation](https://docs.aws.amazon.com/lambda/latest/dg/services-cloudformation.html)\
      \ for details."
  LambdaFunction00pocwebsocketsendMessageSQS00F33ucCodeS3Buckethr2tq:
    NoEcho: "true"
    Type: "String"
    Description: "An Amazon S3 bucket in the same AWS-Region as your function. The\
      \ bucket can be in a different AWS-account."
  LambdaFunction00pocwebsocketsendMessageSQS00F33ucCodeImageUrinZtsc:
    NoEcho: "true"
    Type: "String"
    Description: "URI of a [container image](https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html)\
      \ in the Amazon ECR registry."
  LambdaFunction00DLQhandlersgprodgenaisummariser001QS1vCodeS3BucketRvhFz:
    NoEcho: "true"
    Type: "String"
    Description: "An Amazon S3 bucket in the same AWS-Region as your function. The\
      \ bucket can be in a different AWS-account."
  LambdaFunction00pocwebsocketsendMessageSQS00F33ucCodeZipFileELHxV:
    NoEcho: "true"
    Type: "String"
    Description: "(Node.js and Python) The source code of your Lambda function. If\
      \ you include your function source inline with this parameter, CFN places it\
      \ in a file named ``index`` and zips it to create a [deployment package](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html).\
      \ This zip file cannot exceed 4MB. For the ``Handler`` property, the first part\
      \ of the handler identifier must be ``index``. For example, ``index.handler``.\n\
      \  For JSON, you must escape quotes and special characters such as newline (``\\\
      n``) with a backslash.\n If you specify a function that interacts with an AWS\
      \ CloudFormation custom resource, you don't have to write your own functions\
      \ to send responses to the custom resource that invoked the function. AWS CloudFormation\
      \ provides a response module ([cfn-response](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-lambda-function-code-cfnresponsemodule.html))\
      \ that simplifies sending responses. See [Using Lambda with CloudFormation](https://docs.aws.amazon.com/lambda/latest/dg/services-cloudformation.html)\
      \ for details."
  LambdaFunction00DLQhandlersgprodgenaisummariser001QS1vCodeImageUriYUGnA:
    NoEcho: "true"
    Type: "String"
    Description: "URI of a [container image](https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html)\
      \ in the Amazon ECR registry."
  LambdaFunction00pocwebsocketsendMessageSQS00F33ucCodeSourceKMSKeyArnlliGG:
    NoEcho: "true"
    Type: "String"
    Description: "Value of write only property Code/SourceKMSKeyArn of resource LambdaFunction00pocwebsocketsendMessageSQS00F33uc."
  LambdaFunction00pocwebsocketsendMessageSQS00F33ucCodeS3ObjectVersionFUy3d:
    NoEcho: "true"
    Type: "String"
    Description: "For versioned objects, the version of the deployment package object\
      \ to use."
  LambdaFunction00DLQhandlersgprodgenaisummariser001QS1vCodeS3Key3qGVK:
    NoEcho: "true"
    Type: "String"
    Description: "The Amazon S3 key of the deployment package."
  LambdaFunction00TOBEDELETEDtestfunctionsqs00AXzehCodeS3KeypuHh8:
    NoEcho: "true"
    Type: "String"
    Description: "The Amazon S3 key of the deployment package."
  LambdaFunction00DLQhandlersgprodgenaisummariser001QS1vCodeSourceKMSKeyArnNENhY:
    NoEcho: "true"
    Type: "String"
    Description: "Value of write only property Code/SourceKMSKeyArn of resource LambdaFunction00DLQhandlersgprodgenaisummariser001QS1v."
  LambdaFunction00sgprodgenairagsummariser00nex8VCodeS3Key7CY5d:
    NoEcho: "true"
    Type: "String"
    Description: "The Amazon S3 key of the deployment package."
  LambdaFunction00TOBEDELETEDtestfunctionsqs00AXzehCodeSourceKMSKeyArnHnQwm:
    NoEcho: "true"
    Type: "String"
    Description: "Value of write only property Code/SourceKMSKeyArn of resource LambdaFunction00TOBEDELETEDtestfunctionsqs00AXzeh."
  LambdaFunction00pocwebsocketsendMessageSQS00F33ucCodeS3KeyqFhyC:
    NoEcho: "true"
    Type: "String"
    Description: "The Amazon S3 key of the deployment package."
  LambdaFunction00sgprodgenairagsummariser00nex8VCodeImageUrilSOqM:
    NoEcho: "true"
    Type: "String"
    Description: "URI of a [container image](https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html)\
      \ in the Amazon ECR registry."
  LambdaFunction00TOBEDELETEDtestfunctionsqs00AXzehCodeS3ObjectVersionwW4BU:
    NoEcho: "true"
    Type: "String"
    Description: "For versioned objects, the version of the deployment package object\
      \ to use."
  LambdaFunction00DLQhandlersgprodgenaisummariser001QS1vCodeZipFilePz01t:
    NoEcho: "true"
    Type: "String"
    Description: "(Node.js and Python) The source code of your Lambda function. If\
      \ you include your function source inline with this parameter, CFN places it\
      \ in a file named ``index`` and zips it to create a [deployment package](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html).\
      \ This zip file cannot exceed 4MB. For the ``Handler`` property, the first part\
      \ of the handler identifier must be ``index``. For example, ``index.handler``.\n\
      \  For JSON, you must escape quotes and special characters such as newline (``\\\
      n``) with a backslash.\n If you specify a function that interacts with an AWS\
      \ CloudFormation custom resource, you don't have to write your own functions\
      \ to send responses to the custom resource that invoked the function. AWS CloudFormation\
      \ provides a response module ([cfn-response](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-lambda-function-code-cfnresponsemodule.html))\
      \ that simplifies sending responses. See [Using Lambda with CloudFormation](https://docs.aws.amazon.com/lambda/latest/dg/services-cloudformation.html)\
      \ for details."
  LogsLogStream0020240912LATEST63eb34b404f64f8aa61d8f757af7c74b00zZS1j:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/12/[$LATEST]63eb34b404f64f8aa61d8f757af7c74b"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb006vttD"
  LogsLogStream000cedc4a83db37a151936369f82d587be00FLtj5:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "0cedc4a83db37a151936369f82d587be"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00MDCuj"
  NeptuneDBCluster00sgprodgenaisummariserv100TeViW:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Neptune::DBCluster"
    DeletionPolicy: "Retain"
    Properties:
      StorageEncrypted: true
      EngineVersion: "5.0.0"
      KmsKeyId:
        Fn::GetAtt:
        - "KMSKey0051a5c08ff1b24e92b22b5784f7f0dc3300vhnR8"
        - "Arn"
      AssociatedRoles: []
      AvailabilityZones:
      - "ap-southeast-1a"
      - "ap-southeast-1b"
      - "ap-southeast-1c"
      DBClusterIdentifier: "sg-prod-genai-summariser-v1"
      PreferredMaintenanceWindow: "mon:15:10-mon:15:40"
      IamAuthEnabled: false
      DBSubnetGroupName: "genai-pilot-database-private"
      DeletionProtection: true
      PreferredBackupWindow: "00:00-00:30"
      DBPort: 27017
      VpcSecurityGroupIds:
      - "sg-075615342aa3e28b9"
      - "sg-02a57c92533299fd5"
      CopyTagsToSnapshot: false
      DBClusterParameterGroupName: "default.docdb5.0"
      BackupRetentionPeriod: 7
      Tags: []
      EnableCloudwatchLogsExports:
      - "audit"
      - "profiler"
  LogsLogStream0020241211LATEST474ac24b5d03447488a90c4f306f977500Ryfv7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/11/[$LATEST]474ac24b5d03447488a90c4f306f9775"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodapigwapikeyauthorizer00H6J1D"
  LogsLogStream0020240930LATEST9c8836e94b334597a7d815674141463300bGRF5:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]9c8836e94b334597a7d8156741414633"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00v8Puf"
  RDSDBInstance00sgprodgenaisummariserv100Hz6bE:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::RDS::DBInstance"
    DeletionPolicy: "Retain"
    Properties:
      StorageEncrypted: true
      AssociatedRoles: []
      CertificateDetails: {}
      Port: "27017"
      DBClusterIdentifier:
        Ref: "RDSDBCluster00sgprodgenaisummariserv100pjqgh"
      ProcessorFeatures: []
      StorageThroughput: 0
      PreferredBackupWindow: "00:00-00:30"
      MonitoringInterval: 0
      DBParameterGroupName: "default.docdb5.0"
      Endpoint: {}
      NetworkType: "IPV4"
      DedicatedLogVolume: false
      CopyTagsToSnapshot: false
      MultiAZ: false
      Engine: "docdb"
      Tags: []
      LicenseModel: "na"
      EngineVersion: "5.0.0"
      StorageType: "standard"
      KmsKeyId:
        Fn::GetAtt:
        - "KMSKey0051a5c08ff1b24e92b22b5784f7f0dc3300vhnR8"
        - "Arn"
      DBInstanceClass: "db.t3.medium"
      AvailabilityZone: "ap-southeast-1b"
      OptionGroupName: "default:docdb-5-0"
      PreferredMaintenanceWindow: "mon:19:53-mon:20:23"
      EnablePerformanceInsights: false
      AutoMinorVersionUpgrade: true
      DBSubnetGroupName:
        Ref: "RDSDBSubnetGroup00genaipilotdatabaseprivate00Rs8Sx"
      DeletionProtection: false
      DBInstanceIdentifier: "sg-prod-genai-summariser-v1"
      AllocatedStorage: "1"
      CACertificateIdentifier: "rds-ca-rsa2048-g1"
      ManageMasterUserPassword: false
      MasterUserSecret: {}
      VPCSecurityGroups:
      - Fn::GetAtt:
        - "EC2SecurityGroup00sg075615342aa3e28b9000aQtB"
        - "GroupId"
      - Fn::GetAtt:
        - "EC2SecurityGroup00sg02a57c92533299fd500hjOWZ"
        - "GroupId"
      DBSecurityGroups: []
      MasterUsername: "summariser"
      EnableIAMDatabaseAuthentication: false
      BackupRetentionPeriod: 7
      PromotionTier: 1
      PubliclyAccessible: false
      EnableCloudwatchLogsExports:
      - "audit"
      - "profiler"
  LogsLogStream0020241001LATEST770ced396891431982d13cb75178724900C3Vrk:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]770ced396891431982d13cb751787249"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect00VEk8E"
  LogsLogStream00AllTraffici02c14b19238884daf00EW8bQ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-02c14b19238884daf"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointsllama318binstruct2024082210232306200Q2kP4"
  Route53ResolverResolverRuleAssociation00rslvrautodefinedassocvpc0182b4cdff5ae990binternetresolver00xQ3AG:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Route53Resolver::ResolverRuleAssociation"
    DeletionPolicy: "Retain"
    Properties:
      VPCId: "vpc-0182b4cdff5ae990b"
      ResolverRuleId: "rslvr-autodefined-rr-internet-resolver"
      Name: "System Rule Association"
  LogsLogStream003390e4b907ac22aa4b3d20e1681b6acd00YZj88:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "3390e4b907ac22aa4b3d20e1681b6acd"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp1004m0tX"
  LogsLogStream0020240923LATESTcf82e06db7d4444a85072b076cc258ee00i5UKF:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/23/[$LATEST]cf82e06db7d4444a85072b076cc258ee"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00dQBZT"
  SQSQueue00summarisercontinuousconversationfifo00cV5x9:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::SQS::Queue"
    DeletionPolicy: "Retain"
    Properties:
      ReceiveMessageWaitTimeSeconds: 0
      SqsManagedSseEnabled: true
      FifoThroughputLimit: "perQueue"
      DelaySeconds: 0
      FifoQueue: true
      MessageRetentionPeriod: 1800
      MaximumMessageSize: 262144
      DeduplicationScope: "queue"
      VisibilityTimeout: 300
      ContentBasedDeduplication: true
      QueueName: "summariser_continuous_conversation.fifo"
  LogsLogGroup00awssagemakerEndpointshfsentencesimilaritybgem32024090403402960200TVJ5N:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/hf-sentencesimilarity-bge-m3-2024-09-04-03-40-29-602"
      DataProtectionPolicy: {}
  LogsLogStream0020241009LATEST5c19da4aa6f44beeab030bec5705278000tRy4D:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/09/[$LATEST]5c19da4aa6f44beeab030bec57052780"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketclient00vKb4U"
  LogsLogStream0020240930LATESTa0e30871e4c14cf7a4fede7c6bb96f7d00IBafQ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]a0e30871e4c14cf7a4fede7c6bb96f7d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdahelloworld00nqY5j"
  LogsLogStream0020240909LATESTf4f40600b6654302ba518eb7089c937900o1br8:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]f4f40600b6654302ba518eb7089c9379"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00hic7x"
  LogsLogStream0020240909LATEST6c368a9bdcc24a6183101944939f462900UmWqf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]6c368a9bdcc24a6183101944939f4629"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00hic7x"
  LogsLogGroup00awslambdaSecretsManagergenaiprodauthdbv2autorotate008WWZX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/SecretsManagergenai-prod-authdbv2-auto-rotate"
      DataProtectionPolicy: {}
  MemoryDBParameterGroup00defaultmemorydbredis600sRlsF:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::MemoryDB::ParameterGroup"
    DeletionPolicy: "Retain"
    Properties:
      ParameterGroupName: "default.memorydb-redis6"
      Family: "memorydb_redis6"
      Description: "Default parameter group for memorydb_redis6"
  LogsLogStream0020241002LATEST8ecc05ce3f754864b0995e06d6bbfa7500Z3Ef2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/02/[$LATEST]8ecc05ce3f754864b0995e06d6bbfa75"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendmessage001DfO6"
  LogsLogStream0020240823LATESTe4def2c199524a4cb95aea8921b7b990009xhjI:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/23/[$LATEST]e4def2c199524a4cb95aea8921b7b990"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenais3triggertutorial00QDvVc"
  LogsLogStream0020241007LATEST325f4f6d1f4d4328b6b3deb242c8d28e00IiUiC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/07/[$LATEST]325f4f6d1f4d4328b6b3deb242c8d28e"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect00VEk8E"
  LogsLogStream0020241013LATEST7ce1a4d160c740b1aa135a7ce0f5d21d00VMyn7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/13/[$LATEST]7ce1a4d160c740b1aa135a7ce0f5d21d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00HxYAk"
  SQSQueue00teststandardqueue00y9ARe:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::SQS::Queue"
    DeletionPolicy: "Retain"
    Properties:
      SqsManagedSseEnabled: true
      ReceiveMessageWaitTimeSeconds: 0
      DelaySeconds: 0
      MessageRetentionPeriod: 86400
      MaximumMessageSize: 262144
      VisibilityTimeout: 20
      QueueName: "test_standard_queue"
  LogsLogStream0015f40a2d86cdc774597005a6a8851e59007dcRA:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "15f40a2d86cdc774597005a6a8851e59"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00ICZYF"
  IAMRole00TOBEDELETEDtestfunctionsqsrolexqi663q10076Son:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-010b2536-c268-4ce0-be03-5f9d7ab9c14e"
      - "arn:aws:iam::aws:policy/AmazonSQSFullAccess"
      - "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess"
      - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
      - "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
      - "arn:aws:iam::aws:policy/AdministratorAccess"
      MaxSessionDuration: 3600
      RoleName: "TO_BE_DELETED-test_function_sqs-role-xqi663q1"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  LogsLogStream0020240923LATESTae0cafd13ffa4d6e975633d385fc33ba00RW4Ur:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/23/[$LATEST]ae0cafd13ffa4d6e975633d385fc33ba"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00dQBZT"
  LogsLogGroup00awssagemakerEndpointsjumpstartdfthfsentencesimilarity2024081404134200uTghu:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-hf-sentencesimilarity-20240814-041342"
      DataProtectionPolicy: {}
  LogsLogStream0020240930LATEST1d318a2541df4fe4866b5adf4f052182005y4oy:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]1d318a2541df4fe4866b5adf4f052182"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls300DQsts"
  SSMAssociation007e9889a948504a05af546b903195dc2c00ELT1V:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::SSM::Association"
    DeletionPolicy: "Retain"
    Properties:
      AssociationName: "InvokeInspectorLinuxSsmPlugin-do-not-delete"
      ScheduleExpression: "rate(6 hours)"
      ApplyOnlyAtCronInterval: false
      ComplianceSeverity: "CRITICAL"
      Targets:
      - Values:
        - "*"
        Key: "InstanceIds"
      DocumentVersion: "$DEFAULT"
      Name: "AmazonInspector2-InvokeInspectorSsmPluginLinux"
  LogsLogStream00FargateTelemetry10700zSAmT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-107"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00lD9M0"
  EC2Subnet00subnet026e7fd8d1e877dbb00v3Ccr:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Subnet"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00DrjMC"
      MapPublicIpOnLaunch: false
      EnableDns64: false
      AvailabilityZoneId: "apse1-az2"
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      CidrBlock: "10.25.71.160/27"
      Ipv6Native: false
      Tags:
      - Value: "GenAI-Dev-Application-Private-1b"
        Key: "Name"
  RDSDBCluster00sgprodgenaiwebsocketdb00Y0U9u:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::RDS::DBCluster"
    DeletionPolicy: "Retain"
    Properties:
      StorageEncrypted: true
      AssociatedRoles: []
      EnableHttpEndpoint: false
      EngineMode: "provisioned"
      Port: 27017
      DBClusterIdentifier: "sg-prod-genai-websocketdb"
      PreferredBackupWindow: "00:00-00:30"
      NetworkType: "IPV4"
      VpcSecurityGroupIds:
      - "sg-02a57c92533299fd5"
      - "sg-075615342aa3e28b9"
      CopyTagsToSnapshot: false
      Engine: "docdb"
      Tags: []
      EngineVersion: "5.0.0"
      StorageType: "aurora"
      KmsKeyId:
        Fn::GetAtt:
        - "KMSKey0051a5c08ff1b24e92b22b5784f7f0dc3300vhnR8"
        - "Arn"
      AvailabilityZones:
      - "ap-southeast-1a"
      - "ap-southeast-1b"
      - "ap-southeast-1c"
      EnableLocalWriteForwarding: false
      PreferredMaintenanceWindow: "sun:14:18-sun:14:48"
      AutoMinorVersionUpgrade: false
      DBSubnetGroupName:
        Ref: "RDSDBSubnetGroup00genaipilotdatabaseprivate00Rs8Sx"
      DeletionProtection: true
      AllocatedStorage: 1
      ManageMasterUserPassword: false
      MasterUserSecret: {}
      MasterUsername: "WebsocketDBUser"
      ReadEndpoint: {}
      EnableIAMDatabaseAuthentication: false
      DBClusterParameterGroupName: "default.docdb5.0"
      BackupRetentionPeriod: 7
      EnableCloudwatchLogsExports:
      - "audit"
      - "profiler"
  LogsLogStream0020241203LATEST71ff42f4eeb24dee9b57a9a69e4d864200KgqoH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/03/[$LATEST]71ff42f4eeb24dee9b57a9a69e4d8642"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStartEC2Instances00yJ4d3"
  LogsLogStream0020241004LATEST0c7140548c6d468ba52626fc16408c9a00D0C80:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]0c7140548c6d468ba52626fc16408c9a"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS00XnFFd"
  KMSKey008638d8df896d4fe8a82af2fdb61ac87700BwHgi:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::KMS::Key"
    DeletionPolicy: "Retain"
    Properties:
      Origin: "AWS_KMS"
      MultiRegion: false
      Description: "To encrypt authDB in DocDB's username and password in Secrets\
        \ Manager"
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
        - Resource: "*"
          Action: "kms:*"
          Effect: "Allow"
          Principal:
            AWS: "arn:aws:iam::343218203122:root"
          Sid: "Enable IAM User Permissions"
        - Resource: "*"
          Action:
          - "kms:Create*"
          - "kms:Describe*"
          - "kms:Enable*"
          - "kms:List*"
          - "kms:Put*"
          - "kms:Update*"
          - "kms:Revoke*"
          - "kms:Disable*"
          - "kms:Get*"
          - "kms:Delete*"
          - "kms:TagResource"
          - "kms:UntagResource"
          - "kms:ScheduleKeyDeletion"
          - "kms:CancelKeyDeletion"
          - "kms:RotateKeyOnDemand"
          Effect: "Allow"
          Principal:
            AWS: "arn:aws:iam::343218203122:role/aws-reserved/sso.amazonaws.com/ap-southeast-1/AWSReservedSSO_GenAI_Admin_Access_37c71d1e8de0e9ae"
          Sid: "Allow access for Key Administrators"
        - Resource: "*"
          Action:
          - "kms:Encrypt"
          - "kms:Decrypt"
          - "kms:ReEncrypt*"
          - "kms:GenerateDataKey*"
          - "kms:DescribeKey"
          Effect: "Allow"
          Principal:
            AWS:
            - "arn:aws:iam::343218203122:role/ecsTaskExecutionRole"
            - "arn:aws:iam::343218203122:role/ec2-admin-access"
          Sid: "Allow use of the key"
        - Condition:
            Bool:
              kms:GrantIsForAWSResource: "true"
          Resource: "*"
          Action:
          - "kms:CreateGrant"
          - "kms:ListGrants"
          - "kms:RevokeGrant"
          Effect: "Allow"
          Principal:
            AWS:
            - "arn:aws:iam::343218203122:role/ecsTaskExecutionRole"
            - "arn:aws:iam::343218203122:role/ec2-admin-access"
          Sid: "Allow attachment of persistent resources"
        Id: "key-consolepolicy-3"
      KeySpec: "SYMMETRIC_DEFAULT"
      Enabled: true
      EnableKeyRotation: true
      KeyUsage: "ENCRYPT_DECRYPT"
      Tags: []
  LogsLogStream0020240928LATEST6f43fff47614443eafd57bdc5912dff300r41tR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]6f43fff47614443eafd57bdc5912dff3"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00v8Puf"
  LogsLogStream0020240830LATEST25320bbae22d4169a6fe94981f41eb6c001F8gh:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/30/[$LATEST]25320bbae22d4169a6fe94981f41eb6c"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser00ykqXO"
  LogsLogGroup00awssagemakerEndpointsjumpstartdftllama318binstruct2024081607141500Ub2lJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-llama-3-1-8b-instruct-20240816-071415"
      DataProtectionPolicy: {}
  LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00dQBZT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/DLQ-handler-sg-prod-genai-summariser"
      DataProtectionPolicy: {}
  LogsLogStream0020241009LATEST25beec38706149ca8173dcf6f69a6bb900n7m1Y:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/09/[$LATEST]25beec38706149ca8173dcf6f69a6bb9"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser00VzYw1"
  LogsLogStream0020240929LATEST04944e138d2d499aa5293f7f4dfb56a600kJNCG:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/29/[$LATEST]04944e138d2d499aa5293f7f4dfb56a6"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdefault00QYLJf"
  LogsLogStream003795513c0ac0ca6ce2ed7084a5a4dc5500AsBVx:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "3795513c0ac0ca6ce2ed7084a5a4dc55"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00ICZYF"
  LogsLogStream0020241004LATEST09a6c385cfd34205a17f076b2b9d012d00OnCYX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]09a6c385cfd34205a17f076b2b9d012d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS00XnFFd"
  LogsLogGroup00awsapigateway0u3tyeizfbpoc00ICZYF:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/apigateway/0u3tyeizfb/poc"
      DataProtectionPolicy: {}
  LogsLogStream0020241006LATEST0bd65295254a415a8e2a4bc689a8291800FWE8E:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/06/[$LATEST]0bd65295254a415a8e2a4bc689a82918"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect00VEk8E"
  RDSDBSubnetGroup00default00n5Iyv:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::RDS::DBSubnetGroup"
    DeletionPolicy: "Retain"
    Properties:
      DBSubnetGroupDescription: "default"
      SubnetIds:
      - Ref: "EC2Subnet00subnet01aebeb15e1111ff300r23Iv"
      - Ref: "EC2Subnet00subnet01c6199eacb456cba00W1mVA"
      - Ref: "EC2Subnet00subnet0ff6c65f492e7220000VtJF7"
      DBSubnetGroupName: "default"
  LogsLogStream00sgprodgenaideleteobjects32nE5wYrivur4n0HWcJMjIkTu800x6SoF:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/2nE5wYrivur4n0HWcJMjIkTu8"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights004lL7v"
  LogsLogStream0020241211LATEST50a24b468ab048d8a74162749eef925b00OGu2Q:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/11/[$LATEST]50a24b468ab048d8a74162749eef925b"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdatestretrieves3metadata00kB5hD"
  S3BucketPolicy00sggenaiaccesslog00gdDXU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::S3::BucketPolicy"
    DeletionPolicy: "Retain"
    Properties:
      Bucket:
        Ref: "S3Bucket00sggenaiaccesslog004mMef"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Condition:
            Bool:
              aws:SecureTransport: "false"
          Resource:
          - "arn:aws:s3:::sg-genai-accesslog"
          - "arn:aws:s3:::sg-genai-accesslog/*"
          Action: "s3:*"
          Effect: "Deny"
          Principal: "*"
          Sid: "AllowSSLRequestsOnly"
        - Resource: "arn:aws:s3:::sg-genai-accesslog/*"
          Action: "s3:PutObject"
          Effect: "Allow"
          Principal:
            AWS: "arn:aws:iam::114774131450:root"
        Id: "ExamplePolicy123"
  LogsLogStream001a2a4573f27bcb66d87cacc62c8d312500HFiBj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1a2a4573f27bcb66d87cacc62c8d3125"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00MDCuj"
  LogsLogStream002cb99a1e6daf60d95c0ccabd665797fe001LYUC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2cb99a1e6daf60d95c0ccabd665797fe"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00MDCuj"
  EC2SecurityGroup00sg02a57c92533299fd500hjOWZ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "Allows access from EC2"
      GroupName: "websocketDocDB"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00DrjMC"
      SecurityGroupIngress:
      - CidrIp:
          Fn::GetAtt:
          - "EC2VPC00vpc02790342fee4ebf9f00DrjMC"
          - "CidrBlock"
        IpProtocol: "tcp"
        Description: "allow inbound from firewall"
        FromPort: 27017
        ToPort: 27017
      - IpProtocol: "tcp"
        FromPort: 27017
        SourceSecurityGroupId: "sg-075615342aa3e28b9"
        ToPort: 27017
        SourceSecurityGroupOwnerId: "343218203122"
      - IpProtocol: "tcp"
        FromPort: 27017
        SourceSecurityGroupId: "sg-0fd865e5bd1a64a07"
        ToPort: 27017
        SourceSecurityGroupOwnerId: "343218203122"
      - IpProtocol: "tcp"
        Description: "allow inbound from alb internal"
        FromPort: 27017
        SourceSecurityGroupId: "sg-0fbe083eaa2bbd46c"
        ToPort: 27017
        SourceSecurityGroupOwnerId: "343218203122"
      - IpProtocol: "tcp"
        Description: "allow inbound from ECS frontend"
        FromPort: 27017
        SourceSecurityGroupId: "sg-06010a299d4942ce2"
        ToPort: 27017
        SourceSecurityGroupOwnerId: "343218203122"
      - IpProtocol: "tcp"
        Description: "allow inbound from itself"
        FromPort: 27017
        SourceSecurityGroupId: "sg-02a57c92533299fd5"
        ToPort: 27017
        SourceSecurityGroupOwnerId: "343218203122"
      - IpProtocol: "tcp"
        Description: "allow inbound from lambda"
        FromPort: 27017
        SourceSecurityGroupId: "sg-03d66fb80efac83a5"
        ToPort: 27017
        SourceSecurityGroupOwnerId: "343218203122"
      - IpProtocol: "tcp"
        Description: "DocuDB SG"
        FromPort: 443
        SourceSecurityGroupId: "sg-02a57c92533299fd5"
        ToPort: 443
        SourceSecurityGroupOwnerId: "343218203122"
      - IpProtocol: "tcp"
        Description: "From ECS Frontend SG"
        FromPort: 443
        SourceSecurityGroupId: "sg-06010a299d4942ce2"
        ToPort: 443
        SourceSecurityGroupOwnerId: "343218203122"
      - IpProtocol: "tcp"
        Description: "VPC Endpoint SG"
        FromPort: 443
        SourceSecurityGroupId: "sg-0ef00776c538db142"
        ToPort: 443
        SourceSecurityGroupOwnerId: "343218203122"
      SecurityGroupEgress:
      - CidrIp:
          Fn::GetAtt:
          - "EC2VPC00vpc02790342fee4ebf9f00DrjMC"
          - "CidrBlock"
        IpProtocol: "-1"
        Description: "Internal traffic only"
        FromPort: -1
        ToPort: -1
      - IpProtocol: "tcp"
        DestinationSecurityGroupId: "sg-02a57c92533299fd5"
        FromPort: 443
        ToPort: 443
  LogsLogGroup00awslambdaStopEC2Instances00L3xrj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/StopEC2Instances"
      DataProtectionPolicy: {}
  LogsLogStream0020240912LATEST65d22a15da884623ac39ff0ae250330000JrObm:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/12/[$LATEST]65d22a15da884623ac39ff0ae2503300"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb006vttD"
  LogsLogStream00AllTraffici044d547156845c83400ubHec:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-044d547156845c834"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointshfsentencesimilaritybgem32024091708162997900j9Wdr"
  LogsLogGroup00ecsgenaitestfalaina001awtN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/ecs/genai-test-falaina"
      DataProtectionPolicy: {}
  LogsLogStream0022fbca6de8d655eccfbc537cefb7a1da00GQK9f:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "22fbca6de8d655eccfbc537cefb7a1da"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00ICZYF"
  LogsLogGroup00awssagemakerEndpointsllama318binstruct2024082306151625000CjytK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/llama-3-1-8b-instruct-2024-08-23-06-15-16-250"
      DataProtectionPolicy: {}
  LogsLogStream0020241009LATEST385d6cd4fc5e4563bffd0beb5d01515300mYFYE:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/09/[$LATEST]385d6cd4fc5e4563bffd0beb5d015153"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300LTcwa"
  SQSQueue00DLQsummarisernewconversationfifo00Kaoay:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::SQS::Queue"
    DeletionPolicy: "Retain"
    Properties:
      ReceiveMessageWaitTimeSeconds: 0
      SqsManagedSseEnabled: true
      FifoThroughputLimit: "perQueue"
      DelaySeconds: 0
      FifoQueue: true
      MessageRetentionPeriod: 86400
      MaximumMessageSize: 262144
      DeduplicationScope: "queue"
      VisibilityTimeout: 300
      ContentBasedDeduplication: true
      QueueName: "DLQ-summariser_new_conversation.fifo"
  LogsLogStream0020240828LATESTbc8d09ee21064a05ad69345dafcd7ee500BRH5m:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/28/[$LATEST]bc8d09ee21064a05ad69345dafcd7ee5"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser00ykqXO"
  LogsLogStream0020241004LATEST02bd351e56024762bfab480c86ad6e59003XIdV:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]02bd351e56024762bfab480c86ad6e59"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS00XnFFd"
  LogsLogStream0020240904LATESTa65adfa96d174b459abcae3cd807775b00B3HzC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/04/[$LATEST]a65adfa96d174b459abcae3cd807775b"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls300DQsts"
  LogsLogGroup00awslambdasgwssdisconnect00llVs6:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-wss-disconnect"
      DataProtectionPolicy: {}
  RDSDBCluster00sgprodgenaisummariserv100pjqgh:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::RDS::DBCluster"
    DeletionPolicy: "Retain"
    Properties:
      StorageEncrypted: true
      AssociatedRoles: []
      EnableHttpEndpoint: false
      EngineMode: "provisioned"
      Port: 27017
      DBClusterIdentifier: "sg-prod-genai-summariser-v1"
      PreferredBackupWindow: "00:00-00:30"
      NetworkType: "IPV4"
      VpcSecurityGroupIds:
      - "sg-075615342aa3e28b9"
      - "sg-02a57c92533299fd5"
      CopyTagsToSnapshot: false
      Engine: "docdb"
      Tags: []
      EngineVersion: "5.0.0"
      StorageType: "aurora"
      KmsKeyId:
        Fn::GetAtt:
        - "KMSKey0051a5c08ff1b24e92b22b5784f7f0dc3300vhnR8"
        - "Arn"
      AvailabilityZones:
      - "ap-southeast-1a"
      - "ap-southeast-1b"
      - "ap-southeast-1c"
      EnableLocalWriteForwarding: false
      PreferredMaintenanceWindow: "mon:15:10-mon:15:40"
      AutoMinorVersionUpgrade: false
      DBSubnetGroupName:
        Ref: "RDSDBSubnetGroup00genaipilotdatabaseprivate00Rs8Sx"
      DeletionProtection: true
      AllocatedStorage: 1
      ManageMasterUserPassword: false
      MasterUserSecret: {}
      MasterUsername: "summariser"
      ReadEndpoint: {}
      EnableIAMDatabaseAuthentication: false
      DBClusterParameterGroupName: "default.docdb5.0"
      BackupRetentionPeriod: 7
      EnableCloudwatchLogsExports:
      - "audit"
      - "profiler"
  LogsLogStream00AllTraffici06b91f8707475e9c100160yg:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-06b91f8707475e9c1"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointsllama318binstruct2024082306151625000CjytK"
  LogsLogStream0020240909LATEST4b2ac322c5914f499e54314517bcdc4c007z3Qc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]4b2ac322c5914f499e54314517bcdc4c"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00hic7x"
  LogsLogStream00124bb969b735390c99c6365cbcf6499e00Jjiby:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "124bb969b735390c99c6365cbcf6499e"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00MDCuj"
  LogsLogStream0020240830LATEST72dfd275dafe4e078b021a1532a0d8de00szAug:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/30/[$LATEST]72dfd275dafe4e078b021a1532a0d8de"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser00ykqXO"
  LogsLogStream0020241001LATEST1cfc18ded8f14629b8f6bddb283abaf300ZrF7L:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]1cfc18ded8f14629b8f6bddb283abaf3"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect00VEk8E"
  RDSDBInstance00sgprodgenaicourtcasesdb216v1200GGCJH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::RDS::DBInstance"
    DeletionPolicy: "Retain"
    Properties:
      StorageEncrypted: true
      AssociatedRoles: []
      CertificateDetails: {}
      Port: "27017"
      DBClusterIdentifier:
        Ref: "RDSDBCluster00sgprodgenaicourtcasesdb216v100XBe96"
      ProcessorFeatures: []
      StorageThroughput: 0
      PreferredBackupWindow: "00:00-00:30"
      MonitoringInterval: 0
      DBParameterGroupName: "default.docdb5.0"
      Endpoint: {}
      NetworkType: "IPV4"
      DedicatedLogVolume: false
      CopyTagsToSnapshot: false
      MultiAZ: false
      Engine: "docdb"
      Tags: []
      LicenseModel: "na"
      EngineVersion: "5.0.0"
      StorageType: "standard"
      KmsKeyId:
        Fn::GetAtt:
        - "KMSKey0051a5c08ff1b24e92b22b5784f7f0dc3300vhnR8"
        - "Arn"
      DBInstanceClass: "db.t3.medium"
      AvailabilityZone: "ap-southeast-1c"
      OptionGroupName: "default:docdb-5-0"
      PreferredMaintenanceWindow: "wed:15:57-wed:16:27"
      EnablePerformanceInsights: false
      AutoMinorVersionUpgrade: true
      DBSubnetGroupName:
        Ref: "RDSDBSubnetGroup00genaipilotdatabaseprivate00Rs8Sx"
      DeletionProtection: false
      DBInstanceIdentifier: "sg-prod-genai-courtcasesdb-216-v1-2"
      AllocatedStorage: "1"
      CACertificateIdentifier: "rds-ca-rsa2048-g1"
      ManageMasterUserPassword: false
      MasterUserSecret: {}
      VPCSecurityGroups:
      - Fn::GetAtt:
        - "EC2SecurityGroup00sg075615342aa3e28b9000aQtB"
        - "GroupId"
      - Fn::GetAtt:
        - "EC2SecurityGroup00sg02a57c92533299fd500hjOWZ"
        - "GroupId"
      DBSecurityGroups: []
      MasterUsername: "Docdbadmin"
      EnableIAMDatabaseAuthentication: false
      BackupRetentionPeriod: 7
      PromotionTier: 1
      PubliclyAccessible: false
      EnableCloudwatchLogsExports:
      - "audit"
      - "profiler"
  LogsLogStream0020241001LATESTf2b4cb47007d4bc085b6fb154e78cb7b00hseno:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]f2b4cb47007d4bc085b6fb154e78cb7b"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00HxYAk"
  SSMAssociation00cf5120f3a47443dca39ffe1e9cc60e8b00KLSzs:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::SSM::Association"
    DeletionPolicy: "Retain"
    Properties:
      AssociationName: "InspectorInventoryCollection-do-not-delete"
      ScheduleExpression: "rate(30 minutes)"
      Parameters:
        instanceDetailedInformation:
        - "Enabled"
        applications:
        - "Enabled"
      ApplyOnlyAtCronInterval: false
      ComplianceSeverity: "CRITICAL"
      Targets:
      - Values:
        - "*"
        Key: "InstanceIds"
      DocumentVersion: "$DEFAULT"
      Name: "AWS-GatherSoftwareInventory"
  LogsLogStream0020241128LATEST8434280904c046aebe5baab180f2ee7000jdVW1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/11/28/[$LATEST]8434280904c046aebe5baab180f2ee70"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStopEC2Instances00L3xrj"
  LogsLogStream0020240911LATESTd2571945a9b74f10853b37056e6f5d3e00szjib:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/11/[$LATEST]d2571945a9b74f10853b37056e6f5d3e"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls300DQsts"
  LogsLogStream00FargateTelemetry100200eCQpW:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1002"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00lD9M0"
  LogsLogStream0003d99cd546ad30661ea08e1fb4b89cdf00QagO8:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "03d99cd546ad30661ea08e1fb4b89cdf"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp1004m0tX"
  LogsLogStream0020240923LATESTae7b2b66c8a7490b85a7017c1e6fadef00ohpSQ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/23/[$LATEST]ae7b2b66c8a7490b85a7017c1e6fadef"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00dQBZT"
  LogsLogStream00FargateTelemetry107100jhFJr:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1071"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00lD9M0"
  LogsLogStream0020240902LATESTb787b8289a9b4b299f0f7f9704ca741a00rGEeA:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/02/[$LATEST]b787b8289a9b4b299f0f7f9704ca741a"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300LTcwa"
  RDSDBInstance00sgprodgenaicourtcasesdb216v11008lSyP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::RDS::DBInstance"
    DeletionPolicy: "Retain"
    Properties:
      StorageEncrypted: true
      AssociatedRoles: []
      CertificateDetails: {}
      Port: "27017"
      DBClusterIdentifier:
        Ref: "RDSDBCluster00sgprodgenaicourtcasesdb216v100XBe96"
      ProcessorFeatures: []
      StorageThroughput: 0
      PreferredBackupWindow: "00:00-00:30"
      MonitoringInterval: 0
      DBParameterGroupName: "default.docdb5.0"
      Endpoint: {}
      NetworkType: "IPV4"
      DedicatedLogVolume: false
      CopyTagsToSnapshot: false
      MultiAZ: false
      Engine: "docdb"
      Tags: []
      LicenseModel: "na"
      EngineVersion: "5.0.0"
      StorageType: "standard"
      KmsKeyId:
        Fn::GetAtt:
        - "KMSKey0051a5c08ff1b24e92b22b5784f7f0dc3300vhnR8"
        - "Arn"
      DBInstanceClass: "db.t3.medium"
      AvailabilityZone: "ap-southeast-1b"
      OptionGroupName: "default:docdb-5-0"
      PreferredMaintenanceWindow: "mon:19:02-mon:19:32"
      EnablePerformanceInsights: false
      AutoMinorVersionUpgrade: true
      DBSubnetGroupName:
        Ref: "RDSDBSubnetGroup00genaipilotdatabaseprivate00Rs8Sx"
      DeletionProtection: false
      DBInstanceIdentifier: "sg-prod-genai-courtcasesdb-216-v1-1"
      AllocatedStorage: "1"
      CACertificateIdentifier: "rds-ca-rsa2048-g1"
      ManageMasterUserPassword: false
      MasterUserSecret: {}
      VPCSecurityGroups:
      - Fn::GetAtt:
        - "EC2SecurityGroup00sg075615342aa3e28b9000aQtB"
        - "GroupId"
      - Fn::GetAtt:
        - "EC2SecurityGroup00sg02a57c92533299fd500hjOWZ"
        - "GroupId"
      DBSecurityGroups: []
      MasterUsername: "Docdbadmin"
      EnableIAMDatabaseAuthentication: false
      BackupRetentionPeriod: 7
      PromotionTier: 1
      PubliclyAccessible: false
      EnableCloudwatchLogsExports:
      - "audit"
      - "profiler"
  LogsLogGroup00awslambdapocwebsocketdefault00QYLJf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/poc-websocket-default"
      DataProtectionPolicy: {}
  LogsLogStream0020240910LATEST3ddf40aa8102440b93b756bc81fe57c500uJcYa:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/10/[$LATEST]3ddf40aa8102440b93b756bc81fe57c5"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls300DQsts"
  LogsLogStream00ecsgenaifrontend5ab2516c0e7a42928b090d6e9c91ddfe003Pp0W:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/5ab2516c0e7a42928b090d6e9c91ddfe"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00A5sWa"
  LogsLogGroup00awssagemakerEndpointsjumpstartdfthfsentencesimilarity2024083002254000fBSSo:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-hf-sentencesimilarity-20240830-022540"
      DataProtectionPolicy: {}
  LogsLogStream0020240909LATEST901eade51d2640b88c2815c79433e39c00ewDR9:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]901eade51d2640b88c2815c79433e39c"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00hic7x"
  LogsLogStream00ecsgenaifrontend48808fa9f1e04f7d87531f07e4ff485000WpkTG:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/48808fa9f1e04f7d87531f07e4ff4850"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00A5sWa"
  LogsLogStream0020240930LATEST5ff47a74cc364d46a90e823ba1ba23ca00sMWYS:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]5ff47a74cc364d46a90e823ba1ba23ca"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls300DQsts"
  LogsLogStream00FargateTelemetry106700GogE2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1067"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00lD9M0"
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole010b2536c2684ce0be035f9d7ab9c14e00yIFh7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-010b2536-c268-4ce0-be03-5f9d7ab9c14e"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/TO_BE_DELETED-test_function_sqs:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00TOBEDELETEDtestfunctionsqsrolexqi663q10076Son"
      Users: []
  LambdaFunction00TOBEDELETEDtestfunctionsqs00AXzeh:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Function"
    DeletionPolicy: "Retain"
    Properties:
      MemorySize: 128
      Description: ""
      TracingConfig:
        Mode: "PassThrough"
      VpcConfig:
        SecurityGroupIds:
        - "sg-075615342aa3e28b9"
        SubnetIds:
        - Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00v3Ccr"
        - Ref: "EC2Subnet00subnet0d68b865e8a7e3cc000SuQlK"
        Ipv6AllowedForDualStack: false
      Timeout: 20
      RuntimeManagementConfig:
        UpdateRuntimeOn: "Auto"
      Handler: "lambda_function.lambda_handler"
      ReservedConcurrentExecutions: 3
      Code:
        SourceKMSKeyArn:
          Ref: "LambdaFunction00TOBEDELETEDtestfunctionsqs00AXzehCodeSourceKMSKeyArnHnQwm"
        S3ObjectVersion:
          Ref: "LambdaFunction00TOBEDELETEDtestfunctionsqs00AXzehCodeS3ObjectVersionwW4BU"
        S3Bucket:
          Ref: "LambdaFunction00TOBEDELETEDtestfunctionsqs00AXzehCodeS3Bucketbzzz6"
        ZipFile:
          Ref: "LambdaFunction00TOBEDELETEDtestfunctionsqs00AXzehCodeZipFileWZtwG"
        ImageUri:
          Ref: "LambdaFunction00TOBEDELETEDtestfunctionsqs00AXzehCodeImageUriKlbm1"
        S3Key:
          Ref: "LambdaFunction00TOBEDELETEDtestfunctionsqs00AXzehCodeS3KeypuHh8"
      Role:
        Fn::GetAtt:
        - "IAMRole00TOBEDELETEDtestfunctionsqsrolexqi663q10076Son"
        - "Arn"
      FileSystemConfigs: []
      FunctionName: "TO_BE_DELETED-test_function_sqs"
      Runtime: "python3.12"
      PackageType: "Zip"
      LoggingConfig:
        LogFormat: "Text"
        LogGroup: "/aws/lambda/TO_BE_DELETED-test_function_sqs"
      RecursiveLoop: "Terminate"
      EphemeralStorage:
        Size: 512
      Layers:
      - "arn:aws:lambda:ap-southeast-1:343218203122:layer:pymongo:4"
      Architectures:
      - "x86_64"
  LogsLogStream0020241008LATESTa6134ba8f4e74c2aa48f7201e489326800WsIpA:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/08/[$LATEST]a6134ba8f4e74c2aa48f7201e4893268"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser00VzYw1"
  LogsLogStream00sgprodgenaideleteobjects30KzdWZ5k9h3eKJYJ1pP0NxR68001440w:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/0KzdWZ5k9h3eKJYJ1pP0NxR68"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights004lL7v"
  LogsLogStream0020241001LATEST601afcc1297f49d8a5d3bdc89fd02a9f00Kcd4i:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]601afcc1297f49d8a5d3bdc89fd02a9f"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect00QnzZ8"
  LogsLogStream0020241004LATEST0121ab18cb294e9d899e0e88bfdbcdcb00lYtk9:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]0121ab18cb294e9d899e0e88bfdbcdcb"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS00XnFFd"
  LogsLogStream0020241004LATEST47b397e55e8d4bc284a5b0419e03b21e00vPh7N:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]47b397e55e8d4bc284a5b0419e03b21e"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect00VEk8E"
  LogsLogStream0020240927LATESTf88b0cb7c82c42d393afa92e7dd53f3e00ravrJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/27/[$LATEST]f88b0cb7c82c42d393afa92e7dd53f3e"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls300DQsts"
  RDSDBInstance00sgprodgenaiauthdbv2100BKR0e:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::RDS::DBInstance"
    DeletionPolicy: "Retain"
    Properties:
      StorageEncrypted: true
      AssociatedRoles: []
      CertificateDetails: {}
      Port: "27017"
      DBClusterIdentifier:
        Ref: "RDSDBCluster00sgprodgenaiauthdbv200cV9nB"
      ProcessorFeatures: []
      StorageThroughput: 0
      PreferredBackupWindow: "00:00-00:30"
      MonitoringInterval: 0
      DBParameterGroupName: "default.docdb5.0"
      Endpoint: {}
      NetworkType: "IPV4"
      DedicatedLogVolume: false
      CopyTagsToSnapshot: false
      MultiAZ: false
      Engine: "docdb"
      Tags: []
      LicenseModel: "na"
      EngineVersion: "5.0.0"
      StorageType: "standard"
      KmsKeyId:
        Fn::GetAtt:
        - "KMSKey0051a5c08ff1b24e92b22b5784f7f0dc3300vhnR8"
        - "Arn"
      DBInstanceClass: "db.t3.medium"
      AvailabilityZone: "ap-southeast-1c"
      OptionGroupName: "default:docdb-5-0"
      PreferredMaintenanceWindow: "sun:03:00-sun:03:30"
      EnablePerformanceInsights: false
      AutoMinorVersionUpgrade: true
      DBSubnetGroupName:
        Ref: "RDSDBSubnetGroup00genaipilotdatabaseprivate00Rs8Sx"
      DeletionProtection: false
      DBInstanceIdentifier: "sg-prod-genai-authdb-v2-1"
      AllocatedStorage: "1"
      CACertificateIdentifier: "rds-ca-rsa2048-g1"
      ManageMasterUserPassword: false
      MasterUserSecret: {}
      VPCSecurityGroups:
      - Fn::GetAtt:
        - "EC2SecurityGroup00sg075615342aa3e28b9000aQtB"
        - "GroupId"
      - Fn::GetAtt:
        - "EC2SecurityGroup00sg02a57c92533299fd500hjOWZ"
        - "GroupId"
      DBSecurityGroups: []
      MasterUsername: "Superadmin"
      EnableIAMDatabaseAuthentication: false
      BackupRetentionPeriod: 7
      PromotionTier: 1
      PubliclyAccessible: false
      EnableCloudwatchLogsExports:
      - "audit"
      - "profiler"
  LogsLogStream0020240930LATEST4d8b6a4a575146adb8047351ce543cf000T1xDW:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]4d8b6a4a575146adb8047351ce543cf0"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls300DQsts"
  LogsLogStream0020241018LATEST90530c7c97f34c7883836f8cc4ac6ca300vMJP3:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/18/[$LATEST]90530c7c97f34c7883836f8cc4ac6ca3"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00HxYAk"
  LogsLogStream0020240905LATEST5be5c16a16ad4deabb7bb0a46d69670800mXH21:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/05/[$LATEST]5be5c16a16ad4deabb7bb0a46d696708"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestasyncoutputretrieve00LOqyu"
  LogsLogStream0020240923LATEST634cd06849d549d4bf8073ed7ef91be400UAkjj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/23/[$LATEST]634cd06849d549d4bf8073ed7ef91be4"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00dQBZT"
  MemoryDBParameterGroup00defaultmemorydbvalkey7search00KI27G:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::MemoryDB::ParameterGroup"
    DeletionPolicy: "Retain"
    Properties:
      ParameterGroupName: "default.memorydb-valkey7.search"
      Family: "memorydb_valkey7"
      Description: "Customized default parameter group for memorydb_valkey7 with search-enabled\
        \ yes"
  LogsLogStream0020241002LATEST8b7237d22b5b4a6eb77ec49dd977c4a900z5jxq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/02/[$LATEST]8b7237d22b5b4a6eb77ec49dd977c4a9"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00HxYAk"
  LogsLogStream0020240822LATESTad444de57e8d4b569ed8ad45b29b4a5400W4mhf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/22/[$LATEST]ad444de57e8d4b569ed8ad45b29b4a54"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdatests3behindnacl00WXQzm"
  LogsLogStream0020240930LATEST4fedcd9b7ea542b7adb2a007392ceafd00TnWSU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]4fedcd9b7ea542b7adb2a007392ceafd"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00v8Puf"
  LogsLogStream00sgprodgenaideleteobjects3714AVkcx2DaQicOoYEYPRtxcU00AsTc3:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/714AVkcx2DaQicOoYEYPRtxcU"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights004lL7v"
  LogsLogStream0020240920LATESTe000031a94bd4e2184c03e07c553e5e400Afjk2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/20/[$LATEST]e000031a94bd4e2184c03e07c553e5e4"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenais3triggertutorial00QDvVc"
  SecretsManagerSecret00secretpilotgenaiauthdbV3TMZM00zn9vK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::SecretsManager::Secret"
    DeletionPolicy: "Retain"
    Properties:
      ReplicaRegions: []
      Description: "Access to AuthDB for Gen AI Pilot"
      KmsKeyId:
        Fn::GetAtt:
        - "KMSKey008638d8df896d4fe8a82af2fdb61ac87700BwHgi"
        - "Arn"
      Tags: []
      Name: "pilot/genai/authdb"
  LogsLogStream0020241125LATEST910d8dd84b43489693a788c651c747c800brOYw:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/11/25/[$LATEST]910d8dd84b43489693a788c651c747c8"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStopEC2Instances00L3xrj"
  LogsLogStream0020241004LATEST08bf84d8409647f9bd28bbf0679e2bde00jKli0:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]08bf84d8409647f9bd28bbf0679e2bde"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS00XnFFd"
  LogsLogStream001589c3368ffaffb37914397cbf1d072e0069uB0:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1589c3368ffaffb37914397cbf1d072e"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00ICZYF"
  LogsLogStream0020241010LATESTd809e5e46cba4455b3537d456b9a3a1400xQVTU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/10/[$LATEST]d809e5e46cba4455b3537d456b9a3a14"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300LTcwa"
  LogsLogStream00sgprodgenaideleteobjects35VN0jpouZRuXlR6m4IaAaSzrN00alTAT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/5VN0jpouZRuXlR6m4IaAaSzrN"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights004lL7v"
  LogsLogStream00sgprodgenaideleteobjects35JX2l6FZHlXEP2fFTuUww7rHm00ESfz8:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/5JX2l6FZHlXEP2fFTuUww7rHm"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights004lL7v"
  LogsLogStream00ecsgenaifalainafrontend6705213ed09e402a9c2903f2112fcd29008TSaC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genai-falaina-frontend/6705213ed09e402a9c2903f2112fcd29"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaitestfalaina001awtN"
  LogsLogStream00126c626dbd6ac8f5b1e4704565da78f100oijng:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "126c626dbd6ac8f5b1e4704565da78f1"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00MDCuj"
  LogsLogStream0020240917LATESTcb7137d50264406a8cae777edf3f0fe700C5aKj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/17/[$LATEST]cb7137d50264406a8cae777edf3f0fe7"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb006vttD"
  LogsLogStream0020240822LATESTfa8a75dd53d74c5fa3fece87767edda500tX8VK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/22/[$LATEST]fa8a75dd53d74c5fa3fece87767edda5"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdatests3behindnacl00WXQzm"
  EC2Subnet00subnet01c6199eacb456cba00W1mVA:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Subnet"
    DeletionPolicy: "Retain"
    Properties:
      VpcId: "vpc-0182b4cdff5ae990b"
      MapPublicIpOnLaunch: false
      EnableDns64: false
      AvailabilityZoneId: "apse1-az3"
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      CidrBlock: "172.31.0.0/20"
      Ipv6Native: false
      Tags: []
  Route53ResolverResolverRuleAssociation00rslvrrrassocb26496febe44ab69600iARip:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Route53Resolver::ResolverRuleAssociation"
    DeletionPolicy: "Retain"
    Properties:
      VPCId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00DrjMC"
      ResolverRuleId: "rslvr-rr-61c3627d84274eabb"
      Name: "-"
  LogsLogStream0020240805LATEST7039de9662d043d9ba22a626fb9937ff00pr4Ag:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/05/[$LATEST]7039de9662d043d9ba22a626fb9937ff"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicategoriser217v100P1ViT"
  LogsLogStream0004092a5764a548bf3f61d36d7540979b00isrSR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "04092a5764a548bf3f61d36d7540979b"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp1004m0tX"
  S3Bucket00sgprodgenaielb00IhZMr:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::S3::Bucket"
    DeletionPolicy: "Retain"
    Properties:
      PublicAccessBlockConfiguration:
        RestrictPublicBuckets: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        BlockPublicAcls: true
      LifecycleConfiguration:
        TransitionDefaultMinimumObjectSize: "all_storage_classes_128K"
        Rules:
        - Status: "Enabled"
          Id: "delete_files_older_than_1_day"
          AbortIncompleteMultipartUpload:
            DaysAfterInitiation: 1
          ExpirationInDays: 1
      BucketName: "sg-prod-genai-elb"
      OwnershipControls:
        Rules:
        - ObjectOwnership: "BucketOwnerEnforced"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - BucketKeyEnabled: true
          ServerSideEncryptionByDefault:
            SSEAlgorithm: "AES256"
      LoggingConfiguration:
        TargetObjectKeyFormat:
          SimplePrefix: {}
        DestinationBucketName:
          Ref: "S3Bucket00sgprodgenaiserveraccesslogging00nZDSB"
        LogFilePrefix: ""
  LogsLogStream00FargateTelemetry101600C11a4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1016"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00lD9M0"
  LogsLogStream002c926a7c8526bb536f5e819958e745e500sDw7i:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2c926a7c8526bb536f5e819958e745e5"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00ICZYF"
  LogsLogStream00030439f5000d0f2d7319e515713fa0d700P0nxo:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "030439f5000d0f2d7319e515713fa0d7"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00MDCuj"
  LogsLogStream0020240929LATEST60c254646a1c49b3b89edb433681e63900eWIug:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/29/[$LATEST]60c254646a1c49b3b89edb433681e639"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect00QnzZ8"
  LogsLogStream0020241120LATEST33e415bf9ba2412ca8448c233e9da71e00agYEH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/11/20/[$LATEST]33e415bf9ba2412ca8448c233e9da71e"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStartEC2Instances00yJ4d3"
  LogsLogStream0020240930LATEST74606a25593745bb9197d6ce1de5f7d500iPq0e:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]74606a25593745bb9197d6ce1de5f7d5"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00v8Puf"
  LogsLogGroup00awslambdasgprodgenais3triggertutorial00QDvVc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-genai-s3-trigger-tutorial"
      DataProtectionPolicy: {}
  LogsLogStream0020240827LATEST08fb5ed56c1b49a6893f7051b1f80ea700Bs0oT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/27/[$LATEST]08fb5ed56c1b49a6893f7051b1f80ea7"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls300DQsts"
  LogsLogStream00ecsgenaifrontend346211e97bfd480a830b94a1ed8a35f400kDm7j:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/346211e97bfd480a830b94a1ed8a35f4"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00A5sWa"
  LogsLogStream0020241008LATEST7ff26b9f630b402f84c2042203de991200Gb6WS:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/08/[$LATEST]7ff26b9f630b402f84c2042203de9912"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser00VzYw1"
  LogsLogStream0020240909LATEST7e2424c42c9a4ca5be81c2a9ce26d6a500nICa4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]7e2424c42c9a4ca5be81c2a9ce26d6a5"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00hic7x"
  LogsLogGroup00ecsgenaipilot00A5sWa:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/ecs/genaipilot"
      DataProtectionPolicy: {}
  SQSQueue00PRIORITYfifo00XcvND:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::SQS::Queue"
    DeletionPolicy: "Retain"
    Properties:
      ReceiveMessageWaitTimeSeconds: 0
      SqsManagedSseEnabled: true
      FifoThroughputLimit: "perQueue"
      DelaySeconds: 0
      FifoQueue: true
      MessageRetentionPeriod: 86400
      MaximumMessageSize: 262144
      DeduplicationScope: "queue"
      VisibilityTimeout: 20
      ContentBasedDeduplication: true
      QueueName: "PRIORITY.fifo"
  MemoryDBUser00default00XFxNL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::MemoryDB::User"
    DeletionPolicy: "Retain"
    Properties:
      Tags: []
      UserName: "default"
  LogsLogStream0020240929LATESTc765a8d3dc184b20ba269a3e7d64a54a00BpUyA:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/29/[$LATEST]c765a8d3dc184b20ba269a3e7d64a54a"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect00VEk8E"
  LogsLogGroup00awssagemakerEndpointsjumpstartdftllama318binstruct20240828164716006jq3H:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-llama-3-1-8b-instruct-20240828-164716"
      DataProtectionPolicy: {}
  LogsLogStream0020241010LATEST96540dfe6ff44b2a829d17ff56ef5bcf003BOti:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/10/[$LATEST]96540dfe6ff44b2a829d17ff56ef5bcf"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300LTcwa"
  LogsLogStream00AllTraffici08ac56bf93ca01adb00u7fnx:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-08ac56bf93ca01adb"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointsjumpstartdftllama318binstruct2024081408024000iCNUK"
  LogsLogGroup00awssagemakerstudio00lgEm2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/studio"
      DataProtectionPolicy: {}
  LogsLogStream0020240928LATESTbd1f97a7e26446a789686252dae0a80900l3vMG:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]bd1f97a7e26446a789686252dae0a809"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect00QnzZ8"
  LogsLogStream0020240821LATESTacc0135b92004064b045f1b22f142d6e00QiKx2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/21/[$LATEST]acc0135b92004064b045f1b22f142d6e"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenais3triggertutorial00QDvVc"
  LogsLogStream0020240912LATESTeec1cb5b15ba464096af028d15ae135a00Xyard:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/12/[$LATEST]eec1cb5b15ba464096af028d15ae135a"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb006vttD"
  S3BucketPolicy00configbucket34321820312200LP2n0:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::S3::BucketPolicy"
    DeletionPolicy: "Retain"
    Properties:
      Bucket:
        Ref: "S3Bucket00configbucket343218203122004pQj3"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Condition:
            StringEquals:
              AWS:SourceAccount: "343218203122"
          Resource: "arn:aws:s3:::config-bucket-343218203122"
          Action: "s3:GetBucketAcl"
          Effect: "Allow"
          Principal:
            Service: "config.amazonaws.com"
          Sid: "AWSConfigBucketPermissionsCheck"
        - Condition:
            StringEquals:
              AWS:SourceAccount: "343218203122"
          Resource: "arn:aws:s3:::config-bucket-343218203122"
          Action: "s3:ListBucket"
          Effect: "Allow"
          Principal:
            Service: "config.amazonaws.com"
          Sid: "AWSConfigBucketExistenceCheck"
        - Condition:
            StringEquals:
              AWS:SourceAccount: "343218203122"
              s3:x-amz-acl: "bucket-owner-full-control"
          Resource: "arn:aws:s3:::config-bucket-343218203122/AWSLogs/343218203122/Config/*"
          Action: "s3:PutObject"
          Effect: "Allow"
          Principal:
            Service: "config.amazonaws.com"
          Sid: "AWSConfigBucketDelivery"
        - Condition:
            Bool:
              aws:SecureTransport: "false"
          Resource:
          - "arn:aws:s3:::config-bucket-343218203122"
          - "arn:aws:s3:::config-bucket-343218203122/*"
          Action: "s3:*"
          Effect: "Deny"
          Principal: "*"
          Sid: "AllowSSLRequestsOnly"
  LogsLogStream0020241003LATESTd020f8783bac422088eb300952085c6400VV3ln:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/03/[$LATEST]d020f8783bac422088eb300952085c64"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00HxYAk"
  LogsLogStream0020240909LATEST096436bc4d5348d599dc06c076a3525c00z8PyJ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]096436bc4d5348d599dc06c076a3525c"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00hic7x"
  LogsLogStream00ecsgenaifrontend30b9ae06b0d84d55902b4617a2f6e0c200mFJVB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/30b9ae06b0d84d55902b4617a2f6e0c2"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00A5sWa"
  LogsLogStream001036866f0a59ddda020c594a57170dda00jeCLD:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1036866f0a59ddda020c594a57170dda"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00MDCuj"
  LogsLogStream00FargateTelemetry10300CmSzt:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-103"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00lD9M0"
  XRayGroup00groupDefault00HufY7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::XRay::Group"
    DeletionPolicy: "Retain"
    Properties:
      GroupName: "Default"
      InsightsConfiguration:
        InsightsEnabled: false
        NotificationsEnabled: false
      Tags: []
  LogsLogStream0014fe2b8dd2b6bd1415fb18420cfe156600hwGPx:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "14fe2b8dd2b6bd1415fb18420cfe1566"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00ICZYF"
  LogsLogStream00FargateTelemetry109300gD76K:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1093"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00lD9M0"
  LogsLogStream0020241010LATESTad0f2c0b8dd44132b8f7b25a1ffcf6d900QaYLy:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/10/[$LATEST]ad0f2c0b8dd44132b8f7b25a1ffcf6d9"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300LTcwa"
  LogsLogStream0020240909LATEST4dc553ef73ae4675b4e171149003ed7100YQzZs:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]4dc553ef73ae4675b4e171149003ed71"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00hic7x"
  LogsLogStream0020240827LATEST05ddbc9000c94f3388332a07f2ff0f6500Dq8GG:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/27/[$LATEST]05ddbc9000c94f3388332a07f2ff0f65"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300LTcwa"
  LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00TM5W7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/vpc/GenAI-Pilot-VPC-Flow-Log"
      DataProtectionPolicy: {}
  LogsLogGroup00awslambdapocwebsocketconnect00QnzZ8:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/poc-websocket-connect"
      DataProtectionPolicy: {}
  LogsLogStream0020240918LATESTac8aa75a11664020955d41ebd4e6773900KPtwM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/18/[$LATEST]ac8aa75a11664020955d41ebd4e67739"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb006vttD"
  LogsLogStream00338e7e14c5a85e17612db20f9380ed3b00KCRnW:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "338e7e14c5a85e17612db20f9380ed3b"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp1004m0tX"
  LogsLogStream0020240821LATESTf6dc080e5c5744bf8a36d2539cac79dd00Af6JE:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/21/[$LATEST]f6dc080e5c5744bf8a36d2539cac79dd"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenais3triggertutorial00QDvVc"
  LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00v8Puf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-test-genai-summariser-retrievetofrontend"
      DataProtectionPolicy: {}
  LambdaVersion00functionsgprodgenairagsummariser14008fHYZ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Version"
    DeletionPolicy: "Retain"
    Properties:
      CodeSha256: "ecda9d6b2d1155af1a37c2a7d0d0c051cdbf1db4fe6b687ee72f494e45b19e36"
      FunctionName:
        Ref: "LambdaFunction00sgprodgenairagsummariser00nex8V"
      Description: ""
  LogsLogStream0020241009LATEST919f2e1121f14ac19bb111c2759303b400G8cqh:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/09/[$LATEST]919f2e1121f14ac19bb111c2759303b4"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdefault00QYLJf"
  LogsLogStream0020241002LATEST912507a6d7894beabc597d23a8bbd35b008js4X:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/02/[$LATEST]912507a6d7894beabc597d23a8bbd35b"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00dQBZT"
  LogsLogStream0020240929LATESTa820046de663487c92e73b13e1da67c100aaRvA:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/29/[$LATEST]a820046de663487c92e73b13e1da67c1"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect00QnzZ8"
  Route53ResolverResolverRuleAssociation00rslvrautodefinedassocvpc02790342fee4ebf9finternetresolver004RSYy:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Route53Resolver::ResolverRuleAssociation"
    DeletionPolicy: "Retain"
    Properties:
      VPCId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00DrjMC"
      ResolverRuleId: "rslvr-autodefined-rr-internet-resolver"
      Name: "System Rule Association"
  SecretsManagerSecret00secretdevgenaifalainacy8n3S00hAtjb:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::SecretsManager::Secret"
    DeletionPolicy: "Retain"
    Properties:
      ReplicaRegions: []
      Description: "Client ID and client secret to falaina auth. Redirect URI is https://localhost:3000/api/auth/callback/falaina"
      Tags: []
      Name: "dev/genai/falaina"
  LogsLogStream00AllTraffici0b970b57f5212ffa2009F0Df:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-0b970b57f5212ffa2"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointsjumpstartdfthfsentencesimilarity2024083002254000fBSSo"
  LogsLogStream0020241211LATESTf20f0e272c21493d9f7f6daf3da34ce000Drcrp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/11/[$LATEST]f20f0e272c21493d9f7f6daf3da34ce0"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaSecretsManagergenaiprodauthdbv2autorotate008WWZX"
  LogsLogGroup00awslambdasgwssconnect00zIpBf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-wss-connect"
      DataProtectionPolicy: {}
  LogsLogGroup00awslambdasgprodgenaiembeddingsgmkr005AKdC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-genai-embedding-sgmkr"
      DataProtectionPolicy: {}
  LogsLogStream0020240821LATEST92fea062457e40e49da04c707d1971d500afD1s:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/21/[$LATEST]92fea062457e40e49da04c707d1971d5"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenais3triggertutorial00QDvVc"
  LogsLogStream00AllTraffici0936c7f320a2a521f00peu4d:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-0936c7f320a2a521f"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointsjumpstartdftllama318binstruct20240828164716006jq3H"
  LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00hic7x:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/TO_BE_DELETED-test_function_sqs"
      DataProtectionPolicy: {}
  LambdaFunction00sgprodgenairagsummariser00nex8V:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Function"
    DeletionPolicy: "Retain"
    Properties:
      MemorySize: 5120
      Description: ""
      TracingConfig:
        Mode: "PassThrough"
      VpcConfig:
        SecurityGroupIds:
        - "sg-03d66fb80efac83a5"
        - "sg-02a57c92533299fd5"
        - "sg-075615342aa3e28b9"
        - "sg-00dd21ae4b1e23f22"
        - "sg-02d1755cab861734f"
        SubnetIds:
        - Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00v3Ccr"
        - Ref: "EC2Subnet00subnet0d1db15411089416b00fV0HE"
        Ipv6AllowedForDualStack: false
      Timeout: 300
      Code:
        SourceKMSKeyArn:
          Ref: "LambdaFunction00sgprodgenairagsummariser00nex8VCodeSourceKMSKeyArnSt3jn"
        S3ObjectVersion:
          Ref: "LambdaFunction00sgprodgenairagsummariser00nex8VCodeS3ObjectVersionkEzpz"
        S3Bucket:
          Ref: "LambdaFunction00sgprodgenairagsummariser00nex8VCodeS3Bucketsodqm"
        ZipFile:
          Ref: "LambdaFunction00sgprodgenairagsummariser00nex8VCodeZipFileGjscD"
        ImageUri:
          Ref: "LambdaFunction00sgprodgenairagsummariser00nex8VCodeImageUrilSOqM"
        S3Key:
          Ref: "LambdaFunction00sgprodgenairagsummariser00nex8VCodeS3Key7CY5d"
      Role:
        Fn::GetAtt:
        - "IAMRole00sgprodgenaisummariserroleu702de5o00KxF8T"
        - "Arn"
      FileSystemConfigs: []
      FunctionName: "sg-prod-genai-rag-summariser"
      PackageType: "Image"
      LoggingConfig:
        LogFormat: "Text"
        LogGroup: "/aws/lambda/sg-prod-genai-rag-summariser"
      RecursiveLoop: "Terminate"
      Environment:
        Variables:
          HIGH_PRIORITY_QUEUE_ARN: "arn:aws:sqs:ap-southeast-1:343218203122:summariser_continuous_conversation.fifo"
          HIGH_PRIORITY_QUEUE_URL: "https://sqs.ap-southeast-1.amazonaws.com/343218203122/summariser_continuous_conversation.fifo"
          DOCDB_KEY: "mongodb://summariser:summariser123@sg-prod-genai-summariser-v1.cluster-czs8w0aayayu.ap-southeast-1.docdb.amazonaws.com:27017/?tls=true&tlsCAFile=./global-bundle.pem&replicaSet=rs0&readPreference=secondaryPreferred&retryWrites=false"
          NORMAL_PRIORITY_QUEUE_URL: "https://sqs.ap-southeast-1.amazonaws.com/343218203122/summariser_new_conversation.fifo"
          NORMAL_PRIORITY_QUEUE_ARN: "arn:aws:sqs:ap-southeast-1:343218203122:summariser_new_conversation.fifo"
      EphemeralStorage:
        Size: 512
      Architectures:
      - "x86_64"
  LogsLogGroup00awssagemakerEndpointsllama318binstruct2024082016060069400vy0bV:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/llama-3-1-8b-instruct-2024-08-20-16-06-00-694"
      DataProtectionPolicy: {}
  LogsLogStream0020240930LATEST7c77be044037423c97b3c2514fd126b000jd48m:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]7c77be044037423c97b3c2514fd126b0"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect00QnzZ8"
  LambdaEventSourceMapping00b287a4a8fcd447e287e7ec0d5d3f337700Uc3Ue:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::EventSourceMapping"
    DeletionPolicy: "Retain"
    Properties:
      BatchSize: 1
      FunctionName: "arn:aws:lambda:ap-southeast-1:343218203122:function:sg-prod-genai-summariser"
      ScalingConfig:
        MaximumConcurrency: 2
      Enabled: false
      EventSourceArn:
        Fn::GetAtt:
        - "SQSQueue00summarisercontinuousconversationfifo00cV5x9"
        - "Arn"
      Tags: []
      FunctionResponseTypes:
      - "ReportBatchItemFailures"
      MaximumBatchingWindowInSeconds: 0
  LogsLogStream0020241008LATEST7eb806ccc03549c0b663b57048ff410800eUZ63:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/08/[$LATEST]7eb806ccc03549c0b663b57048ff4108"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300LTcwa"
  NeptuneDBCluster00sgprodgenaiauthdbv2003Y01S:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Neptune::DBCluster"
    DeletionPolicy: "Retain"
    Properties:
      StorageEncrypted: true
      EngineVersion: "5.0.0"
      KmsKeyId:
        Fn::GetAtt:
        - "KMSKey0051a5c08ff1b24e92b22b5784f7f0dc3300vhnR8"
        - "Arn"
      AssociatedRoles: []
      AvailabilityZones:
      - "ap-southeast-1a"
      - "ap-southeast-1b"
      - "ap-southeast-1c"
      DBClusterIdentifier: "sg-prod-genai-authdb-v2"
      PreferredMaintenanceWindow: "sun:03:00-sun:03:30"
      IamAuthEnabled: false
      DBSubnetGroupName: "genai-pilot-database-private"
      DeletionProtection: true
      PreferredBackupWindow: "00:00-00:30"
      DBPort: 27017
      VpcSecurityGroupIds:
      - "sg-075615342aa3e28b9"
      - "sg-02a57c92533299fd5"
      CopyTagsToSnapshot: false
      DBClusterParameterGroupName: "default.docdb5.0"
      BackupRetentionPeriod: 7
      Tags: []
      EnableCloudwatchLogsExports:
      - "audit"
      - "profiler"
  LogsLogStream00FargateTelemetry105500Qu4PU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1055"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00lD9M0"
  LogsLogStream0020241211LATEST54fb70218a7e4b2dab5fb06c8b937f6c00jFeJ1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/11/[$LATEST]54fb70218a7e4b2dab5fb06c8b937f6c"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaSecretsManagergenaiprodauthdbv2autorotate008WWZX"
  LogsLogGroup00awslambdainsights004lL7v:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda-insights"
      DataProtectionPolicy: {}
  LogsLogStream0020240828LATESTfdcb388945f84b20abaf73cc4e9e3fdf005kGVF:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/28/[$LATEST]fdcb388945f84b20abaf73cc4e9e3fdf"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser00ykqXO"
  RDSDBInstance00sgprodgenaisummariserv12000eOl8:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::RDS::DBInstance"
    DeletionPolicy: "Retain"
    Properties:
      StorageEncrypted: true
      AssociatedRoles: []
      CertificateDetails: {}
      Port: "27017"
      DBClusterIdentifier:
        Ref: "RDSDBCluster00sgprodgenaisummariserv100pjqgh"
      ProcessorFeatures: []
      StorageThroughput: 0
      PreferredBackupWindow: "00:00-00:30"
      MonitoringInterval: 0
      DBParameterGroupName: "default.docdb5.0"
      Endpoint: {}
      NetworkType: "IPV4"
      DedicatedLogVolume: false
      CopyTagsToSnapshot: false
      MultiAZ: false
      Engine: "docdb"
      Tags: []
      LicenseModel: "na"
      EngineVersion: "5.0.0"
      StorageType: "standard"
      KmsKeyId:
        Fn::GetAtt:
        - "KMSKey0051a5c08ff1b24e92b22b5784f7f0dc3300vhnR8"
        - "Arn"
      DBInstanceClass: "db.t3.medium"
      AvailabilityZone: "ap-southeast-1c"
      OptionGroupName: "default:docdb-5-0"
      PreferredMaintenanceWindow: "sat:21:16-sat:21:46"
      EnablePerformanceInsights: false
      AutoMinorVersionUpgrade: true
      DBSubnetGroupName:
        Ref: "RDSDBSubnetGroup00genaipilotdatabaseprivate00Rs8Sx"
      DeletionProtection: false
      DBInstanceIdentifier: "sg-prod-genai-summariser-v12"
      AllocatedStorage: "1"
      CACertificateIdentifier: "rds-ca-rsa2048-g1"
      ManageMasterUserPassword: false
      MasterUserSecret: {}
      VPCSecurityGroups:
      - Fn::GetAtt:
        - "EC2SecurityGroup00sg075615342aa3e28b9000aQtB"
        - "GroupId"
      - Fn::GetAtt:
        - "EC2SecurityGroup00sg02a57c92533299fd500hjOWZ"
        - "GroupId"
      DBSecurityGroups: []
      MasterUsername: "summariser"
      EnableIAMDatabaseAuthentication: false
      BackupRetentionPeriod: 7
      PromotionTier: 1
      PubliclyAccessible: false
      EnableCloudwatchLogsExports:
      - "audit"
      - "profiler"
  LogsLogStream0020241001LATEST3a55ae66be4c40968f80ab35e8c3317500nwGSy:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]3a55ae66be4c40968f80ab35e8c33175"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00dQBZT"
  NeptuneDBCluster00sgprodgenaicourtcasesdb216v100kDpRv:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Neptune::DBCluster"
    DeletionPolicy: "Retain"
    Properties:
      StorageEncrypted: true
      EngineVersion: "5.0.0"
      KmsKeyId:
        Fn::GetAtt:
        - "KMSKey0051a5c08ff1b24e92b22b5784f7f0dc3300vhnR8"
        - "Arn"
      AssociatedRoles: []
      AvailabilityZones:
      - "ap-southeast-1a"
      - "ap-southeast-1b"
      - "ap-southeast-1c"
      DBClusterIdentifier: "sg-prod-genai-courtcasesdb-216-v1"
      PreferredMaintenanceWindow: "sat:17:40-sat:18:10"
      IamAuthEnabled: false
      DBSubnetGroupName: "genai-pilot-database-private"
      DeletionProtection: true
      PreferredBackupWindow: "00:00-00:30"
      DBPort: 27017
      VpcSecurityGroupIds:
      - "sg-075615342aa3e28b9"
      - "sg-02a57c92533299fd5"
      CopyTagsToSnapshot: false
      DBClusterParameterGroupName: "default.docdb5.0"
      BackupRetentionPeriod: 7
      Tags: []
      EnableCloudwatchLogsExports:
      - "audit"
      - "profiler"
  LogsLogStream0020241004LATEST0e344b519803402b842e39218e2dca3400WXjO3:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]0e344b519803402b842e39218e2dca34"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS00XnFFd"
  SQSQueue00summarisernewconversationfifo00iHeaG:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::SQS::Queue"
    DeletionPolicy: "Retain"
    Properties:
      ReceiveMessageWaitTimeSeconds: 0
      SqsManagedSseEnabled: true
      FifoThroughputLimit: "perQueue"
      DelaySeconds: 0
      FifoQueue: true
      MessageRetentionPeriod: 1800
      MaximumMessageSize: 262144
      DeduplicationScope: "queue"
      VisibilityTimeout: 300
      ContentBasedDeduplication: true
      QueueName: "summariser_new_conversation.fifo"
  LogsLogStream0020240828LATEST21cc74dd7eb44f87ab206fbcbd42152500WhsNL:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/28/[$LATEST]21cc74dd7eb44f87ab206fbcbd421525"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser00ykqXO"
  LogsLogStream00ecsgenaifrontend5516390c8e3a4b8aa1d5c799dd096f4f00iBME0:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/5516390c8e3a4b8aa1d5c799dd096f4f"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00A5sWa"
  LogsLogStream0020240930LATESTf419a64dfda941a29a99c153ff417beb00ZPt4f:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]f419a64dfda941a29a99c153ff417beb"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00v8Puf"
  LogsLogStream0020240928LATESTe25aa2a4ec3c4e8e9920004f76aa2336002dkRY:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]e25aa2a4ec3c4e8e9920004f76aa2336"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdefault00QYLJf"
  LogsLogStream0020241008LATEST203e639de19147ba9ab12ceb50e7ace500eql9M:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/08/[$LATEST]203e639de19147ba9ab12ceb50e7ace5"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketclient00vKb4U"
  LogsLogStream00djvwdzisnv061GenAIuserCanvasdefault00xG4AO:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "d-jvwdzisnv061/GenAI-user/Canvas/default"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerstudio00lgEm2"
  LambdaEventSourceMapping001ce432f2562b43409354bd667716949900a3wmp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::EventSourceMapping"
    DeletionPolicy: "Retain"
    Properties:
      BatchSize: 1
      FunctionName: "arn:aws:lambda:ap-southeast-1:343218203122:function:sg-prod-genai-rag-summariser:11"
      ScalingConfig:
        MaximumConcurrency: 2
      Enabled: false
      EventSourceArn:
        Fn::GetAtt:
        - "SQSQueue00summarisercontinuousconversationfifo00cV5x9"
        - "Arn"
      Tags: []
      FunctionResponseTypes:
      - "ReportBatchItemFailures"
      MaximumBatchingWindowInSeconds: 0
  LogsLogStream001ac9d3e97a669bb71f216e7afbd1417e00PmOAz:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1ac9d3e97a669bb71f216e7afbd1417e"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp1004m0tX"
  LogsLogStream00ecsgenaifrontend06c00bd4562b46c98744abc3cc6d019500NrYnH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/06c00bd4562b46c98744abc3cc6d0195"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00A5sWa"
  LogsLogStream0020241001LATEST1bc9ad4181f24f8094855e118d8f5d6b00D1jGK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]1bc9ad4181f24f8094855e118d8f5d6b"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser00VzYw1"
  EC2Subnet00subnet048794c64c2e4427a00GA9EC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Subnet"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00DrjMC"
      MapPublicIpOnLaunch: false
      EnableDns64: false
      AvailabilityZoneId: "apse1-az2"
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      CidrBlock: "10.25.71.128/28"
      Ipv6Native: false
      Tags:
      - Value: "GenAI-Dev-Database-Private-1b"
        Key: "Name"
  LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp1004m0tX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "API-Gateway-Execution-Logs_5nwb46kira/prod-mvp1"
      DataProtectionPolicy: {}
  EC2Subnet00subnet0d68b865e8a7e3cc000SuQlK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Subnet"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00DrjMC"
      MapPublicIpOnLaunch: false
      EnableDns64: false
      AvailabilityZoneId: "apse1-az3"
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      CidrBlock: "10.25.71.112/28"
      Ipv6Native: false
      Tags:
      - Value: "GenAI-Dev-Database-Private-1c"
        Key: "Name"
  LogsLogGroup00awslambdatestretrieves3metadata00kB5hD:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/test-retrieve-s3-metadata"
      DataProtectionPolicy: {}
  LogsLogStream00FargateTelemetry102000CzEQ5:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1020"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00lD9M0"
  RDSOptionGroup00defaultdocdb5000ZW49S:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::RDS::OptionGroup"
    DeletionPolicy: "Retain"
    Properties:
      OptionGroupDescription: "Default option group for docdb 5.0"
      OptionGroupName: "default:docdb-5-0"
      OptionConfigurations: []
      MajorEngineVersion: "5.0"
      EngineName: "docdb"
      Tags: []
  LogsLogStream00eni01494a3e9ac1cc789all00yf8L7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-01494a3e9ac1cc789-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00TM5W7"
  LogsLogStream0020240929LATESTd6a8a531cb3a443388ca8480d5ec12ea00kU5LM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/29/[$LATEST]d6a8a531cb3a443388ca8480d5ec12ea"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect00VEk8E"
  LogsLogStream001d920b7c3fc19093d570eace0eda26d300wuLuI:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1d920b7c3fc19093d570eace0eda26d3"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00ICZYF"
  LogsLogStream0020240917LATESTae4bd1f3a1bf4fa1ab97e36d6194c54000isAdy:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/17/[$LATEST]ae4bd1f3a1bf4fa1ab97e36d6194c540"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb006vttD"
  EC2Subnet00subnet0ff6c65f492e7220000VtJF7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Subnet"
    DeletionPolicy: "Retain"
    Properties:
      VpcId: "vpc-0182b4cdff5ae990b"
      MapPublicIpOnLaunch: false
      EnableDns64: false
      AvailabilityZoneId: "apse1-az2"
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      CidrBlock: "172.31.32.0/20"
      Ipv6Native: false
      Tags: []
  SchedulerSchedule00stopec2instance004GBIQ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Scheduler::Schedule"
    DeletionPolicy: "Retain"
    Properties:
      GroupName: "default"
      ScheduleExpression: "cron(0 18 ? * 2-6 *)"
      Target:
        Arn: "arn:aws:lambda:ap-southeast-1:343218203122:function:StopEC2Instances"
        RetryPolicy:
          MaximumEventAgeInSeconds: 86400
          MaximumRetryAttempts: 185
        RoleArn: "arn:aws:iam::343218203122:role/service-role/Amazon_EventBridge_Scheduler_LAMBDA_4f6da799a5"
      Description: "stop an ec2 instance"
      State: "DISABLED"
      FlexibleTimeWindow:
        Mode: "OFF"
      ScheduleExpressionTimezone: "Asia/Kuala_Lumpur"
      Name: "stop-ec2-instance"
  EC2Subnet00subnet0d1db15411089416b00fV0HE:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Subnet"
    DeletionPolicy: "Retain"
    Properties:
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00DrjMC"
      MapPublicIpOnLaunch: false
      EnableDns64: false
      AvailabilityZoneId: "apse1-az3"
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      CidrBlock: "10.25.71.192/27"
      Ipv6Native: false
      Tags:
      - Value: "GenAI-Dev-Application-Private-1c"
        Key: "Name"
  LogsLogStream0020240829LATESTf76041f420f949198572533ec7080bdb00EnWeR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/29/[$LATEST]f76041f420f949198572533ec7080bdb"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser00ykqXO"
  LogsLogStream00ecsgenaifrontend384a10aa68c64015a5faee7d0d412ce800bzhO6:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/384a10aa68c64015a5faee7d0d412ce8"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00A5sWa"
  LogsLogStream00022fcbd5fdf3a2ffce8d7addcd7e761200cctH4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "022fcbd5fdf3a2ffce8d7addcd7e7612"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00MDCuj"
  LogsResourcePolicy00AWSLogDeliveryWrite2015031900G5qzA:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::ResourcePolicy"
    DeletionPolicy: "Retain"
    Properties:
      PolicyDocument: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"AWSLogDeliveryWrite\"\
        ,\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"delivery.logs.amazonaws.com\"\
        },\"Action\":[\"logs:CreateLogStream\",\"logs:PutLogEvents\"],\"Resource\"\
        :\"arn:aws:logs:ap-southeast-1:343218203122:log-group:test-public-rest-api:log-stream:*\"\
        ,\"Condition\":{\"StringEquals\":{\"aws:SourceAccount\":\"343218203122\"},\"\
        ArnLike\":{\"aws:SourceArn\":\"arn:aws:logs:ap-southeast-1:343218203122:*\"\
        }}}]}"
      PolicyName: "AWSLogDeliveryWrite20150319"
  LogsLogStream0020241010LATESTe595e5225a0d41538f6d045e9cc60c3f00h99c3:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/10/[$LATEST]e595e5225a0d41538f6d045e9cc60c3f"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300LTcwa"
  LogsLogStream0020241009LATESTf44cb82a9e5947ab8ad83b2fc193b647005SGUb:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/09/[$LATEST]f44cb82a9e5947ab8ad83b2fc193b647"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300LTcwa"
  SQSQueue00DLQsummarisercontinuousconversationfifo00duG3c:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::SQS::Queue"
    DeletionPolicy: "Retain"
    Properties:
      ReceiveMessageWaitTimeSeconds: 0
      SqsManagedSseEnabled: true
      FifoThroughputLimit: "perQueue"
      DelaySeconds: 0
      FifoQueue: true
      MessageRetentionPeriod: 86400
      MaximumMessageSize: 262144
      DeduplicationScope: "queue"
      VisibilityTimeout: 300
      ContentBasedDeduplication: true
      QueueName: "DLQ-summariser_continuous_conversation.fifo"
  LogsLogGroup00awslambdapocwebsocketclient00vKb4U:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/poc-websocket-client"
      DataProtectionPolicy: {}
  LogsLogStream00AllTraffici08fb6834a7ec2656400FAYSD:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-08fb6834a7ec26564"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointsjumpstartdftllama318binstruct2024081607141500Ub2lJ"
  MemoryDBParameterGroup00defaultmemorydbredis700BPrTW:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::MemoryDB::ParameterGroup"
    DeletionPolicy: "Retain"
    Properties:
      ParameterGroupName: "default.memorydb-redis7"
      Family: "memorydb_redis7"
      Description: "Default parameter group for memorydb_redis7"
  LogsLogStream0020240912LATEST886e51c718e8458c8604622d67e46caa00IgBgb:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/12/[$LATEST]886e51c718e8458c8604622d67e46caa"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb006vttD"
  SQSQueue00LambdaTestQueuefifo00xbk3A:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::SQS::Queue"
    DeletionPolicy: "Retain"
    Properties:
      ReceiveMessageWaitTimeSeconds: 0
      SqsManagedSseEnabled: true
      FifoThroughputLimit: "perQueue"
      DelaySeconds: 0
      FifoQueue: true
      MessageRetentionPeriod: 86400
      MaximumMessageSize: 262144
      DeduplicationScope: "queue"
      VisibilityTimeout: 300
      ContentBasedDeduplication: true
      QueueName: "Lambda_Test_Queue.fifo"
  LogsLogStream0020241003LATEST8445fdc95bf54a9090927d978a2c4c5b006rS7P:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/03/[$LATEST]8445fdc95bf54a9090927d978a2c4c5b"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect00VEk8E"
  LogsLogStream00AllTraffici02f766c468dc5fce600bnZLc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-02f766c468dc5fce6"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointsjumpstartdftllama318binstruct2024081303261300QZZ6e"
  LogsLogStream0020240929LATESTffa7bbfb25614784bfafd7416a42303d00OgXBI:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/29/[$LATEST]ffa7bbfb25614784bfafd7416a42303d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect00QnzZ8"
  LogsLogStream0020241010LATESTafe056f6fd7d4e40a03a8ef713da955500gzScs:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/10/[$LATEST]afe056f6fd7d4e40a03a8ef713da9555"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300LTcwa"
  LogsLogStream0020241004LATEST0ea2de31997e4ce4af8a6cf19a2b577000Fb541:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]0ea2de31997e4ce4af8a6cf19a2b5770"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS00XnFFd"
  LogsLogStream0020240821LATEST414c798841034501b38a4725f9a1d93400RBzaj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/21/[$LATEST]414c798841034501b38a4725f9a1d934"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenais3triggertutorial00QDvVc"
  LogsLogGroup00awssagemakerEndpointsjumpstartdfthfsentencesimilarity2024082809295900EM348:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-hf-sentencesimilarity-20240828-092959"
      DataProtectionPolicy: {}
  LogsLogStream00ecsgenaifrontend2bc79f38600c466c8a46dc5c25b0032000Rw9Yt:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/2bc79f38600c466c8a46dc5c25b00320"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00A5sWa"
  EC2VPC00vpc02790342fee4ebf9f00DrjMC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::VPC"
    DeletionPolicy: "Retain"
    Properties:
      CidrBlock: "10.25.71.0/24"
      EnableDnsSupport: true
      InstanceTenancy: "default"
      EnableDnsHostnames: true
      Tags:
      - Value: "GenAI-Pilot-VPC"
        Key: "Name"
  LogsLogStream0020240828LATEST6f4991c6b4114acf9c1203d2cdd7253b00CyPm1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/28/[$LATEST]6f4991c6b4114acf9c1203d2cdd7253b"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser00ykqXO"
  LambdaEventSourceMapping00daea14407b8647289e5577e9c406c8c700BFUFV:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::EventSourceMapping"
    DeletionPolicy: "Retain"
    Properties:
      BatchSize: 10
      FunctionName:
        Fn::GetAtt:
        - "LambdaFunction00DLQhandlersgprodgenaisummariser001QS1v"
        - "Arn"
      Enabled: true
      EventSourceArn:
        Fn::GetAtt:
        - "SQSQueue00DLQsummarisercontinuousconversationfifo00duG3c"
        - "Arn"
      Tags: []
      FunctionResponseTypes:
      - "ReportBatchItemFailures"
      MaximumBatchingWindowInSeconds: 0
  LogsLogStream0020241010LATEST82a57424d00b4640bbf0e3928b038aad009w5nI:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/10/[$LATEST]82a57424d00b4640bbf0e3928b038aad"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300LTcwa"
  LogsLogGroup00awslambdasgprodgenaideleteobjects300LTcwa:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-genai-deleteobject-s3"
      DataProtectionPolicy: {}
  LogsLogStream0020241204LATESTd5c43010d3fc4919884dcf83b49c958200RaYZG:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/04/[$LATEST]d5c43010d3fc4919884dcf83b49c9582"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStartEC2Instances00yJ4d3"
  LogsLogStream001e4180d20accc65bf8c274dc1552b66700VYTb9:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1e4180d20accc65bf8c274dc1552b667"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00ICZYF"
  LogsLogStream0020240909LATEST7b530d3a96e74bc88baa90d8e68b0f3200jWw0r:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/09/[$LATEST]7b530d3a96e74bc88baa90d8e68b0f32"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaTOBEDELETEDtestfunctionsqs00hic7x"
  LogsLogStream00AllTraffici076bf1fbc75d3d08700MAl5g:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-076bf1fbc75d3d087"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointsllama318binstruct2024082016060069400vy0bV"
  LogsLogStream0020241002LATESTf06947b6049f483fb0f2a9fa254dd30300BoHd3:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/02/[$LATEST]f06947b6049f483fb0f2a9fa254dd303"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser00VzYw1"
  LogsLogStream00AllTraffici027a7fd61b3eb62ba00EcLwl:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-027a7fd61b3eb62ba"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointsjumpstartdfthfsentencesimilarity2024081404134200uTghu"
  LogsLogStream002eea07e613b7755442f8ef7bab6b794400ifxrR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2eea07e613b7755442f8ef7bab6b7944"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00MDCuj"
  LogsLogStream0020241126LATEST8f233d248bf14b29acbfe54b1b9a30a3001qKLQ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/11/26/[$LATEST]8f233d248bf14b29acbfe54b1b9a30a3"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStopEC2Instances00L3xrj"
  LogsLogStream0020240928LATEST84e24c338152409a9e42f1a40dc255eb005Pz6y:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/28/[$LATEST]84e24c338152409a9e42f1a40dc255eb"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00v8Puf"
  LogsLogStream000759008121673c9da9be160a5a399a8900PspO1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "0759008121673c9da9be160a5a399a89"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00ICZYF"
  LogsLogGroup00awslambdaStartEC2Instances00yJ4d3:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/StartEC2Instances"
      DataProtectionPolicy: {}
  KMSKey0051a5c08ff1b24e92b22b5784f7f0dc3300vhnR8:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::KMS::Key"
    DeletionPolicy: "Retain"
    Properties:
      Origin: "AWS_KMS"
      MultiRegion: false
      Description: "Default key that protects my RDS database volumes when no other\
        \ key is defined"
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
        - Condition:
            StringEquals:
              kms:ViaService: "rds.ap-southeast-1.amazonaws.com"
              kms:CallerAccount: "343218203122"
          Resource: "*"
          Action:
          - "kms:Encrypt"
          - "kms:Decrypt"
          - "kms:ReEncrypt*"
          - "kms:GenerateDataKey*"
          - "kms:CreateGrant"
          - "kms:ListGrants"
          - "kms:DescribeKey"
          Effect: "Allow"
          Principal:
            AWS: "*"
          Sid: "Allow access through RDS for all principals in the account that are\
            \ authorized to use RDS"
        - Resource: "*"
          Action:
          - "kms:Describe*"
          - "kms:Get*"
          - "kms:List*"
          - "kms:RevokeGrant"
          Effect: "Allow"
          Principal:
            AWS: "arn:aws:iam::343218203122:root"
          Sid: "Allow direct access to key metadata to the account"
        Id: "auto-rds-2"
      KeySpec: "SYMMETRIC_DEFAULT"
      Enabled: true
      EnableKeyRotation: true
      KeyUsage: "ENCRYPT_DECRYPT"
      Tags: []
  S3Bucket00configbucket343218203122004pQj3:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::S3::Bucket"
    DeletionPolicy: "Retain"
    Properties:
      PublicAccessBlockConfiguration:
        RestrictPublicBuckets: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        BlockPublicAcls: true
      BucketName: "config-bucket-343218203122"
      OwnershipControls:
        Rules:
        - ObjectOwnership: "BucketOwnerEnforced"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - BucketKeyEnabled: false
          ServerSideEncryptionByDefault:
            SSEAlgorithm: "AES256"
      LoggingConfiguration:
        TargetObjectKeyFormat:
          SimplePrefix: {}
        DestinationBucketName:
          Ref: "S3Bucket00sgprodgenaiserveraccesslogging00nZDSB"
        LogFilePrefix: ""
  LogsLogStream003b5845bf0da7f45d13250a5895334ce200ndBlT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "3b5845bf0da7f45d13250a5895334ce2"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00ICZYF"
  LambdaFunction00DLQhandlersgprodgenaisummariser001QS1v:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Function"
    DeletionPolicy: "Retain"
    Properties:
      MemorySize: 128
      Description: ""
      TracingConfig:
        Mode: "PassThrough"
      VpcConfig:
        SecurityGroupIds:
        - "sg-075615342aa3e28b9"
        - "sg-00dd21ae4b1e23f22"
        - "sg-02d1755cab861734f"
        SubnetIds:
        - Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00v3Ccr"
        - Ref: "EC2Subnet00subnet0d1db15411089416b00fV0HE"
        Ipv6AllowedForDualStack: false
      Timeout: 300
      RuntimeManagementConfig:
        UpdateRuntimeOn: "Auto"
      Handler: "lambda_function.lambda_handler"
      Code:
        SourceKMSKeyArn:
          Ref: "LambdaFunction00DLQhandlersgprodgenaisummariser001QS1vCodeSourceKMSKeyArnNENhY"
        S3ObjectVersion:
          Ref: "LambdaFunction00DLQhandlersgprodgenaisummariser001QS1vCodeS3ObjectVersion24HYc"
        S3Bucket:
          Ref: "LambdaFunction00DLQhandlersgprodgenaisummariser001QS1vCodeS3BucketRvhFz"
        ZipFile:
          Ref: "LambdaFunction00DLQhandlersgprodgenaisummariser001QS1vCodeZipFilePz01t"
        ImageUri:
          Ref: "LambdaFunction00DLQhandlersgprodgenaisummariser001QS1vCodeImageUriYUGnA"
        S3Key:
          Ref: "LambdaFunction00DLQhandlersgprodgenaisummariser001QS1vCodeS3Key3qGVK"
      Role:
        Fn::GetAtt:
        - "IAMRole00sgprodgenaisummariserroleu702de5o00KxF8T"
        - "Arn"
      FileSystemConfigs: []
      FunctionName: "DLQ-handler-sg-prod-genai-summariser"
      Runtime: "python3.12"
      PackageType: "Zip"
      LoggingConfig:
        LogFormat: "Text"
        LogGroup: "/aws/lambda/DLQ-handler-sg-prod-genai-summariser"
      RecursiveLoop: "Terminate"
      EphemeralStorage:
        Size: 512
      Architectures:
      - "x86_64"
  LogsLogGroup00awslambdapocwebsocketdisconnect00VEk8E:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/poc-websocket-disconnect"
      DataProtectionPolicy: {}
  LogsLogStream0020241212LATESTf583d4670ac34cf4a6e9ef2a4d36a29e00njq9E:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/12/[$LATEST]f583d4670ac34cf4a6e9ef2a4d36a29e"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdatestretrieves3metadata00kB5hD"
  LogsLogStream0027b41feabca0a5f4d069b30d981c1a4800uxgpo:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "27b41feabca0a5f4d069b30d981c1a48"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00ICZYF"
  LogsLogStream00sgprodgenaideleteobjects34GnmcdYdEzYiOqCVnucAGpcyT00cMtwD:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/4GnmcdYdEzYiOqCVnucAGpcyT"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights004lL7v"
  LambdaVersion00functionsgprodgenairagsummariser1600yvh6n:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Version"
    DeletionPolicy: "Retain"
    Properties:
      CodeSha256: "34d384ef09b7a7c53fded624539c40630a5820f06890bca7c8d6cca7c8a2dbd7"
      FunctionName:
        Ref: "LambdaFunction00sgprodgenairagsummariser00nex8V"
      Description: ""
  IAMRole00testwebsocketlambda00tKm47:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      - "arn:aws:iam::aws:policy/service-role/AWSLambdaSQSQueueExecutionRole"
      - "arn:aws:iam::aws:policy/AmazonAPIGatewayInvokeFullAccess"
      - "arn:aws:iam::aws:policy/AmazonVPCFullAccess"
      - "arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy"
      MaxSessionDuration: 43200
      RoleName: "test_websocket_lambda"
      Description: "Allows Lambda functions to call AWS services on your behalf."
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  LogsLogStream001debd410c0cc33438648235b76b6ee8f0003Xw2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1debd410c0cc33438648235b76b6ee8f"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00ICZYF"
  LogsLogStream0020241018LATEST8f34a5683bb2459b92ad0ae6d0158ba800C9CNb:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/18/[$LATEST]8f34a5683bb2459b92ad0ae6d0158ba8"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00HxYAk"
  LambdaEventSourceMapping004c8b9d40ea9544e7afd4e690c0fac85100xCCca:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::EventSourceMapping"
    DeletionPolicy: "Retain"
    Properties:
      BatchSize: 10
      FunctionName:
        Fn::GetAtt:
        - "LambdaFunction00pocwebsocketsendMessageSQS00F33uc"
        - "Arn"
      Enabled: true
      EventSourceArn:
        Fn::GetAtt:
        - "SQSQueue00pocwebsocketsendmessagequeuefifo000EvZY"
        - "Arn"
      Tags: []
      MaximumBatchingWindowInSeconds: 0
  LogsLogStream00ecsgenaifrontend5e96be268cca405f850d38df2c7c9af200ODEf6:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/5e96be268cca405f850d38df2c7c9af2"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00A5sWa"
  LogsLogGroup00awslambdasgprodgenaicategoriser217v100P1ViT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-genai-categoriser-217-v1"
      DataProtectionPolicy: {}
  LogsLogStream0020241113LATEST7e63a732f77e4b17bef1b9b1d1bc1fb2000QFAK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/11/13/[$LATEST]7e63a732f77e4b17bef1b9b1d1bc1fb2"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStopEC2Instances00L3xrj"
  LogsLogStream00062956d6f625276d9e6003149ee1429200mZq38:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "062956d6f625276d9e6003149ee14292"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp1004m0tX"
  LogsLogStream0020241009LATEST839c40ece9cd469b80d9a6bf3be1e0ac00p2E9k:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/09/[$LATEST]839c40ece9cd469b80d9a6bf3be1e0ac"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser00VzYw1"
  LogsLogStream0020240917LATEST7f8a02b2166f4912a8827edef429cf1000KdXVt:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/17/[$LATEST]7f8a02b2166f4912a8827edef429cf10"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb006vttD"
  RDSDBCluster00sgprodgenaicourtcasesdb216v100XBe96:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::RDS::DBCluster"
    DeletionPolicy: "Retain"
    Properties:
      StorageEncrypted: true
      AssociatedRoles: []
      EnableHttpEndpoint: false
      EngineMode: "provisioned"
      Port: 27017
      DBClusterIdentifier: "sg-prod-genai-courtcasesdb-216-v1"
      PreferredBackupWindow: "00:00-00:30"
      NetworkType: "IPV4"
      VpcSecurityGroupIds:
      - "sg-075615342aa3e28b9"
      - "sg-02a57c92533299fd5"
      CopyTagsToSnapshot: false
      Engine: "docdb"
      Tags: []
      EngineVersion: "5.0.0"
      StorageType: "aurora"
      KmsKeyId:
        Fn::GetAtt:
        - "KMSKey0051a5c08ff1b24e92b22b5784f7f0dc3300vhnR8"
        - "Arn"
      AvailabilityZones:
      - "ap-southeast-1a"
      - "ap-southeast-1b"
      - "ap-southeast-1c"
      EnableLocalWriteForwarding: false
      PreferredMaintenanceWindow: "sat:17:40-sat:18:10"
      AutoMinorVersionUpgrade: false
      DBSubnetGroupName:
        Ref: "RDSDBSubnetGroup00genaipilotdatabaseprivate00Rs8Sx"
      DeletionProtection: true
      AllocatedStorage: 1
      ManageMasterUserPassword: false
      MasterUserSecret: {}
      MasterUsername: "Docdbadmin"
      ReadEndpoint: {}
      EnableIAMDatabaseAuthentication: false
      DBClusterParameterGroupName: "default.docdb5.0"
      BackupRetentionPeriod: 7
      EnableCloudwatchLogsExports:
      - "audit"
      - "profiler"
  LogsLogStream0020241011LATEST507b588a1a9946d1941750523dea265900xKXYv:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/11/[$LATEST]507b588a1a9946d1941750523dea2659"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300LTcwa"
  LogsLogStream0020241002LATEST6bce8ec52ba14dfaac724f6bd1078a0a00d7JqT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/02/[$LATEST]6bce8ec52ba14dfaac724f6bd1078a0a"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00HxYAk"
  LogsLogStream00sgprodgenaideleteobjects37dPkPIRtmp8KhCMDf5jHH77GK00xk0SK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/7dPkPIRtmp8KhCMDf5jHH77GK"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights004lL7v"
  LogsLogGroup00awslambdasgtestasyncoutputretrieve00LOqyu:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-test-async-output-retrieve"
      DataProtectionPolicy: {}
  LogsLogStream0020241002LATESTe7b4b75fd17a4b38a34bb0625693eaec00xR1Mk:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/02/[$LATEST]e7b4b75fd17a4b38a34bb0625693eaec"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00HxYAk"
  LogsLogStream001569f33184a72533979e0d1d9f9e99fa00cYXqD:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1569f33184a72533979e0d1d9f9e99fa"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00ICZYF"
  LogsLogGroup00awssagemakerEndpointsjumpstartdftllama318binstruct2024081303261300QZZ6e:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-llama-3-1-8b-instruct-20240813-032613"
      DataProtectionPolicy: {}
  SSMAssociation004ba53ecd52e14df08a4eed0ac99dc83800DkGCU:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::SSM::Association"
    DeletionPolicy: "Retain"
    Properties:
      AssociationName: "InvokeInspectorSsmPlugin-do-not-delete"
      ScheduleExpression: "rate(6 hours)"
      ApplyOnlyAtCronInterval: false
      ComplianceSeverity: "CRITICAL"
      Targets:
      - Values:
        - "*"
        Key: "InstanceIds"
      DocumentVersion: "$DEFAULT"
      Name: "AmazonInspector2-InvokeInspectorSsmPlugin"
  RDSDBSubnetGroup00genaipilotdatabaseprivate00Rs8Sx:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::RDS::DBSubnetGroup"
    DeletionPolicy: "Retain"
    Properties:
      DBSubnetGroupDescription: "GenAI One DB Private segment"
      SubnetIds:
      - Ref: "EC2Subnet00subnet048794c64c2e4427a00GA9EC"
      - Ref: "EC2Subnet00subnet0d68b865e8a7e3cc000SuQlK"
      DBSubnetGroupName: "genai-pilot-database-private"
  LogsLogStream00ecsgenaifrontend428ff61de27f4fc1b65815a4e600a82900GiS9V:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/428ff61de27f4fc1b65815a4e600a829"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00A5sWa"
  LogsLogStream0020241008LATEST808711a0a54e4ef2b108d222b71050a500gZ9fO:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/08/[$LATEST]808711a0a54e4ef2b108d222b71050a5"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser00VzYw1"
  LogsLogStream0020240828LATESTf6c62a1e75ef4ba7805b7ae3264739f700rWZPg:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/28/[$LATEST]f6c62a1e75ef4ba7805b7ae3264739f7"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser00ykqXO"
  SSMAssociation006d921130e4594be6bc00d45024ab50b200kRp90:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::SSM::Association"
    DeletionPolicy: "Retain"
    Properties:
      AssociationName: "InspectorLinuxDistributor-do-not-delete"
      ScheduleExpression: "rate(13 hours)"
      Parameters:
        name:
        - "AmazonInspector2-InspectorSsmPluginLinux"
        action:
        - "Install"
        installationType:
        - "Uninstall and reinstall"
      ApplyOnlyAtCronInterval: false
      MaxConcurrency: "50"
      ComplianceSeverity: "CRITICAL"
      Targets:
      - Values:
        - "*"
        Key: "InstanceIds"
      DocumentVersion: "$DEFAULT"
      Name: "AmazonInspector2-ConfigureInspectorSsmPluginLinux"
  LogsLogStream0020241018LATEST908ff2ad1ca741feabb5948e05bd986a00tKtMp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/18/[$LATEST]908ff2ad1ca741feabb5948e05bd986a"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00HxYAk"
  SSMAssociation00757a667869f34093a63306f1de11080900ExdsN:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::SSM::Association"
    DeletionPolicy: "Retain"
    Properties:
      AssociationName: "AWS-PatchNowAssociation"
      ScheduleExpression: "at(2024-12-11T14:58:00)"
      MaxErrors: "1000"
      Parameters:
        RebootOption:
        - "NoReboot"
        Operation:
        - "Scan"
      ApplyOnlyAtCronInterval: true
      MaxConcurrency: "1000"
      ComplianceSeverity: "HIGH"
      Targets:
      - Values:
        - "i-020d34aa93d2d7e6f"
        Key: "InstanceIds"
      DocumentVersion: "$DEFAULT"
      OutputLocation:
        S3Location:
          OutputS3KeyPrefix: "AWS-PatchNow"
          OutputS3BucketName: "config-bucket-343218203122"
      Name: "AWS-RunPatchBaseline"
  LogsLogStream003413c289708cc7c70bc7813f7b4f1cd2007YuLR:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "3413c289708cc7c70bc7813f7b4f1cd2"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp1004m0tX"
  LogsLogStream0020241210LATESTb40a33d313ca40fd85fea33d243dde5d00Cdohp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/10/[$LATEST]b40a33d313ca40fd85fea33d243dde5d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStopEC2Instances00L3xrj"
  LogsLogStream0020240812LATEST1b7931b5fe1c40b6a1e3b2ad1fca8a05002wFfc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/12/[$LATEST]1b7931b5fe1c40b6a1e3b2ad1fca8a05"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgwssconnect00zIpBf"
  LogsLogStream00AllTraffici01f6301941dc073ae00p3ayk:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-01f6301941dc073ae"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointshfsentencesimilaritybgem32024091708162997900j9Wdr"
  LogsLogStream00ecsgenaifalainafrontend74767e3bf664458aad33df3e0bcaf8ca006HrgH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genai-falaina-frontend/74767e3bf664458aad33df3e0bcaf8ca"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaitestfalaina001awtN"
  LogsLogStream0020241009LATEST92632f701ae8454cb77adc4950b9ca1500ywX47:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/09/[$LATEST]92632f701ae8454cb77adc4950b9ca15"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300LTcwa"
  LambdaEventSourceMapping00818f9f847e544875846c495d710514ea00Mwce2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::EventSourceMapping"
    DeletionPolicy: "Retain"
    Properties:
      BatchSize: 1
      FunctionName:
        Ref: "LambdaVersion00functionsgprodgenairagsummariser1600yvh6n"
      ScalingConfig:
        MaximumConcurrency: 2
      Enabled: false
      EventSourceArn:
        Fn::GetAtt:
        - "SQSQueue00summarisercontinuousconversationfifo00cV5x9"
        - "Arn"
      Tags: []
      FunctionResponseTypes:
      - "ReportBatchItemFailures"
      MaximumBatchingWindowInSeconds: 0
  LogsLogGroup00awssagemakerEndpointsllama318binstruct2024082210232306200Q2kP4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/llama-3-1-8b-instruct-2024-08-22-10-23-23-062"
      DataProtectionPolicy: {}
  LogsLogGroup00awslambdapocwebsocketsendMessageSQS00XnFFd:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/poc-websocket-sendMessageSQS"
      DataProtectionPolicy: {}
  LogsLogStream0020241009LATEST37411f2cdc634f5d8acbb54040653fc100ygjAd:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/09/[$LATEST]37411f2cdc634f5d8acbb54040653fc1"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect00VEk8E"
  EC2Subnet00subnet01aebeb15e1111ff300r23Iv:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Subnet"
    DeletionPolicy: "Retain"
    Properties:
      VpcId: "vpc-0182b4cdff5ae990b"
      MapPublicIpOnLaunch: false
      EnableDns64: false
      AvailabilityZoneId: "apse1-az1"
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      CidrBlock: "172.31.16.0/20"
      Ipv6Native: false
      Tags: []
  LogsLogStream0020240830LATEST7a605e6af73f496b9ba4bc2733aaef4e00iq6Rd:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/30/[$LATEST]7a605e6af73f496b9ba4bc2733aaef4e"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser00ykqXO"
  MemoryDBParameterGroup00defaultmemorydbredis7search00Lfsor:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::MemoryDB::ParameterGroup"
    DeletionPolicy: "Retain"
    Properties:
      ParameterGroupName: "default.memorydb-redis7.search"
      Family: "memorydb_redis7"
      Description: "Customized default parameter group for memorydb_redis7 with search-enabled\
        \ yes"
  LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00HxYAk:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-test-genai-summariser-deletechatfunction"
      DataProtectionPolicy: {}
  LogsLogStream0020240925LATEST493ea898069e4b83b2e1cd03b2665b9000Lplhc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/25/[$LATEST]493ea898069e4b83b2e1cd03b2665b90"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00dQBZT"
  LogsLogStream00AllTraffici02e2111fdea7691c3008F5LO:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-02e2111fdea7691c3"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointsjumpstartdfthfsentencesimilarity2024082809295900EM348"
  LogsLogStream0020240828LATEST5471408dbb5b43bfbf8bd1eadb62ed6b00lxSyq:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/28/[$LATEST]5471408dbb5b43bfbf8bd1eadb62ed6b"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser00ykqXO"
  LogsLogStream0020240923LATESTf962be6835f64acbb2057ff77a36f98c00s39mS:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/23/[$LATEST]f962be6835f64acbb2057ff77a36f98c"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00dQBZT"
  S3BucketPolicy00sgprodgenaiserveraccesslogging00d5ifx:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::S3::BucketPolicy"
    DeletionPolicy: "Retain"
    Properties:
      Bucket:
        Ref: "S3Bucket00sgprodgenaiserveraccesslogging00nZDSB"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Condition:
            StringEquals:
              aws:SourceAccount: "343218203122"
          Resource: "arn:aws:s3:::sg-prod-genai-serveraccesslogging/*"
          Action: "s3:PutObject"
          Effect: "Allow"
          Principal:
            Service: "logging.s3.amazonaws.com"
          Sid: "S3PolicyStmt-DO-NOT-MODIFY-1733746462583"
        - Condition:
            Bool:
              aws:SecureTransport: "false"
          Resource:
          - "arn:aws:s3:::sg-prod-genai-serveraccesslogging"
          - "arn:aws:s3:::sg-prod-genai-serveraccesslogging/*"
          Action: "s3:*"
          Effect: "Deny"
          Principal: "*"
          Sid: "AllowSSLRequestsOnly"
        Id: "S3-Console-Auto-Gen-Policy-1733746468736"
  LogsLogStream0020241004LATEST051c4e9502a34da789d44144fc5b84c600JLL1U:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]051c4e9502a34da789d44144fc5b84c6"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS00XnFFd"
  LogsLogStream0020241009LATESTdb4ef82ab6924ff4aa65cce54901dae1003uyEu:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/09/[$LATEST]db4ef82ab6924ff4aa65cce54901dae1"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300LTcwa"
  LogsLogStream00ecsgenaifrontend434b01c9fede449a87fef4f709a60c7d00COrHd:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "ecs/genaifrontend/434b01c9fede449a87fef4f709a60c7d"
      LogGroupName:
        Ref: "LogsLogGroup00ecsgenaipilot00A5sWa"
  IAMRole00sgprodgenaisummariserroleu702de5o00KxF8T:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/AmazonSQSFullAccess"
      - "arn:aws:iam::aws:policy/AmazonSNSFullAccess"
      - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
      - "arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy"
      - "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess"
      - "arn:aws:iam::343218203122:policy/service-role/AWSLambdaBasicExecutionRole-5c881dad-5b1a-44c0-8141-7df98c414d01"
      MaxSessionDuration: 3600
      RoleName: "sg-prod-genai-summariser-role-u702de5o"
      Policies:
      - PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Resource: "*"
            Action:
            - "bedrock:InvokeModel"
            - "bedrock:InvokeModelWithResponseStream"
            - "bedrock:ListFoundationModels"
            Effect: "Allow"
            Sid: "VisualEditor0"
        PolicyName: "BedrockModel"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole5c881dad5b1a44c081417df98c414d0100knZfd:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-5c881dad-5b1a-44c0-8141-7df98c414d01"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:ap-southeast-1:343218203122:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:ap-southeast-1:343218203122:log-group:/aws/lambda/sg-prod-genai-summariser:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - Ref: "IAMRole00sgprodgenaisummariserroleu702de5o00KxF8T"
      Users: []
  LogsLogStream0020240930LATEST1354ba0706c049b5b023c8da3c457f8b00ZQ4gp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]1354ba0706c049b5b023c8da3c457f8b"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00v8Puf"
  S3Bucket00sgprodgenaipatchlogs00VDGDC:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::S3::Bucket"
    DeletionPolicy: "Retain"
    Properties:
      PublicAccessBlockConfiguration:
        RestrictPublicBuckets: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        BlockPublicAcls: true
      BucketName: "sg-prod-genai-patchlogs"
      OwnershipControls:
        Rules:
        - ObjectOwnership: "BucketOwnerEnforced"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - BucketKeyEnabled: true
          ServerSideEncryptionByDefault:
            SSEAlgorithm: "AES256"
      Tags:
      - Value: "Production"
        Key: "Environment"
      LoggingConfiguration:
        TargetObjectKeyFormat:
          SimplePrefix: {}
        DestinationBucketName:
          Ref: "S3Bucket00sgprodgenaiserveraccesslogging00nZDSB"
        LogFilePrefix: ""
  LogsLogStream00sgprodgenaideleteobjects378AOZY0QryM345287m0W5K5In00Vfl1v:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/78AOZY0QryM345287m0W5K5In"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights004lL7v"
  LogsLogStream0020240827LATESTcabd8882c9414a77b62614fab50cd0b300FbjFb:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/27/[$LATEST]cabd8882c9414a77b62614fab50cd0b3"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls300DQsts"
  LogsLogStream0020241006LATESTe24150911eca4d9db3d593eb7b62427300ChPTu:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/06/[$LATEST]e24150911eca4d9db3d593eb7b624273"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect00VEk8E"
  LogsLogStream0020240812LATEST186c12e39a234e688aa00e6e4b1f1dc200rsUq6:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/12/[$LATEST]186c12e39a234e688aa00e6e4b1f1dc2"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgwssdisconnect00llVs6"
  LogsLogStream0020240930LATEST07ff4aedf72d4befb87561de7c3ff64600Rn33R:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]07ff4aedf72d4befb87561de7c3ff646"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00v8Puf"
  LogsLogStream00FargateTelemetry1052001KEaw:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1052"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00lD9M0"
  LogsLogStream0002d4792fb0115d785c1db78a2ba8d35700lJ2Hg:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "02d4792fb0115d785c1db78a2ba8d357"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00MDCuj"
  LogsLogStream0003380c093dc9d1e2284ad31eb244611000it6XW:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "03380c093dc9d1e2284ad31eb2446110"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00ICZYF"
  LogsLogGroup00awslambdapocwebsocketsendmessage001DfO6:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/poc-websocket-send-message"
      DataProtectionPolicy: {}
  LambdaEventSourceMapping0067989074e615456285dab611ed59ac5a00Taf8r:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::EventSourceMapping"
    DeletionPolicy: "Retain"
    Properties:
      BatchSize: 10
      FunctionName:
        Fn::GetAtt:
        - "LambdaFunction00DLQhandlersgprodgenaisummariser001QS1v"
        - "Arn"
      Enabled: true
      EventSourceArn:
        Fn::GetAtt:
        - "SQSQueue00DLQsummarisernewconversationfifo00Kaoay"
        - "Arn"
      Tags: []
      FunctionResponseTypes:
      - "ReportBatchItemFailures"
      MaximumBatchingWindowInSeconds: 0
  S3BucketPolicy00sgprodgenaisummariser00mUMPO:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::S3::BucketPolicy"
    DeletionPolicy: "Retain"
    Properties:
      Bucket:
        Ref: "S3Bucket00sgprodgenaisummariser002diux"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Condition:
            StringNotEquals:
              aws:sourceVpc: "vpc-02790342fee4ebf9f"
          Resource:
          - "arn:aws:s3:::sg-prod-genai-summariser"
          - "arn:aws:s3:::sg-prod-genai-summariser/*"
          Action:
          - "s3:GetObject"
          - "s3:DeleteObject"
          Effect: "Deny"
          Principal: "*"
          Sid: "Allow-access-to-specific-VPC"
        - Condition:
            Bool:
              aws:SecureTransport: "false"
          Resource:
          - "arn:aws:s3:::sg-prod-genai-summariser"
          - "arn:aws:s3:::sg-prod-genai-summariser/*"
          Action: "s3:*"
          Effect: "Deny"
          Principal: "*"
          Sid: "AllowSSLRequestsOnly"
  LogsLogGroup00awslambdatests3behindnacl00WXQzm:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/test-s3-behind-nacl"
      DataProtectionPolicy: {}
  LogsLogGroup00awslambdatestuploads300EIEVj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/test-upload-s3"
      DataProtectionPolicy: {}
  LogsLogGroup00testwebsocket00MDCuj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "test-websocket"
      DataProtectionPolicy: {}
  LogsLogStream0020241015LATEST93c3443b0e2949f4a001d62356d45c1700cz7EE:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/15/[$LATEST]93c3443b0e2949f4a001d62356d45c17"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00HxYAk"
  LogsLogStream0020241009LATEST2d6d909d6a2349b686b2e2926fd720e900DeeLi:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/09/[$LATEST]2d6d909d6a2349b686b2e2926fd720e9"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300LTcwa"
  LogsLogStream0020241001LATEST41011334057e43fe896d82f8e7735d1d00NVOx3:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]41011334057e43fe896d82f8e7735d1d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00dQBZT"
  LogsLogStream0020240904LATESTb9af7143e02144918b3dc896d37e129200oqEdd:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/04/[$LATEST]b9af7143e02144918b3dc896d37e1292"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb006vttD"
  LogsLogStream0020240822LATEST3fda304d2f5145d6a073914396d495ad00QIrCv:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/22/[$LATEST]3fda304d2f5145d6a073914396d495ad"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdatests3behindnacl00WXQzm"
  LogsLogStream0020241212LATESTe0048992c88542379ac78e325fd38f8f00Zbos1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/12/[$LATEST]e0048992c88542379ac78e325fd38f8f"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdatestretrieves3metadata00kB5hD"
  LogsLogStream0020241009LATEST6257f4e8ca0e4e6786feebe6dc46e07500v1pFP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/09/[$LATEST]6257f4e8ca0e4e6786feebe6dc46e075"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenairagsummariser00VzYw1"
  S3Bucket00sggenaiaccesslog004mMef:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::S3::Bucket"
    DeletionPolicy: "Retain"
    Properties:
      PublicAccessBlockConfiguration:
        RestrictPublicBuckets: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        BlockPublicAcls: true
      BucketName: "sg-genai-accesslog"
      OwnershipControls:
        Rules:
        - ObjectOwnership: "BucketOwnerEnforced"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - BucketKeyEnabled: true
          ServerSideEncryptionByDefault:
            SSEAlgorithm: "AES256"
      Tags:
      - Value: "genai access log"
        Key: "Name"
      LoggingConfiguration:
        TargetObjectKeyFormat:
          SimplePrefix: {}
        DestinationBucketName:
          Ref: "S3Bucket00sgprodgenaiserveraccesslogging00nZDSB"
        LogFilePrefix: ""
  LogsLogStream0020241008LATEST2dfd3098d2f045b489c56def426c56bf00050fz:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/08/[$LATEST]2dfd3098d2f045b489c56def426c56bf"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaideleteobjects300LTcwa"
  LogsLogStream0020240925LATESTae4de50f08bf47798f1386277b43871000UwzbP:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/25/[$LATEST]ae4de50f08bf47798f1386277b438710"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserpython312006zlcn"
  SNSTopic00ERRORrequesttopic00vbK7b:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::SNS::Topic"
    DeletionPolicy: "Retain"
    Properties:
      FifoTopic: false
      Subscription:
      - Endpoint: "yi.heng@bnm.gov.my"
        Protocol: "email"
      - Endpoint: "akashnair@bnm.gov.my"
        Protocol: "email"
      TracingConfig: "PassThrough"
      ArchivePolicy: {}
      TopicName: "ERROR_request_topic"
  LogsLogStream0020240929LATEST5345e51065c346adb39179ed2cfd8cdb00yWDXl:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/29/[$LATEST]5345e51065c346adb39179ed2cfd8cdb"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendmessage001DfO6"
  LogsLogStream0020240913LATEST7df16a6ed5bd416fbb41bce43e5c71c900krxCH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/13/[$LATEST]7df16a6ed5bd416fbb41bce43e5c71c9"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb006vttD"
  S3Bucket00sgprodgenaisummariser002diux:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::S3::Bucket"
    DeletionPolicy: "Retain"
    Properties:
      PublicAccessBlockConfiguration:
        RestrictPublicBuckets: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        BlockPublicAcls: true
      BucketName: "sg-prod-genai-summariser"
      OwnershipControls:
        Rules:
        - ObjectOwnership: "BucketOwnerEnforced"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - BucketKeyEnabled: true
          ServerSideEncryptionByDefault:
            SSEAlgorithm: "AES256"
      LoggingConfiguration:
        TargetObjectKeyFormat:
          SimplePrefix: {}
        DestinationBucketName:
          Ref: "S3Bucket00sgprodgenaiserveraccesslogging00nZDSB"
        LogFilePrefix: ""
      LifecycleConfiguration:
        TransitionDefaultMinimumObjectSize: "all_storage_classes_128K"
        Rules:
        - Status: "Enabled"
          Id: "delete_files_older_than_1_day"
          AbortIncompleteMultipartUpload:
            DaysAfterInitiation: 1
          ExpirationInDays: 1
      Tags:
      - Value: "GenAI pilot summariser S3"
        Key: "Name"
  LogsLogGroup00awslambdahelloworld00nqY5j:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/hello-world"
      DataProtectionPolicy: {}
  LogsLogStream00eni00acdcc3d4862e8a8all005pfc8:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "eni-00acdcc3d4862e8a8-all"
      LogGroupName:
        Ref: "LogsLogGroup00awsvpcGenAIPilotVPCFlowLog00TM5W7"
  LogsLogGroup00awslambdasgtestgenaisummariserpython312006zlcn:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-test-genai-summariser-python312"
      DataProtectionPolicy: {}
  LogsLogStream001d166f7412586c5d380863e4e300cfad00G1yTl:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1d166f7412586c5d380863e4e300cfad"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp1004m0tX"
  LogsLogStream0020241007LATEST5f84603c032d41ddad2092f805d1ea5700gRwYk:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/07/[$LATEST]5f84603c032d41ddad2092f805d1ea57"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketdisconnect00VEk8E"
  LogsLogStream0020240821LATEST08fab06e0c0d4d20b52e43511f44755b00p47oY:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/21/[$LATEST]08fab06e0c0d4d20b52e43511f44755b"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenais3triggertutorial00QDvVc"
  EC2SecurityGroup00sg075615342aa3e28b9000aQtB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "default VPC security group"
      GroupName: "default"
      VpcId:
        Ref: "EC2VPC00vpc02790342fee4ebf9f00DrjMC"
      SecurityGroupIngress:
      - CidrIp: "10.25.71.0/32"
        IpProtocol: "-1"
        Description: "allow inbound local"
        FromPort: -1
        ToPort: -1
      - IpProtocol: "-1"
        FromPort: -1
        SourceSecurityGroupId:
          Fn::GetAtt:
          - "EC2VPC00vpc02790342fee4ebf9f00DrjMC"
          - "DefaultSecurityGroup"
        ToPort: -1
        SourceSecurityGroupOwnerId: "343218203122"
      SecurityGroupEgress:
      - CidrIp: "10.25.71.0/32"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
  LogsLogStream00FargateTelemetry1018004mxHh:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1018"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00lD9M0"
  LogsLogStream0000357c053578760ed607f05dcb8544da00oGgT4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "00357c053578760ed607f05dcb8544da"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00MDCuj"
  LogsLogGroup00awslambdasgprodapigwapikeyauthorizer00H6J1D:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-apigw-apikey-authorizer"
      DataProtectionPolicy: {}
  LogsLogStream0020241001LATESTec7dfdaa88f047bea0452457a2f3256300zFiBk:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]ec7dfdaa88f047bea0452457a2f32563"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect00QnzZ8"
  RDSDBCluster00sgprodgenaiauthdbv200cV9nB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::RDS::DBCluster"
    DeletionPolicy: "Retain"
    Properties:
      StorageEncrypted: true
      AssociatedRoles: []
      EnableHttpEndpoint: false
      EngineMode: "provisioned"
      Port: 27017
      DBClusterIdentifier: "sg-prod-genai-authdb-v2"
      PreferredBackupWindow: "00:00-00:30"
      NetworkType: "IPV4"
      VpcSecurityGroupIds:
      - "sg-075615342aa3e28b9"
      - "sg-02a57c92533299fd5"
      CopyTagsToSnapshot: false
      Engine: "docdb"
      Tags: []
      EngineVersion: "5.0.0"
      StorageType: "aurora"
      KmsKeyId:
        Fn::GetAtt:
        - "KMSKey0051a5c08ff1b24e92b22b5784f7f0dc3300vhnR8"
        - "Arn"
      AvailabilityZones:
      - "ap-southeast-1a"
      - "ap-southeast-1b"
      - "ap-southeast-1c"
      EnableLocalWriteForwarding: false
      PreferredMaintenanceWindow: "sun:03:00-sun:03:30"
      AutoMinorVersionUpgrade: false
      DBSubnetGroupName:
        Ref: "RDSDBSubnetGroup00genaipilotdatabaseprivate00Rs8Sx"
      DeletionProtection: true
      AllocatedStorage: 1
      ManageMasterUserPassword: false
      MasterUserSecret: {}
      MasterUsername: "Superadmin"
      ReadEndpoint: {}
      EnableIAMDatabaseAuthentication: false
      DBClusterParameterGroupName: "default.docdb5.0"
      BackupRetentionPeriod: 7
      EnableCloudwatchLogsExports:
      - "audit"
      - "profiler"
  LogsLogStream0020240930LATEST302a0af103714978862d44e31acf148300ljHBg:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]302a0af103714978862d44e31acf1483"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserretrievetofrontend00v8Puf"
  LogsLogStream001db49d9237ca2607ee6398fa30ffb04a00HXeUf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "1db49d9237ca2607ee6398fa30ffb04a"
      LogGroupName:
        Ref: "LogsLogGroup00awsapigateway0u3tyeizfbpoc00ICZYF"
  LogsLogGroup00awslambdasgprodgenairagsummariser00VzYw1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-genai-rag-summariser"
      DataProtectionPolicy: {}
  LogsLogStream002771d6718a5627348f6866ebc34c625700zWPpw:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2771d6718a5627348f6866ebc34c6257"
      LogGroupName:
        Ref: "LogsLogGroup00testwebsocket00MDCuj"
  LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb006vttD:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-genai-checkcredsdocdb"
      DataProtectionPolicy: {}
  LogsLogStream0020240912LATEST5f56a0949fc44680821da318e956118000HagO4:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/12/[$LATEST]5f56a0949fc44680821da318e9561180"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb006vttD"
  LogsLogStream0020240912LATESTc059ef2dcaef4054bc5543cf5fbd0837000eUCd:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/12/[$LATEST]c059ef2dcaef4054bc5543cf5fbd0837"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb006vttD"
  SSMAssociation006eb42e69d11d45de897bc91b69859db700eDCle:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::SSM::Association"
    DeletionPolicy: "Retain"
    Properties:
      AssociationName: "InspectorDistributor-do-not-delete"
      ScheduleExpression: "rate(12 hours)"
      Parameters:
        name:
        - "AmazonInspector2-InspectorSsmPlugin"
        action:
        - "Install"
        installationType:
        - "Uninstall and reinstall"
      ApplyOnlyAtCronInterval: false
      MaxConcurrency: "50"
      ComplianceSeverity: "CRITICAL"
      Targets:
      - Values:
        - "*"
        Key: "InstanceIds"
      DocumentVersion: "$DEFAULT"
      Name: "AmazonInspector2-ConfigureInspectorSsmPlugin"
  LogsLogStream0020241004LATEST0cf17688e6aa4a85b74f9e120d8985ef00zbgPr:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]0cf17688e6aa4a85b74f9e120d8985ef"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS00XnFFd"
  LogsLogStream00FargateTelemetry107200l4jL3:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "FargateTelemetry-1072"
      LogGroupName:
        Ref: "LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00lD9M0"
  S3BucketPolicy00sgprodgenaielb00uEO8w:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::S3::BucketPolicy"
    DeletionPolicy: "Retain"
    Properties:
      Bucket:
        Ref: "S3Bucket00sgprodgenaielb00IhZMr"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Condition:
            Bool:
              aws:SecureTransport: "false"
          Resource:
          - "arn:aws:s3:::sg-prod-genai-elb"
          - "arn:aws:s3:::sg-prod-genai-elb/*"
          Action: "s3:*"
          Effect: "Deny"
          Principal: "*"
          Sid: "AllowSSLRequestsOnly"
        Id: "ExamplePolicy123"
  LogsLogStream0020241001LATESTe4f62b7df01c49feb8ea05ee7b06958e00F8Wyb:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]e4f62b7df01c49feb8ea05ee7b06958e"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect00QnzZ8"
  LogsLogStream0020241118LATESTae2629129be74762947016fc9bbd7eea00FYCB3:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/11/18/[$LATEST]ae2629129be74762947016fc9bbd7eea"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaStopEC2Instances00L3xrj"
  LogsLogStream0020240929LATESTd5f0ef6d29f6466c802b73e284fa2e9000WhIr6:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/29/[$LATEST]d5f0ef6d29f6466c802b73e284fa2e90"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendmessage001DfO6"
  LogsLogStream0020240923LATESTc55220051807449aabb431f878cb705600qgVal:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/23/[$LATEST]c55220051807449aabb431f878cb7056"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdaDLQhandlersgprodgenaisummariser00dQBZT"
  LogsLogStream0020240828LATEST87189c2a9f0a4fa9809d56e0f8645ab8006FhJy:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/28/[$LATEST]87189c2a9f0a4fa9809d56e0f8645ab8"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaisummariser00ykqXO"
  NeptuneDBCluster00sgprodgenaiwebsocketdb00PrWbo:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Neptune::DBCluster"
    DeletionPolicy: "Retain"
    Properties:
      StorageEncrypted: true
      EngineVersion: "5.0.0"
      KmsKeyId:
        Fn::GetAtt:
        - "KMSKey0051a5c08ff1b24e92b22b5784f7f0dc3300vhnR8"
        - "Arn"
      AssociatedRoles: []
      AvailabilityZones:
      - "ap-southeast-1a"
      - "ap-southeast-1b"
      - "ap-southeast-1c"
      DBClusterIdentifier: "sg-prod-genai-websocketdb"
      PreferredMaintenanceWindow: "sun:14:18-sun:14:48"
      IamAuthEnabled: false
      DBSubnetGroupName: "genai-pilot-database-private"
      DeletionProtection: true
      PreferredBackupWindow: "00:00-00:30"
      DBPort: 27017
      VpcSecurityGroupIds:
      - "sg-02a57c92533299fd5"
      - "sg-075615342aa3e28b9"
      CopyTagsToSnapshot: false
      DBClusterParameterGroupName: "default.docdb5.0"
      BackupRetentionPeriod: 7
      Tags: []
      EnableCloudwatchLogsExports:
      - "audit"
      - "profiler"
  LogsLogStream0020240820LATEST9fcbbb19f2ab439897e61c62c01c3e7300OwHFp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/20/[$LATEST]9fcbbb19f2ab439897e61c62c01c3e73"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenais3triggertutorial00QDvVc"
  LogsLogStream00sgprodgenaideleteobjects37gX4RGv5ZKFVOdZKRXbJ9CPxA00jUEgK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "sg-prod-genai-deleteobject-s3/7gX4RGv5ZKFVOdZKRXbJ9CPxA"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdainsights004lL7v"
  LambdaEventSourceMapping00c05c695817ce4d2895fbef4db956c88e00wL6zM:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::EventSourceMapping"
    DeletionPolicy: "Retain"
    Properties:
      BatchSize: 1
      FunctionName:
        Ref: "LambdaVersion00functionsgprodgenairagsummariser14008fHYZ"
      ScalingConfig:
        MaximumConcurrency: 2
      Enabled: false
      EventSourceArn:
        Fn::GetAtt:
        - "SQSQueue00summarisercontinuousconversationfifo00cV5x9"
        - "Arn"
      Tags: []
      FunctionResponseTypes:
      - "ReportBatchItemFailures"
      MaximumBatchingWindowInSeconds: 0
  MemoryDBParameterGroup00defaultmemorydbvalkey700Iq9s7:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::MemoryDB::ParameterGroup"
    DeletionPolicy: "Retain"
    Properties:
      ParameterGroupName: "default.memorydb-valkey7"
      Family: "memorydb_valkey7"
      Description: "Default parameter group for memorydb_valkey7"
  LogsLogStream0020240930LATEST4cfc90c4e0a6426c88ed18944280921500V0Su8:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/30/[$LATEST]4cfc90c4e0a6426c88ed189442809215"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendmessage001DfO6"
  LogsLogStream0020241004LATEST07a2a20083e748ada316737fa831eee200mtGI0:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]07a2a20083e748ada316737fa831eee2"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS00XnFFd"
  SchedulerSchedule00startec2instance00lKv5D:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Scheduler::Schedule"
    DeletionPolicy: "Retain"
    Properties:
      GroupName: "default"
      ScheduleExpression: "cron(0 8 ? * 2-6 *)"
      Target:
        Arn: "arn:aws:lambda:ap-southeast-1:343218203122:function:StartEC2Instances"
        RetryPolicy:
          MaximumEventAgeInSeconds: 86400
          MaximumRetryAttempts: 185
        RoleArn: "arn:aws:iam::343218203122:role/service-role/Amazon_EventBridge_Scheduler_LAMBDA_51910dd796"
      Description: "start instances"
      State: "DISABLED"
      FlexibleTimeWindow:
        Mode: "OFF"
      ScheduleExpressionTimezone: "Asia/Kuala_Lumpur"
      Name: "start-ec2-instance"
  MemoryDBACL00openaccess00IeAP5:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::MemoryDB::ACL"
    DeletionPolicy: "Retain"
    Properties:
      ACLName: "open-access"
      Tags: []
      UserNames:
      - "default"
  LogsLogStream0020241001LATESTd150fe95e6964b6da49fae515582c2ef00szHVG:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]d150fe95e6964b6da49fae515582c2ef"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect00QnzZ8"
  LogsLogStream0020240902LATESTb8efa10fd4c743f68cb39fda519c250000NEdnT:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/02/[$LATEST]b8efa10fd4c743f68cb39fda519c2500"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaipresignedurls300DQsts"
  LogsLogGroup00awssagemakerEndpointshfsentencesimilaritybgem32024091708162997900j9Wdr:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/hf-sentencesimilarity-bge-m3-2024-09-17-08-16-29-979"
      DataProtectionPolicy: {}
  LogsLogStream0020240912LATEST4deb37a6652f43eaba0fc37cae08fe8200QQDRg:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/09/12/[$LATEST]4deb37a6652f43eaba0fc37cae08fe82"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaicheckcredsdocdb006vttD"
  LogsLogStream000fbef507aaf544a2349f0a3c89c8da9000XnJwk:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "0fbef507aaf544a2349f0a3c89c8da90"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp1004m0tX"
  LogsLogStream0020241001LATEST2a9b3a5e01074a1e8c0a03329828cd2d00HV7KK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]2a9b3a5e01074a1e8c0a03329828cd2d"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketconnect00QnzZ8"
  LambdaEventSourceMapping00490e1e6a3d70429d8e6af8f9ed0c7ca8000p3Er:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::EventSourceMapping"
    DeletionPolicy: "Retain"
    Properties:
      BatchSize: 1
      FunctionName:
        Fn::GetAtt:
        - "LambdaFunction00TOBEDELETEDtestfunctionsqs00AXzeh"
        - "Arn"
      ScalingConfig:
        MaximumConcurrency: 2
      Enabled: true
      EventSourceArn:
        Fn::GetAtt:
        - "SQSQueue00PRIORITYfifo00XcvND"
        - "Arn"
      Tags: []
      FunctionResponseTypes:
      - "ReportBatchItemFailures"
      MaximumBatchingWindowInSeconds: 0
  LogsLogStream0020241108LATESTd319bd8930e84b3d8d9152ef3cbd458400uHj1u:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/11/08/[$LATEST]d319bd8930e84b3d8d9152ef3cbd4584"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenais3triggertutorial00QDvVc"
  LogsLogGroup00awsecscontainerinsightsGenAIPilotFargateperformance00lD9M0:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      RetentionInDays: 1
      LogGroupName: "/aws/ecs/containerinsights/GenAI-Pilot-Fargate/performance"
      DataProtectionPolicy: {}
  LogsLogStream0020241211LATEST5498d8c7657c4309a6d42725bdaae54000ibbcE:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/12/11/[$LATEST]5498d8c7657c4309a6d42725bdaae540"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdatestuploads300EIEVj"
  SQSQueue00pocwebsocketsendmessagequeuefifo000EvZY:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::SQS::Queue"
    DeletionPolicy: "Retain"
    Properties:
      ReceiveMessageWaitTimeSeconds: 0
      SqsManagedSseEnabled: true
      FifoThroughputLimit: "perQueue"
      DelaySeconds: 0
      FifoQueue: true
      MessageRetentionPeriod: 345600
      MaximumMessageSize: 262144
      DeduplicationScope: "queue"
      VisibilityTimeout: 1800
      ContentBasedDeduplication: false
      QueueName: "poc_websocket_sendmessage_queue.fifo"
  LogsLogStream0020240827LATESTabb5806288994880b396d4e5080fd1e500e3AIV:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/27/[$LATEST]abb5806288994880b396d4e5080fd1e5"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenais3triggertutorial00QDvVc"
  RDSDBInstance00sgprodgenaiwebsocketdb00z05Ez:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::RDS::DBInstance"
    DeletionPolicy: "Retain"
    Properties:
      StorageEncrypted: true
      AssociatedRoles: []
      CertificateDetails: {}
      Port: "27017"
      DBClusterIdentifier:
        Ref: "RDSDBCluster00sgprodgenaiwebsocketdb00Y0U9u"
      ProcessorFeatures: []
      StorageThroughput: 0
      PreferredBackupWindow: "00:00-00:30"
      MonitoringInterval: 0
      DBParameterGroupName: "default.docdb5.0"
      Endpoint: {}
      NetworkType: "IPV4"
      DedicatedLogVolume: false
      CopyTagsToSnapshot: false
      MultiAZ: false
      Engine: "docdb"
      Tags: []
      LicenseModel: "na"
      EngineVersion: "5.0.0"
      StorageType: "standard"
      KmsKeyId:
        Fn::GetAtt:
        - "KMSKey0051a5c08ff1b24e92b22b5784f7f0dc3300vhnR8"
        - "Arn"
      DBInstanceClass: "db.t3.medium"
      AvailabilityZone: "ap-southeast-1c"
      OptionGroupName: "default:docdb-5-0"
      PreferredMaintenanceWindow: "sat:19:02-sat:19:32"
      EnablePerformanceInsights: false
      AutoMinorVersionUpgrade: true
      DBSubnetGroupName:
        Ref: "RDSDBSubnetGroup00genaipilotdatabaseprivate00Rs8Sx"
      DeletionProtection: false
      DBInstanceIdentifier: "sg-prod-genai-websocketdb"
      AllocatedStorage: "1"
      CACertificateIdentifier: "rds-ca-rsa2048-g1"
      ManageMasterUserPassword: false
      MasterUserSecret: {}
      VPCSecurityGroups:
      - Fn::GetAtt:
        - "EC2SecurityGroup00sg075615342aa3e28b9000aQtB"
        - "GroupId"
      - Fn::GetAtt:
        - "EC2SecurityGroup00sg02a57c92533299fd500hjOWZ"
        - "GroupId"
      DBSecurityGroups: []
      MasterUsername: "WebsocketDBUser"
      EnableIAMDatabaseAuthentication: false
      BackupRetentionPeriod: 7
      PromotionTier: 1
      PubliclyAccessible: false
      EnableCloudwatchLogsExports:
      - "audit"
      - "profiler"
  LogsLogStream0020240814LATEST68f2c75255f9415ea4f3737f6bdfca5500Wh0in:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/08/14/[$LATEST]68f2c75255f9415ea4f3737f6bdfca55"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgprodgenaiembeddingsgmkr005AKdC"
  LogsLogStream0020241004LATEST0dddbb97bbd247678fcbbf11f162587800tM3EE:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]0dddbb97bbd247678fcbbf11f1625878"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS00XnFFd"
  S3Bucket00sgprodgenaiserveraccesslogging00nZDSB:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::S3::Bucket"
    DeletionPolicy: "Retain"
    Properties:
      PublicAccessBlockConfiguration:
        RestrictPublicBuckets: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        BlockPublicAcls: true
      BucketName: "sg-prod-genai-serveraccesslogging"
      OwnershipControls:
        Rules:
        - ObjectOwnership: "BucketOwnerEnforced"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - BucketKeyEnabled: true
          ServerSideEncryptionByDefault:
            SSEAlgorithm: "AES256"
      Tags:
      - Value: "Server Access Logging"
        Key: "Name"
      LoggingConfiguration:
        TargetObjectKeyFormat:
          SimplePrefix: {}
        DestinationBucketName: "sg-prod-genai-serveraccesslogging"
        LogFilePrefix: ""
  LogsLogStream00AllTraffici0a5cd68b5e814084d005snnS:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "AllTraffic/i-0a5cd68b5e814084d"
      LogGroupName:
        Ref: "LogsLogGroup00awssagemakerEndpointshfsentencesimilaritybgem32024090403402960200TVJ5N"
  LogsLogGroup00awslambdasgprodgenaipresignedurls300DQsts:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-genai-presignedurl-s3"
      DataProtectionPolicy: {}
  LogsLogStream0020241001LATEST4dab37ce82a2484aab0534130906f74100X962f:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/01/[$LATEST]4dab37ce82a2484aab0534130906f741"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdasgtestgenaisummariserdeletechatfunction00HxYAk"
  S3BucketPolicy00sgprodgenaipatchlogs00Hx8Wf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::S3::BucketPolicy"
    DeletionPolicy: "Retain"
    Properties:
      Bucket:
        Ref: "S3Bucket00sgprodgenaipatchlogs00VDGDC"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Condition:
            Bool:
              aws:SecureTransport: "false"
          Resource:
          - "arn:aws:s3:::sg-prod-genai-patchlogs"
          - "arn:aws:s3:::sg-prod-genai-patchlogs/*"
          Action: "s3:*"
          Effect: "Deny"
          Principal: "*"
          Sid: "AllowSSLRequestsOnly"
        Id: "ExamplePolicy"
  LogsLogStream002153b759009820a8828b4dfd169fe14200S71Oz:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2153b759009820a8828b4dfd169fe142"
      LogGroupName:
        Ref: "LogsLogGroup00APIGatewayExecutionLogs5nwb46kiraprodmvp1004m0tX"
  LogsLogStream0020241004LATEST090af62032494b9bbabc9903d78dc26c006V0b1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Retain"
    Properties:
      LogStreamName: "2024/10/04/[$LATEST]090af62032494b9bbabc9903d78dc26c"
      LogGroupName:
        Ref: "LogsLogGroup00awslambdapocwebsocketsendMessageSQS00XnFFd"
  LogsLogGroup00awssagemakerEndpointsjumpstartdftllama318binstruct2024081408024000iCNUK:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/sagemaker/Endpoints/jumpstart-dft-llama-3-1-8b-instruct-20240814-080240"
      DataProtectionPolicy: {}
  LogsLogGroup00awslambdasgprodgenaisummariser00ykqXO:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Retain"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "STANDARD"
      LogGroupName: "/aws/lambda/sg-prod-genai-summariser"
      DataProtectionPolicy: {}
  LambdaFunction00pocwebsocketsendMessageSQS00F33uc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Function"
    DeletionPolicy: "Retain"
    Properties:
      MemorySize: 128
      Description: ""
      TracingConfig:
        Mode: "PassThrough"
      VpcConfig:
        SecurityGroupIds:
        - "sg-0158898f4b43a0ae9"
        - "sg-07fd500f946aad8a2"
        - "sg-07401c0c33946a241"
        SubnetIds:
        - Ref: "EC2Subnet00subnet026e7fd8d1e877dbb00v3Ccr"
        - Ref: "EC2Subnet00subnet0d1db15411089416b00fV0HE"
        Ipv6AllowedForDualStack: false
      Timeout: 480
      RuntimeManagementConfig:
        UpdateRuntimeOn: "Auto"
      Handler: "lambda_function.lambda_handler"
      Code:
        SourceKMSKeyArn:
          Ref: "LambdaFunction00pocwebsocketsendMessageSQS00F33ucCodeSourceKMSKeyArnlliGG"
        S3ObjectVersion:
          Ref: "LambdaFunction00pocwebsocketsendMessageSQS00F33ucCodeS3ObjectVersionFUy3d"
        S3Bucket:
          Ref: "LambdaFunction00pocwebsocketsendMessageSQS00F33ucCodeS3Buckethr2tq"
        ZipFile:
          Ref: "LambdaFunction00pocwebsocketsendMessageSQS00F33ucCodeZipFileELHxV"
        ImageUri:
          Ref: "LambdaFunction00pocwebsocketsendMessageSQS00F33ucCodeImageUrinZtsc"
        S3Key:
          Ref: "LambdaFunction00pocwebsocketsendMessageSQS00F33ucCodeS3KeyqFhyC"
      Role:
        Fn::GetAtt:
        - "IAMRole00testwebsocketlambda00tKm47"
        - "Arn"
      FileSystemConfigs: []
      FunctionName: "poc-websocket-sendMessageSQS"
      Runtime: "python3.12"
      PackageType: "Zip"
      LoggingConfig:
        LogFormat: "Text"
        LogGroup: "/aws/lambda/poc-websocket-sendMessageSQS"
      RecursiveLoop: "Terminate"
      EphemeralStorage:
        Size: 512
      Architectures:
      - "x86_64"

